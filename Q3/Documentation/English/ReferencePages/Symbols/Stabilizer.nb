(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    305647,       6288]
NotebookOptionsPosition[    289820,       5961]
NotebookOutlinePosition[    293352,       6041]
CellTagsIndexPosition[    293228,       6035]
WindowTitle->Stabilizer
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["Q3 SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "df039ed3-6137-41af-a749-eb1d931cf643"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "a7a7bee8-6db0-4684-98c3-39efe857e25b"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "347ca70c-93fe-4740-9cc4-a1643509e88d"]
         }],ExpressionUUID->"553a217e-c0d8-4acf-85b5-007a67972acf"],
         StripOnInput->False],{
        "\"GroupStabilizer\"" :> 
         Documentation`HelpLookup["paclet:ref/GroupStabilizer"], Delimiter, 
         StyleBox[
          "\"Functions\"", "SeeAlsoSection", FontSize -> 14, FontSlant -> 
           "Italic", StripOnInput -> False] :> 
         NotebookFind[EvaluationNotebook[], "SeeAlsoSection", All, CellStyle],
          StyleBox[
          "\"StabilizerGenerators\"", "SeeAlsoRelated", StripOnInput -> 
           False] :> Documentation`HelpLookup[
          "paclet:Q3/ref/StabilizerGenerators"], 
         StyleBox[
          "\"StabilizerStateQ\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:Q3/ref/StabilizerStateQ"], 
         StyleBox[
          "\"CliffordGroup\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:Q3/ref/CliffordGroup"], 
         StyleBox["\"PauliGroup\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:Q3/ref/PauliGroup"], 
         StyleBox["\"GraphState\"", "SeeAlsoRelated", StripOnInput -> False] :> 
         Documentation`HelpLookup["paclet:Q3/ref/GraphState"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "4d2fcaa6-87bf-474a-9897-e2b2a882169e"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "69a7e9c4-b36a-45c9-99f8-3d1330fd468d"]
         }],ExpressionUUID->"ca71cf31-76f5-462a-8044-0aee092d1e7e"],
         StripOnInput->False],{
        "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "46423e38-bd69-48c3-964a-f16765701342"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "208011ee-c2af-407f-8e08-8d98d638f913"]
         }],ExpressionUUID->"532dd06c-81ce-4502-b8da-478e9ea7e263"],
         StripOnInput->False],{
        "\"Stabilizer Formalism\"" :> 
         Documentation`HelpLookup["paclet:Q3/tutorial/StabilizerFormalism"], 
         "\"Stabilizer Codes\"" :> 
         Documentation`HelpLookup["paclet:Q3/tutorial/StabilizerCodes"], 
         "\"The Pauli and Clifford Groups\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/PauliAndCliffordGroups"], 
         "\"Quantum Information Systems with Q3\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7fb87956-e90f-4afe-aad8-b53fb73a349d"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "3336819c-6186-4c21-9798-dfdc925a7202"]
         }],ExpressionUUID->"af890257-df48-4443-9273-e0fc01dff026"],
         StripOnInput->False],{
        "\"Q3/ref/Stabilizer\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["Q3/ref/Stabilizer"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/Q3/ref/Stabilizer.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
               False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "Q3/ref/Stabilizer" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "aaa8808d-430f-4fc7-bb8b-1b146b5748e4"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "4fccc418-f96d-4766-abde-a99e0f18a242"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"d376326a-787f-4d62-8a83-f3e958eb4bf3"],

Cell["Q3`", "ContextNameCell",ExpressionUUID->"37a7e8df-11b6-4908-8e99-c392ad84400d"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "Stabilizer", "ObjectName",ExpressionUUID->
      "768e3ffc-a45c-42f8-a655-592aa470903b"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"7c415b2f-5e35-4282-b42e-b0275eaa7efc"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "2f43830e-83f9-4669-9077-f421543be62a"]
    }],ExpressionUUID->"376b1b22-22b0-4053-b266-45ec2d7f6fc8"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"40cc3335-f508-4397-919e-\
8f27db880bcb"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["state", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6d0ab07a-89ed-4692-a3c6-d8d081416222"],
     "\[LineSeparator]returns the stabilizer subgroup of the Pauli group that \
stabilizes ",
     Cell[BoxData[
      StyleBox["state", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e39c1bbc-4320-4163-8138-81ae297fc337"],
     "."
    }],ExpressionUUID->"11a51281-ccd2-41ff-ac92-4e48e8674a0b"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["state", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["s", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["s", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "29701324-c50b-49e1-bed6-95163d38ce38"],
     "\[LineSeparator]assumes ",
     Cell[BoxData[
      StyleBox["state", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "b02e6ffe-f447-4c1c-9ca3-04d6f87d6900"],
     " to belong to the Hilbert space associated with qubits ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["s", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["s", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "47ac76fa-f2ed-421f-ac98-1fc41089206a"],
     "."
    }],ExpressionUUID->"7878a1ec-55d2-4225-b14c-5d9ab239cea2"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["graph", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "2c6000ff-4c3d-44cc-b417-779ba79112d0"],
     " \[LineSeparator]returns the stabilizer subgroup of the Pauli group \
that stabilizes the ",
     ButtonBox["graph state",
      BaseStyle->"Link",
      ButtonData->"paclet:Q3/ref/GraphState"],
     " associated with ",
     Cell[BoxData[
      StyleBox["graph", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "3f4b3131-5857-40b6-995d-34f5f66d6b37"],
     "."
    }],ExpressionUUID->"24b73960-54fe-42ed-930f-7da82e3f7683"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["graph", "TI"], ",", 
        StyleBox["vertex", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4783765b-af93-4d61-86eb-3046d02a528b"],
     "\[LineSeparator]gives the ",
     StyleBox["correlation operator",
      FontSlant->"Italic"],
     " associated with ",
     Cell[BoxData[
      StyleBox["vertex", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6c250d24-af37-4a78-931a-770e7dc8a863"],
     " that stabilizes the ",
     ButtonBox["graph state",
      BaseStyle->"Link",
      ButtonData->"paclet:Q3/ref/GraphState"],
     " associated with ",
     Cell[BoxData[
      StyleBox["graph", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "137b65a6-aef4-4b15-8bf9-918cd406e3ec"],
     "."
    }],ExpressionUUID->"c7ab54fe-8a65-4fe5-89ea-06df78edd770"]}
  }]], "Usage",
 CellID->1659943857,ExpressionUUID->"fb5563e7-431b-4ce4-b439-22012d8eea4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"aa66e03b-0143-4451-bea6-51d9e9a1dc4d"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"40244057-a921-4c9b-b9f3-e3c188028e78"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"30c5f23a-e5cd-4839-a713-9dbd42af10e7"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"22d91b28-d611-4b33-8e14-d2507526e506"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->1121398402,ExpressionUUID->"37591feb-ac0b-4a49-96db-bda2e9482443"],

Cell[TextData[{
 "In ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
     "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   StyleBox["state", "TI"], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9e29ca44-e5b6-4bdb-b815-1b6ce35598eb"],
 ", ",
 Cell[BoxData[
  StyleBox["state", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ef06f326-4f49-424b-8651-834c23bb5ea8"],
 " may be a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[DoubleStruckCapitalC]", "2"], ")"}], 
    RowBox[{"\[CircleTimes]", "n"}]], TraditionalForm]],ExpressionUUID->
  "acced6f4-8a56-4d5f-aff2-bba7b09c2b28"],
 " or expressed in terms of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:ref/Ket"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0fe99a52-7bf4-445d-add3-880ec37db9ed"],
 " or ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:ref/Ket"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", 
   RowBox[{"\[LeftAssociation]", "\[Ellipsis]", "\[RightAssociation]"}], 
   "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "74a38865-a3ed-4522-967e-70f13e18c718"],
 "."
}], "Notes",
 CellID->716346422,ExpressionUUID->"4f5b5dfe-a9ba-4523-97fb-9b61f49445d5"],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  StyleBox["state", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2b12bb2f-43ad-46fd-80db-b5cfb2818cbb"],
 " is a vector in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[DoubleStruckCapitalC]", "2"], ")"}], 
    RowBox[{"\[CircleTimes]", "n"}]], TraditionalForm]],ExpressionUUID->
  "0cbec26d-3a6f-4ab0-a55e-b97f2e8e9538"],
 ", a list of matrices is returned."
}], "Notes",
 CellID->1775811113,ExpressionUUID->"fd3290ab-6b13-47f0-bfd1-9301139c0c73"],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  StyleBox["state", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "741bd049-683f-467f-8cf1-b694444597e3"],
 " is expressed in terms of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:ref/Ket"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "fbbbc101-efc6-4fb4-bbfe-5fb2d66a4bf4"],
 ", a list of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Pauli"]], "paclet:Q3/ref/Pauli", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "87d03cef-d741-420b-9804-dff45660ac55"],
 " operators is returned."
}], "Notes",
 CellID->1806974113,ExpressionUUID->"11a54c13-0b87-4145-a5ec-b2a235c98a4d"],

Cell[TextData[{
 "When ",
 Cell[BoxData[
  StyleBox["state", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "44c9888b-ba96-4283-8076-d038d8ea3151"],
 " is expressed in terms of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:ref/Ket"},
    "RefLink",
    BaseStyle->{"InlineFormula"}], "[", 
   RowBox[{"<|", "\[Ellipsis]", "|>"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ba8c439f-6769-4be7-b98f-6f1605c6657f"],
 ", a list of Pauli operators for labelled qubits is returned."
}], "Notes",
 CellID->556455686,ExpressionUUID->"f66185f3-25b1-4d0b-aec3-84c151fc800a"],

Cell[TextData[{
 "The ",
 StyleBox["correlation operator",
  FontSlant->"Italic"],
 " return by ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Stabilizer"]], "paclet:Q3/ref/Stabilizer", 
     "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    StyleBox["graph", "TI"], ",", 
    StyleBox["vertex", "TI"]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ddeedadb-f6d1-464a-8e8e-55a9b4f5cbe9"],
 " is an element of the stabilizer."
}], "Notes",
 CellID->1927784800,ExpressionUUID->"d47ddd64-32be-4e1c-b62a-64126ed2efc4"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "f1752ac3-9cd1-454b-8525-fbabc1dc1760"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e74a36e1-689f-49e1-997a-0e23d8adae1e"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "2d8f5eab-b865-47e3-90ad-18b8dd98f926"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1026456342,ExpressionUUID->"736bc98c-6069-4e4e-9175-2a2edcccceab"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Q3`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1927565408,ExpressionUUID->"1041afae-2121-4810-b4f5-75e79808af4b"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "59428de6-f3a9-4053-bf82-a2b7d344a4ed"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"88bbd753-3d17-4dd2-a5f7-6c215fa75387"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "058b5b2e-9ce5-44fa-be6b-2be66eca1d6f"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->915603643,ExpressionUUID->"f27e3686-ab65-448b-90e8-de4d2eb2bd81"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->2071554531,ExpressionUUID->"5b18dea2-0c2f-48ce-a36f-9f84ed41881d"],

Cell[TextData[{
 "Take a ",
 ButtonBox["Clifford operator",
  BaseStyle->"Link",
  ButtonData->"paclet:Q3/ref/CliffordGroup"],
 "."
}], "ExampleText",
 CellID->1005027312,ExpressionUUID->"2713fcdd-7c7a-4fed-958c-40a31504fad0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"grp", "=", 
   RowBox[{"CliffordGroup", "[", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op", "=", 
   RowBox[{"First", "@", 
    RowBox[{"GroupElements", "[", 
     RowBox[{"grp", ",", 
      RowBox[{"{", "201", "}"}]}], "]"}]}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1163998014,ExpressionUUID->"e41a19c9-079b-4cd0-af12-e1c4fad3d0c1"],

Cell[TextData[{
 "By applying it on the computational basis state ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "\[Ellipsis]", ",", "0"}]},
    "Ket"], TraditionalForm]],ExpressionUUID->
  "ab9722c9-0648-482b-86bc-53410e88a634"],
 ", generate a stabilizer state."
}], "ExampleText",
 CellID->634872595,ExpressionUUID->"87fca948-1082-43c1-9b27-24e2a35d4a39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ket", "=", 
  RowBox[{"op", "**", 
   RowBox[{"Ket", "[", "]"}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->2013188467,ExpressionUUID->"1bec4c99-3680-4396-b56a-3212a501a0e3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 1|>]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 1|>]]}]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2038036014,ExpressionUUID->"0070618c-ced8-4d72-a193-bed6f0623d02"]
}, Open  ]],

Cell["Find the stabilizer subgroup of the state.", "ExampleText",
 CellID->664925693,ExpressionUUID->"25b5ef3c-d248-4898-a9c8-cd953d47332c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stb", "=", 
  RowBox[{"Stabilizer", "[", 
   RowBox[{"ket", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1597565398,ExpressionUUID->"50c95bd2-d2e1-4537-8006-251fd796a980"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 19.}, {374., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{374., 19.},
  PlotRange->{{0, 374.}, {0, 19.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1830097146,ExpressionUUID->"e5121d40-a858-4c81-af83-5499526bfe5a"]
}, Open  ]],

Cell["Check that the elements indeed stabilize the state.", "ExampleText",
 CellID->1016387260,ExpressionUUID->"68059d70-6a64-4456-a784-3155bd619bd0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stb", "**", "ket"}], "-", "ket"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->157444630,ExpressionUUID->"1107fe1a-9d25-4738-a67e-5b6a9bf18777"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1590848746,ExpressionUUID->"fa067ce4-6b84-4313-af7b-27582ba1f9d2"]
}, Open  ]],

Cell["\<\
Applying a non-Clifford operator on the state may lead to a non-stabilizer \
state.\
\>", "ExampleText",
 CellID->222598595,ExpressionUUID->"a972a03f-8036-440d-bb58-9b95327e408e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "=", 
  RowBox[{
   RowBox[{"S", "[", 
    RowBox[{"1", ",", "8"}], "]"}], "**", "ket"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->74258951,ExpressionUUID->"93794703-fed6-41e7-9626-f272d21a8875"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 1|>]]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "4"}]], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"1", "/", "4"}]], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 1|>]]}]}]], "Output",
 CellLabel->"Out[6]=",
 CellID->762659664,ExpressionUUID->"0fca9cb0-185d-4819-aabb-130e25c7da6d"]
}, Open  ]],

Cell["\<\
The stabilizer subgroup of a non-stabilizer state is trivial.\
\>", "ExampleText",
 CellID->809750563,ExpressionUUID->"7025a3d3-6063-46e0-b99b-f855215f3561"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Stabilizer", "[", "new", "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->902059061,ExpressionUUID->"feca352a-f22d-4c6c-9bd4-5d6cf343266a"],

Cell[BoxData[
 TemplateBox[{
  "Stabilizer", "notss", 
   "\"\\!\\(\\*RowBox[{RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
\\\"\[ImaginaryI]\\\", \\\" \\\", \
InterpretationBox[TemplateBox[List[TemplateBox[List[\\\"\\\\[VeryThinSpace]\\\
\", \\\"\\\\\\\"\\\\[VeryThinSpace]\\\\\\\"\\\", SubscriptBox[\\\"0\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"1\\\"], \\\"RowWithSeparators\\\"]], S[1, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"2\\\"], \\\"RowWithSeparators\\\"]], S[2, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"0\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"3\\\"], \\\"RowWithSeparators\\\"]], S[3, \
$]]], \\\"RowWithSeparators\\\"]]], \\\"RowWithSeparators\\\"]], \
\\\"Ket\\\"], Ket[Association[Rule[S[1, $], 0], Rule[S[2, $], 1], Rule[S[3, \
$], 0]]]]}], \\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
\\\"\[ImaginaryI]\\\", \\\" \\\", \
InterpretationBox[TemplateBox[List[TemplateBox[List[\\\"\\\\[VeryThinSpace]\\\
\", \\\"\\\\\\\"\\\\[VeryThinSpace]\\\\\\\"\\\", SubscriptBox[\\\"0\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"1\\\"], \\\"RowWithSeparators\\\"]], S[1, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"2\\\"], \\\"RowWithSeparators\\\"]], S[2, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"3\\\"], \\\"RowWithSeparators\\\"]], S[3, \
$]]], \\\"RowWithSeparators\\\"]]], \\\"RowWithSeparators\\\"]], \
\\\"Ket\\\"], Ket[Association[Rule[S[1, $], 0], Rule[S[2, $], 1], Rule[S[3, \
$], 1]]]]}], \\\"-\\\", RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\")\\\"}], RowBox[{\\\"1\\\", \\\"/\\\", \\\"4\\\"}]], \\\" \\\", \
InterpretationBox[TemplateBox[List[TemplateBox[List[\\\"\\\\[VeryThinSpace]\\\
\", \\\"\\\\\\\"\\\\[VeryThinSpace]\\\\\\\"\\\", SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"1\\\"], \\\"RowWithSeparators\\\"]], S[1, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"2\\\"], \\\"RowWithSeparators\\\"]], S[2, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"0\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"3\\\"], \\\"RowWithSeparators\\\"]], S[3, \
$]]], \\\"RowWithSeparators\\\"]]], \\\"RowWithSeparators\\\"]], \
\\\"Ket\\\"], Ket[Association[Rule[S[1, $], 1], Rule[S[2, $], 1], Rule[S[3, \
$], 0]]]]}], \\\"+\\\", RowBox[{FractionBox[\\\"1\\\", \\\"2\\\"], \\\" \\\", \
SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{\\\"-\\\", \\\"1\\\"}], \
\\\")\\\"}], RowBox[{\\\"1\\\", \\\"/\\\", \\\"4\\\"}]], \\\" \\\", \
InterpretationBox[TemplateBox[List[TemplateBox[List[\\\"\\\\[VeryThinSpace]\\\
\", \\\"\\\\\\\"\\\\[VeryThinSpace]\\\\\\\"\\\", SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"1\\\"], \\\"RowWithSeparators\\\"]], S[1, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"2\\\"], \\\"RowWithSeparators\\\"]], S[2, \
$]]], \\\"RowWithSeparators\\\"]], SubscriptBox[\\\"1\\\", \
TemplateBox[List[\\\",\\\", \\\"\\\\\\\",\\\\\\\"\\\", \
InterpretationBox[SubscriptBox[\\\"S\\\", TemplateBox[List[\\\",\\\", \
\\\"\\\\\\\",\\\\\\\"\\\", \\\"3\\\"], \\\"RowWithSeparators\\\"]], S[3, \
$]]], \\\"RowWithSeparators\\\"]]], \\\"RowWithSeparators\\\"]], \
\\\"Ket\\\"], Ket[Association[Rule[S[1, $], 1], Rule[S[2, $], 1], Rule[S[3, \
$], 1]]]]}]}]\\) is not a stabilizer state.\"", 2, 166, 22, 
   18663369042500397968, "Local", "Q3`Stabilizer"},
  "MessageTemplate2"]], "Message", "MSG",
 CellLabel->"During evaluation of In[7]:=",
 CellID->1320159376,ExpressionUUID->"5facd456-148a-40c6-8d67-4431e09d3bce"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->117591628,ExpressionUUID->"b6f48e8c-77aa-4a82-b1df-cfe1f3301d8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6c2c85ef-2bc0-4354-a0c6-d6aa8489c66d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->948941833,ExpressionUUID->"d67fc7f4-4426-4ff2-a569-e6492c597a92"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grp", "=", 
   RowBox[{"CliffordGroup", "[", "$n", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op", "=", 
   RowBox[{"First", "@", 
    RowBox[{"GroupElements", "[", 
     RowBox[{"grp", ",", 
      RowBox[{"{", "203", "}"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ket", "=", 
  RowBox[{"op", "**", 
   RowBox[{"(", 
    RowBox[{"Ket", "@", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "$n"}], "]"}]}], ")"}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->221438960,ExpressionUUID->"41ae8441-5eda-4781-80c7-e659d2d0e4c7"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0"}]},
    "Ket"], "2"], "+", 
  FractionBox[
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1"}]},
    "Ket"], "2"], "-", 
  FractionBox[
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0"}]},
    "Ket"], "2"], "+", 
  FractionBox[
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1"}]},
    "Ket"], "2"]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1304429397,ExpressionUUID->"7ea75851-bd50-4e14-954a-e54698c840a4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stb", "=", 
  RowBox[{"Stabilizer", "[", "ket", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->15296663,ExpressionUUID->"9598c1e9-29ea-40c5-8a9c-23ee4a606a91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{0, 0, 0}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{0, 3, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>"}],
      Q3`Pauli[{1, 1, 3}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{1, 2, 2}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{2, 1, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{2, 2, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{3, 0, 1}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{3, 3, 0}]]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->513059048,ExpressionUUID->"6d6babac-3730-4044-9f00-f01106048554"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stb", "**", "ket"}], "-", "ket"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->465985504,ExpressionUUID->"fbe8ccdb-e4a8-42d6-8bcc-4a4216c22085"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}],
   "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2133177512,ExpressionUUID->"12c563bc-0cc0-4a08-84d8-4b4e943b087e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"Matrix", "[", "ket", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"vec", "//", "Normal"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->836397124,ExpressionUUID->"78552fae-34ab-4ebe-8ca6-79f1f938827d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", 
   FractionBox["1", "2"], ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1", "2"]}], ",", 
   FractionBox["1", "2"]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->2100248577,ExpressionUUID->"92a0777f-3382-415f-8ebd-4a4bb1d994b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stb", "=", 
   RowBox[{"Stabilizer", "[", "vec", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "stb"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->629984294,ExpressionUUID->"239b2773-bc53-41bc-ab8b-5fff3a8d5fab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "1", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {
         8}}}, {1, 1, 1, 1, 1, 1, 1, 1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0", "0", "0", "0", "0"},
       {"1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}]},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{2}, {1}, {4}, {3}, {6}, {5}, {8}, {
         7}}}, {1, 1, -1, -1, 1, 1, -1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{7}, {8}, {5}, {6}, {3}, {4}, {1}, {
         2}}}, {-1, 1, -1, 1, -1, 1, -1, 1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
       {"1", "0", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{8}, {7}, {6}, {5}, {4}, {3}, {2}, {
         1}}}, {1, -1, -1, 1, 1, -1, -1, 1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", "0", "0", "1", "0", "0"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0"},
       {"1", "0", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{8}, {7}, {6}, {5}, {4}, {3}, {2}, {
         1}}}, {1, -1, 1, -1, -1, 1, -1, 1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1"},
       {"0", "0", "0", "0", "1", "0", "0", "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{7}, {8}, {5}, {6}, {3}, {4}, {1}, {
         2}}}, {-1, 1, 1, -1, 1, -1, -1, 1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "1", "0", "0", "0", "0", "0", "0"},
       {"1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "1", "0", "0", "0", "0"},
       {"0", "0", "1", "0", "0", "0", "0", "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}]},
       {"0", "0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{2}, {1}, {4}, {3}, {6}, {5}, {8}, {
         7}}}, {1, 1, 1, 1, -1, -1, -1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0", "0", "0", "0", "0", "0", "0"},
       {"0", "1", "0", "0", "0", "0", "0", "0"},
       {"0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0", "0"},
       {"0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0", "0"},
       {"0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0", "0"},
       {"0", "0", "0", "0", "0", 
        RowBox[{"-", "1"}], "0", "0"},
       {"0", "0", "0", "0", "0", "0", "1", "0"},
       {"0", "0", "0", "0", "0", "0", "0", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 1, 2, 3, 4, 5, 6, 7, 8}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {
         8}}}, {1, 1, -1, -1, -1, -1, 1, 1}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->530706706,ExpressionUUID->"11d29111-8d1f-4055-97d0-312a0e542407"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"#", ".", "vec"}], "-", "vec"}], ")"}], "&"}], "/@", "stb"}], "//",
    "Normal"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1402687322,ExpressionUUID->"31414c10-6d22-4ad6-a37b-ff3791223f70"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1356634765,ExpressionUUID->"f0b95d2f-565f-4656-818c-212b2978dbc2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "f285748d-2326-4edd-903b-27d23f7850cb"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->197993619,ExpressionUUID->"cd51e6dd-4649-4c2c-b6b1-b2c3008de0a3"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1412834126,ExpressionUUID->"2dee93d7-1a4c-4e58-a1e6-94a18c55569d"],

Cell["\<\
Consider a graph. A qubit is assigned with each vertex of the graph.\
\>", "ExampleText",
 CellID->1314027057,ExpressionUUID->"30c76973-09e3-4242-aea8-2d1b1fea9ab2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], "<->", 
      RowBox[{"S", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], "<->", 
      RowBox[{"S", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], "<->", 
      RowBox[{"S", "[", "4", "]"}]}]}], "}"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->776470803,ExpressionUUID->"a4d5aa7d-fdd8-4249-aa60-3845b9624239"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`S[1], 
       $CellContext`S[2], 
       $CellContext`S[3], 
       $CellContext`S[4]}, {Null, {{1, 2}, {2, 3}, {2, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0., 0.}, {0.7745966692414834, 
       0.7745966692414834}, {0.7745966692414834, 0.}, {1.5491933384829668`, 
       0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {2, 3}, {2, 4}}, 0.018845521490452433`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.018845521490452433], DiskBox[2, 0.018845521490452433], 
         DiskBox[3, 0.018845521490452433], 
         DiskBox[4, 0.018845521490452433]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AxesStyle->{},
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameStyle->{},
  FrameTicks->None,
  ImageSize->Automatic,
  PlotRangePadding->Automatic]], "Output",
 CellLabel->"Out[2]=",
 CellID->1823992853,ExpressionUUID->"6205a350-9460-42c4-8c42-e97409d98e95"]
}, Open  ]],

Cell["Here is the graph state associated with the graph.", "ExampleText",
 CellID->545842666,ExpressionUUID->"1efe1bb1-e663-4202-aefa-fa26d5cf4542"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec", "=", 
  RowBox[{"GraphState", "[", "g", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->2113914550,ExpressionUUID->"8acb50c1-0245-4a16-b45b-9e648e4e9743"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Q1MlXX/+HEelDFAlljqUmcOiNI5CZ0VFu1vkkUPJlasJ8vfsqTolu6c
/7Fp2qObbeRdFJpG65Q1s9poYa25sllq/41gYLkwdGWawhIa+YTI+X9vrr/n
f3WA48U51/Pn/druJucczue6ju/zOcjNw6T/WVr8aEJcXNzTyeo/xYv+9//6
978XVSy4SL1x97+eLn3sX4sfueVfyxY/tvjf1/xPorrwK/W//zM8Lu6/fw5e
yKlTpwKBQGlp6bp16y54Y8Cj6BwS0DkkoHNIQOeQgM7hJzU1NYWFhenp6XF9
8vLynD4iwHx0DgnoHBLQOSSgc0hA5/CfoqKiOB2qhi/ROSSgc0hA55CAziEB
ncN/Ojs7j/VZsWIFVcOv6BwS0DkkoHNIQOeQgM7hY5WVlVQN36NzSEDnkIDO
IQGdQwI6h/9QNSSgc0hA55CAziEBnUMCOof/UDUkoHNIQOeQgM4hAZ1DAjqH
/1A1JKBzSEDnkIDOIQGdQwI6h/9QNSSgc0hA55CAziEBnUMCOof/UDUkoHNI
QOeQgM4hAZ1DAjqH/1A1JKBzSEDnkIDOIQGdQwI6h/9QNSSgc0hA55CAziEB
nUMCOof/UDUkoHNIQOeQgM4hAZ1DAjqH/1A1JKBzSEDnkIDOIQGdQwI6hz8U
FxePPi8tLS2uT+iSuXPnOn2AgAnoHBLQOSSgc0hA55CAzuE/M2fOjBtcbm6u
0wcImIDOIQGdQwI6hwR0DgnoHAAAAAAAAIAjLrnkEqcPAc5YunTpunXrnD4K
m9C5WHQOCegcEtA5JKBzSODjzqlarFdeeWXatGlOH4VN6FwsOocEdA4J6BwS
0Dkk8HHnVC3WgQMH4uLi1H+dPhA70LlYdA4J6BwS0DkkoHNI4OPOqVqyadOm
VVZWOn0UdqBzyegcEtA5JKBzSEDnkMCvnVO1ZKtWrSooKHD6KOxA55LROSSg
c0hA55CAziGBXzu/YNXNzc3Lly9X5z5lypSHH3743XfftefAmGvD0MbGxsTE
xPb2dhtmOYvOXTJXOXXqVCAQKC0tte2HWdF5CL3Zg31uKTrvz5HOHZlL5yHS
ehP1vKbzEDq3bTT73CyRq962bVtaWlrYbzlftGhRd3e3pUfFXHvmKpdddtlb
b71l9RTH0bkb5tbU1BQWFqanp2sT8/LyLB2nR+dBerOrN/a51ehcz6nO2edW
c2fn0vYq+9xqdK4n7XyDPu08QtX79+9PTExUD/Ltt9/e0NBw+PDhqqqqYcOG
qUsqKiqsOyTm2jNXU15eruZaPcVxdO74XKWoqEj/emHn9qZzerOnN/a5Dehc
z6m9yj63mgs7Dwrbq+xzG9B5iLTz1fiy8whVl5WVqUf4+uuv13/GrKamRl04
cuTIv//+26JDYq49czU7duxITk62eorj6NzxuUpnZ+exPitWrLB5e9M5vdnT
G/vcBnSu59ReZZ9bzYWdB4XtVfa5Deg8RNr5anzZ+WBVnzhxIjU1VT3CH3/8
sf7ys2fPjh07Vl2+ceNGK46HufbMDenp6bn44ovDpvsPnTs7N0xlZaXN25vO
6c2G3hw/Xzqnczv3qlNz6VxUb2Kf13RO50H/nm+ILzsfrOoff/xRPbwpKSn9
v9XriSeeUFctXbrUiuNhrj1z9RYtWvTAAw9E8Y6tra3bt283/XisQOfOzg3j
yL8C6JzerB7khvOlczq3YZbjc+lcTm+Sn9dRd+4hdK6Rdr56/ut8sKq//PJL
9fBmZWUF+z6ttHLlyvvuu2/v3r3qzbVr16qrFixYYMXxMNeeuXq1tbUjR448
e/bsUN9xw4YNs2bNsuKQTEfnzs4N48j2pnN6s3qQG86XzunchlmOz6VzOb1J
fl5H3bmH0LlG2vnq+a/zwarWvs/ruuuuU3+uq6uL6zNv3jz1ZiAQUH++5ppr
wt6lo6OjoaHh+PHjsRwPc+2Zq3fy5MnU1NQo/t8cH3yUIu3v3Q29BY1tbzqP
Ap0PyLbe3HC+dE7nEW7jm7l0Lqc3yc/rqDv3EDrXSDtfPf91PljV1dXV6uGd
PXt2sO/3Q2l/y7fddpt6c8uWLerPubm5oRvv37+/sLAw7rysrCx1m+iOh7n2
zA1TXFxcVlY21PfywUcp0v7eXdJb5O1N51Gj8wHZ1ptLzpfOg3Tej//m0nlQ
Rm/Cn9fRde4hdK6Rdr5hfNb5YFXX1taqx23q1KnB81+h9NBDD2lfofTaa6+p
q2699VbtlqdPn87Ozo6Pj7///vvVy9Zzzz13+eWXqxvs3r07iuNhrj1zwwQC
gfHjxxu5ZW9v77nz1CrIz88/pxP7kViEzp2dGybC9qbzWND5gGzrzSXnS+dB
Ov8nX86l86CM3oQ/r6PrvL/Yj8QidK6Rdr5hLO280LDYT0QzWNX19fXqERvw
Wu23NT366KPam7t27dL/pQf7fu7xBx98EN3xMNeeuWEOHjyo7vzAgQMXvKX+
k5b9GbmHIJ3Lmxsmwvam81jQ+YBs680l50vn/a+ic//NpfP+V/myN+HPazrv
fxWd++B8w1jaeYthppxLcPCq29vb4+Pj1XE2NjaGXTVz5kx1+UsvvaS9qX39
kllfz8Nce+aGUc+OsWPH9vb2XvCWR44cCUW4evXq3NxcfZYGPz1O59Lmhomw
vek8FnQ+INt6c8n50jmdh/HlXDoX0pvw53V0nfdH59HxfedhvLXPo+7caoNV
rdx88839H8ampiZ1YUJCQuizQ8ePHx81apRKory8/Lfffhvwrjo6OjZv3lxS
UlJdXX3BQzJrbn19/ZNPPjl9+vTJkyer0f1ztWjuDz/8UFpaqp4L2dnZt9xy
y4cffmjP3JDu7u7FixcvWLDgzz//jDw6RD0+oU+KGueD718O0nm0c4fauV6E
7U3nsaDzAcXSG/vcheh8QHZ2btbcEDrvz4Wd68Xy9+6Vj1u8u889hM5D+Pjc
+HG6XISqP//8c/UIJyYmvvfee9olR44cycnJURfOnz9ff8vvvvtu4sSJ2o3V
g/ntt9/qr12zZo326ThFPdoXPCRT5qoX0KSkpIyMjHvuuUeFrW4zfPhw1ZvV
c9evX68uVPmpy+fNm5eSkqJu9uKLL1o9V089MSN8fVR/Z86cSU9P37Ztm5Eb
6/njoxQ6t6dzvcg/NYvOo0bnA4q6N/a5O9H5gOzs3JS5enTenws714v6791D
H7d4d597CJ2be76i9rlrRai6t7d34cKF6sFRTaowioqK1LmrNydMmPDzzz+H
3Vg9Mu+8886MGTO0x7OkpERdol21Z8+e6upq7bd1G6nalLnPPPNMQUFB6NdF
ffLJJ+rau+++2+q5LS0t9957b3t7u3azX375JSEhYdy4cVbPDVFPSXW5mqj+
29raGmFuyBdffDFixIjTp08bubGePz5KoXN7Oi8uLh59XlpamnaHoUvmzp1r
ZG4InQ+IzkNM6Y197k50HuJU5+xzG7iwc1P+3j30cYt397mH0Lm55ytqn7tW
hKqDfX/RK1euzMjI0B7DYcOG3XDDDb///nuEd9m5c+dVV10Vp/sGMU1bW5vB
qs2a29PTE7r23LlzqpApU6bYMDeMula1qj8Y6+Y2NTWlpKTk5eU9//zzcYY/
Z7hkyZLIz/fB1NfXb9q0KYp3tB+dmz43zAU7175vdDD63zR3wbl0Phg6DzGx
Nz32uRvQeYhTnbPPbeDCzs36e/fKxy0mzrW5cw+hc4vON8TH+9y1IletUX/X
P/300+7du0+cOGHkPlUG6iG96aab9BcO6aMUE+dqzpw5k5qaWlRUZPPcLVu2
qKfG448/bsPczs7O7OzsUaNGHTx48IUXXjBYtRp66aWXbt682chE76JzS+cO
qfOhonPj6Dx27HP3o/PYsc/dz82dD5XXP25hn1uHzvvj43OvM1J1ZDt27Fi2
bNnJkydDl2hf/vTggw/qb2Z61QbnaqqqqtRVGzZssGduXV2degZNmjRJJV1e
Xt7R0WH1XBXnnXfeqcZ99dVX6k3jVX///ffDhw835QjdjM6tmEvnbkPnVsyl
c7ehcyvm0rnb0LkVc+ncbejcirl07qzYqy4pKVEPYGZm5tNPP/3666+rbtV9
qod3586d+puZXrXBuUpjY2NycnJ+fr4pv6fJyFzV26xZsyZMmKBuWVBQMKQf
+x/d3DVr1qhrX331Ve3GxquuqKiYM2dO7IfncnRuxVw6dxs6t2IunbsNnVsx
l87dhs6tmEvnbkPnVsylc2fFXnVvb+8bb7yRk5OTkJAQ10f9ua6uLuxmpldt
cG5zc/Po0aNVYL/++qudczW7du1SozMyMv744w/r5qopiYmJF1100bPn3Xjj
jeoG5eXlL7/8cuS7nTx5clVVVYzH5n50btFcDZ27BJ1bNFdD5y5B5xbN1dC5
S9C5RXM1dO4SdG7RXA2dOyL2qkO6uroaGhpCP6Y4jHXf7xZhbmNjozrBMWPG
9P9hy5bO1du0aZM68UAgYN3crVu3Tvqn1NRUNXT8+PEzZsyIcFctLS3qZocO
HTLr2FyLzq2Yq0fnbkDnVszVo3M3oHMr5urRuRvQuRVz9ejcDejcirl6dG4/
E6uOzIafJhRm+/bt6enpEydOtCLpwXz66afNzc36SyoqKtSJq8ttO4ag4a/I
Wrt27fTp0+05JGfRubno3J3o3Fx07k50bi46dyc6NxeduxOdm4vOh0QdwJIl
S1avXm3u3VpddUtLy3/6PPvss+pxvvbaa7U3v/76a0vnvv/++0lJSWriU089
pf6Knz/vm2++sW5od3e3ehKpuY899lggEPjss8/KysoSEhIyMzO7urqsm9uf
warz8/PVY2LPIRlE50NC53SuR+cmovPY0fmQ0Dmd69G5ieg8dnQ+JHTu/s7X
r1+vfYvTFVdcYe49W1311q1b4wbyyCOPWDr36quvHnDuqlWrLJ3b1ta2cOHC
MWPGaOPi4+PvuOOO1tZWS4f2p/1wochVHz16VD3jwj7D6Sw6Hyo6p3M9OjcX
nceCzoeKzulcj87NReexoPOhonOXd/79999rn/7yYtViHT58uKmpyeZPFQ7J
xo0bMzMznT6K/4/OvYjOh4rOvYjOh4rOvYjOh4rOvYjOh4rOvYjOI2hra9N+
odL8+fOpGiYqKSlZtmyZ00fx/9A5LELnkIDOIQGdQwI6hwROdd7T0zN79mwV
85w5c+rq6qgavkTnkIDOIQGdQwI6hwR0Dv9Zvny5KnncuHFHjx6tra2lavgS
nUMCOocEdA4J6BwS0Dl85qOPPlIZJyUl7dmzR71J1fAlOocEdA4J6BwS0Dkk
oHP4zL59+0aMGKEyfvPNN7VLLKoacBCdQwI6hwR0DgnoHBLQOXymq6vryiuv
VA0vXrw4dCFVw2foHBLQOSSgc0hA55CAzuE/d911lwo4Kyvr0KFDx857++23
tQvVn9va2pw+RiBWdA4J6BwS0DkkoHNIQOfwmYaGhjgDtG+CAzyKziEBnUMC
OocEdA4J6Bz+s2/fvmsHkpOTo2JOTk7W3ty7d6/TRwpEj84hAZ1DAjqHBHQO
CegccvD9bpCAziEBnUMCOocEdA4J6Bz+Q9WQgM4hAZ1DAjqHBHQOCegc/kPV
kIDOIQGdQwI6hwR0DgnoHP6jVT116lSnDwSwEJ1DAjqHBHQOCegcEtA5AAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC+d+rUqUAgUFpaum7dOqePBbAKnUMC
OocEdA4J6BwAvKWmpqawsDA9PT2uT15entNHBJiPziEBnUMCOocEdA4AXlRU
VBSnw/aGL9E5JKBzSEDnkIDOAcCLOjs7j/VZsWIF2xt+ReeQgM4hAZ1DAjoH
AE+rrKxke8P36BwS0DkkoHNIQOcA4EVsb0hA55CAziEBnUMCOgcAL2J7QwI6
hwR0DgnoHBLQOQB4EdsbEtA5JKBzSEDnkIDOAcCL2N6QgM4hAZ1DAjqHBHQO
AF7E9oYEdA4J6BwS0DkkoHMA8CK2NySgc0hA55CAziEBnQOAF7G9IQGdQwI6
hwR0DgnoHAC8iO0NCegcEtA5JKBzSEDnAOBFbG9IQOeQgM4hAZ1DAjoHAK8o
Li4efV5aWlpcn9Alc+fOdfoAARPQOSSgc0hA55CAzgHAi2bOnBk3uNzcXKcP
EDABnUMCOocEdA4J6BwAAAAAAAAAAEtdcsklTh8CnLF06dJ169Y5fRQ2oXOx
6BwS0DkkoHNIIKpzwH/Y3mK98sor06ZNc/oobELnYtE5JKBzSEDnkEBU54D/
sL3FOnDgQFxcnPqv0wdiBzoXi84hAZ1DAjqHBKI6B/yH7S3ZtGnTKisrnT4K
O9C5ZHQOCegcEtA5JJDTOeA/bG/JVq1aVVBQ4PRR2IHOJaNzSEDnkIDOIYGc
zgH/ueD2bm5uXr58uXqOT5ky5eGHH3733XftOTDl1KlTgUCgtLTU5h/u5Mhc
Rx7nxsbGxMTE9vZ2G2Y5i84lz6VzPTn7TdpcOtejc3uwz61D5/3JOV85nQP+
E3l7b9u2LS0tLe6fFi1a1N3dbelR1dTUFBYWpqenaxPz8vIsHef4XKceZ+Wy
yy576623rJ7iODqXPDdI532k7Tdpc4N03ofO/f36FaTzPtI6l3a+QTGdA/4T
YXvv378/MTFRrZHbb7+9oaHh8OHDVVVVw4YNU5dUVFRYelRFRUX6PWbbFnVk
roOPs1JeXq7mWj3FcXQueW6QzvuI2m/S5mroPEjnfn/9CtJ5H1GdB+Wdb1BM
54D/RNjeZWVlaoFcf/31+s/Q1tTUqAtHjhz5999/W3dUnZ2dx/qsWLHCzldt
R+Y6+DgrO3bsSE5OtnqK4+hc8twgnfcRtd+kzdXQeZDO/f76FaTzPqI6D8o7
36CYzgH/GWx7nzhxIjU1VS2Qjz/+WH/52bNnx44dqy7fuHGjDYdXWVlp86u2
zXMdf5x7enouvvjisOn+Q+fC5wrvPIzv95u0uSF0rkfnfn39onM933ceRs75
Cukc8J/BtvePP/6oVkdKSkr/by184okn1FVLly61/uj8/68/NzzOixYteuCB
B6J4x9bW1u3bt5t+PFagc+ZK7jyM7/ebtLl6dB5C5z5+/aLzEN93HkbU+Uro
HPCfwbb3l19+qVZHVlZWsO/TpytXrrzvvvv27t2r3ly7dq26asGCBTYcnu//
9eeGx7m2tnbkyJFnz54d6jtu2LBh1qxZVhyS6eicuZI7D+P7/SZtrh6dh9C5
j1+/6DzE952HEXW+EjoH/Gew7a19X+F1112n/lxXV6f9FKl58+apNwOBgPrz
NddcE/YuHR0dDQ0Nx48fN/HwjGxRT891w+N88uTJ1NTUKD7L7aHtTefMldx5
GN/vN2lz9eg8hM59/PpF5yG+7zyMqPOV0DngP4Nt7+rqarU6Zs+eHez7fWTa
VrntttvUm1u2bFF/zs3NDd14//79hYWFcedlZWWp25hyeJG3qA/muuRxLi4u
LisrG+p7eWh70zlzg4I7D+P7/SZtbhg619C5v1+/6Fzj+87DSDtf33cO+M9g
27u2tlbth6lTpwbPf0XcQw89pH1F3GuvvaauuvXWW7Vbnj59Ojs7Oz4+/v77
71dP5+eee+7yyy9XN9i9e3fshxdhi/pjrkse50AgMH78eCO37O3tPXeeeunJ
z88/pxP7kViEzpkbFNx5GN/vN2lzw9C5hs79/fpF5xrfdx5G2vn6vnPAUuvW
rSs0pq6uzqyhg23v+vp6tRkGvFb7bWiPPvqo9uauXbv0SybY93O2P/jgA1MO
L8IW9cdclzzOBw8eVHd+4MCBC95S/8n5/ozcA5335/vOXTJXbOdhfL/fpM0N
Q+caOvf36xeda3zfeRhp52tn54D/HDt2rMWYv/76y6yhg23v9vb2+Ph49Xxs
bGwMu2rmzJnq8pdeekl7U/t6uSi+bs2ICFvUH3Nd8jirV4GxY8f29vZe8JZH
jhwJdbh69erc3Fx9mUY+PU7n/fm+c5fMFdt5GN/vN2lzw9C5hs79/fpF5xrf
dx5G2vna2TkAU0TY3jfffHP/ddHU1KQuTEhICH0W9Pjx46NGjVIrqLy8/Lff
fhvwrjo6OjZv3lxSUlJdXT2kw4uwRS84t76+/sknn5w+ffrkyZPV6P7r0aK5
P/zwQ2lpqdq92dnZt9xyy4cffhh5lomPs6a7u3vx4sULFiz4888/L3Ce56nH
J/RJeOM89H2ddG763KF2btbcEDrvL/aPxk3v3Kzn11A7N2su+9yF6Nz0uexz
F6LzAfHxuREe6hzwnwjb+/PPP1cLJDEx8b333tMuOXLkSE5Ojrpw/vz5+lt+
9913EydO1G6slsa3336rv3bNmjXap38VtVWGdHiRf3pVhLlqsSQlJWVkZNxz
zz1qgavbDB8+XO1Vq+euX79eXajWrLp83rx5KSkp6mYvvvhihFlmPc4h6oVg
SF8HeObMmfT09G3bthm5sZ6Htjedmzs3is5NmatH5/2Z8lMQze3clOdXFJ2b
Mpd97k50bu5c9rk70bm558s+B2CPCNu7t7d34cKFagmo3asWYFFRkXqOqzcn
TJjw888/h91YbYB33nlnxowZ2t4oKSlRl2hX7dmzp7q6Wvvt8Ea2d3Fx8ejz
0tLStDsMXTJ37lwjc5955pmCgoLQr0X75JNP1LV333231XNbWlruvffe9vZ2
7Wa//PJLQkLCuHHjIsw163HWqJcAdbmaqP7b2toaYW7IF198MWLEiNOnTxu5
sZ6Htjedmzs3is5NmRtC5wOK0LlZj/9QOzfl+RVF56bMZZ+7E52bO5d97k50
bu75ss8B2CPy58bVYlm5cmVGRoa2K4YNG3bDDTf8/vvvEd5l586dV111VZzu
GxI1bW1tBre39v2Mg9H/BrTIc3t6ekLXnjt3Tm3gKVOm2DA3jLpWvRboD6Y/
sx7npqamlJSUvLy8559/Ps7w58aXLFkS+XVtMPX19Zs2bYriHe1H56bPDXPB
zk2cS+eDidC5uX/vxjsPmvT8GmrnZs0Nwz53Azo3fW4Y9rkb0LlF5xvCPgdg
BSNfeah2y08//bR79+4TJ04YuU+1dtTquOmmm/QXDml7R2fAuZozZ86kpqYW
FRXZPHfLli1qFT/++ONG7ifGx7mzszM7O3vUqFEHDx584YUXDG5vNfTSSy/d
vHmzkYneReeWzh1S5zHOpfMIDH4l+ZCY1bkpzy/NkDo3cS773CXo3NK57HOX
oPPYsc8B2C/27b1jx45ly5adPHkydIn2ZX4PPvig/mam/6vT4FxNVVWVumrD
hg32zK2rq1OvFJMmTVKru7y8vKOjw+q5agnfeeedatxXX32l3jS+vb///vvh
w4ebcoRuRudWzKVzt6FzK+bSudvQuRVz6dxt6NyKuXQOwGqxb++SkhK1KDIz
M59++unXX39d7Wd1n2qN7Ny5U38z07e3wblKY2NjcnJyfn6+Kb+PzMhctVdn
zZo1YcIEdcuCgoIh/Tj06OauWbNGXfvqq69qNza+vSsqKubMmRP74bkcnVsx
l87dhs6tmEvnbkPnVsylc7ehcyvm0jkAq8W+vXt7e994442cnJyEhATt2xLV
n+vq6sJuZvr2Nji3ubl59OjRapH++uuvds7V7Nq1S43OyMj4448/rJurpiQm
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
NerCkSNH/v3339aNduR8HZyr7NixIzk52dJH1Q1c2LlTc516fjn4vA7SeR86
9/frSJDO+4jq3Km57HMb0LnkuUExnQP+Y/CnZlVWVtqzVU6cOJGamqpmffzx
x/rLz549O3bsWHX5xo0brT6GoI3n6/jcnp6eiy++OOzR9h+3de7UXKeeX44/
r+lcj879+jpC53q+79ypuY4/v+hcz/e9iZ0rpHPAf9y2vX/88Uc1KCUlpf+3
7j7xxBPqqqVLl1p9DEFJ21tZtGjRAw88YOdE+7mtc6fmOvX8csPzOurOW1tb
t2/fbvrxWIHONW7oLei1fU7nZvH9XDc8v/i4JcT3vUmeK6FzwH/ctr2//PJL
NSgrKyvY92nblStX3nfffXv37lVvrl27Vl21YMECq48hKGx719bWjhw58uzZ
s3YOtZnbOndqrlPPLzc8r6PufMOGDbNmzbLikExH5xo39Bb02j6nc7P4fq4b
nl983BLi+94kz5XQOeA/Jm7vjo6OhoaG48ePx3I82vftXnfdderPdXV12k+R
mjdvnnozEAioP19zzTVWzA1j2/m6Ye7JkydTU1O98v9aRsdtnTs116nnlxue
11F3LvNfnXQeO2/tczo3i+/nuuH5xcctIb7vTfJcCZ0D/mPK9t6/f39hYWHc
eVlZWVu2bInueKqrq9U9zJ49O9j3+/60O7ztttvUm+o+1Z9zc3OtmBvGtvN1
ydzi4uKysjJT7sqd3Na5U3Oden655HkdXefS/tVJ55473zB0rvF9507Ndcnz
i49bNL7vTfhc33cO+E/s2/v06dPZ2dnx8fH333+/+vDsueeeu/zyy9WNd+/e
HcXx1NbWqvedOnVq8PxXnD700EPaV5y+9tpr6qpbb73VirlhbDtfl8wNBALj
x483csve3t5zg4v9SCzits6dmuvU88slz+voOlf/lMjPz6fz2A/P952H8dY+
p3Ov/71Le37xcYvG970Jn2u8cwD9rVu3rtCYuro6s4bGvr137dqlfzEN9v08
+Q8++CC646mvr1f3NuBRab8N7dFHH7Vibhjbztclcw8ePKju/MCBAxe8pf6T
8/0ZuQc6d3CuU88vlzyv6VxD5/5+HaFzje87d2quS55fdK7xfW/C5xrvHEB/
x44dazHmr7/+Mmto7Ntb+7pQs75urb29PT4+Xt1hY2Nj2FUzZ85Ul7/00ktW
zA1j2/m6ZK56FRg7dmxvb+8Fb3nkyJEIZRr5v4Ho3MG5Tj2/XPK8jq7z1atX
5+bm0nnsfN95GG/tczo3i+/nuuT5xcctGt/3Jnyu8c4BuETs2/v48eOjRo1S
L7Xl5eW//fbbgO/e0dGxefPmkpKS6urqC866+eab+6+ppqYmdWFCQkLo87cX
nFtfX//kk09Onz598uTJanT/DwMiiOV8f/jhh9LSUvUxRnZ29i233PLhhx/a
Mzeku7t78eLFCxYs+PPPPw3OVY9P6P9s8iUXdm7W3KF2btbza6idmzU3xLbO
Rf08CjoPI2ef03kYT3Ru1lw5+9xD6Nz0uXL2OQAHmfJTs7777ruJEyeqGyQm
Jqql8e233+qvXbNmjfZ/cyhqq1xw1ueff67d1XvvvaddcuTIkZycHHXh/Pnz
Dc5VHygmJSVlZGTcc889aoGr2wwfPlztVSMnG8v5rl+/Xl2o1qy6fN68eSkp
KepmL774otVz9dQHPMa/3lU5c+ZMenr6tm3bDB6kF7mwc1PmRtG5Kc+vKDo3
Za6ebZ2L+ldnkM6l7nM611/rlc5NmStqn3sInZs7V9Q+B+CgCNu7uLh49Hlp
aWnaQghdMnfuXP2N1QZ45513ZsyYod2spKREXaJdtWfPnurq6rVr1xrc3r29
vQsXLlQ3VjtfLd6ioiK1W9SbEyZM+Pnnn8NuPNjcZ555pqCgIPRr0T755BN1
7d133x1hrinn29LScu+997a3t2s3++WXXxISEsaNG2f13BD1oY66XE1U/21t
bY0wN+SLL74YMWLE6dOnjdzYo1zYuSlzo+jclOdXFJ2bMjfEzs798a9OOren
c+/uczr3YudOfdzi3X3uIXRu7lxR+xyAgyJsb+37Zwej/417ejt37rzqqqvi
dN94q2lrazO4vYN9L9wrV67MyMjQZg0bNuyGG274/fffI7xL/7k9PT2ha8+d
O6c24ZQpUyLcg7nnG6KuVTtZfzDWzW1qakpJScnLy3v++efjDH9ufMmSJZFf
13zAhZ2bNXeonQdNen6FuWDnJs61ufP6+vpNmzZF8Y72o3M9Rzr37j6ncy92
7tTHLUHP7nMPoXOLzjfEx/scgIMMfuXhkKiXV7U6brrpJv2FQ/rsika9dv/0
00+7d+8+ceJE1HM1Z86cSU1NLSoqMj7duAhzt2zZoj7kePzxx22Y29nZmZ2d
PWrUqIMHD77wwgsGt7d6kC+99NLNmzdbcYTu4ebOTZmrGVLnJj6/htR5jHPp
PAI678+pzoeKzo2jc0vnss9dgs4tncs+B2CR2Lf3jh07li1bdvLkydAl2pf5
Pfjgg/qbmb69Dc7VVFVVqas2bNhgz9y6ujr1SjFp0iS1usvLyzs6Oqyeq5bw
nXfeqcZ99dVX6k3j2/v7778fPny4KUfoZnRuxVw6dxs6t2IunbsNnVsxl87d
hs6tmEvnAKwW+/YuKSlRiyIzM/Ppp59+/fXX1X5W96nWyM6dO/U3M317G5yr
NDY2Jicn5+fnG/m9e6bMVXt11qxZEyZMULcsKCgY0o9Dj27umjVr1LWvvvqq
dmPj27uiomLOnDmxH57L0bkVc+ncbejcirl07jZ0bsVcOncbOrdiLp0DsFrs
27u3t/eNN97IyclJSEjQvhVR/bmuri7sZqZvb4Nzm5ubR48erRbpr7/+audc
za5du9TojIyMP/74w7q5akpiYuJFF1307Hk33nijukF5efnLL78c+W4nT55c
VVUV47G5H51bNFdD5y5B5xbN1dC5S9C5RXM1dO4SdG7RXA2dA7CIid/X2dXV
1dDQEPpx3GGs+77OCHMbGxvVCY4ZM6b/D7G3dK7epk2b1IkHAgHr5m7dunXS
P6Wmpqqh48ePnzFjRoS7amlpUTc7dOiQWcfmWnRuxVw9OncDOrdirh6duwGd
WzFXj87dgM6tmKtH5wCsYMVPzRqQDT81K8z27dvT09MnTpxoxeoezKefftrc
3Ky/pKKiQp24uty2Ywga/srDtWvXTp8+3Z5Dchadm4vO3YnOzUXn7kTn5qJz
d6Jzc9E5gBD1FFuyZMnq1autuHOrt3dLS8t/+jz77LNqn1x77bXam19//bWl
c99///2kpCQ18amnnlKr7PnzvvnmG+uGdnd3qxcLNfexxx4LBAKfffZZWVlZ
QkJCZmZmV1eXdXP7M7i98/Pz1WNizyFdEJ1Hgc7pXI/OTUTnsaDzKNA5nevR
uYnoHEDI+vXrtW/iu+KKK6y4f6u399atW+MG8sgjj1g69+qrrx5w7qpVqyyd
29bWtnDhwjFjxmjj4uPj77jjjtbWVkuH9qf9EK3I2/vo0aPqlSXsM/lOofPo
0Dmd69G5ueg8OnQeHTqncz06NxedAwj2/TYu7RO83t3eYh0+fLipqcnmT4kP
ycaNGzMzM50+iv+ic++ic+Po3Lvo3Dg69y46N47OvYvOAbHa2tq0Xxk2f/58
tjdMV1JSsmzZMqePgs5hLTqHBHQOCegcErikc8Bnenp6Zs+erZb2nDlz6urq
2N7wJTqHBHQOCegcEtA5AHjR8uXL1cYeN27c0aNHa2tr2d7wJTqHBHQOCegc
EtA5AHjORx99pNZ1UlLSnj171Jtsb/gSnUMCOocEdA4J6BwAPGffvn0jRoxQ
6/rNN9/ULrF0ewOOoHNIQOeQgM4hAZ0DgOd0dXVdeeWValcvXrw4dCHbGz5D
55CAziEBnUMCOgcAL7rrrrvUos7Kyjp06NCx895++23tQvXntrY2p48RiBWd
QwI6hwR0DgnoHAA8p6GhIc4A7Zs9AY+ic0hA55CAziEBnQOAF+3bt+/ageTk
5KilnZycrL25d+9ep48UiB6dQwI6hwR0DgnoHAD8hO/rhAR0DgnoHBLQOSSg
cwDwIrY3JKBzSEDnkIDOIQGdA4AXsb0hAZ1DAjqHBHQOCegcALxI295Tp051
+kAAC9E5JKBzSEDnkIDOAQAAAAAAAAAAAAAAAADwq/8L5GGqUA==
    "], {{0, 95.}, {741., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{741., 95.},
  PlotRange->{{0, 741.}, {0, 95.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->34456841,ExpressionUUID->"1982435b-a758-4cb8-bb70-2503a31dd818"]
}, Open  ]],

Cell["\<\
This gives a list of all elements of the stabilizer subgroup.\
\>", "ExampleText",
 CellID->56135352,ExpressionUUID->"2435f077-1abf-4f7c-ac55-b9e1ef2478d1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stb", "=", 
  RowBox[{"Stabilizer", "[", "g", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->499072911,ExpressionUUID->"b923f36e-fbc5-483e-b0d0-a2f7cb119ad9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4TpcwDVcQyW8KkHw+/3dA3Pbh+vUSzqpAACam5tpisXHx1+4cIHxIZJ3PQYt
LS0TJ04k3QkTJpgHP//889WrV0+ZMmXs2LG5ubkHDhwQoWJy/fr1lStXLlq0
6IcffghRKJR6jh8/vm7dusmTJ2dmZtJ2taGhQYSKiatccx9RIdYT+PnZ8LXX
XiPLu3fvFqdioEjWASmu3Zk193kUYj0BZ7rW/vlo9uzZEQPz5ZdfsjSCxLmo
mMhfnwHQjxs3bvz5z38eN27cr371K/NSWcEJy66H2LNnD+l6vV7jb00vvfQS
3R42bBgtAvPnz4+Li6Pfbt26la9KT9auXWtpzedCr3robnR0dHJycn5+vnFl
56ioKFp7+ar0xD2uBY0o2/UQFRUVHo/H6H96vhOkYqJC1gEprt2ZtaB5ZLue
gJNd6/181NTUdGZg2D9/hcRDVOlJWNZnALSks7MzISGhtraW5WTGXc+pU6dy
cnJoTaCVh9pnL2bHjh01NTV9jz/zzDOkO3r0aOMurb0FBQXff/+9cbexsTEy
MvLOO+/kq2JSXV1Nx6l9+nnu3LmBmhXteuPGjTNmzPjxxx+NuxQZ/Xbx4sV8
VUxc5drqiBLtmjh27Nju3buNq3hbfYXg0KwDUly7M2ur88idru2paPZ8ZBUk
7rbEAXA6NH9Xr17Ncibjrmfp0qXmG+J1dXWMZRw4cMB4CD3c5/MZf+5oamra
u3ev8beUVatWDfTYSZMmDR48uKuri7sKnUPHyfKWLVuC/6VFguueBunM1NTU
iRMncldxreueBB9R0ka48TFUS68QHJ21NNc9cUnWluaRO12H6MXEuc9HVkHi
Bu5JHAANCH69noULF6behOa1MafMIw899FDfh5SXl5uzb+PGjYxltLS0LFmy
xHzgkCFDxo4da96l2+3t7f0+8PXXXx80aNCaNWu4q7S1tdGRYcOGffXVV8aV
xYKsOZJdd3Z2xsfHz507F665q9x2RElzbeMVggZZi3bdE/dk3ZPbziN3uuai
4ujnI6sg8YDLEgdAA4LveqZMmRIxML/+9a/7PuT8+fMLFiwwTlixYoWlYg4e
PDh9+nRze0Xccccd69evN9+zNnnnnXdoNRszZgwtOGVlZa2trXxV/H7/I488
Qo2///77gZvXUw6y5shxbbJr1y46bc+ePXxV3OnagH1ESXNt4xUCu4qyWQt1
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
vvtu2ja2tbVxV3n77bfpV8uXL7fqwpKKge0eE4dSiUPFBjq5VmrOhqgiDqV6
Sc4qbaD46OVej04JajZnlXJtoPjsQIJO71tBXsK766FFb/LkyYadqKioe+65
Z+jQocZdulFXV9frfHsZMarQLnLq1KlxcXEXL14M3Lx0WmlpKV8VynHEiBHp
6en2Lk8gp8fEoVTiULGBTq6VmrMhqohDqV6Ss0qbqDx6udejU4KazVmlXJuo
PDuQoNP7VpyX8O56jDppK1ddXX3lyhXjYENDQ3Z2dlpaWt9/s2AvI0aVqqoq
Om3Tpk3GXWNx9nq9Pp+PowptVOm03NzcLbfy8ssvc1Tpdb46ux6lEoeKDXRy
rdScDVFFHEr1kpxVutf5ao5e7vXolKBmc1Yp173OV3N2IEGn9604L+Hd9cyb
N4/q7PvvFLq7u/t9D2v79u10fn19PXcV2lfStnTkyJE9vwn18ccfezyeWbNm
8VIhkpOTI/pj0qRJHFVM7PWYONRJHCr20Mm1UnM2RBVxqNNL0lZpE5VHL/d6
dEpQszmrlGsTlWcHEgyiYqJy34rzEt5dD20Dqc6cnByoKKUiDp16SScVdnRy
rZOKOHTqJZ1U2NHJtU4q7OjkWicVdnRy7XSV8O56nn32WWP3V1JSYun7jFAR
qiIOnXpJJxXV6oGKOujUSzqpqFYPVMShk2udVFSrByoshHfX89NPP2VmZhrW
hgwZUlpaevbsWaiEXUUcOvWSTiqq1QMVddCpl3RSUa0eqIhDJ9c6qahWD1RY
CPt/rm5tbX3sscciIyMNdx6PJy8v79ixY1AJr4o4dOolnVRUqwcq6qBTL+mk
olo9UBGHTq51UlGtHqjcFmohJibm2rVrXIq0zenTp9esWRMfHx9xk/Ly8u7u
bqiEV0UcOvWSTiqq1QMVddCpl3RSUa0eqIhDJ9c6qahWD1SC0NnZGRcXx+ui
tH6/v3tgbvtw2tlt27Zt+PDhhrXKykouVUFFHEhcSxXV6oEKRzBntVRRrR6o
iEMn1zqpqFYPVAZi9erV48ePr6ur6+joCLGw2bNnRwzMl19+ydJIS0vLxIkT
6fwJEyb0PE6uX3vttUcffXT37t0h1jmQyvHjx9etWzd58uTMzEwSamhoEKHy
+eefU59PmTJl7Nixubm5Bw4cEKFicv369ZUrVy5atOiHH34IUagvSJxFRafE
LdWDBC2pmGDOBlFB4lxAglxUTJAgdxUkiARZVEwsJfi73/2O2tmyZUuIJTU1
NZ0ZGPb3pPbs2UP1eL1e8yEVFRUej8d4XiZfIdbZrwrdjY6OTk5Ozs/PN64J
GxUVRanxVXnppZfo9rBhwyia+fPnx8XF0W+3bt3KV6Una9eutfR6xhJI/LYq
miXOXg8StKTSE8zZgVSQOEeQYIgqPUGCfFWQIBJkUekJe4KVlZWJiYklJSXn
zp0LsR6r7Nixo6ampu/xZ555hiofPXq0eeTYsWO07TWuvmp1JDCqbNy4ccaM
GT/++KNxt7a2ln67ePFivir0uqKgoOD777837jY2NkZGRt555518VUyqq6vp
OLVPP4Pke+rUqZycHBqfNAs6OzsZi7EBEnd64kjQ6QlaBYk7PXEkiAQ5qiBB
JOjcBImurq4hQ4b85S9/YayEIwcOHDD2ZUuXLvX5fMbGrampae/evcaucNWq
Vb0e0tzcbHUkWFKh3jBv05mpqakTJ04U5MVk0qRJgwcP7inNS4XOoeNZWVlb
tmwJvv+lBiNuUldXx2LZBkjcwLmJI0ED5yZoFSRu4NzEkaABEuSoggSRoEMT
DPz86b5Bgwa1tLSw+OULiS5ZssQcQrT5Gjt2rHmXbre3t/d6iI2RYEPFgDby
8fHxc+fOFary+uuvU/+vWbOGu0pbWxsdGTZs2FdffWVc7ynISCgvLzfb2bhx
I0sxNkDiAYcnjgQDDk/QKkg84PDEkWAACYpRMUCCIlwjQUEJBhS4Xs/Bgwen
T59OG0DT0R133LF+/Xrz3bee2BgJNlQMdu3aRaft2bNHhMo777xDY2zMmDE0
DMrKylpbW/mq+P3+Rx55hBp///33AzevchtkJJw/f37BggVGaytWrGAvxgZI
3OmJI0GnJ2gVJO70xJEgEuSuYoAEubsOIEFmFasJBhTY9Rh0d3efOnXqo48+
omqDfJ3W9kiwpEI0NDTExsZmZ2ezf7fXkkptbe39999/1113kZ0ZM2bY+Aca
wVUqKiqo5Z07dxp3WUYCkZeXF8Hj62YsIHG+KvITR4J8VTBnLakEkLh1kCBf
FSSIBPnWY4IEGVVsJKjIroeREEcCIydPnkxNTaWYLly4IFSIoChJKDk5+bvv
vuPYptfrTUpK2nyTWbNmUb/RRnv79u0DPaq9vT0mJoZOO3LkCK9KQgeJM7ap
bOJIkLFNZRO0ChJnbFPZxJEgY5tIEAkKAgkytmkjQex6ekFb0ZSUlLS0tNOn
T4tT6cnevXvJ1L59+3g1WFNTM+ZWjMvajho16t577+33IefOnbvvvvvonJkz
Z/IqgwtInAWVE0eCLKicoFWQOAsqJ44EWUCCSFAcSJAFGwkGsOu5lbq6uoSE
hPT0dHHD4K233qL9dc8jTz31FJmi44IUA7d71+/o0aPkmk6YPn36119/La4M
GyBxe6iTOBK0hzoJWgWJ20OdxJGgPZAgR5AgErSBNp9wO3PmTOXPbN68mRxN
mzbNuFtfX89RZf/+/dHR0dT+k08+SV235SYc38e8fv06DTNSKS4upg3voUOH
1q5dGxkZmZGRceXKFV4qfQk+EhobG5OSkl544QW/3y+uBksg8RAJe+JIMETC
nqBVkHiIhD1xJBgiSJCXBBJEgvbQZtdTU1MT0R9FRUUcVYw3LvuyadMmjiq0
hV+2bFlaWprRuMfjycvLE319WOMLX0FGwtWrV4UWYBUkHiJhTxwJhkjYE7QK
Eg+RsCeOBEMECXJUQYJI0Aa3TTDgkF2Plly8eNHn8wnd9gKlQOJOBwm6DSTu
dJCg00GCTke1BA8dOjRy5MhwVwEAAAAAAAAAovjtb3/LeElWAAAAAAAAAHAQ
ly5dOnjw4Jw5c2JiYo4fPx7ucgAAAAAAAACAM3/4wx9++ctfFhQU/Pvf/w53
LQAAAAAAAAAAAAAAAAAAAIAz/w9kZt4r
    "], {{0, 38.}, {553., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{553., 38.},
  PlotRange->{{0, 553.}, {0, 38.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1443025644,ExpressionUUID->"6450e9b2-34c8-44e3-a5c8-9f8f1e60e99e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"stb", "**", "vec"}], "-", "vec"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1793387777,ExpressionUUID->"77b0a411-aa4c-4c0d-b4ee-e0a2ac57d1c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->734527492,ExpressionUUID->"ce903a5a-3a5f-4085-a253-9e39643c108a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "611b5a7f-734d-4e1a-8a29-64adfc4a1f5d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->572275399,ExpressionUUID->"cb466b40-93d1-4546-8720-730d72c6f7b8"],

Cell[TextData[{
 "This gives the local correlation operator associated with the vertex ",
 StyleBox["S[2,$]", "Input"],
 "."
}], "ExampleText",
 CellID->1607426879,ExpressionUUID->"6171e1cd-a81c-4674-984e-df24e1bce034"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Stabilizer", "[", 
   RowBox[{"g", ",", 
    RowBox[{"S", "[", "2", "]"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->495331282,ExpressionUUID->"a2074f30-3601-48ca-9c53-9ce2515f531c"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
      InterpretationBox[
       TemplateBox[{"S", 
         TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
         TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
        "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
       $CellContext`S[1, 3]], 
      InterpretationBox[
       TemplateBox[{"S", 
         TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
         TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
        "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
       $CellContext`S[2, 1]], 
      InterpretationBox[
       TemplateBox[{"S", 
         TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
         TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
        "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
       $CellContext`S[3, 3]], 
      InterpretationBox[
       TemplateBox[{"S", 
         TemplateBox[{",", "\",\"", "4"}, "RowWithSeparators"], 
         TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
        "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
       $CellContext`S[4, 3]]}, "RowWithSeparators"]},
   "RowDefault"],
  Q3`Multiply[
   $CellContext`S[1, 3], 
   $CellContext`S[2, 1], 
   $CellContext`S[3, 3], 
   $CellContext`S[4, 3]]]], "Output",
 CellLabel->"Out[1]=",
 CellID->1328922587,ExpressionUUID->"8ffde1a9-b2b2-404c-b5eb-a3fd6c26cd9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"op", "**", "vec"}], "-", "vec"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1782118670,ExpressionUUID->"ea7b19b5-f722-4080-8f78-b221f5436f72"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[2]=",
 CellID->881806405,ExpressionUUID->"2cdff9b4-abe8-4000-a058-9c1ff56c1224"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "202997e9-04e1-4921-bf9a-11bfc71f022a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1035144769,ExpressionUUID->"272ef75e-b6f4-4950-867e-1a9b2e4f852a"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->691980990,ExpressionUUID->"d40559e9-8473-4177-a3fe-eadca7a7bb1c"],

Cell["\<\
Suppose you have constructed a graph without qubits in mind, and the vertices \
are not qubits.\
\>", "ExampleText",
 CellID->134861196,ExpressionUUID->"73c28301-1f60-40d4-ab30-50714106179d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"PetersenGraph", "[", 
   RowBox[{"3", ",", "2"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->402131762,ExpressionUUID->"d3e2b8c3-368a-4d4e-937e-2e0aa14b72e4"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6}, {
      Null, {{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {4, 6}, {
       5, 6}}}, {
      VertexCoordinates -> {{
        0.8660254037844387, -0.49999999999999983`}, {-0.8660254037844384, \
-0.5000000000000004}, {-2.4492935982947064`*^-16, 1.}, {
        1.7320508075688774`, -0.9999999999999997}, {-1.7320508075688767`, \
-1.0000000000000009`}, {-4.898587196589413*^-16, 2.}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{
       0.8660254037844387, -0.49999999999999983`}, {-0.8660254037844384, \
-0.5000000000000004}, {-2.4492935982947064`*^-16, 1.}, {
       1.7320508075688774`, -0.9999999999999997}, {-1.7320508075688767`, \
-1.0000000000000009`}, {-4.898587196589413*^-16, 2.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.], 
         ArrowBox[{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 5}, {3, 6}, {4, 5}, {4,
           6}, {5, 6}}, 0.03347773481857537]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03347773481857537], DiskBox[2, 0.03347773481857537], 
         DiskBox[3, 0.03347773481857537], DiskBox[4, 0.03347773481857537], 
         DiskBox[5, 0.03347773481857537], DiskBox[6, 0.03347773481857537]}}]],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  AxesStyle->{},
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameStyle->{},
  FrameTicks->None,
  ImageSize->Automatic,
  PlotRangePadding->Automatic]], "Output",
 CellLabel->"Out[2]=",
 CellID->1269414660,ExpressionUUID->"a60c23ce-a4ce-41c0-9821-173c61fb332c"]
}, Open  ]],

Cell["Then, you have to specify the qubits.", "ExampleText",
 CellID->1814854717,ExpressionUUID->"57f95d1f-4b25-4f16-97cd-21c4030e7fbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stb", "=", 
  RowBox[{"Stabilizer", "[", 
   RowBox[{"g", ",", 
    RowBox[{"S", "@", 
     RowBox[{"Range", "[", "6", "]"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1920493854,ExpressionUUID->"ba1d86d9-3483-432c-bf60-716df6c8e8a9"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
g1SzQyJzNRkAjePBwPxVfFtb2wMPPABLNGfOHIbDBmDHjh0gt2fPHlYD1tbW
jruVqKgokLjzzjvvu+8+VioDUl9fD0Jsq+mNN96AMX0/ytLb2xsWFpaTkzPg
9eId1As5Hhj5HScHAyOng83NzQkJCUlJSadPn2Y+ODlodgcHhHmlD4h1HNQL
Asel7QxUsxoR5iDV7JBIW03GwOF4kLB9FX/48OGYmBhYopkzZ/7yyy+shvUF
/GppafE988orr/j5yBzDnzkJzOeff+73hueSJUtASPlzFVYcP37cZrPl5eWp
Z44dOwYqYH3/iwU4qBdyXC+yOU4O6kU2B4GGhgZQSUlJEXYzSQ6yRYCDYird
sg7qBY3jfsjQGahmg4GTg1SzBpChmgyDwPHgYfsqvrW1NS4u7p133vF4PKzG
9OX69euQ3uHh4StWrNizZ89nn322atUqu92empra09PDQ1GBR55fu3YtISEh
Pj6+vLz8wIEDdXV1CxYsUN4j0vI/PnSxePFiSPXi4uKDBw9WV1fDGsbGxp49
e7b/lbwd1As5bgx5HCcHjSGPgwAEAA7CTF988UVY2PU34fqZNHKQIQIcFFPp
lnVQL2gc748MnYFqNhg4vXL0Us3qR4ZqCgZTO84E5p+oH/Kr/oOko6PjmWee
SUpKCvkHsC87O7utrY2rqPJ1EMx7zo8//piTk6OULRAaGlpYWBjgKysNA726
rKwsMjJSEbrnnnsCfPkDbwf1Qo4bQCrHyUEDSOWg8iG0/qxdu5afKDnIEDEO
iql0azqoF0yO+yFJZ6CaNQwnB71Us/qRpJoMY2rHmbBu3brHH398uKMwwoUL
F5xOJ9c3DMUAedXS0nLy5Em3281V6MaNG6AC68ZVhR/kuF5kc5wc1ItsDqKB
HOSKgEonB6WCervZQeOgl2pWGqhLC6Curi42NlbAV18SBEEQBEEQBEEQBBEk
N27cmDVr1p133vnWW2+dOHFiuMMhCIIgCIIgCIIgCCIQV69e3bhx49SpU1NS
UoY7FoIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIg2OPxeG4MRG9v73CHRmhCjIOUJ1qgVeIH5bleZJuLbPHIj9lXzOzx
E9R1CS2Qg4SJ+Prrr0NCQgoKCvzOp6enR0ZGXrx4kZXQvHnzQOjw4cPqmerq
ajjz6quvspIAqqqqQgZi7ty5rCSErZhU8QibtQAHhalwApMXyPqPdjDlOZre
LmE8YtbWmg7qBU0/pK5r9q6LLE+0g6ZTWdZBggcZGRlhYWHnzp1Tzxw6dAis
LysrY6jidDodDsdDDz2kHPb29k6cODEhIaG7u5uhSmtr65ZbmTBhAsylsrKS
oYqYFZMtHjEqYhwUo8IPTF5g6j/awZTnmHq7bPGIWVtrOqgXTP2Quq7Zuy6m
PNEOpk5lTQcJHnzzzTfgaWFhoXomKysrOjq6o6ODrdCKFStA6IsvvoDHu3fv
hsfvvvsuWwk/jh49GhoaOmfOHI/Hw3BYYSsmVTzDMmtODg6LCkMweYG4/2jH
7HmOprcbxuxrSw7qxdT9kLqu1+RdF1meaAdNp7KsgwQPwNaIiIjffvsNHp84
cQJMX7NmDXMVSJuYmJipU6e63e7U1NS0tDSuf2bicrkmTZoUGxt7/vx55oOL
WTHZ4hE8a64OClZhDiYvUPYf7SDIc0y93QAI1tbiDuoFQT+krmv2rospT7SD
qVNZ00GCB8eOHQNnn3/+eXg8f/78UaNGdXV18RDatGkTCD388MPwc//+/Twk
VEpLS0Fl165dPAYXtmJSxSN41lwdFKzCHExeoOw/2sGR52h6uwFwrK2VHdQL
gn5IXdfsXRdZnmgHTaeyrIMED/Ly8iIiIj7++GOwu6KigpOK2+1OSUlRCpCT
hEJjY6PNZsvNzeUnIWbFZItH2KwFOChMhROYvEDWf7SDJs8x9XZdoFlbyzqo
FzT9kLqu2VUw5Yl2MHUqazpI8ODkyZN2u93hcCQmJl65coWTSkdHR1xcHCTS
jBkz+P0t0l9//TV27FiYCNc//RCzYrLFI0ZFjINiVPiByQtM/Uc7mPIcU2/X
Dqa1taaDesHUD6nrml0FU55oB1OnsqaDhF6uXr3qdDr3799/5syZADm/aNEi
qIutW7fyU1m+fDkk0pIlS0Bo586dnFSWLVsG4+/du9fA+NpVvEGvmGzxyKMi
xsHgVfhhNS+8Juk/bOMxS55j6u2yxSPP2uJzUC/yOO5FtJtT1+Wn4jVJnrCN
xyydypoOEmzp7OwsLi4ODw8PuUlsbGx+fn57e3v/i5U/Nvnyyy85qXz33Xd2
u72goMDlct19992JiYmXL19mrvLpp5/Cr5YuXap3FrpUFAyvmGzxSKUixsEg
VfhhQS/EzCXI/sM8HlPkOabeLls8Uq0tMgf1IpXjCjh2c+q6/FQUJM8T5vGY
olNZ00GCOZDk06ZNU8wNCwu79957R40apRzCg4aGBr/rjbmsUcXj8UyfPn3E
iBEXLlyAw+rqarigpKSErQpk9ZgxY1JSUoz9+0gxKyZbPFKpiHEwSBV+WNAL
MXMJsv8wj8cUeY6pt2vHgmuLzEG9SOW4CoLdnLouPxUVmfOEeTym6FTWdJDg
geJaeHh4VVVVT0+PcrK5uTk9PT0pKenXX38d8Hq9LmtU2bVrF1y2du1a5VAp
RofD4XQ6Gark5+fDZVlZWetv5f3332eo4nc9v7qQykExKmIcDFKFHxb0Qsxc
guw/zOMxRZ5j6u3aseDaInNQL1I57ne9qXdz6roWzxPm8ZiiU1nTQYIHjz/+
OLi2cOFCv/N9fX0DfuJi8+bNcH1jYyNzFZfLNWbMmOTkZN/vVThy5IjNZsvM
zGSlAsTHx4cMxJQpUxiqqBhbMe3I46AwFTEOBqnCDwt6IWAuwfcftvF4TZLn
mHq7dqy2tvgc1Is8jvti9t2cui7lCdt4zNKprOkgwYOsrCxwLSMjg1SkUtEO
plljUuEHplXCpKIdTLPGpKIdTLPGpMIPTKuESUU7mGaNSUU7mGaNSYUYXjZs
2KC8g1RYWMjpG0VIhSuYZo1JhR+YVgmTimzxkAo/MM0akwo/MK0SJhXZ4iEV
fmCaNSYVYnj5+++/09LSFKNHjhxZUlJy5swZUhl2FdniIRV5wLRKmFRki4dU
+IFp1phU+IFplTCpyBYPqfAD06wxqRDDTldX19NPP2232xWvbTZbdnZ2U1MT
qQyvimzxkIo8YFolTCqyxUMq/MA0a0wq/MC0SphUZIuHVPiBadaYVAgZOH36
9MqVK6OiokJusnr16r6+PlIZXhXZ4iEVecC0SphUZIuHVPiBadaYVPiBaZUw
qcgWD6nwA9OsMakQTPB4PH2DM+TTu7q63nzzzdtvv10xurKykkeQpMIPTLPG
pBIAqlmUKrLFQyr8wDRrTCoBoK6LUkW2eEiFH5hmjUmFCJJHHnkkZHB+/vln
LYN0dnZOnjwZrp80aZJ68vvvvy8uLp42bVpaWtqTTz7Z3NwcZKgDqhw/fryo
qOj+++8fP358VlZWTU0NDxWV69evP/vsswsWLPjjjz94qFy6dOmFF16YPn36
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
YvIcU2cQo8IPTF5g2tdkiwfTDkhdWgtiVgnT/Rs/MHVpTNlLEAOyYsUKSLYv
vvgCHu/evRsev/vuu1wVjx49GhoaOmfOHI/Hw3DYb775BoIvLCxUz2RlZUVH
R3d0dDBU8QpZMWFz8YWTL7pAk42IVRgiJs8xdQZhKpxA5oUvZt/XpIoH8Q5I
XVoL/FYJ6/0bQzB1aWTZSxD9gWSOiYmZOnWq2+1OTU1NS0vj+qccLpdr0qRJ
sbGx58+fZz44lGdERMRvv/0Gj0+cOAHFu2bNGuYqYlZMzFxUuPqiHUzZiFKF
OWLyHFNnEFwjzMHkhQqCfU22eFDugNSltcB1lVDevzEHU5fGlL0EMSCbNm2C
xH744Yfh5/79+7lqlZaWgsquXbt4DH7s2DEY/Pnnn4fH8+fPHzVqVFdXFw8h
ASsmbC4KXH3RBZpsRKnCHDF5jqkzCFPhBDIvFHDsa1LFg3IHpC6tBd6rhO/+
jTmYujSy7CWI/rjd7pSUFKWUuAo1NjbabLbc3Fx+Enl5eRERER9//DFMp6Ki
gpOKmBUTMxevEF+0gykbkalwQkyeY+oMwmqEE5i88CLa12SLB9kOSF1aCwJW
Cdn9GycwdWlM2UsQ/eno6IiLi4P0njFjBr+/4/jrr7/Gjh2bmJjI9Q9STp48
abfbHQ4HCF25coWTipgVEzMXMb5oB1M2YlLhh5g8x9QZxKjwA5MXmPY12eLB
tANSl9aCmFXCdP/GD0xdGlP2Elbj6tWrTqdz//79Z86cGaxGli9fDum9ZMkS
KKWdO3dyUlm2bBmMv3fvXgPja1cBFi1aBEJbt27lpyJmxbxC5hK8L2zjwZSN
ZlHhhzx5LkZFTPYGr8IPq3lhln1NtnjkUaEubTUvzHL/xg95HDeLF2avccKM
dHZ2FhcXh4eHh9wkNjY2Pz+/vb3d97LvvvvObrcXFBS4XK677747MTHx8uXL
zFU+/fRT+NXSpUu5zkVB+UObL7/8kpOKmBUTM5cgfWEeD6ZsNIUKP6TKczEq
YrI3SBV+WNALU+xrssUjlQp1aat5YYr7N35I5bgpvDB7jRMmBYpi2rRpSsqF
hYXde++9o0aNUg7hQUNDg3KZx+OZPn36iBEjLly4AIfV1dVwQUlJCVsVqIIx
Y8akpKQY+0eQGlVUjFWrVCsmZi5B+sI8HkzZaAoVfkiV52JUxGRvkCr8sKAX
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
yEGzr0GaMQNINbeYHAxShXk9mBwU8/qE1iA/FQXJu6hUKgoC+olepJolTCpi
upycKmzv4kF08uTJSnlhYWH33XffsGHDlE14UFdXp45l5MiRKSkpxv4EnkYV
FWNrWaOK1+udMmXKkCFDLl68CJuVlZVwQHFxsRnHIsaXIGeMeT2Y0ihGhRw0
+xqkGTOAVHOLycEgVZjXg8lBMa9PaA3yU1GRuYtKpaIi2128VLOESUVMl5NW
he1dvLJqwsPDKyoqurq6lJ2NjY3p6elJSUnq1+jl5eXBYVlZWWtv5f3332eo
EnC83rWsUWXHjh1w2KpVq5RNxQKHw+FyuUw3FjG+BDlj2pFq1AHHc3JQjAo5
aPY1SDNmAKnmFpODQaowrweTg2Jen9AaNPsapBkTgFSzhElFTJeTVoXtXfzj
jz8OBfT+uryenh7/zwzEx8eH9MXEiRMZqqhs2rQJjq+vr2c+FrfbPXLkyOTk
ZP9vzzhy5IjNZsvMzGSl4g+/sfiE+BL8jGlHnlH7w9VBASrkoNnXoDAVFZln
TLZ6pFJRkblrMa8HjYPCXp/QGjT7GqQZE4BUs4RGRUyXk1mF7V18VlYW1JmR
kcHqhKRCKobBNGpMKtrBNGpSkVNFO5hGjUlFO5hGjUlFO5hGTSpyqvAD0yyR
ijwqbO/i161bp7zTUlBQwOnbrkjF4iqy1UMq/MA0alKRU0W2ekiFH5hGjUlF
tnpIxcoq/MA0S6Qijwrbu/i//vorLS1NKTUmJqa4uPjs2bOsTk4qpCJhPaTC
D0yjJhU5VWSrh1T4gWnUmFRkq4dUrKzCD0yzRCryqDD/S3MdHR3PPPOM3W5X
qrXZbNnZ2Q0NDQwlSMXiKrLVQyr8wDRqUpFTRbZ6SIUfmEaNSUW2ekjFyir8
wDRLpCKJCpwhIiLi6tWrTIpUOX369LJly6KiokJusmLFip6eHlIhFfFgGjUm
FdnqIRUrq8hWD6nwA9OoManIVg+pWFmFH5hmiVQGXcXj8QwZMmTPnj0Mi1Tp
6OjYsGHDiBEjlFKdTiepkMpggWnUmFRkq4dUrKwiWz2kwg9Mo8akIls9pGJl
lQHwer09/XPbp2OaJVIZXJXCwsJx48bV1dW53W5WFfrT3t4+YcIEqHP8+PH+
+2EUH3744VNPPbV161ZOKsePHy8qKpo8eXJaWhoINTY28lA5ceIEzOEDDzww
duzYrKysqqoqHioq169ff/755+fNm/f7778zV1m5cuXcWwEt5irApUuXXnrp
pSlTpkD28vLyamtrg1EJvh5Koy4VFVZpDL4eclCXigr1Ex71oEmjirlyEmQ9
PkQOCusntAbN7qCCuVb6IKZx1qxZIf3z448/BlM/pVeXiopl0/uf//wHzrN2
7dpg6hmAbdu2wfkdDof6DtX69ettNpuSdlbX6wAV2AwPD4+Pj4dJgKDCj8LC
wiBRbFXee+89eDx8+HCIzZw5c4YMGQI/LS8vZ6viz/Lly3V1CV0qqamp0dHR
//Jj+vTpzFW+//775ORku92emZn59NNPp6SkwAHV1dVBChmuh9KoS8UfhmkM
ph5yUJeKP9RPmNeDJo3+mC4nwdSDxkFh/YTWoNkdVDHdSh+sNLa2tp7pH+2f
kab0BqnijzXT63Q6Y2NjCwoKWlpagqxn8+bNfWqtWbMGyhg9erS6p6GhYevW
rRs3bjSQUo0qZWVlM2bM+OOPP5TNmpoa+OmTTz7JVgVW64IFCy5duqRsNjc3
w+SPGjWKrYpKRUUF7Ifzw7/a/dKuAos6NzdX42kNqzz66KPQQNTf43C73RCG
/preqVOnMjIyoA9At/F4PDzqoTTqUlHRmEZyULuKnA4aVqF+Yuo0qkiVE3JQ
u4qwfkJr0OwOKki10g2riEmjXii9lF4tKrrSC3R3d8fExPz3v/81Vpg/VVVV
ynsgCxcudLlcimhra+v27duVd2BeeOGFgKe0tbXpTakuFRid+hiOTExMnDBh
AqexqEycODE6OtpfmpUKHAP7J02atHbtWu3vNWlX8Xq9sMQKCgq0nNawytGj
R2GzsLBQ45nhhCE3qaurY16PCqWRUxrJQbM7aEyF+gmONMqWE3JQtn5Ca9Bn
cgcVZFvpxlTEpJFf/SqUXkqvFo4fPx4aGtre3m6gsADgJPPnz1eXQ0xMzNix
Y9VNeNzZ2RnwFAMpNaCi4PF4oqKiZs+ezVXlo48+gvlctmwZc5XLly/DnuHD
h587d27dunXaU6pdpaOjA/a88sorBw8e3L17d0NDg/avStCu4nQ6YQ8kGR5f
u3btypUrA595xYoV6nnKysqY16NCaeSURnLQ7A4aU6F+giCNEuaEHJStn9Aa
9JncQZ+UK92Yipg06oXS66P0ckivj8Pfi4fRTZs2LTo6Wq3wjjvuKC0tVT+5
4Y+BlBpQUdiyZQsctm3bNh4q+/btg/yPGTMGIlpSUgJ2s1Xxer05OTlw8i+/
/BI2daVUuwqcMORWkpOTP/nkE7YqRUVFNpsNBjJ9+vSIiAglwwP80sf58+dz
c3OVsy1evFh7MRrrUaE0alTRm0ZyUK+KbA4aU6F+YvY0ypkTclCvCu9+QmvQ
Z3IH5VzpxlREplEvlF5KL9v0+jjcxSv09PScOnXqm2++gYEP8Hl+wynVpQI0
NjZGRkamp6cb+Kt8WlRqamoeeuihu+66C4YzY8YMA1/2OLDK+vXr4cxvv/22
smkgpVpU3G53WVlZVVVVV1fXhQsXnE4n5C0qKgoeM1TJzs4O+fubNCCutbW1
5eXlqampdrv9yJEjA5xTeZaxr8WgNLJVMZZGclC7ipwO6lWhfmL2NMqcE3JQ
uwrvfkJr0OwOyrzS9aqIT6NeKL1sVSyeXk538RoJMqUaaWpqSkxMhAjpnW0D
gDUgFB8f/+uvvzI8p8PhiIuLW32TzMxMmLeSkpJNmzaxUumTwsJCENq5cyfD
c+bn58M59+3bp+45cOAA7CkuLu7vKZ2dncq7UocOHWJYSQCURo3nNJBGctAY
8jjIBOonzOGXRplzQg4ag0c/8dEaNLmDMq90A0ibRr1QejWe0+LpRX8X39jY
mJCQkJSUdPr0aX4q/mzfvh0GtWvXLlYnrK6uHnMrUVFRIHHnnXfef//9rFT6
pLa2FoTYroU333wTzun/QZTu7u6wsLCcnJw+j29paXnwwQfhKTNnzmRYRm8o
jVowkEZyMBhkcJAV1E/YwjWN0uaEHAwG5v3ER2vQ5A5Ku9KNIW0a9ULp1YLF
0+vDfhdfV1c3dOjQlJQUfhGF2W5qavLf8+qrrwa4wBzDnxgZmM8++yzgLbJF
ixaBkPLLJqw4ceKEzWabO3euuufYsWOg8vrrr/c++PDhw+Ag/HTatGk//fQT
wzJ6Q2k0xsBpJAd1IaGDhqF+YvY0BiBDTshBXYjpJ7QGze5gADKsdMNIm0a9
UHqNYZ30KgzKXfyZM2ecf7N69Woob+rUqcpmfX09Q5XKysrw8HA4/8svvwy2
rr0Jw8/MXL9+HZYAqCxdunTXrl179+5dvny53W5PTU3t6upipdIbHim9du1a
QkJCfHx8WVnZgQMHampq5s2bp7w/qeWvQuhi4cKFENSioiKIH9gEcxgbG3vu
3LneRzY3N8fFxb3zzjter5dtDSqUxiAZOI3koHbkdNAY1E/MnsbeyJATclA7
IvsJrUGzO+iPDCs9GKRKo14ovUFinfQqDMpdfHV1dUhfLFmyhKGK8iGZ3qxa
tYqhSltb27PPPpuUlKScHCY/Ozu7paWFoURvlC9zYP5e0w8//JCTk6MsbSA0
NLSgoGCAr7U0DKzu0tLSyMhIRejee+8d4KsbtPyphWCgNAbJbdNIDmpHTgeN
Qf3E7GkMQJKckIPaEdZPaA2a3UF/JFnphpEqjXqh9AaJpdLrG+xP1GPi4sWL
LpeL61tMYoCe1tTUdPLkSY/Hw1Xoxo0boALzxlXFmqBJo2VB4yD1E0ILwnJi
TcT0E1qD/KArgl4ojfJA6dWL9vTu3bs3OTmZazEEQRAEQRAEQRAEQTDh3//+
9+zZswe7CoIgCIIgCIIgCIIg+uW3337bvXv3Y489FhERcfz48cEuhyAIgiAI
giAIgiCIfvm///u/f/7znwsWLPjf//432LUQBEEQBEEQBEEQBEEQBEEQBEEQ
BEEQhCX4fxe3FMk=
    "], {{0, 164.}, {673., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{673., 164.},
  PlotRange->{{0, 673.}, {0, 164.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->1399173137,ExpressionUUID->"33d04cbe-abae-4168-9607-7a2801e9662c"]
}, Open  ]],

Cell["The same to get the graph state.", "ExampleText",
 CellID->314575822,ExpressionUUID->"54dcab9e-d122-4ca2-9b45-a2d4ba5dba9c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gs", "=", 
  RowBox[{"GraphState", "[", 
   RowBox[{"g", ",", 
    RowBox[{"S", "@", 
     RowBox[{"Range", "[", "6", "]"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->291474834,ExpressionUUID->"82cae13d-b402-4428-a573-6e7d06766941"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3XlsVGX7wP2WUsS2VhYFRBCxVBLAUIEgu3lBClYEbKONsokiUC22/kDf
VMviAiQQkU2BgCRUkbBIrLGIhigGZVOglsUIFIICKpVNltICnfd6e8Jknml7
Ou2cpXPf388fpj1z2uts3znPMxmmbV/ISB5fLywsbHJD+U/y2P/3//m//xub
ldJIvnn61clpE159adzjr055acJL/9fjhQhZWCb/6RAZFvb/f+2pTnFxcU5O
Tlpa2vz586tdGUBIoGtAPXQNqIeuAX2sXLly4MCBsbGxYeW6dOni9hYBCBZd
A+qha0A9dA3oJikpKcwH1QMKoGtAPXQNqIeuAd1cuHDhn3LZ2dlUD6iBrgH1
0DWgHroGtDVv3jyqBxRD14B66BpQD10DuqF6QD10DaiHrgH10DWgG6oH1EPX
gHroGlAPXQO6oXpAPXQNqIeuAfXQNaAbqgfUQ9eAeugaUA9dA7qhekA9dA2o
h64B9dA1oBuqB9RD14B66BpQD10DuqF6QD10DaiHrgH10DWgG6oH1EPXgHro
GlAPXQO6oXpAPXQNqIeuAfXQNaCD5OTkZrfExMSElfMuGTRokNsbCKDG6BpQ
D10D6qFrQDfdu3cPq1pCQoLbGwigxugaUA9dA+qhawAAAAAAACBE3X333W5v
AuCEjIyM+fPnu70VDqFraIKuAfXQNaAerbo2R/XQxAcffNC5c2e3t8IhdA1N
0DWgHroG1KNV1+aoHpo4duxYWFiY/NftDXECXUMTdA2oh64B9WjVtTmqhz46
d+48b948t7fCCXQNfdA1oB66BtSjT9fmqB76mD59er9+/dzeCifQNfRB14B6
6BpQjz5dm6u2+v3797/xxhtyrDp27Pj8889/8sknzmwYc5lrufz8/IiIiKKi
IgdmuYuumevKXFFcXJyTk5OWlubYh6vQtZdu15tucz1u9OXhfm0zutZ8rsel
rl2Zq0/X5syr37RpU0xMjN9fORw7dmxpaamtW8Vc5trk/vvv//jjj+2e4jq6
Zq7zc1euXDlw4MDY2FhjYpcuXWwd54uuPfpdb7rNdasv7td2o2ud57rVNfdr
d5lUf+TIkYiICDkpTz755L59+06dOrV48eL69evLkqysLPs2ibnMtU9mZqbM
tXuK6+iauc73lZSU5Pu/W5y8m9O1btebbnM9LvXF/doBdK3tXI97903u1+4y
qT49PV3OSN++fX1f+Vm5cqUsbNy48eXLl23aJOYy1z5bt25t2LCh3VNcR9fM
db6vCxcu/FMuOzvb4bs5Xet2vek21+NSX9yvHUDX2s71uHff5H7trqqqv3Ll
SnR0tJyRzz//3Hf59evXW7RoIcuXL19ux/Ywl7l2zPW6cePGXXfd5TddPXTN
XCfn+pk3b57Dd3O61up6022uH8f6cn1/6Vqr61y3uX6cv2+6NVeTrs1VVf3B
gwfldERFRVX8Jw+vvPKKPJSRkWHH9jCXuXbM9TV27NiRI0fW4gcLCwu3bNli
+fbYga6Z6+RcP678rwi61ud6022uH8f6qgv7W+uuQwhd6znXjz7/79ujx/3a
XFXVf/vtt3I62rVr5yl/mWLq1KnPPffcgQMH5Ns5c+bIQykpKXZsD3OZa8dc
X7m5uY0bN75+/XpNf3DZsmW9e/e2Y5MsR9fMdasvj0t3c7rW53rTba4fx/qq
C/tb665DCF3rOdePVv/vW4f7tbmqqjf+vUOfPn3k67y8vLByw4YNk29zcnLk
6x49evj9yPnz5/ft23fu3Llgtoe5zLVjrq+rV69GR0fX4tWzEKqerpnrVl+e
wO7mdF0LdK3nXD+O9VUX9rfWXYcQutZzrh9X7ptuzdXhfm2uquqXLFkip6N/
//6e8s/hN67GIUOGyLdr166VrxMSErwrHzlyZODAgWG3tGvXTtap3fYwl7l2
zPWTnJycnp5e058Koerpmrku9mV+N6frWqNrPef6cayvOrK/tes6hNC1nnP9
uHXf5H7tiqqqz83NleP80EMPeW69E2PMmDHGOzEWLVokDz3xxBPGmteuXYuP
jw8PDx8xYoQclnfeeefBBx+UFXbs2FGL7WEuc+2Y6ycnJ6dVq1aBrFlWVnbz
FnmK7tWr100fwW+JTeiauS72ZXI3p+tg0LWec/041lcd2d/adV1R8FtiE7rW
c64ft+6b3K/FwIBZMs5TdfV79uyRI1zpo8an048fP974dvv27b4Xp6f88wPX
rFlTu+1hLnPtmOvn+PHj8suPHTtW7Zq+L/pVFMhv8NA1c1Wf68fkbk7XwaBr
Pef6cayvOrK/dF3xISWvc93m+nHrvqnJ/drc4YAFP8tQVfVFRUXh4eGyX/n5
+X4Pde/eXZbPmjXL+NZ4n4ZV7wtiLnPtmOtHnj1atGhRVlZW7ZqnT5/2Rjdj
xoyEhATfDAN82Y2umav2XD8md3O6DgZd6znXj2N91ZH9rV3XFdF1gJjrzFw/
bt03Nblf1zVVVS8GDx5c8bAXFBTIwnr16nlfbTh37lzTpk3l0s3MzPzjjz8q
/VXnz59fvXp1amrqkiVLqt0kq+bu2bNn0qRJXbt27dChg4yumJVNc/fu3ZuW
libNxsfHP/744+vWrXNmrldpaelLL72UkpJy9uxZB+ZOmTIl+X/JdGf2V54z
MzIyevTo0b59+2eeeSY3N9dkri+5HrwvZgYuhP69CV1bPpeuzbv2ZXI3p+tg
0LXlc0Ola1/B9KXP/TqE0LXlc+ma+3UdZ1L9119/LWckIiLi008/NZacPn1a
Dq8sfOqpp3zX/Omnn9q0aWOsLBfbjz/+6Pvo7NmzjZeVRCDXgyVz5QQ1aNCg
SZMmcjFI+LJOZGSk9Gj33KVLl8pCuVxl+bBhw6KiomS1mTNn2j3XlzyBGEfb
/P0YVs2Ni4uLiYl5yEffvn0dmPvrr7+2bNlSnhgHDBgwYsQIY83169ebjDaU
lJTExsZu2rSp2jX9hFD1dG3tXLqutmtf5p/iQte1RtfWzg2hrn0F05c+9+sQ
QtfWzqVr7td1n0n1ZWVlo0ePliMpzUo4SUlJcqzk29atW//+++9+K8uRXLVq
Vbdu3YzrLTU1VZYYD+3cuXPJkiXGX80LpHpL5k6bNq1fv37ej8ffuHGjPPr0
00/bPffw4cPPPvtsUVGRsdrRo0flsrz33nvtnuslTx2yXCbKfwsLCx2YK0+t
fs9O5qyam5iYKE/sX3zxhfFtcXGxXGaBvAVl8+bNd9xxx7Vr1wLfZkMIVU/X
1s6l62olJyc3u0X+Z4DxC71LBg0aFOBcujZB19bODaGurepLn/t1CKFra+fS
dbW4X7vOpHpP+QU5depUOa3GMa9fv/6jjz568uRJkx/Ztm3bww8/HObzDyUM
Z86cCbB6q+beuHHD+6hcDHJFdezY0YG5fuRRubZ9N8a+uQUFBVFRUV26dHn3
3XfDAnjNLfi58hvkaW3ixInmgyyfu3v3bvk6LS2tRnMNsrXmz/9V2bNnz4oV
K2rxg86ja8vn+qFrP8a/j6uK719sMZlL1+bo2vK5fups15b0pdX9OoTQteVz
/dC1HXO5XwfDvHqDnNlDhw7t2LHjypUrgfxOuVzljCQmJvourFH1Fs41lJSU
REdHJyUlOTx37dq1kvDLL7/swNwLFy7Ex8c3bdr0+PHj7733XrXVWzL3/Pnz
8vXrr7++devWDRs27Ny5s7i4OJBfEuTcBQsWyNfyLOcp/5sIly9fDnxoy5Yt
V69eHeD6IYqubZ1L1xai68DRta1zQ6LrmuJ+XffRta1z6dqmuXQdjECqNyen
e8qUKVevXvUuMd5eMmrUKN/ValG9JXMNixcvloeWLVvmzNy8vDx5hmnbtq0k
n5mZKWnYPVcu5uHDh8u47777Tr61sHrzuTLC70UzaerLL7+0e+6kSZPCw8Nl
Z/v27XvbbbfJcnnGC+Qfm+zatSsyMtKSM1KX0bUdc+na7rl0bY6u7ZhL13bP
pWtzdG3HXLq2ey5dByP46lNTU+WYx8XFTZ48+cMPP5Su5XfK5bdt2zbf1Syv
PsC5Ij8/v2HDhsbfZ3dmrlyfvXv3bt26tazZr1+/aj/mMfi5s2fPlkcXLlxo
rGxh9eZzi4uLp02btm7dukuXLp04cWLBggUxMTHR0dHyta1zhw4dGlb+CR6S
f25u7syZM2XNevXq7dixw/zXZmVlPfbYY0FuW91H13bMpWu6dhdd2zGXruna
XXRtx1y6puu6LPjqy8rKPvroo/bt28sxN151ka/z8vL8VrO8+gDn7t+/v1mz
ZhJg8NdhjeYatm/fLqObNGny119/2TdXpkRERDRq1OjtWwYMGCArZGZmzp07
1765lUpLS5N1Vq1aZevcF154QZb4bsbmzZtlyauvvmr+azt06LB48eIgt63u
o2ub5hro2qa5dG2Orm2aa6Brm+bStTm6tmmuga5tmqtw1wUFBePGjevZs2d8
fHxiYmJ2drb3wwOtEnz1XpcuXdq3b5/3Ywb9WF59IHPz8/NlB5s3b17xQwtt
netrxYoVsuM5OTn2zV2/fn3b/xUdHS1DW7Vq1a1bN/vmVio3N1dGB/9sYz53
1qxZMsX3rTU3btyIjIwcPny4ya86fPiw/NSff/5p1bbVDl0HOZeu6doXXdcC
XVeKru2YS9fm6NqOub7o2o65Id21iYULF3pfbahfv77xRdOmTQ8dOmThFAur
N2df9VXZsmVLbGxsmzZt7Ei+KnId7t+/33dJVlaW3/XpAFs/7cHXN9984/dy
4pgxY2S08c9e7LN3797w8PDk5GTvkl9++UXmvvXWWyY/NWfOnK5du9q6YdWi
6yDRNV37oWvL0bVj2+Ch6yrQteXo2rFt8NB1FepC1yYOHjxolJ6RkfHbb79d
vXp1w4YNxkfEW/gqisf+6g8fPryg3Ntvvy0b37NnT+Pb77//3ta5n332WYMG
DWTia6+9Jgm8e8sPP/xg39DS0lJ5kpG5EyZMyMnJ+eqrr9LT0+WpOy4u7tKl
S/bNrciZ6q9duybXT5MmTaZNm7Z58+aNGzempKTI3P79+5v/ZQdLjBo1SsKf
NGnS1q1b5XTLkb/zzjuPHz9u8iO9evWSa8DuDTNB10Gia7quiK6tQtd0bRO6
NkHXFqJrug7GwoULw8r/zvv169e9C3ft2mW88vbvv/9aNcju6tevXx9WmXHj
xtk695FHHql07vTp022de+bMmdGjRzdv3twYJ5fl0KFDCwsLbR1akfHhDw68
5ia3pOHDhxtPsMaLwxMnTrT8fVmVkufYyZMnN2zY0BjdqVMn8496+Pvvv+UZ
2O8VUYfRdZDomq790LWF6JqubULXJujaWnRN17VmvJ0+JSXFb3mzZs1kuYVv
enHsHS+6OXXqVEFBgcMvtbnl8uXLUtOBAwdKSkocHi23RZkrR7vaNZcvXx4X
F+fAJpmg61BH186g60rRtU3o2hl0XSm6tgldOyO0ujYnOyJ1x8bG+r5EUFhY
KAsfeOABCwdRPTSRmpo6ZcoUd7eBrgFr0TWgHroG1FMXuq7W4MGDpfFGjRrN
nTv3v//+u3jxovEujvfff9/CKVQPOImuAfXQNaAeugZ0U1JSkpiYaLyX/vbb
b7/nnnvkizfffNPaKVQPOImuAfXQNaAeuga0cvPmzaysrMjIyNjY2F69eoWH
hxv5DxkyxNq/kkb1gGPoGlAPXQPqoWtANy+++KI03rVrV+Nj+k6ePJmdnd24
cWNZ2LJlS/nW7Q0EUGN0DaiHrgH10DWgld27d0vd9erVO3HihO/yo0ePtmnT
Rh4aP368W9sGoHboGlAPXQPqoWtAN4sWLZK0+/TpU/Eh4+/Hde7c2fmtAhAM
ugbUQ9eAeuga0M3SpUsl7R49elR8aMGCBfJQQkKC81sFIBh0DaiHrgH10DWg
m0OHDhkf7zBnzpyysjLv8pMnT953332yPD093cXNA1ALdA2oh64B9dA1oKEZ
M2YYH67YqVMnaXzq1KkjR46MioqSJW3bti0qKnJ7AwHUGF0D6qFrQD10Deim
rKxszZo1HTp0CPPRoEGDCRMmWPuXDgA4hq4B9dA1oB66BrR19uzZn3/+efv2
7UePHi0tLXV7cwBYgK4B9dA1oB66BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAeiouLs7JyUlLS5s/f77b2wLAGnQNqIeuAfXQNaCPlStXDhw4MDY2
1vhzhF26dHF7iwAEi64B9dA1oB66BnSTlJQU5oPqAQXQNaAeugbUQ9eAbi5c
uPBPuezsbKoH1EDXgHroGlAPXQPamjdvHtUDiqFrQD10DaiHrgHdUD2gHroG
1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbUQ9eAeuga0A3VA+qha0A9
dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHdUD2gHroG1EPX
gHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbUQ9eAeuga0EFycnKzW2JiYsLK
eZcMGjTI7Q0EUGN0DaiHrgH10DWgm+7du4dVLSEhwe0NBFBjdA2oh64B9dA1
AAAAAAAAENLuvvtutzcBcEJGRsb8+fPd3gqH0DU0QdeAeugaUI9WXZujemji
gw8+6Ny5s9tb4RC6hiboGlAPXQPq0aprc1QPTRw7diwsLEz+6/aGOIGuoQm6
BtRD14B6tOraHNVDH507d543b57bW+EEuoY+6BpQD10D6tGna3NUD31Mnz69
X79+bm+FE+ga+qBrQD10DahHn67NVVv9/v3733jjDTlWHTt2fP755z/55BNn
Nky3uaK4uDgnJyctLc3JDyXQ6jjn5+dHREQUFRU5MMtddF1H5no069rjxv7S
tZdufWl1nbs4l/u1rei6jsz1aNa1K3P16dqcefWbNm2KiYnx+1uHY8eOLS0t
tXWrdJu7cuXKgQMHxsbGGhO7dOli6zgv3Y6zuP/++z/++GO7p7iOruvCXN26
dmt/PXRdTre+dLvOdXs+8dB1Od36omu153q06dqcSfVHjhyJiIiQk/Lkk0/u
27fv1KlTixcvrl+/vizJysqyb5N0myuSkpJ8n2ecqUDD4ywyMzNlrt1TXEfX
rs/1aNa1x6X9NdC1bn1peJ3r9nzioWv9+qJr5ed6tOnanEn16enpckb69u3r
+4rTypUrZWHjxo0vX75s0ybpNldcuHDhn3LZ2dmOVaDhcRZbt25t2LCh3VNc
R9euz/Vo1rXHpf010LVufWl4nev2fOKha/36omvl53q06dpcVdVfuXIlOjpa
zsjnn3/uu/z69estWrSQ5cuXL7dje3Sb62fevHnOVKDtcb5x48Zdd93lN109
dO3uXD/Kd+3Hsf31omut+tL2Ond4ruvHma616sv1682gfNeuz9Wka3NVVX/w
4EE5HVFRURX/qcUrr7wiD2VkZNixPbrN9eNYBTof57Fjx44cOdLuKe6ia3fn
+lG+az+u/K8IutanL52vcyfn1oXjTNf69FUXrjePBl3Xhbm17rqwsHDLli2W
b4/zqqr+22+/ldPRrl07T/nLFFOnTn3uuecOHDgg386ZM0ceSklJsWN7dJvr
x7EKdD7Oubm5jRs3vn79ut2DXETX7s71o3zXfly5m9O1Pn3pfJ07ObcuHGe6
1qevunC9eTToui7MrXXXy5Yt6927tx2b5LCqqjf+nUWfPn3k67y8vLByw4YN
k29zcnLk6x49evj9yPnz5/ft23fu3Llgtke3uX4CqSCk97cuHOerV69GR0er
8epZVeja3bl+lO/aj2P764uu9elL5+vcybl14TjTtT591YXrzaNB13Vhbq27
Vv7/fS9ZskROR//+/T3ln/9vVDBkyBD5du3atfJ1QkKCd+UjR44MHDgw7JZ2
7drJOrXbHt3m+jGvQIH9rSPHOTk5OT093ZJfVTfRtbtz/SjftR/H9tcPXXv0
6Evz61y35xO69ujRVx253pTvuo7MrV3Xyv+/79zcXDnODz30kOfWO0DGjBlj
vANk0aJF8tATTzxhrHnt2rX4+Pjw8PARI0bIYXnnnXcefPBBWWHHjh212B7d
5voxqUCN/a0jxzknJ6dVq1aBrFlWVnazasFviU3o2t25fpTv2o9j++uHrj16
9KX5da7b8wlde/Toq45cb8p3XUfm1q7rJUuW9OrVy9qu58+fPzAweXl5wY8z
VFX9nj175AhX+qjx6fTjx483vt2+fbtvFJ7yzy1cs2ZN7bZHt7l+TCpQY3/r
yHE+fvy4/PJjx45Vu6bvi34VBfIb6FrDuX6U79qPY/vrh64rPqRkX5pf57o9
n9B1xYeU7KuOXG/Kd11H5jrZtbl//vnncGAuXrwY5CyvqqovKioKDw+X/crP
z/d7qHv37rJ81qxZxrfG+0Osel+QbnP9mFSgxv7WkeMszx4tWrQoKyurds3T
p0+blBjIy250reFcP8p37cex/fVD15r0pfl1rtvzCV1r0lcdud6U77qOzK1d
1zNmzEhISKhp13VQVdWLwYMHVzzsBQUFsrBevXreVxvOnTvXtGlTSSYzM/OP
P/6o9FedP39+9erVqampS5YsqXaTrJq7Z8+eSZMmde3atUOHDjK6Ys42zd27
d29aWpo8V8THxz/++OPr1q2rdpe9TCoI5DgbSktLX3rppZSUlLNnz5qsZtX+
TpkyJfl/yXQH5nrKn6szMjJ69OjRvn37Z555Jjc312SuL7kevC+iKomuLZ9L
1+Zd+wpyf+m6KnRt+dxQ6dqqudyv6yC6tnwuXat6v1b+332Lr7/+Ws5IRETE
p59+aiw5ffq0HF5Z+NRTT/mu+dNPP7Vp08ZYWS62H3/80ffR2bNnGy9niUCu
B0vmyglq0KBBkyZN5GKQ8GWdyMhI6dHuuUuXLpWFcrnK8mHDhkVFRclqM2fO
rHavDeaffmB+nL3kiSuQ92NYdX7j4uJiYmIe8tG3b18H5v76668tW7aUJ+QB
AwaMGDHCWHP9+vUmow0lJSWxsbGbNm2qds3QRdfWzqXraru2an/p2gRdWzs3
hLq2ai736zqIrq2dS9cK3691+H/fZWVlo0ePliMpzUo4SUlJcqzk29atW//+
++9+K8uRXLVqVbdu3YzrLTU1VZYYD+3cuXPJkiXGX+sLpHpL5k6bNq1fv37e
j8ffuHGjPPr000/bPffw4cPPPvtsUVGRsdrRo0flsrz33ntN5iYnJze7RfIx
fqF3yaBBgwKZ6yVPWbJcJsp/CwsL7d5fIU+tfs+K5qyam5iYKE/sX3zxhfFt
cXGxXGaBvAVl8+bNd9xxx7Vr1wLf5pBD19bOpetqWbW/dG2Crq2dG0JdWzWX
+3UdRNfWzqXraoXu/VqH//ftKQ9h6tSpclqNY16/fv1HH3305MmTJj+ybdu2
hx9+OMznH2gYzpw5E2D1Vs29ceOG91G5GOSK6tixowNz/cijcm37bowf49+z
VMX3LyxUO7egoCAqKqpLly7vvvtuWACvuQW/v/Ib5Glt4sSJ5oMsn7t79275
Oi0trUZzDbK15s//CqBry+f6oWs79peuzdG15XP91NmuLZnL/bpuomvL5/qh
azvmutL1nj17VqxYUYsfrGvMqzfImT106NCOHTuuXLkSyO+UTOSMJCYm+i6s
UfUWzjWUlJRER0cnJSU5PHft2rXy1PHyyy8H8ntqym/uhQsX4uPjmzZtevz4
8ffee6/a6r2C2d/z58/L16+//vrWrVs3bNiwc+fO4uLiALc/mLkLFiyQr+VZ
zlP+NxEuX74c+NCWLVuuXr06wPVDFF3bOpeuLUTXgaNrW+eGRNfBzOV+XTfR
ta1z6dqmuXQdjECqNyene8qUKVevXvUuMd5eMmrUKN/ValG9JXMNixcvloeW
LVvmzNy8vDx5hmnbtq0kn5mZKWnYPVcu5uHDh8u47777Tr61sHrzuTLC70Uz
aerLL7+0e+6kSZPCw8NlZ/v27XvbbbfJcnnGC+Qfm+zatSsyMtKSM1KX0bUd
c+na7rl0bY6u7ZhL13bPpWtzdG3HXLq2ey5dByP46lNTU+WYx8XFTZ48+cMP
P5Su5XfK5bdt2zbf1SyvPsC5Ij8/v2HDhsbfZ3dmrlyfvXv3bt26tazZr1+/
aj/mMfi5s2fPlkcXLlxorGxh9eZzi4uLp02btm7dukuXLp04cWLBggUxMTHR
0dHyta1zhw4dGlb+CR6Sf25u7syZM2XNevXq7dixw/zXZmVlPfbYY0FuW91H
13bMpWu6dhdd2zGXrunaXXRtx1y6puu6LPjqy8rKPvroo/bt28sxN151ka/z
8vL8VrO8+gDn7t+/v1mzZhJg8NdhjeYatm/fLqObNGny119/2TdXpkRERDRq
1OjtWwYMGCArZGZmzp071765lUpLS5N1Vq1aZevcF154QZb4bsbmzZtlyauv
vmr+azt06LB48eIgt63uo2ub5hro2qa5dG2Orm2aa6Brm+bStTm6tmmuga5t
mqtk1wUFBePGjevZs2d8fHxiYmJ2drb3YwOtFXz1XpcuXdq3b5/3Ywb9WF59
IHPz8/NlB5s3b17xwxJtnetrxYoVsuM5OTn2zV2/fn3b/xUdHS1DW7Vq1a1b
N/vmVio3N1dGB/9sYz531qxZMsX3rTU3btyIjIwcPny4ya86fPiw/NSff/5p
1bbVFF1bMpeu6doXXdcCXVeKru2YS9fm6NqOub7o2o65Idq1iYULF3pfZ6hf
v77xRdOmTQ8dOmT5LAurN2df9VXZsmVLbGxsmzZt7Ei+KnId7t+/33dJVlaW
3/XpAFs/7cHXN9984/dy4pgxY2S08c9e7LN3797w8PDk5GTvkl9++UXmvvXW
WyY/NWfOnK5du9q6YSbo2hJ0Tdd+6NpydO3YNnjougp0bTm6dmwbPHRdBXe7
NnHw4EGj9IyMjN9+++3q1asbNmwwPhzewtdPvOyu/vDhwwvKvf3227ILPXv2
NL79/vvvbZ372WefNWjQQCa+9tprksC7t/zwww/2DS0tLZUnGZk7YcKEnJyc
r776Kj09XZ7A4+LiLl26ZN/cipyp/tq1a3L9NGnSZNq0aZs3b964cWNKSorM
7d+/v8lfdrDKqFGjJPxJkyZt3bpVTrcc+TvvvPP48eMmP9KrVy+5BuzesErR
tSXomq4romur0DVd24SuTdC1heiarmtn4cKFYeV/Wf769evehbt27TJeefv3
33+tHWd39evXrw+rzLhx42yd+8gjj1Q6d/r06bbOPXPmzOjRo5s3b26Mk8ty
6NChhYWFtg6tyPjwBwdec5Mb0/Dhw40nWOMl4okTJ9r07iw/8hw7efLkhg0b
GqM7depk/lEPf//9tzwD+70i6hi6tgRd07UfurYQXdO1TejaBF1bi67puhaM
N9KnpKT4LW/WrJkst/xNL46940U3p06dKigocPilNrdcvnxZajpw4EBJSYnD
o+XmKHPlaFe75vLly+Pi4hzYpErRtRro2hl0XSm6tgldO4OuK0XXNqFrZ4RK
1+ZkF6Tu2NhY3xcHCgsLZeEDDzxg+TiqhyZSU1OnTJni1nS6BuxA14B66BpQ
j7tdV2vw4MHSeKNGjebOnfvff/9dvHjReP/G+++/b/ksqgecQdeAeugaUA9d
A7opKSlJTEw03kV/++2333PPPfLFm2++accsqgecQdeAeugaUA9dA1q5efNm
VlZWZGRkbGxsr169wsPDjfyHDBlix99Ho3rAAXQNqIeuAfXQNaCbF198URrv
2rWr8QF9J0+ezM7Obty4sSxs2bKlfOv2BgKoMboG1EPXgHroGtDK7t27pe56
9eqdOHHCd/nRo0fbtGkjD40fP96tbQNQO3QNqIeuAfXQNaCbRYsWSdp9+vSp
+JDxl+M6d+7s/FYBCAZdA+qha0A9dA3oZunSpZJ2jx49Kj60YMECeSghIcH5
rQIQDLoG1EPXgHroGtDNoUOHjI93mDNnTllZmXf5yZMn77vvPlmenp7u4uYB
qAW6BtRD14B66BrQ0IwZM4wPV+zUqZM0PnXq1JEjR0ZFRcmStm3bFhUVub2B
AGqMrgH10DWgHroGdFNWVrZmzZoOHTqE+WjQoMGECRPs+EsHABxA14B66BpQ
D10D2jp79uzPP/+8ffv2o0ePlpaWur05ACxA14B66BpQD10DAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACVFBcX5+TkpKWlzZ8/3+1tAWANugbUQ9eA
euga0MfKlSsHDhwYGxtr/JHBLl26uL1FAIJF14B66BpQD10DuklKSgrzQfWA
AugaUA9dA+qha0A3Fy5c+KdcdnY21QNqoGtAPXQNqIeuAW3NmzeP6gHF0DWg
HroG1EPXgG6oHlAPXQPqoWtAPXQN6IbqAfXQNaAeugbUQ9eAbqgeUA9dA+qh
a0A9dA3ohuoB9dA1oB66BtRD14BuqB5QD10D6qFrQD10DeiG6gH10DWgHroG
1EPXgG6oHlAPXQPqoWtAPXQN6IbqAfXQNaAeugbUQ9eAbqgeUA9dA+qha0A9
dA3oIDk5udktMTExYeW8SwYNGuT2BgKoMboG1EPXgHroGtBN9+7dw6qWkJDg
9gYCqDG6BtRD14B66BoAAAAAAAAIaXfffbfbmwA4ISMjY/78+W5vhUPoGpqg
a0A9dA2oR6uuzVE9NPHBBx907tzZ7a1wCF1DE3QNqIeuAfVo1bU5qocmjh07
FhYWJv91e0OcQNfQBF0D6qFrQD1adW2O6qGPzp07z5s3z+2tcAJdQx90DaiH
rgH16NO1OaqHPqZPn96vXz+3t8IJdA190DWgHroG1KNP1+aqrX7//v1vvPGG
HKuOHTs+//zzn3zyiTMb5tZcUVxcnJOTk5aW5uSHA+h2nF2Zm5+fHxERUVRU
5MAsd9F1RXTtDOePM117cb05g/11YChde9G1M3TbX1fm6tO1OfPqN23aFBMT
4/e3DseOHVtaWmrrVrk1d+XKlQMHDoyNjTUmdunSxdZxXrodZ7fmivvvv//j
jz+2e4rr6NoXXat9nD10XY7rzdZxXuwv92tr0bUv3a5zt/aX+7W7TKo/cuRI
RESEnJQnn3xy3759p06dWrx4cf369WVJVlaWfZvk1lyRlJTk250zV6Nux9nF
8ysyMzNlrt1TXEfXvuha4eNsoGuuN7W79ui3vx66pmsNrnO37pvcr91lUn16
erqckb59+/q+8rNy5UpZ2Lhx48uXL9u0SW7NFRcuXPinXHZ2tmNXo27H2cXz
K7Zu3dqwYUO7p7iOrn3RtcLH2UDXXG9qd+3Rb389dE3XGlznbt03uV+7q6rq
r1y5Eh0dLWfk888/911+/fr1Fi1ayPLly5fbsT1uzfUzb948Z65G3Y6z6+f3
xo0bd911l9909dB1pehasePsRddcbwp37Uef/aVrutbhOjc4f990a64mXZur
qvqDBw/K6YiKiqr4Tx5eeeUVeSgjI8OO7XFrrh/HrkbdjnNdOL9jx44dOXKk
3VPcRdeVomvFjrOvWnddWFi4ZcsWy7fHDnRdKeW79qPV/tI1Xds9SLf9rQtz
dejaXFXVf/vtt3I62rVr5yl/mWLq1KnPPffcgQMH5Ns5c+bIQykpKXZsj1tz
/Th2Nep2nOvC+c3NzW3cuPH169ftHuQiuq4UXSt2nH3Vuutly5b17t3bjk2y
HF1XSvmu/Wi1v3RN13YP0m1/68JcHbo2V1X1xr936NOnj3ydl5cXVm7YsGHy
bU5Ojnzdo0cPvx85f/78vn37zp07F8z2uDXXTyBXY0jvr25zfV29ejU6OlqN
V8+qQteVomvFjrOvWncdQndzuq6U8l370Wp/6ZquTdZhf0N0rg5dm6uq+iVL
lsjp6N+/v6f8c/iNq3HIkCHy7dq1a+XrhIQE78pHjhwZOHBg2C3t2rWTdWq3
PW7N9WN+NSqwv7rN9ZOcnJyenm7Jr6qb6LpSdK3YcfZTu65D6G5O15VSvms/
uu0vXXvougL2N9TnKt+1uaqqz83NleP80EMPeW69E2PMmDHGOzEWLVokDz3x
xBPGmteuXYuPjw8PDx8xYoQclnfeeefBBx+UFXbs2FGL7XFrrh+Tq1GN/dVt
rp+cnJxWrVoFsmZZWdnNqgW/JTah60rRtWLH2U/tupb/6dWrVy+6rsX26Ha9
sb8hdL+m61A/77pd527dN7lfz58/f2Bg8vLygh9nqKr6PXv2yBGu9FHj0+nH
jx9vfLt9+3bfi9NT/vmBa9asqd32uDXXj8nVqMb+6jbXz/Hjx+WXHzt2rNo1
fV/0qyiQ30DXLs71Q9eKHWc/dF3xIa439jfU95euKz5E1+xvqM91smtz//zz
z+HAXLx4MchZXlVVX1RUFB4eLvuVn5/v91D37t1l+axZs4xvjfdpWPU+Xrfm
+jG5GtXYX93m+pFnjxYtWpSVlVW75unTp01KDORlN7p2ca4fulbsOPupXdcz
ZsxISEig61rQ7Xpjf73q/v2armutjpx33a5zt+6bOtyv66CqqheDBw+ueNgL
CgpkYb169byvNpw7d65p06Zy6WZmZv7xxx+V/qrz58+vXr06NTV1yZIl1W6S
VXP37NkzadKkrl27dujQQUZXzMqEydVY7dy9e/empaVJs/Hx8Y8//vi6devM
Z1l4nA2lpaUvvfRSSkrK2bNnHZg7ZcqU5P8l053ZX3nOzMjI6NGjR/v27Z95
5pnc3FyTub7kevC+mKkkuq4UXdvXta9gjrPH8a5D6N+R0XWldOjaVzD7q8/9
mq790LUJ3bq2aq6HrmvLpPqvv/5azkhERMSnn35qLDl9+rQcXln41FNP+a75
008/tWnTxlhZLrYff/zR99HZs2cbLyuJQK4HS+bKCWrQoEGTJk3kYpDwZZ3I
yEjpsdrpBvNPITCZu3TpUlkol6ssHzZsWFRUlKw2c+ZMu/fXlzyBBPJ+DKvm
xsXFxcTEPOSjb9++Dsz99ddfW7ZsKU+MAwYMGDFihLHm+vXrTUYbSkpKYmNj
N23aVO2aoYuuK0XXgc+tade+an2cPW50HUJ3c7qulA5dW7K/Hp3u13Tt+yhd
07Udc+m61kyqLysrGz16tBxJaVbCSUpKkmMl37Zu3fr333/3W1mO5KpVq7p1
62Zcb6mpqbLEeGjnzp1Lliwx/mpeINVbMnfatGn9+vXzfjz+xo0b5dGnn37a
ZG5ycnKzW+QyNn6hd8mgQYMCmXv48OFnn322qKjIWO3o0aNyWd57771276+X
PHXIcpko/y0sLHRgrjy1+j07mbNqbmJiojyxf/HFF8a3xcXFcpkF8haUzZs3
33HHHdeuXQt8m0MOXXvRtTNdW3KcPW50HUJ3c7r20q1rq/rS535N13RtrEbX
9s2l61ozqd5TfkFOnTpVTqtxzOvXr//oo4+ePHnS5Ee2bdv28MMPh/n8QwnD
mTNnAqzeqrk3btzwPioXg1xRHTt2NPkNxr/vqIrvXxwIZH+95FG5tn03xqb9
9ZS/TyYqKqpLly7vvvtuWACvuQU/V36DPK1NnDjRfJDlc3fv3i1fp6Wl1Wiu
QbbW/PlfAXTtRdfOdG3JcXal6z179qxYsaIWP+g8uvbSrWtL9ler+zVd07UX
Xdsxl66DYV69Qc7soUOHduzYceXKlUB+p1yuckYSExN9F9aoegvnGkpKSqKj
o5OSkgKfHjiTuWvXrpWEX3755UB+T5D7e+HChfj4+KZNmx4/fvy9996rtnpL
5p4/f16+fv3117du3bphw4adO3cWFxcH8kuCnLtgwQL5Wp7lPOV/E+Hy5cuB
D23ZsuXq1asDXD9E0XXw6Lp2XdcUXQeOroMX6l3XFPfruo+ug0fX3K9DSyDV
m5PTPWXKlKtXr3qXGG8vGTVqlO9qtajekrmGxYsXy0PLli1zZm5eXp48w7Rt
21aSz8zMlDTsnisX8/Dhw2Xcd999J99aWL35XBnh96KZNPXll1/aPXfSpEnh
4eGys3379r3ttttkuTzjBfKPTXbt2hUZGWnJGanL6NqOuXRt91y6NkfXdsyl
a7vn0rU5urZjLl3bPZeugxF89ampqXLM4+LiJk+e/OGHH0rX8jvl8tu2bZvv
apZXH+BckZ+f37BhQ+PvszszV67P3r17t27dWtbs169fjT7msXZzZ8+eLY8u
XLjQWNnC6s3nFhcXT5s2bd26dZcuXTpx4sSCBQtiYmKio6Pla1vnDh06NKz8
Ezwk/9zc3JkzZ8qa9erV27Fjh/mvzcrKeuyxx4LctrqPru2YS9d07S66tmMu
XdO1u+jajrl0Tdd1WfDVl5WVffTRR+3bt5djbrzqIl/n5eX5rWZ59QHO3b9/
f7NmzSTA4K/DGs01bN++XUY3adLkr7/+sm+uTImIiGjUqNHbtwwYMEBWyMzM
nDt3rn1zK5WWlibrrFq1yta5L7zwgizx3YzNmzfLkldffdX813bo0GHx4sVB
blvdR9c2zTXQtU1z6docXds010DXNs2la3N0bdNcA13bNFfJrgsKCsaNG9ez
Z8/4+PjExMTs7GzvxwZaK/jqvS5durRv3z7vxwz6sbz6QObm5+fLDjZv3rzi
hxbaOtfXihUrZMdzcnLsm7t+/fq2/ys6OlqGtmrVqlu3bvbNrVRubq6MDv7Z
xnzurFmzZIrvW2tu3LgRGRk5fPhwk191+PBh+ak///zTqm2rKbq2ZC5d07Uv
uq4Fuq4UXdsxl67N0bUdc33RtR1zQ7RrEwsXLvS+zlC/fn3ji6ZNmx46dMjy
WRZWb86+6quyZcuW2NjYNm3a2JF8VeQ63L9/v++SrKwsv+vTAbZ+2oOvb775
xu/lxDFjxsho45+92Gfv3r3h4eHJycneJb/88ovMfeutt0x+as6cOV27drV1
w0zQtSXomq790LXl6NqxbfDQdRXo2nJ07dg2eOi6Cu52beLgwYNG6RkZGb/9
9tvVq1c3bNhgfDi8ha+feNld/eHDhxeUe/vtt2UXevbsaXz7/fff2zr3s88+
a9CggUx87bXXJIF3b/nhhx/sG1paWipPMjJ3woQJOTk5X331VXp6ujyBx8XF
Xbp0yb65FTlT/bVr1+T6adKkybRp0zZv3rxx48aUlBSZ279/f/O/7GCJUaNG
SfiTJk3aunWrnG458nfeeefx48dNfqRXr15yDdi9YZWia0vQNV1XRNdWoWu6
tgldm6BrC9E1XdfOwoULw8r/wvv169e9C3ft2mW88vbvv/9aO87u6tevXx9W
mXHjxtk695FHHql07vTp022de+bMmdGjRzdv3twYJ5fl0KFDCwsLbR1akfHh
Dw685iY3puHDhxtPsMZLxBMnTrTp3Vl+5Dl28uTJDRs2NEZ36tTJ/KMe/v77
b3kG9ntF1DF0bQm6pms/dG0huqZrm9C1Cbq2Fl3TdS0Yb6RPSUnxW96sWTNZ
bvmbXhx7x4tuTp06VVBQ4PBLbW65fPmy1HTgwIGSkhKHR8vNUebK0a52zeXL
l8fFxTmwSZWiazXQtTPoulJ0bRO6dgZdV4qubULXzgiVrs3JLkjdsbGxvi8O
FBYWysIHHnjA8nFUD02kpqZOmTLFrel0DdiBrgH10DWgHne7rtbgwYOl8UaN
Gs2dO/e///67ePGi8f6N999/3/JZVA84g64B9dA1oB66BnRTUlKSmJhovIv+
9ttvv+eee+SLN998045ZVA84g64B9dA1oB66BrRy8+bNrKysyMjI2NjYXr16
hYeHG/kPGTLEjr+PRvWAA+gaUA9dA+qha0A3L774ojTetWtX4wP6Tp48mZ2d
3bhxY1nYsmVL+dbtDQRQY3QNqIeuAfXQNaCV3bt3S9316tU7ceKE7/KjR4+2
adNGHho/frxb2wagdugaUA9dA+qha0A3ixYtkrT79OlT8SHjL8d17tzZ+a0C
EAy6BtRD14B66BrQzdKlSyXtHj16VHxowYIF8lBCQoLzWwUgGHQNqIeuAfXQ
NaCbQ4cOGR/vMGfOnLKyMu/ykydP3nfffbI8PT3dxc0DUAt0DaiHrgH10DWg
oRkzZhgfrtipUydpfOrUqSNHjoyKipIlbdu2LSoqcnsDAdQYXQPqoWtAPXQN
6KasrGzNmjUdOnQI89GgQYMJEybY8ZcOADiArgH10DWgHroGtHX27Nmff/55
+/btR48eLS0tdXtzAFiArgH10DWgHroGAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAqKS4uzsnJSUtLmz9/vtvbAsAadA2oh64B9dA1oI+VK1cOHDgw
NjbW+CODXbp0cXuLAASLrgH10DWgHroGdJOUlBTmg+oBBdA1oB66BtRD14Bu
Lly48E+57OxsqgfUQNeAeugaUA9dA9qaN28e1QOKoWtAPXQNqIeuAd1QPaAe
ugbUQ9eAeuga0A3VA+qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFr
QD10DaiHrgHdUD2gHroG1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbU
Q9eAeuga0A3VA+qha0A9dA2oh64B3VA9oB66BtRD14B66BrQQXJycrNbYmJi
wsp5lwwaNMjtDQRQY3QNqIeuAfXQNaCb7t27h1UtISHB7Q0EUGN0DaiHrgH1
0DUAAAAAAAAQ0u6++263NwFwQkZGxvz5893eCofQNTRB14B66BpQj1Zdm6N6
aOKDDz7o3Lmz21vhELqGJugaUA9dA+rRqmtzVA9NHDt2LCwsTP7r9oY4ga6h
CboG1EPXgHq06toc1UMfnTt3njdvnttb4QS6hj7oGlAPXQPq0adrc1QPfUyf
Pr1fv35ub4UT6Br6oGtAPXQNqEefrs1VW/3+/fvfeOMNOVYdO3Z8/vnnP/nk
E2c2zK25ori4OCcnJy0tzeEPB3BlrlbnNz8/PyIioqioyIFZ7qLriujaGc7v
L1170TVz7cD92lZ0XZFWfWk1V5+uzZlXv2nTppiYGL+/dTh27NjS0lJbt8qt
uStXrhw4cGBsbKwxsUuXLraOc32ubudX3H///R9//LHdU1xH177oWu3j7KHr
cnRt6zht53K/thtd+9KtL93merTp2pxJ9UeOHImIiJCT8uSTT+7bt+/UqVOL
Fy+uX7++LMnKyrJvk9yaK5KSknyfZxy7Gl2Zq+H5FZmZmTLX7imuo2tfdK32
cfbQNV2r3rVbc7lfO4CufWnVl4ZzPdp0bc6k+vT0dDkjffv29X2la+XKlbKw
cePGly9ftmmT3JorLly48E+57OxsJ69GV+ZqeH7F1q1bGzZsaPcU19G1L7pW
+zh76JquVe/arbncrx1A17606kvDuR5tujZXVfVXrlyJjo6WM/L555/7Lr9+
/XqLFi1k+fLly+3YHrfm+pk3b57DV6PDc7U9vzdu3Ljrrrv8pquHritF16oe
Z7qma4W7dmuu6+eXrula4b60natJ1+aqqv7gwYNyOqKioir+E49XXnlFHsrI
yLBje9ya60f5CnQ+v2PHjh05cmQtfrCwsHDLli2Wb48d6LpSdK3wca511yGE
riulfNduza0L55f7NV07MIu5oXK/DqGuzVVV/bfffiuno127dp7ylymmTp36
3HPPHThwQL6dM2eOPJSSkmLH9rg114/yFeh8fnNzcxs3bnz9+vWa/uCyZct6
9+5txyZZjq4rRdcKH+dadx1C6LpSynft1ty6cH65X9O1A7OYGyr36xDq2lxV
1Rv/vqNPnz7ydV5eXli5YcOGybc5OTnydY8ePfx+5Pz58/v27Tt37lww2+PW
XD+BXI0hPVfn83v16tXo6OhavHoWQtXTdaXoWuHjXOuuQwhdV0r5rt2aWxfO
L/drujZZh7khOleHrs1VVf2SJUvkdPTv399T/ncHjPqGDBki365du1a+TkhI
8K585MiRgQMHht3Srl07Wad22+PWXD/mV6MCczU/v8nJyenp6TX9qRCqnq4r
RddqH+fadR1C6LpSynft1tw6cn65X3vougLmhvpc5bs2V1X1ubm5cpwfeugh
z613nowZM8Z458miRYvkoSeeeMJY89q1a/Hx8eHh4SNGjJDD8s477zz44IOy
wo4dO2qxPW7N9WNyNaoxV/Pzm5OT06pVq0DWLCsru3mL3JJ69ep100fwW2IT
uq4UXat9nGvXdUXBb4lN6LpSynft1tw6cn65X3vo+n8xV4G5dafr+fPnDwxM
Xl5e8OMMVVW/Z88eOcKVPmp8Ov348eONb7dv3+4bo6f88xLXrFlTu+1xa64f
k6tRjbman9/jx4/LLz927Fi1a/q+6FdRIL+Brl2c64eu1T7OdF3xIbpmbqif
X7qu+BBdMzfU5zrZtbl//vnncGAuXrwY5CyvqqovKioKDw+X/crPz/d7qHv3
7rJ81qxZxrfG+1Kser+fW3P9mFyNaszV/PzKs0eLFi3KysqqXfP06dPe7mbM
mJGQkOBbYiAvu9G1i3P90LXax7l2XVdE1wHS/HpTfm4dOb/cr+naD3MVmOtk
13VQVdWLwYMHVzzsBQUFsrBevXreVxvOnTvXtGlTSTUzM/OPP/6o9FedP39+
9erVqampS5YsqXaTrJq7Z8+eSZMmde3atUOHDjK64tOICZOrsdq5e/fuTUtL
k+eo+Pj4xx9/fN26dc7M9SotLX3ppZdSUlLOnj1rsppVx3nKlCnJ/0umOzDX
U36PyMjI6NGjR/v27Z955pnc3FyTub7kevC+eBu4EPr3JnRdKbq2r2tfQe6v
w12HELqulA5dWzWX+3UdRNeVouvA5+pzvw6hrs2ZVP/111/LGYmIiPj000+N
JadPn5bDKwufeuop3zV/+umnNm3aGCvLxfbjjz/6Pjp79mzjZTQRyPVgyVw5
QQ0aNGjSpIlcDBK+rBMZGSk9VjvdYP4pBCZzly5dKgvlcpXlw4YNi4qKktVm
zpxp91xf8oQZyPsxrDq/cXFxMTExD/no27evA3N//fXXli1byo1gwIABI0aM
MNZcv369yWhDSUlJbGzspk2bql3TTwhVT9eVouvA59a0a6v21/muQwhdV0qH
rq2ay/26DqLrStF14HP1uV+HUNfmTKovKysbPXq0HElpVsJJSkqSYyXftm7d
+vfff/dbWY7kqlWrunXrZlxvqampssR4aOfOnUuWLDH+SmAg1Vsyd9q0af36
9fN+PP7GjRvl0aefftpkbnJycrNb5DI2fqF3yaBBgwKZe/jw4WeffbaoqMhY
7ejRo3JZ3nvvvXbP9ZKnSlkuE+W/hYWFdh9nIU+tfs/G5qyam5iYKE/sX3zx
hfFtcXGxXGaBvAVl8+bNd9xxx7Vr1wLfZkMIVU/XXnTtTNdW7a/zXYcQuvbS
rWur5nK/roPo2ouunek6dO/XIdS1OZPqPeUBTp06VU6rcczr16//6KOPnjx5
0uRHtm3b9vDDD4f5/MMQw5kzZwKs3qq5N27c8D4qF4NcUR07djT5Dca/Z6mK
719YCGR/veRRubZ9N8a+uQUFBVFRUV26dHn33XfDAnjNLfjjLL9BntYmTpxo
Psjyubt375av09LSajTXIFtr/vxflT179qxYsaIWP+g8uvaia2e6tmR/Xek6
hNC1l25dWzKX+3XdRNdedO1M16F7vw6hrs2ZV2+QM3vo0KEdO3ZcuXIlkN8p
ecoZSUxM9F1Yo+otnGsoKSmJjo5OSkoKfHrgTOauXbtWnrJefvllB+ZeuHAh
Pj6+adOmx48ff++996qt3iuY43z+/Hn5+vXXX9+6deuGDRt27txZXFwc4PYH
M3fBggXytTzLecr/JsLly5cDH9qyZcvVq1cHuH6Iouvg0XXtuq4pug4cXQcv
1LsOZi7367qJroNH19yvQ0sg1ZuT0z1lypSrV696lxhvLxk1apTvarWo3pK5
hsWLF8tDy5Ytc2ZuXl6ePMO0bdtWks/MzJQ07J4rF/Pw4cNl3HfffSffWli9
+VwZ4feimTT15Zdf2j130qRJ4eHhsrN9+/a97bbbZLk84wXyj0127doVGRlp
yRmpy+jajrl0bfdcujZH13bMpWu759K1Obq2Yy5d2z2XroMRfPWpqalyzOPi
4iZPnvzhhx9K1/I75fLbtm2b72qWVx/gXJGfn9+wYUPj77M7M1euz969e7du
3VrW7NevX40+5rF2c2fPni2PLly40FjZwurN5xYXF0+bNm3dunWXLl06ceLE
ggULYmJioqOj5Wtb5w4dOjSs/BM8JP/c3NyZM2fKmvXq1duxY4f5r83Kynrs
sceC3La6j67tmEvXdO0uurZjLl3Ttbvo2o65dE3XdVnw1ZeVlX300Uft27eX
Y2686iJf5+Xl+a1mefUBzt2/f3+zZs0kwOCvwxrNNWzfvl1GN2nS5K+//rJv
rkyJiIho1KjR27cMGDBAVsjMzJw7d659cyuVlpYm66xatcrWuS+88IIs8d2M
zZs3y5JXX33V/Nd26NBh8eLFQW5b3UfXNs010LVNc+naHF3bNNdA1zbNpWtz
dG3TXANd2zRXya4LCgrGjRvXs2fP+Pj4xMTE7Oxs78cGWiv46r0uXbq0b98+
78cM+rG8+kDm5ufnyw42b9684oc02jrX14oVK2THc3Jy7Ju7fv36tv8rOjpa
hrZq1apbt272za1Ubm6ujA7+2cZ87qxZs2SK71trbty4ERkZOXz4cJNfdfjw
YfmpP//806ptqym6tmQuXdO1L7quBbquFF3bMZeuzdG1HXN90bUdc0O0axML
Fy70vs5Qv35944umTZseOnTI8lkWVm/OvuqrsmXLltjY2DZt2tiRfFXkOty/
f7/vkqysLL/r0wG2ftqDr2+++cbv5cQxY8bIaOOfvdhn79694eHhycnJ3iW/
/PKLzH3rrbdMfmrOnDldu3a1dcNM0LUl6Jqu/dC15ejasW3w0HUV6NpydO3Y
Nnjougrudm3i4MGDRukZGRm//fbb1atXN2zYYHw4vIWvn3jZXf3hw4cXlHv7
7bdlF3r27Gl8+/3339s697PPPmvQoIFMfO211ySBd2/54Ycf7BtaWloqTzIy
d8KECTk5OV999VV6ero8gcfFxV26dMm+uRU5U/21a9fk+mnSpMm0adM2b968
cePGlJQUmdu/f3+Tv+xglVGjRkn4kyZN2rp1q5xuOfJ33nnn8ePHTX6kV69e
cg3YvWGVomtL0DVdV0TXVqFrurYJXZugawvRNV3XzsKFC8PK/6L99evXvQt3
7dplvPL277//WjvO7urXr18fVplx48bZOveRRx6pdO706dNtnXvmzJnRo0c3
b97cGCeX5dChQwsLC20dWpHx4Q8OvOYmN6bhw4cbT7DGS8QTJ0606d1ZfuQ5
dvLkyQ0bNjRGd+rUyfyjHv7++295BvZ7RdQxdG0JuqZrP3RtIbqma5vQtQm6
thZd03UtGG+kT0lJ8VverFkzWW75m14ce8eLbk6dOlVQUODwS21uuXz5stR0
4MCBkpISh0fLzVHmytGuds3ly5fHxcU5sEmVoms10LUz6LpSdG0TunYGXVeK
rm1C184Ila7NyS5I3bGxsb4vDhQWFsrCBx54wPJxVA9NpKamTpkyxa3pdA3Y
ga4B9dA1oB53u67W4MGDpfFGjRrNnTv3v//+u3jxovH+jffff9/yWVQPOIOu
AfXQNaAeugZ0U1JSkpiYaLyL/vbbb7/nnnvkizfffNOOWVQPOIOuAfXQNaAe
uga0cvPmzaysrMjIyNjY2F69eoWHhxv5DxkyxI6/j0b1gAPoGlAPXQPqoWtA
Ny+++KI03rVrV+MD+k6ePJmdnd24cWNZ2LJlS/nW7Q0EUGN0DaiHrgH10DWg
ld27d0vd9erVO3HihO/yo0ePtmnTRh4aP368W9sGoHboGlAPXQPqoWtAN4sW
LZK0+/TpU/Eh4y/Hde7c2fmtAhAMugbUQ9eAeuga0M3SpUsl7R49elR8aMGC
BfJQQkKC81sFIBh0DaiHrgH10DWgm0OHDhkf7zBnzpyysjLv8pMnT953332y
PD093cXNA1ALdA2oh64B9dA1oKEZM2YYH67YqVMnaXzq1KkjR46MioqSJW3b
ti0qKnJ7AwHUGF0D6qFrQD10DeimrKxszZo1HTp0CPPRoEGDCRMm2PGXDgA4
gK4B9dA1oB66BrR19uzZn3/+efv27UePHi0tLXV7cwBYgK4B9dA1oB66BgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKikuLs7JyUlLS5s/f77b2wLA
GnQNqIeuAfXQNaCPlStXDhw4MDY21vgjg126dHF7iwAEi64B9dA1oB66BnST
lJQU5oPqAQXQNaAeugbUQ9eAbi5cuPBPuezsbKoH1EDXgHroGlAPXQPamjdv
HtUDiqFrQD10DaiHrgHdUD2gHroG1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1Q
PaAeugbUQ9eAeuga0A3VA+qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD
6qFrQD10DaiHrgHdUD2gHroG1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1QPaAe
ugbUQ9eAeuga0EFycnKzW2JiYsLKeZcMGjTI7Q0EUGN0DaiHrgH10DWgm+7d
u4dVLSEhwe0NBFBjdA2oh64B9dA1AAAAAAAAENLuvvtutzcBcEJGRsb8+fPd
3gqH0DU0QdeAeugaUI9WXZujemjigw8+6Ny5s9tb4RC6hiboGlAPXQPq0apr
c1QPTRw7diwsLEz+6/aGOIGuoQm6BtRD14B6tOraHNVDH507d543b57bW+EE
uoY+6BpQD10D6tGna3NUD31Mnz69X79+bm+FE+ga+qBrQD10DahHn67NVVv9
/v3733jjDTlWHTt2fP755z/55BNnNkwUFxfn5OSkpaU5+Y/03dpf5jowND8/
PyIioqioyIFZ7qJrP1pd5y7O9bhxfunaS6vz7qEvp3C/thVd+6Frhefq07U5
8+o3bdoUExPj97cOx44dW1paautWrVy5cuDAgbGxscbELl262DrOy639Za4z
c8X999//8ccf2z3FdXTtS7frXLfz66Hrcrqdd/qydZwX92u70bUvurZ1nOtz
Pdp0bc6k+iNHjkRERMhJefLJJ/ft23fq1KnFixfXr19flmRlZdm6VUlJSb7X
vzNXhVv7y1zHriuRmZkpc+2e4jq69tLtOtft/BroWrfzTl9qH2cDXXO90bVi
cz3adG3OpPr09HQ5I3379vV95WflypWysHHjxpcvX7Zvqy5cuPBPuezsbMeu
Crf2l7nOzDVs3bq1YcOGdk9xHV176Xad63Z+DXSt23mnL7WPs4Guud48dK3W
XI82XZurqvorV65ER0fLGfn88899l1+/fr1FixayfPny5Q5s3rx585y5Ktza
X+Y6M9frxo0bd911l9909dC1QbfrXLfz60XXWp13+lL7OHvRNdebh66Vm6tJ
1+aqqv7gwYNyOqKioir+k4dXXnlFHsrIyLB/65y7KtzaX+Y6M9fX2LFjR44c
WYsfLCws3LJli+XbYwe6Nuh2net2fn3VuusQQtcG+lL7OPvifs315qFr5ebq
0LW5qqr/9ttv5XS0a9fOU/4yxdSpU5977rkDBw7It3PmzJGHUlJSHNg8x64K
t/aXuc5fV7m5uY0bN75+/XpNf3DZsmW9e/e2Y5MsR9cG3a5z3c6vr1p3HULo
2kBfah9nX9yvud48dK3cXB26NldV9ca/d+jTp498nZeXF1Zu2LBh8m1OTo58
3aNHD78fOX/+/L59+86dO2fh5gVyVVgy1639Za7z19XVq1ejo6Nr8epZCFVP
1wbdrnPdzq+vWncdQujaQF9qH2df3K+53jx0rdxcHbo2V1X1S5YskdPRv39/
T/nn8BtX45AhQ+TbtWvXytcJCQnelY8cOTJw4MCwW9q1ayfrWLJ55leFhXPd
2l/munJdJScnp6en1/SnQqh6ujbodp3rdn791K7rEELXBvpS+zj74X7t4Xqj
a+XmKt+1uaqqz83NleP80EMPeW69E2PMmDHGOzEWLVokDz3xxBPGmteuXYuP
jw8PDx8xYoQclnfeeefBBx+UFXbs2BH85plcFdbOdWt/mevKdZWTk9OqVatA
1iwrK7t5izxF9+rV66aP4LfEJnRt0O061+38+qld1xUFvyU2oWsDfal9nP1w
v/ZwvdG1cnPrTtfz588fGJi8vLzgxxmqqn7Pnj1yhCt91Ph0+vHjxxvfbt++
3ffi9JR/fuCaNWss2TyTq8LauW7tL3Odmevn+PHj8suPHTtW7Zq+L/pVFMhv
oOuK6FqxuX4cO79+6LriQ0qed/pS+zj7oeuKD3G9KTDXj1v3TR3u1+b++eef
w4G5ePFikLO8qqq+qKgoPDxc9is/P9/voe7du8vyWbNmGd8a79Ow6f1+JleF
tXPd2l/mOjPXjzx7tGjRoqysrNo1T58+7e1uxowZCQkJviUG8rIbXVdE14rN
9ePY+fVTu64rouvaoWuOsyVz/XC/5nqja/XmOtl1HVRV9WLw4MEVD3tBQYEs
rFevnvfVhnPnzjVt2lQu3czMzD/++KPSX3X+/PnVq1enpqYuWbKkRptnclVU
O3fPnj2TJk3q2rVrhw4dZHTFrPxYtb979+5NS0uTZuPj4x9//PF169Y5M9er
tLT0pZdeSklJOXv2rANzp0yZkvy/ZLoz+yvPmRkZGT169Gjfvv0zzzyTm5tr
MteXXA/eFzMDF0L/3oSuvei6dnNr2rWvYM6vx/GuQwhde+nWta9gjjP36zqI
rr3o2pmurZrroevaMqn+66+/ljMSERHx6aefGktOnz4th1cWPvXUU75r/vTT
T23atDFWlovtxx9/9H109uzZxstKIvDrwWD+aQAmc+UENWjQoEmTJnIxSPiy
TmRkpPRoMsuS/V26dKkslMtVlg8bNiwqKkpWmzlzpt1zfckTSCDvx7Bqblxc
XExMzEM++vbt68DcX3/9tWXLlvLEOGDAgBEjRhhrrl+/3mS0oaSkJDY2dtOm
TdWu6SeEqqdra/eXrqvt2letz6/Hja5DCF1bu78h1LWvYPrifl0H0bW1+0vX
Ct+vQ6hrcybVl5WVjR49Wo6kNCvhJCUlybGSb1u3bv3777/7rSxHctWqVd26
dTOut9TUVFliPLRz584lS5YYfzUvkOqTk5Ob3SKXk/ELvUsGDRoUyNxp06b1
69fP+/H4GzdulEeffvppk7mW7O/hw4efffbZoqIiY7WjR4/KZXnvvffaPddL
njpkuUyU/xYWFjowV55a/Z6dzFk1NzExUZ7Yv/jiC+Pb4uJiucwCeQvK5s2b
77jjjmvXrgW+zYYQqp6urd1fuq6WJefX40bXIYSurd3fEOraqr64X9dBdG3t
/tJ1tUL3fh1CXZszqd5TfkFOnTpVTqtxzOvXr//oo4+ePHnS5Ee2bdv28MMP
h/n8QwnDmTNnAqze+HcWVfH95H/zuTdu3PA+KheDXFEdO3Y0H23h/nrJo3Jt
+26MfXMLCgqioqK6dOny7rvvhgXwmlvwc+U3yNPaxIkTzQdZPnf37t3ydVpa
Wo3mGmRrzZ//q7Jnz54VK1bU4gedR9c27a8XXfux5Py60nUIoWub9terznZt
yXHmfl030bVN++tF13bMpetgmFdvkDN76NChHTt2XLlyJZDfKZernJHExETf
hYFXX2uVzjWUlJRER0cnJSUF8nss2V/D2rVrJeGXX37ZgbkXLlyIj49v2rTp
8ePH33vvvWqrt2Tu+fPn5evXX39969atGzZs2LlzZ3FxcSC/JMi5CxYskK/l
Wc5T/jcRLl++HPjQli1brl69OsD1QxRdV0TXgc8NpuuaouvA0XVFunVdU9yv
6z66roiuA5/L/ToUBVK9OTndU6ZMuXr1qneJ8faSUaNG+a5mefUBzjUsXrxY
Hlq2bJkzc/Py8uQZpm3btpJ8ZmampGH3XLmYhw8fLuO+++47+dbC6s3nygi/
F82kqS+//NLuuZMmTQoPD5ed7du372233SbL5RkvkH9ssmvXrsjISEvOSF1G
13bMpWu759K1Obq2Yy5d2z2Xrs3RtR1z6druuXQdjOCrT01NlWMeFxc3efLk
Dz/8ULqW3ymX37Zt23xXs7z6AOeK/Pz8hg0bGn+f3Zm5cn327t27devWsma/
fv2q/ZjH4OfOnj1bHl24cKGxsoXVm88tLi6eNm3aunXrLl26dOLEiQULFsTE
xERHR8vXts4dOnRoWPkneEj+ubm5M2fOlDXr1au3Y8cO81+blZX12GOPBblt
dR9d2zGXrunaXXRtx1y6pmt30bUdc+maruuy4KsvKyv76KOP2rdvL8fceNVF
vs7Ly/NbzfLqA5y7f//+Zs2aSYDBX4c1mmvYvn27jG7SpMlff/1l31yZEhER
0ahRo7dvGTBggKyQmZk5d+5c++ZWKi0tTdZZtWqVrXNfeOEFWeK7GZs3b5Yl
r776qvmv7dChw+LFi4PctrqPrm2aa6Brm+bStTm6tmmuga5tmkvX5ujaprkG
urZprpJdFxQUjBs3rmfPnvHx8YmJidnZ2d6PDbRW8NV7Xbp0ad++fd6PGfRj
3783MZmbn58vO9i8efOKH1po61xfK1askB3Pycmxb+769evb/q/o6GgZ2qpV
q27dutk3t1K5ubkyOvhnG/O5s2bNkim+b625ceNGZGTk8OHDTX7V4cOH5af+
/PNPq7atpujakrl0Tde+6LoW6LpSdG3HXLo2R9d2zPVF13bMDdGuTSxcuND7
OkP9+vWNL5o2bXro0CHLZ1lYvTkHPu3Bz5YtW2JjY9u0aWNH8lWR63D//v2+
S7KysvyuTwfY+mkPvr755hu/lxPHjBkjo41/9mKfvXv3hoeHJycne5f88ssv
Mvett94y+ak5c+Z07drV1g0zQdeWoGu69kPXlqNrx7bBQ9dVoGvL0bVj2+Ch
6yq427WJgwcPGqVnZGT89ttvV69e3bBhg/Hh8Ba+fuJld/WHDx9eUO7tt9+W
XejZs6fx7ffff2/r3M8++6xBgwYy8bXXXpME3r3lhx9+sG9oaWmpPMnI3AkT
JuTk5Hz11Vfp6enyBB4XF3fp0iX75lbkTPXXrl2T66dJkybTpk3bvHnzxo0b
U1JSZG7//v3N/7KDJUaNGiXhT5o0aevWrXK65cjfeeedx48fN/mRXr16yTVg
94ZViq4tQdd0XRFdW4Wu6domdG2Cri1E13RdOwsXLgwr/wvv169f9y7ctWuX
8crbv//+a+04u6tfv359WGXGjRtn69xHHnmk0rnTp0+3de6ZM2dGjx7dvHlz
Y5xclkOHDi0sLLR1aEXGhz848Jqb3JiGDx9uPMEaLxFPnDjRpndn+ZHn2MmT
Jzds2NAY3alTJ/OPevj777/lGdjvFVHH0LUl6Jqu/dC1heiarm1C1ybo2lp0
Tde1YLyRPiUlxW95s2bNZLnlb3px7B0vujl16lRBQYHDL7W55fLly1LTgQMH
SkpKHB4tN0eZK0e72jWXL18eFxfnwCZViq7VQNfOoOtK0bVN6NoZdF0purYJ
XTsjVLo2J7sgdcfGxvq+OFBYWCgLH3jgAcvHUT00kZqaOmXKFLem0zVgB7oG
1EPXgHrc7bpagwcPlsYbNWo0d+7c//777+LFi8b7N95//33LZ1E94Ay6BtRD
14B66BrQTUlJSWJiovEu+ttvv/2ee+6RL9588007ZlE94Ay6BtRD14B66BrQ
ys2bN7OysiIjI2NjY3v16hUeHm7kP2TIEDv+PhrVAw6ga0A9dA2oh64B3bz4
4ovSeNeuXY0P6Dt58mR2dnbjxo1lYcuWLeVbtzcQQI3RNaAeugbUQ9eAVnbv
3i1116tX78SJE77Ljx492qZNG3lo/Pjxbm0bgNqha0A9dA2oh64B3SxatEjS
7tOnT8WHjL8c17lzZ+e3CkAw6BpQD10D6qFrQDdLly6VtHv06FHxoQULFshD
CQkJzm8VgGDQNaAeugbUQ9eAbg4dOmR8vMOcOXPKysq8y0+ePHnffffJ8vT0
dBc3D0At0DWgHroG1EPXgIZmzJhhfLhip06dpPGpU6eOHDkyKipKlrRt27ao
qMjtDQRQY3QNqIeuAfXQNaCbsrKyNWvWdOjQIcxHgwYNJkyYYMdfOgDgALoG
1EPXgHroGtDW2bNnf/755+3btx89erS0tNTtzQFgAboG1EPXgHroGgAAAAAA
4P9j795jqq7/B46DiBkQeSk1068ZkpvaJHWmeGnTRCNTgxUrb1mmUhg0rY3C
Sxd102XeSp3mJmXOSy5amDVXNstbqYSXlorOUivJW14QNM7vNT7z7PwO8OHA
+VwO7/fz8UeDz/lwXp/b8xy/53s4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
lZSUlOTm5qanpy9YsMDtbQFgDboG1EPXgHroGtDHqlWrBg0aFBsba/yRwW7d
urm9RQCCRdeAeugaUA9dA7pJTk4O80H1gALoGlAPXQPqoWtANxcvXvy7Qk5O
DtUDaqBrQD10DaiHrgFtzZ8/n+oBxdA1oB66BtRD14BuqB5QD10D6qFrQD10
DeiG6gH10DWgHroG1EPXgG6oHlAPXQPqoWtAPXQN6IbqAfXQNaAeugbUQ9eA
bqgeUA9dA+qha0A9dA3ohuoB9dA1oB66BtRD14BuqB5QD10D6qFrQD10DeiG
6gH10DWgHroG1EPXgG6oHlAPXQPqoWtAPXQN6CAlJaXFLTExMWEVvEsGDx7s
9gYCqDW6BtRD14B66BrQTc+ePcOql5CQ4PYGAqg1ugbUQ9eAeugaAAAAAAAA
qNfuvvtutzcBcEJmZuaCBQvc3gqH0DU0QdeAeugaUI9WXZujemji/fff79q1
q9tb4RC6hiboGlAPXQPq0aprc1QPTRw/fjwsLEz+6/aGOIGuoQm6BtRD14B6
tOraHNVDH127dp0/f77bW+EEuoY+6BpQD10D6tGna3NUD33MmDGjf//+bm+F
E+ga+qBrQD10DahHn67N1Vj9gQMHXn/9dTlWnTt3fu655z7++GNnNkyUlJTk
5uamp6c7+Uv67K/CcwsKCiIiIoqLix2Y5S669sP+Ojba+f2lay+tzrtHv/11
ay7P17aiaz+67a9Wc/Xp2px59Zs3b46JifH7W4fjxo0rKyuzdatWrVo1aNCg
2NhYY2K3bt1sHefF/jqzv27NFffdd99HH31k9xTX0bUv9lft/fXQdQXdzrtu
+6vbcfbQdQXdrnPd9le3uR5tujZnUv3Ro0cjIiLkpDzxxBP79+8/ffr0kiVL
GjZsKEuys7Nt3ark5GTf7py5KthfZ/bXxeMssrKyZK7dU1xH117sr9r7a6Br
3c67bvvr1lyerx1A11667a+Gcz3adG3OpPqMjAw5I/369fN9xWnVqlWysGnT
pleuXLFvqy5evPh3hZycHMeuCvbX48j+unicxbZt2xo3bmz3FNfRtRf761F6
fw10rdt5121/3ZrL87UD6NpLt/3VcK5Hm67NVVf91atXo6Oj5Yx89tlnvstv
3LjRqlUrWb5ixQoHNm/+/PnOXBXsr8Hu/XX9ON+8efOuu+7ym64eujawvwZV
99eLrrU677rtr1tzXT/OdK3Vda7b/mo7V5OuzVVX/aFDh+R0REVFVf5Vi5df
flluyszMtH/rnLsq2F8vW/c3FI7zuHHjRo0aZfcUd9G1gf31UnJ/fdW566Ki
oq1bt1q+PXaga4Nu++vW3FA4znStz3Wu2/7qPFeHf4ebq676b775Rk5Hhw4d
PBUvU0ybNu3ZZ589ePCgfDt37ly5KTU11YHNc+yqYH+d2d9QOM55eXlNmza9
ceOG3YNcRNcG9lft/fVV566XL1/ep08fOzbJcnRt0G1/3ZobCseZrvW5znXb
X53n6vDvcHPVVW/8nkXfvn3l6/z8/LAKw4cPl29zc3Pl6169evn9yIULF/bv
33/+/HkLNy+Qq8KSueyvM/sbCsf52rVr0dHR9eVV8bqhawP7q/b++qpz1wr8
K123867b/ro1NxSOM13rc53rtr86z9Xh3+Hmqqt+6dKlcjoGDBjgqfj8f6OC
oUOHyrfr1q2TrxMSErwrHz16dNCgQWG3dOjQQdaxZPPMrwoL57K/zuxviBzn
lJSUjIwMS+4qNNG1gf1Ve3/91K1rBf6Vrtt5121/3ZobIseZrj16XOe67a/m
c5X/d7i56qrPy8uT4/zggw96br0DZOzYscY7QBYvXiw3Pf7448aa169fj4+P
Dw8PHzlypDzcvf322w888ICssHPnzuA3z+SqsHYu++vM/obIcc7NzW3Tpk0g
a5aXl/9XveC3xCZ0bWB/1d5fP3XrWv7Jl5iYSNfBbx7XuZcac0PkONO1R4/r
XLf91Xxu6Pw7fMGCBYMCk5+fH/w4Q3XV7927V45wlbcan04/YcIE49sdO3b4
RuGp+NzCtWvXWrJ5JleFtXPZXy9b9zdEjvOJEyfkzo8fP17jmr4v+lUWyD3Q
dWXKX+d+2F8vug4GXRt021+35obIcabryjcpeZ3rtr+az3Wya3N///33kcBc
unQpyFle1VVfXFwcHh4u+1VQUOB3U8+ePWX57NmzjW+N94fY9P4Bk6vC2rns
r5et+xsix1kePVq1alVeXl7jmmfOnDEpMZCX3ei6MuWvcz/sr1cIdj1z5syE
hAS6Dh7XuZcac0PkONO1Jte5bvur+Vwn/x0egqqrXgwZMqTyYS8sLJSFDRo0
8L7acP78+ebNm0syWVlZv//+e5V3deHChTVr1qSlpS1durRWm2dyVdQ4d+/e
vZMnT+7evXunTp1kdOWc/Vi1v/v27UtPT5fHivj4+Mcee2z9+vWB7m1w++tV
Vlb24osvpqamnjt3zmQ1q/Z36tSpKf+fTHdgrqfisTozM7NXr14dO3Z8+umn
8/LyTOb6kuvB+yKqkujai649jnTtK8j9dbhrBX4/1EPXFRTu2qq5+jxf07Uf
ug6QDl1bNdfDv8PryqT6r776Ss5IRETEJ598Yiw5c+aMHF5Z+OSTT/qu+eOP
P7Zr185YWS62H374wffWOXPmGC9nicCvB4P5pwGYzJUH3kaNGjVr1kwuBglf
1omMjJQeTWZZsr/Lli2ThXK5yvLhw4dHRUXJarNmzbJ7f33JA1cg78ew6vzG
xcXFxMQ86KNfv34OzP3ll19at24tD8gDBw4cOXKkseaGDRtMRhtKS0tjY2M3
b95c45r1F11bu790XWPXVu2v812r8a90ula7a6vm6vN8Tde+t9I1Xdsxl3+H
15lJ9eXl5WPGjJEjKc1KOMnJyXKs5Nu2bdv+9ttvfivLkVy9enWPHj2M6y0t
LU2WGDft2rVr6dKlxl/rC6T6lJSUFrfI5WTcoXfJ4MGDA5k7ffr0/v37ez8e
f9OmTXLrU089ZTLXkv09cuTIM888U1xcbKx27NgxuSzvvfdeu/fXSx6yZLlM
lP8WFRXZvb9CHlr9HhXNWTU3KSlJHtg///xz49uSkhK5zAJ5C8qWLVvuuOOO
69evB77N9Q5dW7u/dF0jq/bX+a7V+Fc6XavdtVVz9Xm+pmu6Nlaja/vm8u/w
OjOp3lMRwrRp0+S0Gse8YcOGjzzyyKlTp0x+ZPv27Q899FCYzy9oGM6ePRtg
9cbvd1TH9y8OmM+9efOm91a5GOSK6ty5s/loC/fXS26Va9t3Y2zaX0/F+3Oi
oqK6dev2zjvvhAXwmlvw+yv3IA9rkyZNMh9k+dw9e/bI1+np6bWaa5CtNX/8
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
ClfmunWcdZtryMrKkrl2T3EdXbs+V8O+3Dq/HrrW8rxr1bVHv/310LV+15tb
cznOPF87zKT6jIwMOSP9+vXzfeVn1apVsrBp06ZXrlyxb6suXrz4d4WcnBwn
rwpX5rp1nHWba9i2bVvjxo3tnuI6unZ9roZ9uXV+PXSt5XnXqmuPfvvroWv9
rje35nKceb52WHXVX716NTo6Ws7IZ5995rv8xo0brVq1kuUrVqxwYPPmz5/v
8FXh8Fy3jrNuc71u3rx51113+U1XD127O1fbvgzOn1+61vO8OzxXt+Ps+v7S
tVbXm1tzOc48XzuvuuoPHTokpyMqKqryrzy8/PLLclNmZqb9W6f+1ejWcdZt
rq9x48aNGjWqDj9YVFS0detWy7fHDnTt7lyd+/K4dH7pWs/z7uRc3Y5zKOwv
Xetzvbk1l+Ncj56vlVFd9d98842cjg4dOngqXqaYNm3as88+e/DgQfl27ty5
clNqaqoDm6f81ejWcdZtrq+8vLymTZveuHGjtj+4fPnyPn362LFJlqNrd+fq
3JfHpfNL13qedyfn6nacQ2F/6Vqf682tuRznevR8rYzqqjd+36Fv377ydX5+
fliF4cOHy7e5ubnyda9evfx+5MKFC/v37z9//ryFmxfIVVGv57p1nHWb6+va
tWvR0dF1eFVcgWfzUDj+HrpWui+PS+eXrvU8707O1e04h8L+0rU+15tbcznO
9ej5WhnVVb906VI5HQMGDPBUfA6/cTUOHTpUvl23bp18nZCQ4F356NGjgwYN
CrulQ4cOso4lm2d+VSgw163jrNtcPykpKRkZGbX9KQWezUPk+NO12n25dX7p
2qPleVe+az+67S9de/S43tyay3GuR8/Xyqiu+ry8PDnODz74oOfWOzHGjh1r
vBNj8eLFctPjjz9urHn9+vX4+Pjw8PCRI0fKw93bb7/9wAMPyAo7d+4MfvNM
rgo15rp1nHWb6yc3N7dNmzaBrFleXv7fLfIQnZiY+J+P4LfEJnTt7lzN+3Lr
/NK1R8vzrnzXfnTbX7r26HG9uTWX41yPnq8rC35LFixYMCgw+fn5wY8zVFf9
3r175QhXeavx6fQTJkwwvt2xY4fvxemp+PzAtWvXWrJ5JleFGnPdOs66zfVz
4sQJufPjx4/XuKbvi36VBXIPdF0ZXavdl1vnl64r36TDeVe+az+67S9dV75J
yevNrbkcZ+Wfr839/fffRwJz6dKlIGd5VVd9cXFxeHi47FdBQYHfTT179pTl
s2fPNr413qdh0/sHTK4KNea6dZx1m+tHHj1atWpVXl5e45pnzpzxdjdz5syE
hATfEgN52Y2uK6Nrtfty6/zStZ7nXfmu/ei2v3StyfXm1lyOcz16vq4slN/W
YqK66sWQIUMqH/bCwkJZ2KBBA++rDefPn2/evLlcullZWb///nuVd3XhwoU1
a9akpaUtXbq0VptnclXUOHfv3r2TJ0/u3r17p06dZHTlrGyau2/fvvT0dGk2
Pj7+scceW79+vfksC4+zoays7MUXX0xNTT137pwDc6dOnZry/8l0Z/ZXHjMz
MzN79erVsWPHp59+Oi8vz2SuL7kevC9mBk6B3yPz0DVdBza3tl37CuY4e+i6
enRt+dz60rWvYPaX5+sQRNeWz6VrVZ+vlWFS/VdffSVnJCIi4pNPPjGWnDlz
Rg6vLHzyySd91/zxxx/btWtnrCwX2w8//OB765w5c4yXlUTg14PB/NMATObK
A2+jRo2aNWsmF4OEL+tERkZKj3bPXbZsmSyUy1WWDx8+PCoqSlabNWuWySyr
jrOXPIAE8n4Mq+bGxcXFxMQ86KNfv34OzP3ll19at24tD4wDBw4cOXKkseaG
DRtMRhtKS0tjY2M3b95c45p+1Hg2p2u6DmRubbv2Vefj7KFrU3Rt7dx61LUl
++vh+Tok0bW1c+la4edrZZhUX15ePmbMGDmS0qyEk5ycLMdKvm3btu1vv/3m
t7IcydWrV/fo0cO43tLS0mSJcdOuXbuWLl1q/NW8QKpPSUlpcYtcTsYdepcM
Hjw4kLnTp0/v37+/9+PxN23aJLc+9dRTds89cuTIM888U1xcbKx27NgxuSzv
vfdek7lWHWeDPHTIcpko/y0qKnJgrjy0+j06mbNqblJSkjywf/7558a3JSUl
cpkF8haULVu23HHHHdevXw98mw1qPJvTNV0HMre2XVtynD10bYqurZ1bj7q2
qi+er0MQXVs7l65rVH+fr5VhUr2n4oKcNm2anFbjmDds2PCRRx45deqUyY9s
3779oYceCvP5RQnD2bNnA6ze+D2L6vh+8r/53Js3b3pvlYtBrqjOnTs7MNeP
3CrXtu/GVGbVcS4sLIyKiurWrds777wTFsBrbsHPlXuQh7VJkyaZD7J87p49
e+Tr9PT0Ws01yNaaP/5XZ+/evStXrqzDDzqPri2f64eu/VhynOnaHF1bPtdP
yHZtyf7yfB2a6NryuX7o2o65rnStDPPqDXJmDx8+vHPnzqtXrwZyn3K5yhlJ
SkryXRh49XVW5VxDaWlpdHR0cnKyw3PXrVsnCb/00kuB3E+Qx/nixYvx8fHN
mzc/ceLEu+++W2P1lsy9cOGCfP3aa69t27Zt48aNu3btKikpCeROgpy7cOFC
+Voe5TwVfxPhypUrgQ9t3br1mjVrAly/nqJrW+fStYXoOnB0bevcetF1bfF8
Hfro2ta5dG3TXLoORiDVm5PTPXXq1GvXrnmXGG8vGT16tO9qllcf4FzDkiVL
5Kbly5c7Mzc/P18eYdq3by/JZ2VlSRp2z5WLecSIETLu22+/lW8trN58rozw
e9FMmvriiy/snjt58uTw8HDZ2X79+t12222yXB7xAvllk927d0dGRlpyRkIZ
Xdsxl67tnkvX5ujajrl0bfdcujZH13bMpWu759J1MIKvPi0tTY55XFzclClT
PvjgA+la7lMuv+3bt/uuZnn1Ac4VBQUFjRs3TkxMtORz6QOZK9dnnz592rZt
K2v279+/Vh/zWLe5c+bMkVsXLVpkrGxh9eZzS0pKpk+fvn79+suXL588eXLh
woUxMTHR0dHyta1zhw0bFlbxCR6Sf15e3qxZs2TNBg0a7Ny50/xus7OzH330
0SC3LfTRtR1z6Zqu3UXXdsyla7p2F13bMZeu6TqUBV99eXn5hx9+2LFjRznm
xqsu8nV+fr7fapZXH+DcAwcOtGjRQgIM/jqs1VzDjh07ZHSzZs3+/PNP++bK
lIiIiCZNmrx1y8CBA2WFrKysefPm2Te3Sunp6bLO6tWrbZ37/PPPyxLfzdiy
ZYsseeWVV8zvtlOnTkuWLAly20IfXds010DXNs2la3N0bdNcA13bNJeuzdG1
TXMNdG3TXCW7LiwsHD9+fO/evePj45OSknJycrwfG2it4Kv3unz58v79+70f
M+jHvt83MZlbUFAgO9iyZcvKH1po61xfK1eulB3Pzc21b+6GDRva/3/R0dEy
tE2bNj169LBvbpXy8vJkdPCPNuZzZ8+eLVN831pz8+bNyMjIESNGmNzVkSNH
5Kf++OMPq7attujakrl0Tde+6LoO6LpKdG3HXLo2R9d2zPVF13bMraddm1i0
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
60pkZWXJXLunuI6utZ2r4fn10LWW5525Dgzl+doBdM1cfeZ6tOnanEn1GRkZ
ckb69evn+wrbqlWrZGHTpk2vXLli31ZdvHjx7wo5OTlOXhVazXXr/Lp4XYlt
27Y1btzY7imuo2tt52p4fj10reV5Z64DQ3m+dgBdM1efuR5tujZXXfVXr16N
jo6WM/LZZ5/5Lr9x40arVq1k+YoVKxzYvPnz5zt8VWgy163z6/p1dfPmzbvu
ustvunroWs+52p5futbzvDPXVq5fV3RN18xVb64mXZurrvpDhw7J6YiKiqr8
qyUvv/yy3JSZmWn/1ml0NTo8163zGwrX1bhx40aNGmX3FHfRtZ5zdT6/dK3n
eWeufULhuqpz10VFRVu3brV8e+xA18zVba4OXZurrvpvvvlGTkeHDh08FS9T
TJs27dlnnz148KB8O3fuXLkpNTXVgc3T6mp0cq5b5zcUrqu8vLymTZveuHHD
7kEuoms95+p8fulaz/POXPuEwnVV566XL1/ep08fOzbJcnTNXN3m6tC1ueqq
N36vpG/fvvJ1fn5+WIXhw4fLt7m5ufJ1r169/H7kwoUL+/fvP3/+vIWbF8hV
wdw6cOv8hsJ1de3atejoaDVePasOXes5V+fzS9d6nnfm2jc3FK6rOnddj/6V
TtfM1W2uDl2bq676pUuXyukYMGCAp+LvHRjVDx06VL5dt26dfJ2QkOBd+ejR
o4MGDQq7pUOHDrKOJZtnflUwt85z3Tq/IXJdpaSkZGRkWHJXoYmu9Zyr+fml
a4+W5525Ns0Nkeuqbl3Xo3+l0zVzNZyrfNfmqqs+Ly9PjvODDz7oufWOl7Fj
xxrveFm8eLHc9PjjjxtrXr9+PT4+Pjw8fOTIkXJY3n777QceeEBW2LlzZ/Cb
Z3JVMDeYuW6d3xC5rnJzc9u0aRPImuXl5f9VL/gtsQld6zlX8/NL1x4tzztz
bZobItdV3bqW/+mamJhI18FvnvLXOXPr0fO1HV0vWLBgUGDy8/ODH2eorvq9
e/fKEa7yVuPT6SdMmGB8u2PHDt8HAU/F5zSuXbvWks0zuSqYG8xct85viFxX
J06ckDs/fvx4jWv6vuhXWSD3QNeVKd+XW3M1P790XfkmHc47c22aGyLXFV1X
vomumVvf5zrZtbm///77SGAuXboU5Cyv6qovLi4ODw+X/SooKPC7qWfPnrJ8
9uzZxrfG+2Fser+fyVXB3GC4dX5D5LqSR49WrVqVl5fXuOaZM2dMSgzkZTe6
rkz5vtyaq/n5pWs9zztzbZobItdV3bqeOXNmQkICXQdP+eucufXo+bpuXYeg
6qoXQ4YMqXzYCwsLZWGDBg28rzacP3++efPm8hCRlZX1+++/V3lXFy5cWLNm
TVpa2tKlS2u1eSZXRY1z9+7dO3ny5O7du3fq1ElGV374smnuvn370tPT5bEx
Pj7+scceW79+vTNzvcrKyl588cXU1NRz586ZrGbV+Z06dWrK/yfTHZjrqXhu
yszM7NWrV8eOHZ9++um8vDyTub7kevC+aKwkurZ8Ll2bd+0ryP2l6+rQteVz
60vXVs3V5/m6Hv1+KF1bPpeuVX2+rkddmzOp/quvvpIzEhER8cknnxhLzpw5
I4dXFj755JO+a/7444/t2rUzVpaL7YcffvC9dc6cOcbLdyLw68Fg/mkAJnPl
BDVq1KhZs2ZyMUj4sk5kZKT0aPfcZcuWyUK5XGX58OHDo6KiZLVZs2bZPdeX
PFAH8n4Mq85vXFxcTEzMgz769evnwNxffvmldevW8gQ0cODAkSNHGmtu2LDB
ZLShtLQ0NjZ28+bNNa5Zf9G1tXPpusaurdpfujZB19bOrUddWzVXn+frevSv
dLq2di5dK/x8XY+6NmdSfXl5+ZgxY+RISrMSTnJyshwr+bZt27a//fab38py
JFevXt2jRw/jektLS5Mlxk27du1aunSp8dcJA6k+JSWlxS1yORl36F0yePDg
QOZOnz69f//+3o/H37Rpk9z61FNP2T33yJEjzzzzTHFxsbHasWPH5LK89957
7Z7rJQ/Rslwmyn+LiopM5lp1fuWh1e9ZwJxVc5OSkuSB/fPPPze+LSkpkcss
kLegbNmy5Y477rh+/Xrg21zv0LW1c+m6RlbtL12boGtr59ajrq2aq8/zdT36
VzpdWzuXrmtUf5+v61HX5kyq91SEP23aNDmtxjFv2LDhI488curUKZMf2b59
+0MPPRTm8wsphrNnzwZYvfH7LNXx/QsL5nNv3rzpvVUuBrmiOnfu7MBcP3Kr
XNu+G2Pf3MLCwqioqG7dur3zzjthAbzmFvz5lXuQh7VJkyaZD7J87p49e+Tr
9PT0Ws01yNaaP/4rgK4tn+uHru3YX7o2R9eWz/UTsl1bMler5+u9e/euXLmy
Dj/oPLq2fK4furZjLl0Hw7x6g5zZw4cP79y58+rVq4HcpzwsyBlJSkryXRh4
9XVW5VxDaWlpdHR0cnKyw3PXrVsnD5UvvfSSA3MvXrwYHx/fvHnzEydOvPvu
uzVW7xXM+b1w4YJ8/dprr23btm3jxo27du0qKSkJcPuDmbtw4UL5Wh7lPBV/
E+HKlSuBD23duvWaNWsCXL+eomtb59K1heg6cHRt69x60XUwc3m+Dk10betc
urZpLl0HI5Dqzcnpnjp16rVr17xLjLeXjB492nc1y6sPcK5hyZIlctPy5cud
mZufny+PMO3bt5fks7KyJA2758rFPGLECBn37bffyrcWVm8+V0b4vWgmTX3x
xRd2z508eXJ4eLjsbL9+/W677TZZLo94gfyyye7duyMjIy05I6GMru2YS9d2
z6Vrc3Rtx1y6tnsuXZujazvm0rXdc+k6GMFXn5aWJsc8Li5uypQpH3zwgXQt
9ymX3/bt231Xs7z6AOeKgoKCxo0bG3+f3Zm5cn326dOnbdu2smb//v1r9TGP
dZs7Z84cuXXRokXGyhZWbz63pKRk+vTp69evv3z58smTJxcuXBgTExMdHS1f
2zp32LBhYRWf4CH55+XlzZo1S9Zs0KDBzp07ze82Ozv70UcfDXLbQh9d2zGX
runaXXRtx1y6pmt30bUdc+markNZ8NWXl5d/+OGHHTt2lGNuvOoiX+fn5/ut
Znn1Ac49cOBAixYtJMDgr8NazTXs2LFDRjdr1uzPP/+0b65MiYiIaNKkyVu3
DBw4UFbIysqaN2+efXOrlJ6eLuusXr3a1rnPP/+8LPHdjC1btsiSV155xfxu
O3XqtGTJkiC3LfTRtU1zDXRt01y6NkfXNs010LVNc+naHF3bNNdA1zbNVbLr
wsLC8ePH9+7dOz4+PikpKScnx/uxgdYKvnqvy5cv79+/3/sxg37s+30Tk7kF
BQWygy1btqz84ZC2zvW1cuVK2fHc3Fz75m7YsKH9/xcdHS1D27Rp06NHD/vm
VikvL09GB/9oYz539uzZMsX3rTU3b96MjIwcMWKEyV0dOXJEfuqPP/6wattq
i64tmUvXdO2LruuArqtE13bMpWtzdG3HXF90bcfcetq1iUWLFnlfZ2jYsKHx
RfPmzQ8fPmz5LAurN+fApz342bp1a2xsbLt27exIvjpyHR44cMB3SXZ2tt/1
6QBbP+3B19dff+33cuLYsWNltPFrL/bZt29feHh4SkqKd8nPP/8sc998802T
n5o7d2737t1t3TATdG0JuqZrP3RtObp2bBs8dF0NurYcXTu2DR66roa7XZs4
dOiQUXpmZuavv/567dq1jRs3Gh8Ob+HrJ152V3/kyJGFFd566y3Zhd69exvf
fvfdd7bO/fTTTxs1aiQTX331VUngnVu+//57+4aWlZXJg4zMnThxYm5u7pdf
fpmRkSEP4HFxcZcvX7ZvbmXOVH/9+nW5fpo1azZ9+vQtW7Zs2rQpNTVV5g4Y
MMDkLztYZfTo0RL+5MmTt23bJqdbjvydd9554sQJkx9JTEyUa8DuDasSXVuC
rum6Mrq2Cl3TtU3o2gRdW4iu6bpuFi1aJMetbdu2N27c8C7cvXu38crbP//8
Y+04u6vfsGFDWFXGjx9v69yHH364yrkzZsywde7Zs2fHjBnTsmVLY5xclsOG
DSsqKrJ1aGXGhz848JqbPDGNGDHCeIA1XiKeNGmSTe/O8iOPsVOmTGncuLEx
ukuXLuYf9fDXX3/JI7DfK6KOoWtL0DVd+6FrC9E1XduErk3QtbXomq7rwHgj
fWpqqt/yFi1ayHLL3/Ti2DtedHP69OnCwkKHX2pzy5UrV6SmgwcPlpaWOjxa
nhxlrhztGtdcsWJFXFycA5tUJbpWA107g66rRNc2oWtn0HWV6NomdO2M+tK1
OdkFqTs2Ntb3xYGioiJZeP/991s+juqhibS0tKlTp7o1na4BO9A1oB66BtTj
btc1GjJkiDTepEmTefPm/fvvv5cuXTLev/Hee+9ZPovqAWfQNaAeugbUQ9eA
bkpLS5OSkox30d9+++333HOPfPHGG2/YMYvqAWfQNaAeugbUQ9eAVv7777/s
7OzIyMjY2NjExMTw8HAj/6FDh9rx99GoHnAAXQPqoWtAPXQN6OaFF16Qxrt3
7258QN+pU6dycnKaNm0qC1u3bi3fur2BAGqNrgH10DWgHroGtLJnzx6pu0GD
BidPnvRdfuzYsXbt2slNEyZMcGvbANQNXQPqoWtAPXQN6Gbx4sWSdt++fSvf
ZPzluK5duzq/VQCCQdeAeugaUA9dA7pZtmyZpN2rV6/KNy1cuFBuSkhIcH6r
AASDrgH10DWgHroGdHP48GHj4x3mzp1bXl7uXX7q1Kn//e9/sjwjI8PFzQNQ
B3QNqIeuAfXQNaChmTNnGh+u2KVLF2l82rRpo0aNioqKkiXt27cvLi52ewMB
1BpdA+qha0A9dA3opry8fO3atZ06dQrz0ahRo4kTJ9rxlw4AOICuAfXQNaAe
uga0de7cuZ9++mnHjh3Hjh0rKytze3MAWICuAfXQNaAeugYAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAACopKSnJzc1NT09fsGCB29sCwBp0DaiHrgH1
0DWgj1WrVg0aNCg2Ntb4I4PdunVze4sABIuuAfXQNaAeugZ0k5ycHOaD6gEF
0DWgHroG1EPXgG4uXrz4d4WcnByqB9RA14B66BpQD10D2po/fz7VA4qha0A9
dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHdUD2gHroG1EPX
gHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbUQ9eAeuga0A3VA+qha0A9dA2o
h64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHdUD2gHroG1EPXgHro
GtBBSkpKi1tiYmLCKniXDB482O0NBFBrdA2oh64B9dA1oJuePXuGVS8hIcHt
DQRQa3QNqIeuAfXQNQAAAAAAAFCv3X333W5vAuCEzMzMBQsWuL0VDqFraIKu
AfXQNaAerbo2R/XQxPvvv9+1a1e3t8IhdA1N0DWgHroG1KNV1+aoHpo4fvx4
WFiY/NftDXECXUMTdA2oh64B9WjVtTmqhz66du06f/58t7fCCXQNfdA1oB66
BtSjT9fmqB76mDFjRv/+/d3eCifQNfRB14B66BpQjz5dmwuk+pKSktzc3PT0
dCd/Wf7AgQOvv/66nKPOnTs/99xzH3/8MXOZG6SCgoKIiIji4mIHZrmLrpnr
ylyPG9cVXfuia4XnenQ6v3TtS5/zruFcj0vn15W5+nRtzrz6VatWDRo0KDY2
1vgrh926dXNmqzZv3hwTE+P3NxbHjRtXVlbGXOYG47777vvoo4/snuI6umau
83Pduq48dF2BrtWeq9v59dB1Bd3Ou25z3Tq/PF+7y7z65ORk3+vQmbNz9OjR
iIgIGffEE0/s37//9OnTS5YsadiwoSzJzs5mLnODkZWVJXPtnuI6umau8325
cl0Z6NpD10rP9Wh2fg107dHsvOs21+Pe8ybP1+4yr/7ixYt/V8jJyXHs7GRk
ZMisfv36+b7itGrVKlnYtGnTK1euMJe5dbZt27bGjRvbPcV1dM1c5/ty5boy
0LWHrpWe69Hs/Bro2qPZeddtrse9502er90V4Kc9zJ8/35mzc/Xq1ejoaJn1
2Wef+S6/ceNGq1atZPmKFSuYy9w6u3nz5l133eU3XT10zVwn5/px7Lryomtf
dK3YXD/Kn18vuval/HnXba4f55833ZqrSdfmQq36Q4cOyaCoqKjKv2rx8ssv
y02ZmZnMZW4wxo0bN2rUqDr8YFFR0datWy3fHjvQNXOdnOvHlX9F0LUXXSs2
14/y59dXnbuuR+haz7l+9Plf3x49ujYXatV/8803MqhDhw6eipdHpk2b9uyz
zx48eFC+nTt3rtyUmprKXOYGIy8vr2nTpjdu3KjtDy5fvrxPnz52bJLl6Jq5
bvXlcenZnK696FqxuX6UP7++6tx1PULXes71o9X/+taha3MWVn/hwoX9+/ef
P38+mO0xfs+ib9++8nV+fn5YheHDh8u3ubm58nWvXr2Yy9xgXLt2LTo6ug7/
b5ee/0qv1+educ735XHwuvJF1150rdhcP8qfX1917roeoWs95/px5XnTrbk6
dG3OkuqPHj06aNCgsFs6dOiwbt26um3P0qVL5R4GDBjgqfj8f+MOhw4dKt/K
fcrXCQkJzGVukFJSUjIyMmr7U7r9K12B885cV/py7LryQ9cGulZsrh/lz6+f
unVdj9C1nnP9uPW8Wb+er5URfPXXr1+Pj48PDw8fOXKk/DPm7bfffuCBB2Tl
nTt31mF78vLy5GcffPBBz613gIwdO9Z4B8jixYvlpscff5y5zA1Sbm5umzZt
AlmzvLz8v1vkIToxMfE/H8FviU3omrku9uXYdeWHrg10rdhcP8qfXz9167qy
4LfEJnSt51w/bj1v1q/nazu6XrBgwaDA5OfnBz/OEHz1O3bs8L04PRWfH7h2
7dq6bc/evXvl3qrcKuNT8SdMmMBc5gbpxIkTcufHjx+vcU3fF/0qC+Qe6Nqj
3/Wm21w/jl1XfujaQNeKzfWj/Pn1Q9cG5c+7bnP9uPW8qcPztbm///77SGAu
XboU5Cyv4Ks33qdh1fsHiouLw8PD5Q4LCgr8burZs6csnz17NnOZGyR59GjV
qlV5eXmNa545c8bb3cyZMxMSEnxLDORlN7r26He96TbXj2PXlR+6NtC1YnP9
KH9+/dSt68roOkC69RUi17lbz5v16/m6bl2HoOCrP3/+fPPmzeXSzcrK+v33
36v88QsXLqxZsyYtLW3p0qU1zhoyZEjl011YWCgLGzRo4H2Vo8a5e/funTx5
cvfu3Tt16iSjK2dl09x9+/alp6dLs/Hx8Y899tj69eudmetVVlb24osvpqam
njt3zoG5U6dOTfn/ZLoz+yuPmZmZmb169erYsePTTz+dl5dnMteXXA/eFzMD
p9Xvh9K1H7o279pXkNcVXVeHri2fW1+69hXM+dXn+boeoWvL59K1qs/XyrDk
0x5+/PHHdu3ayQoRERFysf3www++t86ZM8d4WUkEcj189dVXxl198sknxpIz
Z87IaZWFTz75ZIBz5R9UjRo1atasmVwMEr6sExkZKT3aPXfZsmWyUC5XWT58
+PCoqChZbdasWXbP9SUPIIG8H8OquXFxcTExMQ/66NevnwNzf/nll9atW8sD
48CBA0eOHGmsuWHDBpPRhtLS0tjY2M2bN9e4ph+t/pXuoWu6rk3XvoK5ruja
BF1bO7cede0rmPOrz/N1PULX1s6la4Wfr5VhUn1KSkqLW+S0GheSd8ngwYN9
V5YjuXr16h49ehirpaWlyRLjpl27di1dutT4q3mBVF9eXj5mzBhZWR4rJNjk
5GQ5R/Jt27Ztf/vtN7+Vq5s7ffr0/v37ez8ef9OmTXLrU089ZffcI0eOPPPM
M8XFxcZqx44dk8vy3nvvtXuulzx0yHKZKP8tKipyYK48tPo9Opmzam5SUpI8
sH/++efGtyUlJXKZBfIWlC1bttxxxx3Xr18PfJsNavwrna7pOpC5te3aquuK
rk3QtbVz61HXVp1ffZ6v6xG6tnYuXdeo/j5fK8OkeuP3Harj+wn8vrZv3/7Q
Qw+F+fyihOHs2bMBVu+pCGHatGlyORmzGjZs+Mgjj5w6dcrkRyrPvXnzpvdW
uRjkiurcubMDc/3IrXJt+26MfXMLCwujoqK6dev2zjvvhAXwmlvwc+Ue5GFt
0qRJ5oMsn7tnzx75Oj09vVZzDbK15o//1dm7d+/KlSvr8IPOo2vL5/qhaz+W
XFd0bY6uLZ/rJ2S7tuT8avV8XY/QteVz/dC1HXPpOhgBvuOlVuRylTOSlJTk
u7BW1Rvkijp8+PDOnTuvXr1a57mG0tLS6Ojo5ORkh+euW7dOEn7ppZccmHvx
4sX4+PjmzZufOHHi3XffrbF6S+ZeuHBBvn7ttde2bdu2cePGXbt2lZSUBHIn
Qc5duHChfC2Pcp6Kv4lw5cqVwIe2bt16zZo1Aa5fT9G1rXPp2kJ0HTi6tnVu
vei6tni+Dn10betcurZpLl0HI/jq5XRPnTr12rVr3iXG20tGjx7tu1odqrdk
rmHJkiVy0/Lly52Zm5+fL48w7du3l+SzsrIkDbvnysU8YsQIGfftt9/KtxZW
bz5XRvi9aCZNffHFF3bPnTx5cnh4uOxsv379brvtNlkuj3iB/LLJ7t27IyMj
LTkjoYyu7ZhL13bPpWtzdG3HXLq2ey5dm6NrO+bStd1z6ToYwVeflpYmxzwu
Lm7KlCkffPCBdC33KZff9u3bfVezvPoA54qCgoLGjRsnJiZa8rn0gcyV67NP
nz5t27aVNfv371/jxzwGP3fOnDly66JFi4yVLazefG5JScn06dPXr19/+fLl
kydPLly4MCYmJjo6Wr62de6wYcPCKj7BQ/LPy8ubNWuWrNmgQYOdO3ea3212
dvajjz4a5LaFPrq2Yy5d07W76NqOuXRN1+6iazvm0jVdh7Lgqy8vL//www87
duwox9x41UW+zs/P91vN8uoDnHvgwIEWLVpIgMFfh7Waa9ixY4eMbtas2Z9/
/mnfXJkSERHRpEmTt24ZOHCgrJCVlTVv3jz75lYpPT1d1lm9erWtc59//nlZ
4rsZW7ZskSWvvPKK+d126tRpyZIlQW5b6KNrm+Ya6NqmuXRtjq5tmmuga5vm
0rU5urZproGubZqrZNeFhYXjx4/v3bt3fHx8UlJSTk6O92MDrWXh75tcvnx5
//793o8Z9GN59YHMLSgokB1s2bJl5Q8ttHWur5UrV8qO5+bm2jd3w4YN7f+/
6OhoGdqmTZsePXrYN7dKeXl5Mjr4RxvzubNnz5Ypvm+tuXnzZmRk5IgRI0zu
6siRI/JTf/zxh1XbVlt0bclcuqZrX3RdB3RdJbq2Yy5dm6NrO+b6oms75tbT
rk0sWrTI+zpDw4YNjS+aN29++PBhy2fZ8WkPVbKv+ups3bo1Nja2Xbt2diRf
HbkODxw44LskOzvb7/p0gK2f9uDr66+/9ns5cezYsTLa+LUX++zbty88PDwl
JcW75Oeff5a5b775pslPzZ07t3v37rZumAm6tgRd07UfurYcXTu2DR66rgZd
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
XudanV8DXXs0O+90rfxcjzZdmwvw0x7mz5/vzNm5evVqdHS0zPrss898l9+4
caNVq1ayfMWKFSrN9cNxtvs437x586677vKbrh66dneuH+WPsx/H9teLrn0p
f71pe507PNf140zXvpQ/765fbwblu3Z9riZdmwu16g8dOiSDoqKiKv+Kx8sv
vyw3ZWZmqjTXD8fZgeM8bty4UaNG1eEHi4qKtm7davn22IGu3Z3rR/nj7MeV
f0XQtZfy15vO17mTc0PhONO1l/LnPRSuN48GXYfC3Dp3rYxQq/6bb76RQR06
dPBUvDwybdq0Z5999uDBg/Lt3Llz5abU1FSV5vrhODtwnPPy8po2bXrjxo3a
/uDy5cv79OljxyZZjq7dnetH+ePsx5Vnc7r2Uv560/k6d3JuKBxnuvZS/ryH
wvXm0aDrUJhb566VYWH1Fy5c2L9///nz54PZHuP3O/r27Stf5+fnh1UYPny4
fJubmytf9+rVS6W5fjjODhzna9euRUdH1+FVcT2fzev1eQ+F682jwXH249j+
+qJrL+WvN52vcyfnhsJxpmsv5c97KFxvHg26DoW5de5aGZZUf/To0UGDBoXd
0qFDh3Xr1tVte5YuXSr3MGDAAE/F3x0w7nDo0KHyrdynfJ2QkKDSXD8cZ2eO
c0pKSkZGRm1/SrdncwXOe4hcb8ofZz+O7a8fujYof71pfp0rf3790LVB+fMe
Iteb8l2HyNy6da2M4Ku/fv16fHx8eHj4yJEj5eHu7bfffuCBB2TlnTt31mF7
8vLy5GcffPBBz613nowdO9Z458nixYvlpscff1yluX44zs4c59zc3DZt2gSy
Znl5+X+3yFNDYmLifz6C3xKb0LW7c/0of5z9OLa/fujaoPz1pvl1rvz59UPX
BuXPe4hcb8p3HSJz69Z1ZcFvyYIFCwYFJj8/P/hxhuCr37Fjh28UnorPLVy7
dm3dtmfv3r1yb1VulfGp+BMmTFBprh+OszPH+cSJE3Lnx48fr3FN3xf9Kgvk
Hujao/31pvxx9uPY/vqha4Py15vm17ny59cPXRuUP+8hcr0p33WIzHWya3N/
//33kcBcunQpyFlewVdvvD/EqvcPFBcXh4eHyx0WFBT43dSzZ09ZPnv2bJXm
+uE4O3Oc5dGjVatW5eXlNa555swZb3czZ85MSEjwLTGQl93o2qP99ab8cfbj
2P76oWuD8teb5te58ufXD10blD/vIXK9Kd91iMytW9eVhfLbWkwEX/358+eb
N28uyWRlZf3+++9V/viFCxfWrFmTlpa2dOnSGmcNGTKk8ukuLCyUhQ0aNPC+
ylHj3L17906ePLl79+6dOnWS0ZVztmnuvn370tPT5bEiPj7+scceW79+fY27
7BXkcTaUlZW9+OKLqamp586dM1nNqv2dOnVqyv8n0x2Y66l4rM7MzOzVq1fH
jh2ffvrpvLw8k7m+5HrwvogaOK1+j4yu/dC1ede+gtxfuq4OXVs+t750bdVc
nq9DEF1bPpeuVX2+VoYln/bw448/tmvXTlaIiIiQi+2HH37wvXXOnDnGy1ki
kOvhq6++Mu7qk08+MZacOXNGTqssfPLJJwOcKw+8jRo1atasmVwMEr6sExkZ
KT3aPXfZsmWyUC5XWT58+PCoqChZbdasWTXutSGY4+wlD1yBvB/Dkv0VcXFx
MTExD/ro16+fA3N/+eWX1q1bywPywIEDR44caay5YcMGk9GG0tLS2NjYzZs3
17imH62ezT10Tde16dqq/aVrE3Rt7dx61LVVc3m+DkF0be1culb4+VoZJtWn
pKS0uEVOq3EheZcMHjzYd2U5kqtXr+7Ro4exWlpamiwxbtq1a9fSpUuNv9YX
SPXl5eVjxoyRleWxQoJNTk6WcyTftm3b9rfffvNbubq506dP79+/v/fj8Tdt
2iS3PvXUU3bPPXLkyDPPPFNcXGysduzYMbks7733XpO5Vh1ngzxkyXKZKP8t
Kiqye3+FPLT6PSqas2puUlKSPLB//vnnxrclJSVymQXyFpQtW7bccccd169f
D3ybDWo8m9M1XQcyt7ZdW7W/dG2Crq2dW4+6tmouz9chiK6tnUvXNaq/z9fK
MKne+D2L6vh+8r+v7du3P/TQQ2E+v6BhOHv2bIDVeyoCnDZtmlxOxqyGDRs+
8sgjp06dMvmRynNv3rzpvVUuBrmiOnfu7MBcP3KrXNu+G+PHwuNcWFgYFRXV
rVu3d955JyyA19yC31+5B3lYmzRpkvkgy+fu2bNHvk5PT6/VXINsrfnjf3X2
7t27cuXKOvyg8+ja8rl+6NqO/aVrc3Rt+Vw/Idu1JXN5vg5NdG35XD90bcdc
V7pWRoDveKkVyUTOSFJSku/CWlVvkCvq8OHDO3fuvHr1ap3nGkpLS6Ojo5OT
kx2eu27dOnnoeOmllwK5n9rym3vx4sX4+PjmzZufOHHi3XffrbF6r2D298KF
C/L1a6+9tm3bto0bN+7ataukpCTA7Q9m7sKFC+VreZTzVPxNhCtXrgQ+tHXr
1mvWrAlw/XqKrm2dS9cWouvA0bWtc+tF18HM5fk6NNG1rXPp2qa5dB2M4KuX
0z116tRr1655lxhvLxk9erTvanWo3pK5hiVLlshNy5cvd2Zufn6+PMK0b99e
ks/KypI07J4rF/OIESNk3LfffivfWli9+VwZ4feimTT1xRdf2D138uTJ4eHh
srP9+vW77bbbZLk84gXyyya7d++OjIy05IyEMrq2Yy5d2z2Xrs3RtR1z6dru
uXRtjq7tmEvXds+l62AEX31aWpoc87i4uClTpnzwwQfStdynXH7bt2/3Xc3y
6gOcKwoKCho3bpyYmGjJ59IHMleuzz59+rRt21bW7N+/f40f8xj83Dlz5sit
ixYtMla2sHrzuSUlJdOnT1+/fv3ly5dPnjy5cOHCmJiY6Oho+drWucOGDQur
+AQPyT8vL2/WrFmyZoMGDXbu3Gl+t9nZ2Y8++miQ2xb66NqOuXRN1+6iazvm
0jVdu4uu7ZhL13QdyoKvvry8/MMPP+zYsaMcc+NVF/k6Pz/fbzXLqw9w7oED
B1q0aCEBBn8d1mquYceOHTK6WbNmf/75p31zZUpERESTJk3eumXgwIGyQlZW
1rx58+ybW6X09HRZZ/Xq1bbOff7552WJ72Zs2bJFlrzyyivmd9upU6clS5YE
uW2hj65tmmuga5vm0rU5urZproGubZpL1+bo2qa5Brq2aa6SXRcWFo4fP753
797x8fFJSUk5OTnejw20loW/b3L58uX9+/d7P2bQj+XVBzK3oKBAdrBly5aV
PyzR1rm+Vq5cKTuem5tr39wNGza0//+io6NlaJs2bXr06GHf3Crl5eXJ6OAf
bcznzp49W6b4vrXm5s2bkZGRI0aMMLmrI0eOyE/98ccfVm1bbdG1JXPpmq59
0XUd0HWV6NqOuXRtjq7tmOuLru2YW0+7NrFo0SLv6wwNGzY0vmjevPnhw4ct
n2XHpz1Uyb7qq7N169bY2Nh27drZkXx15Do8cOCA75Ls7Gy/69MBtn7ag6+v
v/7a7+XEsWPHymjj117ss2/fvvDw8JSUFO+Sn3/+Wea++eabJj81d+7c7t27
27phJujaEnRN137o2nJ07dg2eOi6GnRtObp2bBs8dF0Nd7s2cejQIaP0zMzM
X3/99dq1axs3bjQ+HN7C10+87K7+yJEjCyu89dZbsgu9e/c2vv3uu+9snfvp
p582atRIJr766quSwDu3fP/99/YNLSsrkwcZmTtx4sTc3Nwvv/wyIyNDHsDj
4uIuX75s39zKnKn++vXrcv00a9Zs+vTpW7Zs2bRpU2pqqswdMGCAyV92sMro
0aMl/MmTJ2/btk1Otxz5O++888SJEyY/kpiYKNeA3RtWJbq2BF3TdWV0bRW6
pmub0LUJurYQXdN13SxatCis4i/L37hxw7tw9+7dxitv//zzj7Xj7K5+w4YN
YVUZP368rXMffvjhKufOmDHD1rlnz54dM2ZMy5YtjXFyWQ4bNqyoqMjWoZUZ
H/7gwGtu8sQ0YsQI4wHWeIl40qRJNr07y488xk6ZMqVx48bG6C5duph/1MNf
f/0lj8B+r4g6hq4tQdd07YeuLUTXdG0TujZB19aia7quA+ON9KmpqX7LW7Ro
Icstf9OLY+940c3p06cLCwsdfqnNLVeuXJGaDh48WFpa6vBoeXKUuXK0a1xz
xYoVcXFxDmxSlehaDXTtDLquEl3bhK6dQddVomub0LUz6kvX5mQXpO7Y2Fjf
FweKiopk4f3332/5OKqHJtLS0qZOnerWdLoG7EDXgHroGlCPu13XaMiQIdJ4
kyZN5s2b9++//166dMl4/8Z7771n+SyqB5xB14B66BpQD10DuiktLU1KSjLe
RX/77bffc8898sUbb7xhxyyqB5xB14B66BpQD10DWvnvv/+ys7MjIyNjY2MT
ExPDw8ON/IcOHWrH30ejesABdA2oh64B9dA1oJsXXnhBGu/evbvxAX2nTp3K
yclp2rSpLGzdurV86/YGAqg1ugbUQ9eAeuga0MqePXuk7gYNGpw8edJ3+bFj
x9q1ayc3TZgwwa1tA1A3dA2oh64B9dA1oJvFixdL2n379q18k/GX47p27er8
VgEIBl0D6qFrQD10Dehm2bJlknavXr0q37Rw4UK5KSEhwfmtAhAMugbUQ9eA
euga0M3hw4eNj3eYO3dueXm5d/mpU6f+97//yfKMjAwXNw9AHdA1oB66BtRD
14CGZs6caXy4YpcuXaTxadOmjRo1KioqSpa0b9++uLjY7Q0EUGt0DaiHrgH1
0DWgm/Ly8rVr13bq1CnMR6NGjSZOnGjHXzoA4AC6BtRD14B66BrQ1rlz5376
6acdO3YcO3asrKzM7c0BYAG6BtRD14B66BoAAAAAAAAAAAAAAAAAAAAAAAD4
P/buPDaqsm3AeEspYlsriwIivIilkgCGCgTZTUAKVgRso42yiSJQLbYGNKmW
xQVIICKbAgFJqCJhkVhjEQ1RDMqmQGUzAoWggEplk6W0YOe70xMm55uWw7Rz
lunzXL8/SHvmdO6zXTNkMp0CAAAAAAAAAAAAAFRSUlKSl5eXkZExd+5cr7cF
gD3oGlAPXQPqoWtAH8uXL+/fv398fLzxRwY7derk9RYBCBVdA+qha0A9dA3o
JiUlJcKE6gEF0DWgHroG1EPXgG7Onz//d4Xc3FyqB9RA14B66BpQD10D2poz
Zw7VA4qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHd
UD2gHroG1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbUQ9eAeuga0A3V
A+qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHdUD2g
HroG1EPXgHroGtBBampqkxvi4uIiKviXDBgwwOsNBFBtdA2oh64B9dA1oJuu
XbtG3FxSUpLXGwig2ugaUA9dA+qhawAAAAAAAKBWu/vuu73eBMANWVlZc+fO
9XorXELX0ARdA+qha0A9WnVtjeqhiffff79jx45eb4VL6BqaoGtAPXQNqEer
rq1RPTRx9OjRiIgI+dfrDXEDXUMTdA2oh64B9WjVtTWqhz46duw4Z84cr7fC
DXQNfdA1oB66BtSjT9fWqB76mDp1ap8+fbzeCjfQNfRB14B66BpQjz5dWwum
+pKSkry8vIyMDDd/WX7fvn2vv/66nKP27ds/99xzH3/8sWujtdpfreYWFhZG
RUUVFxe7MMtbdF2ZVvur1XGmazOtrnMf++sKnq8dRdeVsb+qztWna2vW1S9f
vrx///7x8fHGXzns1KmTO1u1YcOGuLi4gL+xOHr06LKyMkfn6ra/us0V9913
30cffeT0FM/RtZlu+6vbcfbRdQXdrnP219FxfjxfO42uzdhfR8d5PtenTdfW
rKtPSUkxX4funJ3Dhw9HRUXJuCeeeGLPnj0nT55cuHBh3bp1ZUlOTo6jo7Xa
X93mGrKzs2Wu01M8R9dmWu2vbsfZQNc+za5zH/ur+v766LqCbued/XV0nOdz
fdp0bc26+vPnz/9dITc317Wzk5mZKbN69+5tfsVp+fLlsrBhw4aXLl1ybrRW
+6vbXMPmzZvr16/v9BTP0bWZVvur23E20LVPs+vcx/6qvr8+uq6g23lnf52b
FQ5zfdp0bS3IT3uYM2eOO2fn8uXLsbGxMuuzzz4zL7927VqzZs1k+dKlS53e
Bp8G+6vbXL/r16/fddddAdPVQ9dVUn5/dTvOfnRtpvx1HoD9dYjn+0vXZvqc
dwP76w6erz0RbtUfOHBABsXExFT+VYuXX35ZbsrKynJ6G3wa7K9uc81Gjx49
fPjwGvxgUVHRpk2bbN8eJ9B1lZTfX92Os1mNu65F6LpK7K9DwmF/6dpPq/Pu
Y3/dUruer2vR/8OthVv133zzjQxq06aNr+LlkcmTJz/77LP79++Xb2fNmiU3
paWlOb0NPg32V7e5Zvn5+Q0bNrx27Vp1f3DJkiU9e/Z0YpNsR9dVUn5/dTvO
ZjXuuhah6yqxvw4Jh/2laz+tzruP/XVL7Xq+rkX/D7dmY/Xnzp3bs2fP2bNn
Q9ke4/csevXqJV8XFBREVBgyZIh8m5eXJ19369bNibkBlN9f3eaaXblyJTY2
tgavntWi6um6Ssrvr27H2azGXdcidF0l9rcyZfaXrv20Ou8+9rcqyszV4f/h
1myp/vDhw/3794+4oU2bNqtXr67Z9ixatEjuoW/fvr6Kz/837nDQoEHyrdyn
fJ2UlOTE3ADK769ucwOkpqZmZmZW96dqUfV0XSXl91e34xygZl3XInRdJfbX
TL39pWuDbued/TVTb67y/w+3Fnr1V69eTUxMjIyMHDZsmByWt99++4EHHpCV
t23bVoPtyc/Pl5998MEHfTfeATJq1CjjHSALFiyQmx5//HEn5gZQfn91mxsg
Ly+vRYsWwaxZXl7+3w3yEN2jR4//TELfEofQdZWU31/djnOAmnVdWehb4hC6
rhL766fk/tK1Qbfzzv76KTk3fP4fPnfu3P7BKSgoCH2cIfTqt27dar44fRWf
H7hq1aqabc+uXbvk3qrcKuNT8ceOHevE3ADK769ucwMcO3ZM7vzo0aO3XNP8
ol9lwdwDXfvC5rwrv7+6HecAdG1Q/joPwP76Kbm/dG3Q7byzv35KznWza2t/
//33oeBcuHAhxFl+oVdvvE/DrvcFFRcXR0ZGyh0WFhYG3NS1a1dZPmPGDCfm
BlB+f3WbG0AePZo1a1ZeXn7LNU+dOuXvbtq0aUlJSeYSg3nZja59YXPeld9f
3Y5zgJp1XRldB0m364399Qv/52u6rrEwOe/sr5+Sc938f3gYCr36s2fPNm7c
WC7d7Ozs33//vcofP3fu3MqVK9PT0xctWnTLWQMHDqx8uvfu3SsL69Sp43+V
45Zzd+3aNWHChM6dO7dr105GV87KQij7u3v37oyMDGk2MTHxscceW7NmjfUs
u/bXr6ys7MUXX0xLSztz5owLcydNmpT6/8l0d/ZXHjOzsrK6devWtm3bp59+
Oj8/32KumVwP/hczg1eLft+ErqtE1851bRbideVy17UIXVdJh67NQtlffZ6v
axG6rhJd+/F87VeL/h9uzZZPe/jxxx9btWolK0RFRcnF9sMPP5hvnTlzpvGy
kgjmevjqq6+Mu/rkk0+MJadOnZLTKguffPLJIOfKCapXr16jRo3kYpDwZZ3o
6GjpMZidDWV/Fy9eLAvlcpXlQ4YMiYmJkdWmT5/u9P6ayQNIMO/HsGtuQkJC
XFzcgya9e/d2Ye4vv/zSvHlzeWDs16/fsGHDjDXXrl1rMdpQWloaHx+/YcOG
W64ZoBZVT9f27i9d37Jrs1CuK/e7rkXo2t79rUVd27K/Pp2er2sRurZ3f+la
4efrWvT/cGsW1aempja5QU6rcSH5lwwYMMC8shzJFStWdOnSxVgtPT1dlhg3
bd++fdGiRcZfzQum+vLy8pEjR8rK8lghwaakpMg5km9btmz522+/Bax8s7lT
pkzp06eP/+Px169fL7c+9dRTFnNt2d9Dhw4988wzxcXFxmpHjhyRy/Lee+91
en/95KFDlstE+beoqMiFufLQGvDoZM2uucnJyfLA/vnnnxvflpSUyGUWzFtQ
Nm7ceMcdd1y9ejX4bTbUourp2t79petbsuu6cr/rWoSu7d3fWtS1XedXn+fr
WoSu7d1fur6l2vt8XYv+H27Nonrj9x1uxvwJ/GZbtmx56KGHIky/KGE4ffp0
kNX7KkKYPHmyXE7GrLp16z7yyCMnTpyw+JHKc69fv+6/VS4GuaLat29vcQ/2
7q+f3CrXtnljHNpfX8X7ZGJiYjp16vTOO+9EBPGaW+hz5R7kYW38+PHWg2yf
u3PnTvk6IyOjWnMNsrXWj/83s2vXrmXLltXgB91H1w7trx9dB7DlOHvSdS1C
1w7tr1/Ydm3L/mr1fF2L0LVD++tH107M5f/hoQjyHS/VIpernJHk5GTzwmpV
b5Ar6uDBg9u2bbt8+XKN5xpKS0tjY2NTUlKCnx48i7mrV6+WhF966aVg7ifE
/T1//nxiYmLjxo2PHTv27rvv3rJ6W+aeO3dOvn7ttdc2b968bt267du3l5SU
BHMnIc6dN2+efC2Pcr6Kv4lw6dKl4Ic2b9585cqVQa5fS9F16Oi6Zl1XF10H
j65DV9u7ri6er8MfXYeOrnm+rl1Cr15O96RJk65cueJfYry9ZMSIEebValC9
LXMNCxculJuWLFniztyCggJ5hGndurUkn52dLWk4PVcu5qFDh8q4b7/9Vr61
sXrruTIi4EUzaeqLL75weu6ECRMiIyNlZ3v37n3bbbfJcnnEC+aXTXbs2BEd
HW3LGQlndO3EXLp2ei5dW6NrJ+bStdNz6doaXTsxl66dnkvXoQi9+vT0dDnm
CQkJEydO/OCDD6RruU+5/LZs2WJezfbqg5wrCgsL69evb/x9dnfmyvXZs2fP
li1bypp9+vSp1sc81mzuzJkz5db58+cbK9tYvfXckpKSKVOmrFmz5uLFi8eP
H583b15cXFxsbKx87ejcwYMHR1R8gofkn5+fP336dFmzTp0627Zts77bnJyc
Rx99NMRtC3907cRcuqZrb9G1E3Ppmq69RddOzKVrug5noVdfXl7+4Ycftm3b
Vo658aqLfF1QUBCwmu3VBzl33759TZo0kQBDvw6rNdewdetWGd2oUaM///zT
ubkyJSoqqkGDBm/d0K9fP1khOzt79uzZzs2tUkZGhqyzYsUKR+c+//zzssS8
GRs3bpQlr7zyivXdtmvXbuHChSFuW/ija4fmGujaobl0bY2uHZproGuH5tK1
Nbp2aK6Brh2aq2TXe/fuHTNmTPfu3RMTE5OTk3Nzc/0fG2gvG3/f5OLFi3v2
7PF/zGAA26sPZm5hYaHsYNOmTSt/aKGjc82WLVsmO56Xl+fc3LVr17b+/2Jj
Y2VoixYtunTp4tzcKuXn58vo0B9trOfOmDFDppjfWnP9+vXo6OihQ4da3NWh
Q4fkp/744w+7tq266NqWuXRN12Z0XQN0XSW6dmIuXVujayfmmtG1E3NradcW
5s+f73+doW7dusYXjRs3PnjwoO2znPi0hyo5V/3NbNq0KT4+vlWrVk4kfzNy
He7bt8+8JCcnJ+D6dIGjn/Zg9vXXXwe8nDhq1CgZbfzai3N2794dGRmZmprq
X/Lzzz/L3DfffNPip2bNmtW5c2dHN8wCXduCruk6AF3bjq5d2wYfXd8EXduO
rl3bBh9d34S3XVs4cOCAUXpWVtavv/565cqVdevWGR8Ob+PrJ35OV3/o0KF5
Fd566y3Zhe7duxvffvfdd47O/fTTT+vVqycTX331VUngnRu+//5754aWlZXJ
g4zMHTduXF5e3pdffpmZmSkP4AkJCRcvXnRubmXuVH/16lW5fho1ajRlypSN
GzeuX78+LS1N5vbt29f6LzvYYsSIERL+hAkTNm/eLKdbjvydd9557Ngxix/p
0aOHXANOb1iV6NoWdE3XldG1Xeiarh1C1xbo2kZ0Tdc1M3/+/IiKv/B+7do1
/8IdO3YYr7z9888/9o5zuvq1a9dGVGXMmDGOzn344YernDt16lRH554+fXrk
yJFNmzY1xsllOXjw4KKiIkeHVmZ8+IMLr7nJE9PQoUONB1jjJeLx48c79O6s
APIYO3HixPr16xujO3ToYP1RD3/99Zc8Age8IuoaurYFXdN1ALq2EV3TtUPo
2gJd24uu6boGjDfSp6WlBSxv0qSJLLf9TS+uveNFNydPnty7d6/LL7V55dKl
S1LT/v37S0tLXR4tT44yV472LddcunRpQkKCC5tUJbpWA127g66rRNcOoWt3
0HWV6NohdO2O2tK1NdkFqTs+Pt784kBRUZEsvP/++20fR/XQRHp6+qRJk7ya
TteAE+gaUA9dA+rxtutbGjhwoDTeoEGD2bNn//vvvxcuXDDev/Hee+/ZPovq
AXfQNaAeugbUQ9eAbkpLS5OTk4130d9+++333HOPfPHGG284MYvqAXfQNaAe
ugbUQ9eAVv7777+cnJzo6Oj4+PgePXpERkYa+Q8aNMiJv49G9YAL6BpQD10D
6qFrQDcvvPCCNN65c2fjA/pOnDiRm5vbsGFDWdi8eXP51usNBFBtdA2oh64B
9dA1oJWdO3dK3XXq1Dl+/Lh5+ZEjR1q1aiU3jR071qttA1AzdA2oh64B9dA1
oJsFCxZI2r169ap8k/GX4zp27Oj+VgEIBV0D6qFrQD10Dehm8eLFkna3bt0q
3zRv3jy5KSkpyf2tAhAKugbUQ9eAeuga0M3BgweNj3eYNWtWeXm5f/mJEyf+
97//yfLMzEwPNw9ADdA1oB66BtRD14CGpk2bZny4YocOHaTxyZMnDx8+PCYm
Rpa0bt26uLjY6w0EUG10DaiHrgH10DWgm/Ly8lWrVrVr1y7CpF69euPGjXPi
Lx0AcAFdA+qha0A9dA1o68yZMz/99NPWrVuPHDlSVlbm9eYAsAFdA+qha0A9
dA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRSUlKSl5eXkZExd+5c
r7cFgD3oGlAPXQPqoWtAH8uXL+/fv398fLzxRwY7derk9RYBCBVdA+qha0A9
dA3oJiUlJcKE6gEF0DWgHroG1EPXgG7Onz//d4Xc3FyqB9RA14B66BpQD10D
2pozZw7VA4qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiH
rgHdUD2gHroG1EPXgHroGtAN1QPqoWtAPXQNqIeuAd1QPaAeugbUQ9eAeuga
0A3VA+qha0A9dA2oh64B3VA9oB66BtRD14B66BrQDdUD6qFrQD10DaiHrgHd
UD2gHroG1EPXgHroGtBBampqkxvi4uIiKviXDBgwwOsNBFBtdA2oh64B9dA1
oJuuXbtG3FxSUpLXGwig2ugaUA9dA+qhawAAAAAAAKBWu/vuu73eBMANWVlZ
c+fO9XorXELX0ARdA+qha0A9WnVtjeqhiffff79jx45eb4VL6BqaoGtAPXQN
qEerrq1RPTRx9OjRiIgI+dfrDXEDXUMTdA2oh64B9WjVtTWqhz46duw4Z84c
r7fCDXQNfdA1oB66BtSjT9fWqB76mDp1ap8+fbzeCjfQNfRB14B66BpQjz5d
Wwum+pKSkry8vIyMDDd/WX7fvn2vv/66nKP27ds/99xzH3/8sWujPdlfr+Z6
dZw9mVtYWBgVFVVcXOzCLG/RdWV07Q7395euzbjemGs7nq8dRdeVadWXVnP1
6dqadfXLly/v379/fHy88VcOO3Xq5M5WbdiwIS4uLuBvLI4ePbqsrMzRuV7t
r27H2au54r777vvoo4+cnuI5ujaja7WPs4+uK3C9OTpO27k8XzuNrs1060u3
uT5turZmXX1KSoq5O3fOzuHDh6OiomTcE088sWfPnpMnTy5cuLBu3bqyJCcn
x9HRnuyvV3O9Os4enl+RnZ0tc52e4jm6NqNrtY+zj64rcL05Ok7PuTxfu4Cu
zbTqS8O5Pm26tmZd/fnz5/+ukJub69rZyczMlFm9e/c2v8K2fPlyWdiwYcNL
ly45N9qT/fVqrlfH2cPzKzZv3ly/fn2np3iOrs3oWu3j7KPrClxvzs3Sdi7P
1y6gazOt+tJwrk+brq0F+WkPc+bMcefsXL58OTY2VmZ99tln5uXXrl1r1qyZ
LF+6dKnT2+BzcX+9muvVcfb8/F6/fv2uu+4KmK4euq4SXat6nOnajOvNHcrP
9fz80rWZPufdoHxf2s7VpGtr4Vb9gQMHZFBMTEzlXy15+eWX5aasrCynt8Gn
QQVeHedwOL+jR48ePnx4DX6wqKho06ZNtm+PE+i6SnSt8HGucde1CF1XSfmu
vZobDueX52s/rc67T4O+dJ6rw/O1tXCr/ptvvpFBbdq08VW8PDJ58uRnn312
//798u2sWbPkprS0NKe3wadBBV4d53A4v/n5+Q0bNrx27Vp1f3DJkiU9e/Z0
YpNsR9dVomuFj3ONu65F6LpKynft1dxwOL88X/tpdd59GvSl81wdnq+t2Vj9
uXPn9uzZc/bs2VC2x/i9kl69esnXBQUFERWGDBki3+bl5cnX3bp1c2JuANf2
16u5Xh3ncDi/V65ciY2NrcGr4no+mytz3n10rfRxrnHXtQhdV0n5rr2aGw7n
l+drP63Ou0+DvnSeq8PztTVbqj98+HD//v0jbmjTps3q1atrtj2LFi2Se+jb
t6+v4u8dGHc4aNAg+VbuU75OSkpyYm4A1/bXq7leHecwOb+pqamZmZnV/Snd
ns3VO+90rfZxrlnXtQhdV0n5rr2aGybnl+drg27nXfm+NJ+r/PO1tdCrv3r1
amJiYmRk5LBhw+Th7u23337ggQdk5W3bttVge/Lz8+VnH3zwQd+Nd7yMGjXK
eMfLggUL5KbHH3/cibkBXNtfr+Z6dZzD5Pzm5eW1aNEimDXLy8v/u0Geknr0
6PGfSehb4hC6rhJdq32ca9Z1ZaFviUPoukrKd+3V3DA5vzxfG3Q778r3pfnc
8Hm+njt3bv/gFBQUhD7OEHr1W7duNcfoq/i8xFWrVtVse3bt2iX3VuVWGZ+K
P3bsWCfmBnBtf72a69VxDpPze+zYMbnzo0eP3nJN84t+lQVzD3TtC5vzTtdq
H2e6NnC9+TFXgfNL1wbdzrvyfWk+182urf3999+HgnPhwoUQZ/mFXr3xvhS7
3j9QXFwcGRkpd1hYWBhwU9euXWX5jBkznJgbwLX99WquV8c5TM6vPHo0a9as
vLz8lmueOnXK3920adOSkpLMJQbzshtd+8LmvNO12se5Zl1XRtdB0vx6U35u
mJxfnq8Nup135fvSfK6bz9dhKPTqz54927hxY0k1Ozv7999/r/LHz507t3Ll
yvT09EWLFt1y1sCBAyuf7r1798rCOnXq+F/luOXcXbt2TZgwoXPnzu3atZPR
lR9GLISyv7t3787IyJDHqMTExMcee2zNmjXuzPUrKyt78cUX09LSzpw5Y7Ga
Xcd50qRJqf+fTHdhrq/iOSIrK6tbt25t27Z9+umn8/PzLeaayfXgf/E2eFr9
HhldB6Br667NQtxfl7uuRei6Sjp0bddcnq/DEF1Xia6Dn8vzda1jy6c9/Pjj
j61atZIVoqKi5GL74YcfzLfOnDnTeBlNBHM9fPXVV8ZdffLJJ8aSU6dOyWmV
hU8++WSQc+WBt169eo0aNZKLQcKXdaKjo6XHYHY2lP1dvHixLJTLVZYPGTIk
JiZGVps+fbrTc83kATOY92PYcpxFQkJCXFzcgya9e/d2Ye4vv/zSvHlzeSLo
16/fsGHDjDXXrl1rMdpQWloaHx+/YcOGW64ZQKtncx9d03V1urZrf93vuhah
a3v3txZ1bddcnq/DEF3bu790zfN1+LOoPjU1tckNclqNC8m/ZMCAAeaV5Uiu
WLGiS5cuxmrp6emyxLhp+/btixYtMv5KYDDVl5eXjxw5UlaWxwoJNiUlRc6R
fNuyZcvffvstYOWbzZ0yZUqfPn38H4+/fv16ufWpp56ymGvL/h46dOiZZ54p
Li42Vjty5Ihclvfee6/Tc/3koVKWy0T5t6ioyOnjLOShNeDR2Jpdc5OTk+WB
/fPPPze+LSkpkcssmLegbNy48Y477rh69Wrw22xQ49mcruk6mLnV7dqu/XW/
61qEru3d31rUtV1zeb4OQ3Rt7/7S9S3xfO05i+qN3++4GfNfHDDbsmXLQw89
FGH6xRDD6dOng6zeVxH+5MmT5XIyZtWtW/eRRx45ceKExY9Unnv9+nX/rXIx
yBXVvn17i3uwd3/95Fa5ts0b49zcvXv3xsTEdOrU6Z133okI4jW30I+z3IM8
rI0fP956kO1zd+7cKV9nZGRUa65Bttb68f9mdu3atWzZshr8oPvo2qH99aNr
J/bXk65rEbp2aH/9wrZrW+byfB2e6Nqh/fWjayfm8nwdiiDf8VItkqeckeTk
ZPPCalVvkCvq4MGD27Ztu3z5co3nGkpLS2NjY1NSUoKfHjyLuatXr5aHrJde
esmFuefPn09MTGzcuPGxY8fefffdW1bvF8pxPnfunHz92muvbd68ed26ddu3
by8pKQly+0OZO2/ePPlaHuV8FX8T4dKlS8EPbd68+cqVK4Ncv5ai69DRdc26
ri66Dh5dh662dx3KXJ6vwxNdh46ueb6uXUKvXk73pEmTrly54l9ivL1kxIgR
5tVqUL0tcw0LFy6Um5YsWeLO3IKCAnmEad26tSSfnZ0taTg9Vy7moUOHyrhv
v/1WvrWxeuu5MiLgRTNp6osvvnB67oQJEyIjI2Vne/fufdttt8lyecQL5pdN
duzYER0dbcsZCWd07cRcunZ6Ll1bo2sn5tK103Pp2hpdOzGXrp2eS9ehCL36
9PR0OeYJCQkTJ0784IMPpGu5T7n8tmzZYl7N9uqDnCsKCwvr16/fo0cPWz6X
Ppi5cn327NmzZcuWsmafPn2q9TGPNZs7c+ZMuXX+/PnGyjZWbz23pKRkypQp
a9asuXjx4vHjx+fNmxcXFxcbGytfOzp38ODBERWf4CH55+fnT58+XdasU6fO
tm3brO82Jyfn0UcfDXHbwh9dOzGXrunaW3TtxFy6pmtv0bUTc+marsNZ6NWX
l5d/+OGHbdu2lWNuvOoiXxcUFASsZnv1Qc7dt29fkyZNJMDQr8NqzTVs3bpV
Rjdq1OjPP/90bq5MiYqKatCgwVs39OvXT1bIzs6ePXu2c3OrlJGRIeusWLHC
0bnPP/+8LDFvxsaNG2XJK6+8Yn237dq1W7hwYYjbFv7o2qG5Brp2aC5dW6Nr
h+Ya6NqhuXRtja4dmmuga4fmKtn13r17x4wZ071798TExOTk5NzcXP/HBtrL
xt83uXjx4p49e/wfMxjA9uqDmVtYWCg72LRp08of0ujoXLNly5bJjufl5Tk3
d+3ata3/v9jYWBnaokWLLl26ODe3Svn5+TI69Ecb67kzZsyQKea31ly/fj06
Onro0KEWd3Xo0CH5qT/++MOubasuurZlLl3TtRld1wBdV4munZhL19bo2om5
ZnTtxNxa2rWF+fPn+19nqFu3rvFF48aNDx48aPssJz7toUrOVX8zmzZtio+P
b9WqlRPJ34xch/v27TMvycnJCbg+XeDopz2Yff311wEvJ44aNUpGG7/24pzd
u3dHRkampqb6l/z8888y980337T4qVmzZnXu3NnRDbNA17aga7oOQNe2o2vX
tsFH1zdB17aja9e2wUfXN+Ft1xYOHDhglJ6VlfXrr79euXJl3bp1xofD2/j6
iZ/T1R86dGhehbfeekt2oXv37sa33333naNzP/3003r16snEV199VRJ454bv
v//euaFlZWXyICNzx40bl5eX9+WXX2ZmZsoDeEJCwsWLF52bW5k71V+9elWu
n0aNGk2ZMmXjxo3r169PS0uTuX379rX4yw52GTFihIQ/YcKEzZs3y+mWI3/n
nXceO3bM4kd69Ogh14DTG1YlurYFXdN1ZXRtF7qma4fQtQW6thFd03XNzJ8/
P6LiL9pfu3bNv3DHjh3GK2///POPveOcrn7t2rURVRkzZoyjcx9++OEq506d
OtXRuadPnx45cmTTpk2NcXJZDh48uKioyNGhlRkf/uDCa27yxDR06FDjAdZ4
iXj8+PEOvTsrgDzGTpw4sX79+sboDh06WH/Uw19//SWPwAGviLqGrm1B13Qd
gK5tRNd07RC6tkDX9qJruq4B4430aWlpAcubNGkiy21/04tr73jRzcmTJ/fu
3evyS21euXTpktS0f//+0tJSl0fLk6PMlaN9yzWXLl2akJDgwiZVia7VQNfu
oOsq0bVD6NoddF0lunYIXbujtnRtTXZB6o6Pjze/OFBUVCQL77//ftvHUT00
kZ6ePmnSJK+m0zXgBLoG1EPXgHq87fqWBg4cKI03aNBg9uzZ//7774ULF4z3
b7z33nu2z6J6wB10DaiHrgH10DWgm9LS0uTkZONd9Lfffvs999wjX7zxxhtO
zKJ6wB10DaiHrgH10DWglf/++y8nJyc6Ojo+Pr5Hjx6RkZFG/oMGDXLi76NR
PeACugbUQ9eAeuga0M0LL7wgjXfu3Nn4gL4TJ07k5uY2bNhQFjZv3ly+9XoD
AVQbXQPqoWtAPXQNaGXnzp1Sd506dY4fP25efuTIkVatWslNY8eO9WrbANQM
XQPqoWtAPXQN6GbBggWSdq9evSrfZPzluI4dO7q/VQBCQdeAeugaUA9dA7pZ
vHixpN2tW7fKN82bN09uSkpKcn+rAISCrgH10DWgHroGdHPw4EHj4x1mzZpV
Xl7uX37ixIn//e9/sjwzM9PDzQNQA3QNqIeuAfXQNaChadOmGR+u2KFDB2l8
8uTJw4cPj4mJkSWtW7cuLi72egMBVBtdA+qha0A9dA3opry8fNWqVe3atYsw
qVev3rhx45z4SwcAXEDXgHroGlAPXQPaOnPmzE8//bR169YjR46UlZV5vTkA
bEDXgHroGlAPXQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJWUlJTk
5eVlZGTMnTvX620BYA+6BtRD14B66BrQx/Lly/v37x8fH2/8kcFOnTp5vUUA
QkXXgHroGlAPXQO6SUlJiTChekABdA2oh64B9dA1oJvz58//XSE3N5fqATXQ
NaAeugbUQ9eAtubMmUP1gGLoGlAPXQPqoWtAN1QPqIeuAfXQNaAeugZ0Q/WA
eugaUA9dA+qha0A3VA+oh64B9dA1oB66BnRD9YB66BpQD10D6qFrQDdUD6iH
rgH10DWgHroGdEP1gHroGlAPXQPqoWtAN1QPqIeuAfXQNaAeugZ0Q/WAeuga
UA9dA+qha0A3VA+oh64B9dA1oB66BnSQmpra5Ia4uLiICv4lAwYM8HoDAVQb
XQPqoWtAPXQN6KZr164RN5eUlOT1BgKoNroG1EPXgHroGgAAAAAAAKjV7r77
bq83AXBDVlbW3Llzvd4Kl9A1NEHXgHroGlCPVl1bo3po4v333+/YsaPXW+ES
uoYm6BpQD10D6tGqa2tUD00cPXo0IiJC/vV6Q9xA19AEXQPqoWtAPVp1bY3q
oY+OHTvOmTPH661wA11DH3QNqIeuAfXo07U1qoc+pk6d2qdPH6+3wg10DX3Q
NaAeugbUo0/X1oKpvqSkJC8vLyMjw+Vflvdk7r59+15//XW5Ntq3b//cc899
/PHHzFVmbmFhYVRUVHFxsQuzvEXXAbS6zj2c6/Pi/NK1GV0rPNen03GmazO6
VniuT6fzq0/X1qyrX758ef/+/ePj442/ctipUyd3tsqruRs2bIiLiwv4246j
R48uKytjrgJzxX333ffRRx85PcVzdG2m23Xu1Vyvzq+PrivQNX05gedrp9G1
GV07Os7zuT5turZmXX1KSor5OnTt7Hgy9/Dhw1FRUTLuiSee2LNnz8mTJxcu
XFi3bl1ZkpOTw9zaPteQnZ0tc52e4jm69tPtOvewL6+uKx9dV6Br+rIdz9cu
oGs/ulb7/Bo06dqadfXnz5//u0Jubq6bZ8eTuZmZmTKrd+/e5le6li9fLgsb
Nmx46dIl5tbquYbNmzfXr1/f6Smeo2s/3a5zD/vy6rry0XUFuqYv2/F87QK6
9qNrtc+vQZOurQX5aQ9z5sxx+ey4PPfy5cuxsbEy67PPPjMvv3btWrNmzWT5
0qVLmVt75/pdv379rrvuCpiuHro26Hade96Xwf3riq7N6Jq+bOH5/tK1GV3T
tRpzNenaGtUbDhw4IINiYmIq/4rHyy+/LDdlZWUxt/bONRs9evTw4cOdnuIt
ujbodp2HQ18+j66rGnddVFS0adMm27fHCXRtoC+1j7MZz9d+dE3XyszV4fna
GtUbvvnmGxnUpk0bX8XLMpMnT3722Wf3798v386aNUtuSktLY27tnWuWn5/f
sGHDa9euOT3IQ3Rt0O06D4e+fB5dVzXuesmSJT179nRik2xH1wb6Uvs4m/F8
7UfXdK3MXB2er63ZWP25c+f27Nlz9uxZmzbN1bnG73f06tVLvi4oKIioMGTI
EPk2Ly9Pvu7WrRtza+9csytXrsTGxqrx6tnN0LVBt+s8HPryeXRd1bjrWvRs
TtcG+lL7OJvxfO1H13StzFwdnq+t2VL94cOH+/fvH3FDmzZtVq9ebcvmuTZ3
0aJFcg99+/b1VfzdAeMOBw0aJN/KfcrXSUlJzK29cwOkpqZmZmbaclfhia4N
ul3nYdKXV9dVzbquRc/mdG2gL7WPcwCerw10TdcqzVX++dpa6NVfvXo1MTEx
MjJy2LBhcljefvvtBx54QFbetm1b6Jvn2tz8/Hz52QcffNB3450no0aNMt55
smDBArnp8ccfZ27tnRsgLy+vRYsWwaxZXl7+382FviUOoWuDbtd5mPTl1XVV
s67lv149evSg69A3j64V6ytM9pfnawNd07VKc8Pn+Xru3Ln9g1NQUBD6OEPo
1W/dutV8cfoqPj9w1apVtmyea3N37dol91bl0TA+jX/s2LHMrb1zAxw7dkzu
/OjRo7dc0/yiX2XB3ANdezhXt+s8TPry6rqiawNd05ctc8Nkf+naQNd0rdJc
N7u29vfffx8KzoULF0Kc5Rd69cb7NBx6X5Brc4uLiyMjI+UOCwsLA27q2rWr
LJ8xYwZza+/cAPLo0axZs/Ly8luueerUKYsSg3nZja49nKvbdR4mfXl1XdWs
62nTpiUlJdF16Ohasb7CZH95vjbQNV2rNNfN5+swFHr1Z8+ebdy4sVy62dnZ
v//+e5U/fu7cuZUrV6anpy9atKhamxfK3F27dk2YMKFz587t2rWT0ZWzCjBw
4MDKl9nevXtlYZ06dfyvrtxy7u7duzMyMqTZxMTExx57bM2aNe7M9SsrK3vx
xRfT0tLOnDnjwtxJkyal/n8y3Z39lcfMrKysbt26tW3b9umnn87Pz7eYaybX
g//FTCXRtR9d12xudbs2C/G6crnrWvR7ZHTtp1vXZqEcZ56vwxBd+9G1O13b
NdfH83VN2fJpDz/++GOrVq1khaioKLnYfvjhB/OtM2fONF5WEsFfDyHOlRNU
r169Ro0aycUg4cs60dHR0qPFrK+++sq4q08++cRYcurUKbmcZOGTTz4Z5NzF
ixfLQrlcZfmQIUNiYmJktenTpzs910weQIJ5P4ZdcxMSEuLi4h406d27twtz
f/nll+bNm8sDY79+/YYNG2asuXbtWovRhtLS0vj4+A0bNtxyzdqLrv3o2p2u
zUK5rtzvuhY9m9O1n25dm4Vyfnm+DkN07UfX7nRt11yer2vMovrU1NQmN8hp
NS4k/5IBAwaYV5YjuWLFii5duhirpaenyxLjpu3bty9atMj4q3nBVG/L3ClT
pvTp08f/8fjr16+XW5966imLueXl5SNHjpTV5DFKHihSUlLk2pBvW7Zs+dtv
vwWsfLO5hw4deuaZZ4qLi43Vjhw5Ipflvffe6/RcP3nokOUyUf4tKipyYa48
tAY8Olmza25ycrI8sH/++efGtyUlJXKZBfMWlI0bN95xxx1Xr14NfptrHbr2
o2t3urbrunK/61r0bE7Xfrp1bdf55fk6DNG1H1270zXP156zqN74fYebMX8C
v9mWLVseeuihCNMvShhOnz4dZPV2zb1+/br/VrkY5Ipq37699WgJcPLkyXIZ
G7Pq1q37yCOPnDhxwuJHbra/fnKrXNvmjXFu7t69e2NiYjp16vTOO+9EBPGa
W+hz5R7kYW38+PHWg2yfu3PnTvk6IyOjWnMNsrXWj/8KoGszunaha1vOrydd
79q1a9myZTX4QffRtZlWXdtynHm+Dk90bUbXLnTN87XngnzHS7XI5SpnJDk5
2bww+OrtnWsoLS2NjY1NSUkJ5n7kSj548OC2bdsuX74c4tzVq1dLwi+99JIL
c8+fP5+YmNi4ceNjx469++67t6zelrnnzp2Tr1977bXNmzevW7du+/btJSUl
wdxJiHPnzZsnX8ujnK/ibyJcunQp+KHNmzdfuXJlkOvXUnRdGV0HPzeUrquL
roNH15Xp1nV18Xwd/ui6MroOfi7P17VR6NXL6Z40adKVK1f8S4y3l4wYMcK8
mu3VBznXsHDhQrlpyZIl7swtKCiQR5jWrVtL8tnZ2ZKG03PlYh46dKiM+/bb
b+VbG6u3nisjAl40k6a++OILp+dOmDAhMjJSdrZ379633XabLJdHvGB+2WTH
jh3R0dG2nJFwRtdOzKVrp+fStTW6dmIuXTs9l66t0bUTc+na6bl0HYrQq09P
T5djnpCQMHHixA8++EC6lvuUy2/Lli3m1WyvPsi5orCwsH79+sbfZ3dnrlyf
PXv2bNmypazZp0+fW37MY+hzZ86cKbfOnz/fWNnG6q3nlpSUTJkyZc2aNRcv
Xjx+/Pi8efPi4uJiY2Pla0fnDh48OKLiEzwk//z8/OnTp8uaderU2bZtm/Xd
5uTkPProoyFuW/ijayfm0jVde4uunZhL13TtLbp2Yi5d03U4C7368vLyDz/8
sG3btnLMjVdd5OuCgoKA1WyvPsi5+/bta9KkiQQY+nVYrbmGrVu3yuhGjRr9
+eefzs2VKVFRUQ0aNHjrhn79+skK2dnZs2fPdm5ulTIyMmSdFStWODr3+eef
lyXmzdi4caMseeWVV6zvtl27dgsXLgxx28IfXTs010DXDs2la2t07dBcA107
NJeurdG1Q3MNdO3QXCW73rt375gxY7p3756YmJicnJybm+v/2EB72fj7Jhcv
XtyzZ4//YwYDOPf7JhZzCwsLZQebNm1a+UMLHZ1rtmzZMtnxvLw85+auXbu2
9f8XGxsrQ1u0aNGlSxfn5lYpPz9fRof+aGM9d8aMGTLF/Naa69evR0dHDx06
1OKuDh06JD/1xx9/2LVt1UXXtsyla7o2o+saoOsq0bUTc+naGl07MdeMrp2Y
W0u7tjB//nz/6wx169Y1vmjcuPHBgwdtn+XEpz1UyYVPewiwadOm+Pj4Vq1a
OZH8zch1uG/fPvOSnJycgOvTBY5+2oPZ119/HfBy4qhRo2S08Wsvztm9e3dk
ZGRqaqp/yc8//yxz33zzTYufmjVrVufOnR3dMAt0bQu6pusAdG07unZtG3x0
fRN0bTu6dm0bfHR9E952beHAgQNG6VlZWb/++uuVK1fWrVtnfDi8ja+f+Dld
/aFDh+ZVeOutt2QXunfvbnz73XffOTr3008/rVevnkx89dVXJYF3bvj++++d
G1pWViYPMjJ33LhxeXl5X375ZWZmpjyAJyQkXLx40bm5lblT/dWrV+X6adSo
0ZQpUzZu3Lh+/fq0tDSZ27dvX+u/7GCLESNGSPgTJkzYvHmznG458nfeeeex
Y8csfqRHjx5yDTi9YVWia1vQNV1XRtd2oWu6dghdW6BrG9E1XdfM/PnzIyr+
wvu1a9f8C3fs2GG88vbPP//YO87p6teuXRtRlTFjxjg69+GHH65y7tSpUx2d
e/r06ZEjRzZt2tQYJ5fl4MGDi4qKHB1amfHhDy685iZPTEOHDjUeYI2XiMeP
H+/Qu7MCyGPsxIkT69evb4zu0KGD9Uc9/PXXX/IIHPCKqGvo2hZ0TdcB6NpG
dE3XDqFrC3RtL7qm6xow3kiflpYWsLxJkyay3PY3vbj2jhfdnDx5cu/evS6/
1OaVS5cuSU379+8vLS11ebQ8OcpcOdq3XHPp0qUJCQkubFKV6FoNdO0Ouq4S
XTuErt1B11Wia4fQtTtqS9fWZBek7vj4ePOLA0VFRbLw/vvvt30c1UMT6enp
kyZN8mo6XQNOoGtAPXQNqMfbrm9p4MCB0niDBg1mz57977//XrhwwXj/xnvv
vWf7LKoH3EHXgHroGlAPXQO6KS0tTU5ONt5Ff/vtt99zzz3yxRtvvOHELKoH
3EHXgHroGlAPXQNa+e+//3JycqKjo+Pj43v06BEZGWnkP2jQICf+PhrVAy6g
a0A9dA2oh64B3bzwwgvSeOfOnY0P6Dtx4kRubm7Dhg1lYfPmzeVbrzcQQLXR
NaAeugbUQ9eAVnbu3Cl116lT5/jx4+blR44cadWqldw0duxYr7YNQM3QNaAe
ugbUQ9eAbhYsWCBp9+rVq/JNxl+O69ixo/tbBSAUdA2oh64B9dA1oJvFixdL
2t26dat807x58+SmpKQk97cKQCjoGlAPXQPqoWtANwcPHjQ+3mHWrFnl5eX+
5SdOnPjf//4nyzMzMz3cPAA1QNeAeugaUA9dAxqaNm2a8eGKHTp0kMYnT548
fPjwmJgYWdK6devi4mKvNxBAtdE1oB66BtRD14BuysvLV61a1a5duwiTevXq
jRs3zom/dADABXQNqIeuAfXQNaCtM2fO/PTTT1u3bj1y5EhZWZnXmwPABnQN
qIeuAfXQNQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUElJSUleXl5G
RsbcuXO93hYA9qBrQD10DaiHrgF9LF++vH///vHx8cYfGezUqZPXWwQgVHQN
qIeuAfXQNaCblJSUCBOqBxRA14B66BpQD10Dujl//vzfFXJzc6keUANdA+qh
a0A9dA1oa86cOVQPKIauAfXQNaAeugZ0Q/WAeugaUA9dA+qha0A3VA+oh64B
9dA1oB66BnRD9YB66BpQD10D6qFrQDdUD6iHrgH10DWgHroGdEP1gHroGlAP
XQPqoWtAN1QPqIeuAfXQNaAeugZ0Q/WAeugaUA9dA+qha0A3VA+oh64B9dA1
oB66BnRD9YB66BpQD10D6qFrQAepqalNboiLi4uo4F8yYMAArzcQQLXRNaAe
ugbUQ9eAbrp27Rpxc0lJSV5vIIBqo2tAPXQNqIeuAQAAAAAAgFrt7rvv9noT
ADdkZWXNnTvX661wCV1DE3QNqIeuAfVo1bU1qocm3n///Y4dO3q9FS6ha2iC
rgH10DWgHq26tkb10MTRo0cjIiLkX683xA10DU3QNaAeugbUo1XX1qge+ujY
seOcOXO83go30DX0QdeAeugaUI8+XVujeuhj6tSpffr08Xor3EDX0AddA+qh
a0A9+nRtLZjqS0pK8vLyMjIyXP5leU/m7tu37/XXX5dro3379s8999zHH3/s
2mit9teTuYWFhVFRUcXFxS7M8hZdB6Br10a7v790bUbX7uA4O42uzbje3KHV
cfZkrj5dW7Oufvny5f3794+Pjzf+ymGnTp3c2Sqv5m7YsCEuLi7gbzuOHj26
rKzM0bm67a9Xc8V999330UcfOT3Fc3RtRtdq76+PrivQtdrXuW7H2UfXFbje
6FqluT5turZmXX1KSor5+nft7Hgy9/Dhw1FRUTLuiSee2LNnz8mTJxcuXFi3
bl1ZkpOT4+horfbXw+MssrOzZa7TUzxH1350rfb+GujaR9eqX+e6HWcfXVfg
eqNrleb6tOnamnX158+f/7tCbm6um2fHk7mZmZkyq3fv3uZX2JYvXy4LGzZs
eOnSJedGa7W/Hh5nsXnz5vr16zs9xXN07UfXPqX310DXPrpW/TrX7Tj76LoC
1xtdqzTXp03X1oL8tIc5c+a4fHZcnnv58uXY2FiZ9dlnn5mXX7t2rVmzZrJ8
6dKlTm+DT4P99fw4X79+/a677gqYrh66Nnh+vRnYX6fRtRldq3qduzzX8+NM
12Zcb3StxlxNurZG9YYDBw7IoJiYmMq/WvLyyy/LTVlZWU5vg0+D/Q2H4zx6
9Ojhw4c7PcVbdG0Ih+vNx/66osZdFxUVbdq0yfbtcQJdG3S+zt2cGw7Hma79
uN7oWpm5Ovw/3BrVG7755hsZ1KZNG1/FyzKTJ09+9tln9+/fL9/OmjVLbkpL
S3N6G3wa7G84HOf8/PyGDRteu3bN6UEeomtDOFxvPvbXFTXuesmSJT179nRi
k2xH1wadr3M354bDcaZrP643ulZmrg7/D7dmY/Xnzp3bs2fP2bNnbdo0V+ca
v1fSq1cv+bqgoCCiwpAhQ+TbvLw8+bpbt25OzA2g/P6Gw3G+cuVKbGxsbXlV
vGbo2hAO15uP/a1K+HSt5//Sa/V51/k6d3NuOBxnuvbjeqNrZebq8P9wa7ZU
f/jw4f79+0fc0KZNm9WrV9uyea7NXbRokdxD3759fRV/78C4w0GDBsm3cp/y
dVJSkhNzAyi/v2FynFNTUzMzM225q/BE14Ywud7YX7Nw61q3/6UrcN41v851
O850beB6o2uV5ir//3BroVd/9erVxMTEyMjIYcOGycPd22+//cADD8jK27Zt
C33zXJubn58vP/vggw/6brzjZdSoUcY7XhYsWCA3Pf74407MDaD8/obJcc7L
y2vRokUwa5aXl/93c6FviUPo2hAm1xv76xeGXct/+Xr06EHXoW8e17mfGnPD
5DjTtYHrja5Vmhs+/w+fO3du/+AUFBSEPs4QevVbt241R+Gr+NzCVatW2bJ5
rs3dtWuX3FuVR8P4NP6xY8c6MTeA8vsbJsf52LFjcudHjx695ZrmF/0qC+Ye
6NrDuWFyvbG/fnQdCro2aH6d63ac6drA9UbXKs11s2trf//996HgXLhwIcRZ
fqFXb7w/xKH3D7g2t7i4ODIyUu6wsLAw4KauXbvK8hkzZjgxN4Dy+xsmx1ke
PZo1a1ZeXn7LNU+dOmVRYjAvu9G1h3PD5Hpjf/3CsOtp06YlJSXRdei4zv3U
mBsmx5muDVxvdK3SXDf/Hx6GQq/+7NmzjRs3lmSys7N///33Kn/83LlzK1eu
TE9PX7RoUbU2L5S5u3btmjBhQufOndu1ayejK+ccYODAgZUvs71798rCOnXq
+F9dueXc3bt3Z2RkyGNFYmLiY489tmbNmmD3NuTjbCgrK3vxxRfT0tLOnDlj
sZpd+ztp0qTU/0+muzDXV/FYnZWV1a1bt7Zt2z799NP5+fkWc83kevC/iKok
uvaja58rXZuFuL8ud63V74fSdYDa0rVdc/V5vqbrAHQdJB26tmuuj/+H15Qt
n/bw448/tmrVSlaIioqSi+2HH34w3zpz5kzj5SwR/PUQ4lx54K1Xr16jRo3k
YpDwZZ3o6Gjp0WLWV199ZdzVJ598Yiw5deqUXE6y8Mknnwxy7uLFi2WhXK6y
fMiQITExMbLa9OnTnd5fM3ngCub9GLbsr0hISIiLi3vQpHfv3i7M/eWXX5o3
by4PyP369Rs2bJix5tq1ay1GG0pLS+Pj4zds2HDLNWsvuvaja3e6tmt/3e9a
q/+l++i6dnZt11x9nq/p2nwrXdO1E3P5f3iNWVSfmpra5AY5rcaF5F8yYMAA
88pyJFesWNGlSxdjtfT0dFli3LR9+/ZFixYZf60vmOptmTtlypQ+ffr4Px5/
/fr1cutTTz1lMbe8vHzkyJGymjxGyQNFSkqKXBvybcuWLX/77beAlW8299Ch
Q88880xxcbGx2pEjR+SyvPfee53eXz95yJLlMlH+LSoqcnp/hTy0BjwqWrNr
bnJysjywf/7558a3JSUlcpkF8xaUjRs33nHHHVevXg1+m2sduvaja3e6tmt/
3e9ajf+l07XaXds1V5/na7qma2M1unZuLv8PrzGL6o3fs7gZ8yf/m23ZsuWh
hx6KMP2ChuH06dNBVm/X3OvXr/tvlYtBrqj27dtbj5bwJ0+eLJexMatu3bqP
PPLIiRMnLH7kZvvrJ7fKtW3eGIf211fx/pyYmJhOnTq98847EUG85hb6/so9
yMPa+PHjrQfZPnfnzp3ydUZGRrXmGmRrrR//FUDXZnTtQte27K8nXe/atWvZ
smU1+EH30bWZVl3bMler52u6pms/unZiLv8PD0WQ73ipFslEzkhycrJ5YfDV
2zvXUFpaGhsbm5KSEsz9yJV88ODBbdu2Xb58OcS5q1evloeOl156KZj7qa6A
uefPn09MTGzcuPGxY8fefffdW1bvF8r+njt3Tr5+7bXXNm/evG7duu3bt5eU
lAS5/aHMnTdvnnwtj3K+ir+JcOnSpeCHNm/efOXKlUGuX0vRdWV0HfzcULqu
LroOHl1XplvXoczl+To80XVldB38XJ6va6PQq5fTPWnSpCtXrviXGG8vGTFi
hHk126sPcq5h4cKFctOSJUvcmVtQUCCPMK1bt5bks7OzJQ2n58rFPHToUBn3
7bffyrc2Vm89V0YEvGgmTX3xxRdOz50wYUJkZKTsbO/evW+77TZZLo94wfyy
yY4dO6Kjo205I+GMrp2YS9dOz6Vra3TtxFy6dnouXVujayfm0rXTc+k6FKFX
n56eLsc8ISFh4sSJH3zwgXQt9ymX35YtW8yr2V59kHNFYWFh/fr1e/ToYcvn
0gczV67Pnj17tmzZUtbs06fPLT/mMfS5M2fOlFvnz59vrGxj9dZzS0pKpkyZ
smbNmosXLx4/fnzevHlxcXGxsbHytaNzBw8eHFHxCR6Sf35+/vTp02XNOnXq
bNu2zfpuc3JyHn300RC3LfzRtRNz6ZquvUXXTsyla7r2Fl07MZeu6TqchV59
eXn5hx9+2LZtWznmxqsu8nVBQUHAarZXH+Tcffv2NWnSRAIM/Tqs1lzD1q1b
ZXSjRo3+/PNP5+bKlKioqAYNGrx1Q79+/WSF7Ozs2bNnOze3ShkZGbLOihUr
HJ37/PPPyxLzZmzcuFGWvPLKK9Z3265du4ULF4a4beGPrh2aa6Brh+bStTW6
dmiuga4dmkvX1ujaobkGunZorpJd7927d8yYMd27d09MTExOTs7NzfV/bKC9
bPx9k4sXL+7Zs8f/MYMBnPt9E4u5hYWFsoNNmzat/GGJjs41W7Zsmex4Xl6e
c3PXrl3b+v+LjY2VoS1atOjSpYtzc6uUn58vo0N/tLGeO2PGDJlifmvN9evX
o6Ojhw4danFXhw4dkp/6448/7Nq26qJrW+bSNV2b0XUN0HWV6NqJuXRtja6d
mGtG107MraVdW5g/f77/dYa6desaXzRu3PjgwYO2z3Li0x6q5MKnPQTYtGlT
fHx8q1atnEj+ZuQ63Ldvn3lJTk5OwPXpAkc/7cHs66+/Dng5cdSoUTLa+LUX
5+zevTsyMjI1NdW/5Oeff5a5b775psVPzZo1q3Pnzo5umAW6tgVd03UAurYd
Xbu2DT66vgm6th1du7YNPrq+CW+7tnDgwAGj9KysrF9//fXKlSvr1q0zPhze
xtdP/Jyu/tChQ/MqvPXWW7IL3bt3N7797rvvHJ376aef1qtXTya++uqrksA7
N3z//ffODS0rK5MHGZk7bty4vLy8L7/8MjMzUx7AExISLl686Nzcytyp/urV
q3L9NGrUaMqUKRs3bly/fn1aWprM7du3r8VfdrDLiBEjJPwJEyZs3rxZTrcc
+TvvvPPYsWMWP9KjRw+5BpzesCrRtS3omq4ro2u70DVdO4SuLdC1jeiarmtm
/vz5ERV/Wf7atWv+hTt27DBeefvnn3/sHed09WvXro2oypgxYxyd+/DDD1c5
d+rUqY7OPX369MiRI5s2bWqMk8ty8ODBRUVFjg6tzPjwBxdec5MnpqFDhxoP
sMZLxOPHj3fo3VkB5DF24sSJ9evXN0Z36NDB+qMe/vrrL3kEDnhF1DV0bQu6
pusAdG0juqZrh9C1Bbq2F13TdQ0Yb6RPS0sLWN6kSRNZbvubXlx7x4tuTp48
uXfvXpdfavPKpUuXpKb9+/eXlpa6PFqeHGWuHO1brrl06dKEhAQXNqlKdK0G
unYHXVeJrh1C1+6g6yrRtUPo2h21pWtrsgtSd3x8vPnFgaKiIll4//332z6O
6qGJ9PT0SZMmeTWdrgEn0DWgHroG1ONt17c0cOBAabxBgwazZ8/+999/L1y4
YLx/47333rN9FtUD7qBrQD10DaiHrgHdlJaWJicnG++iv/322++55x754o03
3nBiFtUD7qBrQD10DaiHrgGt/Pfffzk5OdHR0fHx8T169IiMjDTyHzRokBN/
H43qARfQNaAeugbUQ9eAbl544QVpvHPnzsYH9J04cSI3N7dhw4aysHnz5vKt
1xsIoNroGlAPXQPqoWtAKzt37pS669Spc/z4cfPyI0eOtGrVSm4aO3asV9sG
oGboGlAPXQPqoWtANwsWLJC0e/XqVfkm4y/HdezY0f2tAhAKugbUQ9eAeuga
0M3ixYsl7W7dulW+ad68eXJTUlKS+1sFIBR0DaiHrgH10DWgm4MHDxof7zBr
1qzy8nL/8hMnTvzvf/+T5ZmZmR5uHoAaoGtAPXQNqIeuAQ1NmzbN+HDFDh06
SOOTJ08ePnx4TEyMLGndunVxcbHXGwig2ugaUA9dA+qha0A35eXlq1atateu
XYRJvXr1xo0b58RfOgDgAroG1EPXgHroGtDWmTNnfvrpp61btx45cqSsrMzr
zQFgA7oG1EPXgHroGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqKSk
pCQvLy8jI2Pu3LlebwsAe9A1oB66BtRD14A+li9f3r9///j4eOOPDHbq1Mnr
LQIQKroG1EPXgHroGtBNSkpKhAnVAwqga0A9dA2oh64B3Zw/f/7vCrm5uVQP
qIGuAfXQNaAeuga0NWfOHKoHFEPXgHroGlAPXQO6oXpAPXQNqIeuAfXQNaAb
qgfUQ9eAeugaUA9dA7qhekA9dA2oh64B9dA1oBuqB9RD14B66BpQD10DuqF6
QD10DaiHrgH10DWgG6oH1EPXgHroGlAPXQO6oXpAPXQNqIeuAfXQNaAbqgfU
Q9eAeugaUA9dA7qhekA9dA2oh64B9dA1oIPU1NQmN8TFxUVU8C8ZMGCA1xsI
oNroGlAPXQPqoWtAN127do24uaSkJK83EEC10TWgHroG1EPXAAAAAAAAQK12
9913e70JgBuysrLmzp3r9Va4hK6hCboG1EPXgHq06toa1UMT77//fseOHb3e
CpfQNTRB14B66BpQj1ZdW6N6aOLo0aMRERHyr9cb4ga6hiboGlAPXQPq0apr
a1QPfXTs2HHOnDleb4Ub6Br6oGtAPXQNqEefrq1RPfQxderUPn36eL0VbqBr
6IOuAfXQNaAefbq2Fkz1JSUleXl5GRkZLv+yvFZz9+3b9/rrr8s12b59++ee
e+7jjz9mru0KCwujoqKKi4tdmOUtug6TuVr1ZXD/ONO1mVZ9eTVXq758PF87
jK7DZK5uXXsyV5+urVlXv3z58v79+8fHxxt/5bBTp07ubJVuczds2BAXFxfw
NyVHjx5dVlbGXHvdd999H330kdNTPEfX4TBXt768Os4+uq6gW1+6da3b/vro
uoJufel2net2nH3adG3NuvqUlBTzdeja2dFq7uHDh6OiomTcE088sWfPnpMn
Ty5cuLBu3bqyJCcnh7n2ys7OlrlOT/EcXXs+V8O+vDq/PrquoFVfXs3VrS+e
r11A157P1a1rD+f6tOnamnX158+f/7tCbm6um2dHq7mZmZkyq3fv3uZX2JYv
Xy4LGzZseOnSJebaaPPmzfXr13d6iufo2vO5Gvbl1fn10XUFrfryaq5uffF8
7QK69nyubl17ONenTdfWgvy0hzlz5rh8djSZe/ny5djYWJn12WefmZdfu3at
WbNmsnzp0qXMtdH169fvuuuugOnqoWtv52rbl8H980vXZsr35dVc3fryfH/p
2kz5vrya6/l1blD+OPtp0rU1qvd27oEDB2RQTExM5V8tefnll+WmrKws5tpr
9OjRw4cPr8EPFhUVbdq0yfbtcQJdeztX5758Hp1fuvZTvi+v5urWVzjsL137
Kd+XV3PD4Tr3aXCczXTo2hrVezv3m2++kUFt2rTxVbwcNHny5GeffXb//v3y
7axZs+SmtLQ05torPz+/YcOG165dq+4PLlmypGfPnk5sku3o2tu5Ovfl8+j8
0rWf8n15NVe3vsJhf+naT/m+vJobDte5T4PjbKZD19ZsrP7cuXN79uw5e/as
TZumxVzj90p69eolXxcUFERUGDJkiHybl5cnX3fr1o259p7fK1euxMbG1uDV
s1pUPV17O1fnvnwenV+69lO+L6/m6tZXOOwvXfsp35dXc8PhOvdpcJzNdOja
mi3VHz58uH///hE3tGnTZvXq1bZsnvJzFy1aJPfQt29fX8XfOzDucNCgQfKt
3Kd8nZSUxFzbz29qampmZmZ1f6oWVU/X3s7VvC+vzi9dG5Tvy6u5uvUVJvtL
1wbl+/Jqbphc58of5wDKd20t9OqvXr2amJgYGRk5bNgwOSxvv/32Aw88ICtv
27Yt9M1Tfm5+fr787IMPPui78Y6XUaNGGe94WbBggdz0+OOPM9f285uXl9ei
RYtg1iwvL//vBnmI7tGjx38moW+JQ+ja27ma9+XV+aVrg/J9eTVXt77CZH/p
2qB8X17NDZPrXPnjHCB8up47d27/4BQUFIQ+zhB69Vu3bjVfnL6Kzw9ctWqV
LZun/Nxdu3bJvVV5Foy/AjB27Fjmhj43wLFjx+TOjx49ess1zS/6VRbMPdC1
hnM178ur80vXBuX78mqubn2Fyf7StUH5vryaGybXufLHOYCbXVv7+++/DwXn
woULIc7yC716430aNXj/AHNFcXFxZGSk3GFhYWHATV27dpXlM2bMYK7t5NGj
WbNm5eXlt1zz1KlT/u6mTZuWlJRkLjGYl93oWsO5mvfl1fmla4PyfXk1V7e+
wmR/6dqgfF9ezQ2T61z54xzAza7DUOjVnz17tnHjxnLpZmdn//7771X++Llz
51auXJmenr5o0aJqbV4oc3ft2jVhwoTOnTu3a9dORlfOyqG5u3fvzsjIkGYT
ExMfe+yxNWvWWM8aOHBg5ct77969srBOnTr+V3WCOc6GsrKyF198MS0t7cyZ
My7MnTRpUur/J9Pd2V95zMzKyurWrVvbtm2ffvrp/Px8i7lmcj34X8wMXi36
fRO6tn0uXVt3bRbidUXXN0PXts+tLV2bhbK/PF+HIbq2fS5d83wd5mz5tIcf
f/yxVatWskJUVJRcbD/88IP51pkzZxovK4ngr4cQ58oJqlevXqNGjeRikPBl
nejoaOnR6bmLFy+WhXK5yvIhQ4bExMTIatOnT7eY9dVXXxl39cknnxhLTp06
JZexLHzyySeDnGsmDyDBvB/DrrkJCQlxcXEPmvTu3duFub/88kvz5s3lgbFf
v37Dhg0z1ly7dq3FaENpaWl8fPyGDRtuuWaAWlQ9Xds7l65v2bVZKNcVXVug
a3vn1qKubdlfH8/XYYmu7Z1L1zxfhz+L6lNTU5vcIKfVuJD8SwYMGGBeWY7k
ihUrunTpYqyWnp4uS4ybtm/fvmjRIuOv5gVTvS1zp0yZ0qdPH//H469fv15u
feqpp5yee+jQoWeeeaa4uNhY7ciRI3JZ3nvvvRZzy8vLR44cKXcij43yAJWS
kiLXpHzbsmXL3377LWBli+NskIcOWS4T5d+ioiIX5spDa8CjkzW75iYnJ8sD
++eff258W1JSIpdZMG9B2bhx4x133HH16tXgt9lQi6qna3vn0vUt2XVd0bUF
urZ3bi3q2q7zy/N1GKJre+fS9S3xfO05i+qN33e4GfMn8Jtt2bLloYceijD9
ooTh9OnTQVZv19zr16/7b5WLQa6o9u3buzA3gNwq17Z5YyqT8CdPniz5GLPq
1q37yCOPnDhxwuJHqpy7d+/emJiYTp06vfPOOxFBvOYW+ly5B3lYGz9+vPUg
2+fu3LlTvs7IyKjWXINsrfXj/83s2rVr2bJlNfhB99G1Q/vrR9cBbDnOdG2N
rh3aX7+w7dqW/eX5OjzRtUP760fXTsyl61AE+Y6XapHLVc5IcnKyeWHw1ds7
11BaWhobG5uSkuLy3NWrV0vCL730UjD3IwUdPHhw27Ztly9frsHc8+fPJyYm
Nm7c+NixY+++++4tq7dl7rlz5+Tr1157bfPmzevWrdu+fXtJSUkwdxLi3Hnz
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
ffp4H8Fevny5LGzcuPGlS5c0y7Vs3ry5YcOGqlOCjl4bmxvEfgXreS6n1xWM
mufkar89KafXFYyab+Rqn1tuTK/t+Xm2hzlz5rj86pCr1OXLlyMjIyXr888/
915+7dq1Fi1ayPKlS5fqlOtx/fr1u+66yyddP/TazNyg98vi/vNMr71pP8/J
NWR7Qq+9aT/fyDUk15Be26P1Zubu379fgiIiIip/deuVV16RqzIyMnTK9TZ6
9Ojhw4fX4IaFhYWbNm1yfDwq0Gszc2tDv8qD9DzTaw/t5zm55mxPatzrOoRe
k2targm9tkfrzcz99ttvJahdu3blFYehJk+e/Nxzz+3bt0/+nDVrllyVkpKi
U6633Nzcxo0bX7t2rbo3XLJkSa9evVQMyXH02szc2tCv8iA9z/TaQ/t5Tq45
25Ma97oOodfkmpZrQq/tOdj6c+fO7dmz5+zZsw4NjVyFudb3tnr37i2X8/Ly
rLMuDBkyRP7MycmRyz169NAp19uVK1ciIyNr8L9dZr5Lr9Pz3LTc2tCv8iA9
z/TaQ/t5Tq4525Ma97oOodfkmpZrQq/tOdL6Q4cOJSQkhNzQrl271atXOzI8
chXlLlq0SO6hX79+5RW/J2Ld4aBBg+RPuU+5HBcXp1Ouj+Tk5PT09OreyrR3
6RrMc9Nya0m/gvU802uL9vOcXKO2JzXrdR1Cr8k1MFf7XtsLvPVXr16NjY0N
DQ0dNmyYvI155513HnzwQVl527ZtgQ+PXEW5ubm5ctuHHnqo/MYnykaNGmV9
omzBggVy1RNPPKFTro+cnJxWrVr5s2ZZWdl/N8hbkfj4+P+8BD4SRei1mbm1
pF/Bep7ptUX7eU6uUduTmvW6ssBHogi9JtfAXP97rdrcuXMT/JOXl+dUaOCt
37p1q/dGuLziPJmrVq1yZHjkKsrdtWuX3FuVr7716wNjx47VKdfH0aNH5c6P
HDlyyzW9D/pV5s890Gtyte+1j2A9z/Taov08J9eo7Qm9tmg/38g1Ktf/Xqt2
6tSpg/65cOGCU6GBt976PJKizw+Qqyi3qKgoNDRU7jA/P9/nqu7du8vyGTNm
6JTrQ7YeLVq0KCsru+WaJ0+e9PRu2rRpcXFx3k3053A6vSZX+177CNbzTK8t
2s9zco3antSs15XR65ohl1wVuf73WkuBt/7s2bNNmzaVTXRmZuYff/xR5c3P
nTu3cuXK1NTURYsWVWt4geTu2rVrwoQJXbt27dChg0RX3n0oyt29e3daWprs
m2JjYx9//PE1a9a4k+tRWlr60ksvpaSknDlzxma1gQMHVq5VQUGBLKxXr57n
eNQtcydNmpT8/yTdhdzyivcGGRkZPXr0aN++/TPPPJObm2uT603mg+egvf+M
+n4ovfZBr+177S3Ax0uvb4ZeO55bV3rtVK45++s6hF47nkuvdd1fa8ORsz38
9NNPbdq0kRXCwsJksv3444/e186cOdM6fCr8nw8B5sobqgYNGjRp0kQmgxRf
1gkPD5c+qs5dvHixLJTpKsuHDBkSEREhq02fPl11rjfZUfrzOauvv/7auqtP
P/3UWnLy5Empjyx86qmn/M+NiYmJiop6yEufPn1cyP31119btmwpbwD69+8/
bNgwa821a9faRFtKSkqio6M3bNhwyzV9GPUuvZxe0+vq9Nqpx0uvbdBrZ3Pr
UK+dyjVnf12H0Gtnc+m1xvtrbdi0Pjk5udkN8rJaE8mzZMCAAd4ryzO5YsWK
bt26WaulpqbKEuuq7du3L1q0yPp1SH9a70julClT+vbt6zk9/vr16+Xap59+
WnXuwYMHn3322aKiImu1w4cPy7S89957Ved6yC5Slkui/FtYWGiTW1ZWNnLk
SFlNtsmyYUxKSpIuyJ+tW7f+/ffffVa2yZVNq89e2J5TuYmJibJh/+KLL6w/
i4uLZZr589GyjRs33nHHHVevXvV/zBY93qXTa3rtT251e+3U46XXNui1s7l1
qNdO5Zqzv65D6LWzufT6luru/lobNq23vtdzM96/NOFty5YtDz/8cIjXF4Is
p0+f9rP1TuVev37dc61MBplRHTt2dCHXh1wrc9t7MOpyCwoKIiIiunTp8u67
74b4ccxNdqyTJ0+W2lpZ9evXf/TRR48fP25zE59cuQfZrI0fP94+yPHcnTt3
yuW0tLRq5VpktPbb/5vZtWvXsmXLanBD99FrRY/Xg16reLz02h69VvR4PWpt
rx3JNWp/XYfQa0WP14Neq8il14Hw8xMv1SKbZXlFEhMTvRf633pncy0lJSWR
kZFJSUku565evVp2VS+//LILuefPn4+NjW3atOnRo0ffe++9W7beQ5p74MCB
bdu2Xb58ubq5586dk8uvv/765s2b161bt3379uLiYj/HH0juvHnz5LJs5cor
fhPh0qVL/oe2bNly5cqVfq5fR9Frpbn02kH02n/0Wmluneh1ILnsr2sneq00
l14ryqXXgQi89fJyT5o06cqVK54l1sdLRowY4b2a4633M9eycOFCuWrJkiXu
5Obl5ckWpm3btlL5zMxMqYbqXJnMQ4cOlbjvvvtO/nSw9fa5EuFz0Ew69eWX
X6rOnTBhQmhoqDzYPn363HbbbbJctnj+fNlkx44d4eHhjrwitRm9VpFLr1Xn
0mt79FpFLr1WnUuv7dFrFbn0WnUuvQ5E4K1PTU2V5zwmJmbixIkffvih9Fru
U6bfli1bvFdzvPV+5or8/PyGDRvGx8f782UER3Jlfvbq1at169ayZt++fat1
msea5c6cOVOunT9/vrWyg623zy0uLp4yZcqaNWsuXrx47NixefPmRUVFRUZG
ymWluYMHDw6pOIOH1D83N3f69OmyZr169bZt22Z/t1lZWY899liAY6v96LWK
XHpNr4OLXqvIpdf0OrjotYpcek2va7PAW19WVvbRRx+1b99ennPrqItczsvL
81nN8db7mbt3795mzZpJAQOfh9XKtWzdulWimzRp8tdff6nLlZSwsLBGjRq9
fUP//v1lhczMzNmzZ6vLrVJaWpqss2LFCqW5L7zwgizxHsbGjRtlyauvvmp/
tx06dFi4cGGAY6v96LWiXAu9VpRLr+3Ra0W5FnqtKJde26PXinIt9FpRrpa9
LigoGDNmTM+ePWNjYxMTE7Ozsz2nDXSWg983uXjx4p49ezynGfSh7vsmNrn5
+fnyAJs3b1755JxKc70tW7ZMHnhOTo663LVr17b9f5GRkRLaqlWrbt26qcut
Um5urkQHvrWxz50xY4akeH+05vr16+Hh4UOHDrW5q4MHD8qt/vzzT6fGVl30
2pFcek2vvdHrGqDXVaLXKnLptT16rSLXG71WkVtHe21j/vz5nuMM9evXty40
bdr0wIEDjmepONtDlVw424OPTZs2RUdHt2nTRkXlb0bm4d69e72XZGVl+cxP
Fyg924O3b775xudw4qhRoyTa+tqLOrt37w4NDU1OTvYs+eWXXyT3rbfesrnV
rFmzunbtqnRgNui1I+g1vfZBrx1Hr10bQzm9vgl67Th67doYyun1TQS31zb2
799vNT0jI+O33367cuXKunXrrJPDO3j8xEN16w8ePDivwttvvy0PoWfPntaf
33//vdLczz77rEGDBpL42muvSQXeveGHH35QF1paWiobGckdN25cTk7OV199
lZ6eLhvwmJiYixcvqsutzJ3WX716VeZPkyZNpkyZsnHjxvXr16ekpEhuv379
bH7ZwSkjRoyQ4k+YMGHz5s3ycsszf+eddx49etTmJvHx8TIHVA+sSvTaEfSa
XldGr51Cr+m1IvTaBr12EL2m1zUzf/58ed5at2597do1z8IdO3ZYR97++ecf
Z+NUt37t2rUhVRkzZozS3EceeaTK3KlTpyrNPX369MiRI5s3b27FybQcPHhw
YWGh0tDKrJM/uHDMTXZMQ4cOtTaw1iHi8ePHK/p0lg/Zxk6cOLFhw4ZWdKdO
nexP9fD333/LFtjniKhr6LUj6DW99kGvHUSv6bUi9NoGvXYWvabXNWB9kD4l
JcVnebNmzWS54x96ce0TL6Y5ceJEQUGBy4faguXSpUvSpn379pWUlLgcLTtH
yZVn+5ZrLl26NCYmxoUhVYle64Feu4NeV4leK0Kv3UGvq0SvFaHX7qgrvbYn
D0HaHR0d7X1woLCwUBY+8MADjsfRehgiNTV10qRJwUqn14AK9BrQD70G9BPc
Xt/SwIEDpeONGjWaPXv2v//+e+HCBevzG++//77jWbQecAe9BvRDrwH90GvA
NCUlJYmJidan6G+//fZ77rlHLrz55psqsmg94A56DeiHXgP6odeAUf7777+s
rKzw8PDo6Oj4+PjQ0FCr/oMGDVLx+2i0HnABvQb0Q68B/dBrwDQvvviidLxr
167WCfqOHz+enZ3duHFjWdiyZUv5M9gDBFBt9BrQD70G9EOvAaPs3LlT2l2v
Xr1jx455Lz98+HCbNm3kqrFjxwZrbABqhl4D+qHXgH7oNWCaBQsWSLV79+5d
+Srrl+M6d+7s/qgABIJeA/qh14B+6DVgmsWLF0u1e/ToUfmqefPmyVVxcXHu
jwpAIOg1oB96DeiHXgOmOXDggHV6h1mzZpWVlXmWHz9+/L777pPl6enpQRwe
gBqg14B+6DWgH3oNGGjatGnWyRU7deokHZ88efLw4cMjIiJkSdu2bYuKioI9
QADVRq8B/dBrQD/0GjBNWVnZqlWrOnToEOKlQYMG48aNU/FLBwBcQK8B/dBr
QD/0GjDWmTNnfv75561btx4+fLi0tDTYwwHgAHoN6IdeA/qh1wAAAAAAAAAA
AAAAAAAAAAAAABr4Hyzrz3c=
    "], {{0, 511.}, {661., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{661., 511.},
  PlotRange->{{0, 661.}, {0, 511.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->956978909,ExpressionUUID->"7449531e-5594-48c9-acd8-90952ca9d150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"stb", "**", "gs"}], "-", "gs"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->307792948,ExpressionUUID->"108e59c2-1222-481d-a9ae-fb997c6ce5f4"],

Cell[BoxData["3.479393`"], "EchoTiming",
 CellID->655460138,ExpressionUUID->"6b1f621d-8660-40aa-8a89-42e852115e5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1874913903,ExpressionUUID->"7deb33a0-cc2e-4494-bb1f-b4d90157cb8d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1c416cfa-402b-4227-baf7-047c83255c6f"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1131057651,ExpressionUUID->"f0aabde4-d5aa-4f13-84d2-c89a514a750a"],

Cell[TextData[{
 "If you do not specify the qubits, then the elements of the stablizer are \
expressed in terms of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Pauli"]], "paclet:Q3/ref/Pauli", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "98175373-403c-4180-b0a8-2bc9936ebbfe"],
 "."
}], "ExampleText",
 CellID->1408340143,ExpressionUUID->"d4933cf0-9348-4b8f-b4ee-24896d301d33"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stb", "=", 
  RowBox[{"Stabilizer", "[", "g", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1449433912,ExpressionUUID->"b10b35d8-eca7-4454-920c-f68613b09307"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{0, 0, 0, 0, 0, 0}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{0, 0, 1, 2, 2, 3}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{0, 0, 2, 1, 1, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{0, 0, 3, 3, 3, 1}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{0, 1, 0, 2, 3, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{0, 1, 1, 0, 1, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{0, 1, 2, 3, 2, 0}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{0, 1, 3, 1, 0, 3}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{0, 2, 0, 1, 2, 1}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{0, 2, 1, 3, 0, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{0, 2, 2, 0, 3, 3}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{0, 2, 3, 2, 1, 0}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{0, 3, 0, 3, 1, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{0, 3, 1, 1, 3, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{0, 3, 2, 2, 0, 1}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{0, 3, 3, 0, 2, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{1, 0, 0, 3, 2, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{1, 0, 1, 1, 0, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{1, 0, 2, 2, 3, 0}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{1, 0, 3, 0, 1, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{1, 1, 0, 1, 1, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
      Q3`Pauli[{1, 1, 1, 3, 3, 3}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{1, 1, 2, 0, 0, 2}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{1, 1, 3, 2, 2, 1}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
      Q3`Pauli[{1, 2, 0, 2, 0, 3}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{1, 2, 1, 0, 2, 0}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{1, 2, 2, 3, 1, 1}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{1, 2, 3, 1, 3, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{1, 3, 0, 0, 3, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{1, 3, 1, 2, 1, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{1, 3, 2, 1, 2, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{1, 3, 3, 3, 0, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{2, 0, 0, 2, 1, 1}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{2, 0, 1, 0, 3, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{2, 0, 2, 3, 0, 3}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{2, 0, 3, 1, 2, 0}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
      Q3`Pauli[{2, 1, 0, 0, 2, 3}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
      Q3`Pauli[{2, 1, 1, 2, 0, 0}]], ")"}]}], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{2, 1, 2, 1, 3, 1}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{2, 1, 3, 3, 1, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{2, 2, 0, 3, 3, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
      Q3`Pauli[{2, 2, 1, 1, 1, 3}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{2, 2, 2, 2, 2, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{2, 2, 3, 0, 0, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{2, 3, 0, 1, 0, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{2, 3, 1, 3, 2, 1}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{2, 3, 2, 0, 1, 0}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{2, 3, 3, 2, 3, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{3, 0, 0, 1, 3, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{3, 0, 1, 3, 1, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{3, 0, 2, 0, 2, 1}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{3, 0, 3, 2, 0, 2}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{3, 1, 0, 3, 0, 1}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{3, 1, 1, 1, 2, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{3, 1, 2, 2, 1, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{3, 1, 3, 0, 3, 0}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
       "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
      Q3`Pauli[{3, 2, 0, 0, 1, 2}]], ")"}]}], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
    Q3`Pauli[{3, 2, 1, 2, 3, 1}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"X\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{3, 2, 2, 1, 0, 0}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{3, 2, 3, 3, 2, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Y\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"I\"\>"}],
    Q3`Pauli[{3, 3, 0, 2, 2, 0}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"I\"\>", 
     "\[CircleTimes]", "\<\"I\"\>", "\[CircleTimes]", "\<\"Z\"\>"}],
    Q3`Pauli[{3, 3, 1, 0, 0, 3}]], ",", 
   InterpretationBox[
    RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Y\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
     "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"Y\"\>"}],
    Q3`Pauli[{3, 3, 2, 3, 3, 2}]], ",", 
   RowBox[{"-", 
    RowBox[{"(", 
     InterpretationBox[
      RowBox[{"\<\"Z\"\>", "\[CircleTimes]", "\<\"Z\"\>", 
       "\[CircleTimes]", "\<\"Z\"\>", "\[CircleTimes]", "\<\"X\"\>", 
       "\[CircleTimes]", "\<\"X\"\>", "\[CircleTimes]", "\<\"X\"\>"}],
      Q3`Pauli[{3, 3, 3, 1, 1, 1}]], ")"}]}]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->724305716,ExpressionUUID->"2de7b1d1-6dd3-4f22-baea-656bd853cab6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gs", "=", 
  RowBox[{"GraphState", "[", "g", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->930381099,ExpressionUUID->"b256adf2-5b0f-4133-8ede-c43d36eb673d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1"}]},
    "Ket"]}], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0"}]},
    "Ket"]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   TemplateBox[{
     RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}]},
    "Ket"]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->762707195,ExpressionUUID->"12693aa9-a6a2-460f-8fc5-204b030a24b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"stb", "**", "gs"}], "-", "gs"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1884103588,ExpressionUUID->"930b4291-55d6-475a-b773-2a192e96eae5"],

Cell[BoxData["1.269573`"], "EchoTiming",
 CellID->1349511612,ExpressionUUID->"969b87f9-db08-48bd-8e55-690b14783468"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1666866917,ExpressionUUID->"14894a5d-7cf6-4946-94e8-7bb9944d2941"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["StabilizerGenerators"]], 
           "paclet:Q3/ref/StabilizerGenerators", "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "904eb8d0-3d51-4bc6-845c-136613dfc8ca"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["StabilizerStateQ"]], "paclet:Q3/ref/StabilizerStateQ", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "9ae76757-bfcc-4650-bd4a-b7f80db4afac"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["CliffordGroup"]], "paclet:Q3/ref/CliffordGroup", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "054b5d24-5fa4-48bc-b4cf-06698eb3d413"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["PauliGroup"]], "paclet:Q3/ref/PauliGroup", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "1bfbe969-8d47-432b-9d01-2aae17a9a3ce"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GraphState"]], "paclet:Q3/ref/GraphState", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "1120427d-1473-4f13-ac7b-a14920ab2e9c"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["GroupStabilizer"]], "paclet:ref/GroupStabilizer"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "95fc06e2-e8c7-4adb-9f18-738869a38e2d"]
       }], "SeeAlso",ExpressionUUID->"ff090be5-aacb-4c00-9f4a-bab3d1e139f1"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"23358829-9b4f-4de9-9852-\
88fdc561304b"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTutorial.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TutorialsSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Stabilizer Formalism"]], 
           "paclet:Q3/tutorial/StabilizerFormalism"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "1d289cd2-8884-48d7-a311-2321c63819ea"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Stabilizer Codes"]], 
           "paclet:Q3/tutorial/StabilizerCodes"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "7fc0541a-3257-4ca5-acaa-33b3eed96895"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["The Pauli and Clifford Groups"]], 
           "paclet:Q3/tutorial/PauliAndCliffordGroups"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "f359aa19-0c89-4cfb-8500-6bd5123649d2"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems with Q3"]], 
           "paclet:Q3/tutorial/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "6f36929d-8540-4587-8929-68dd2357e828"]}]}
     }]}
  }]], "TutorialsSection",ExpressionUUID->"ec32eec2-8f18-4e34-92a8-\
506a533da98f"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems"]], 
           "paclet:Q3/guide/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "9e5e4421-6a84-4471-b8cd-3b6f4132f6d9"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"396e1956-9ae2-4790-84e1-\
606da8f0973c"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "D. Gottesman, Physical Review A 54, 1862 (1996)"}]]]], 
             "https://doi.org/10.1103%2Fphysreva.54.1862"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "da0d1e7d-36c9-4f03-8046-c35fd66ebec5"]}]],ExpressionUUID->
         "b49dab86-e0fa-46f4-8238-02914317cc62"],
        ", \[OpenCurlyDoubleQuote]Class of quantum error- correcting codes \
saturating the quantum Hamming bound\[CloseCurlyDoubleQuote]."
       }], "RelatedLinks",ExpressionUUID->
        "b80a5dd6-512a-4542-b7f3-15deb10afde7"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "D. Gottesman, Stabilizer Codes and Quantum Error \
Correction (Ph.D. Thesis, California Institute of Technology, 1997)"}]]]], 
             "https://arxiv.org/abs/quant-ph/9705052"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "5cc68fe9-13c6-4dfa-aec5-f399fcc90431"]}]],ExpressionUUID->
         "8f2dbe64-7f4b-4e68-9b33-6c3487101db4"],
        "."
       }], "RelatedLinks",ExpressionUUID->
        "fa4ab102-45f7-4663-846b-c59a5663884e"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "D. Gottesman, Physical Review A 57, 127 (1998)"}]]]], 
             "https://doi.org/10.1103/PhysRevA.57.127"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "de57cebc-b7b5-47ff-a2fa-d16fc6ea641f"]}]],ExpressionUUID->
         "e793793e-2ca3-4b40-a9fd-02ac0f066050"],
        ", \[OpenCurlyDoubleQuote]Theory of fault-tolerant quantum \
computation\[CloseCurlyDoubleQuote]."
       }], "RelatedLinks",ExpressionUUID->
        "775b2518-aa36-4a18-abbd-b99601701e4a"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "M. Hein et al. (2005)"}]]]], 
             "https://doi.org/10.3254/978-1-61499-018-5-115"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "f7a17fb9-64c7-4e16-9eee-1e7c5cbe850b"]}]],ExpressionUUID->
         "3cf1470f-878e-4216-bf19-5eafd906ae5b"],
        ", \"Entanglement in graph states and its applications\" in \n\
Proceedings of the International School of Physics \"Enrico Fermi\" on \
\"Quantum Computers, Algorithms and Chaos\", ed. by G. Casati, D. \
Shepelyansky, P. Zoller and G. Benenti (2005)."
       }], "RelatedLinks",ExpressionUUID->
        "c44e0ba8-b62f-4535-b710-f4a3abd5eab9"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "S. Sang et al. (2021)"}]]]], 
             "https://doi.org/10.1103/PRXQuantum.2.030313"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "cc36ac24-5e46-4528-aa31-712db09e88f4"]}]],ExpressionUUID->
         "0aa0fbce-fcde-4343-9d37-0947c8114f98"],
        ", PRX Quantum 2, 030313 (2021), \"Entanglement Negativity at \
Measurement-Induced Criticality.\""
       }], "RelatedLinks",ExpressionUUID->
        "064f1961-66ad-432a-9ac3-2f17af42d923"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "M. Nielsen and I. L. Chuang (2022)"}]]]], 
             "https://doi.org/10.1017/CBO9780511976667"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "74d7b8d7-79bd-4c50-8d5e-c58bfe952c36"]}]],ExpressionUUID->
         "c04bb7e3-9c6c-49b2-bd01-dcac9c4c4d24"],
        StyleBox[
        ", Quantum Computation and Quantum Information (Cambridge University \
Press).",
         FontSlant->"Plain"]
       }], "RelatedLinks",ExpressionUUID->
        "740cfd9e-5a07-499b-853f-e9359b4134e6"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "Mahn-Soo Choi (2022)"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "1f4b1bf4-1cc7-43eb-87b0-35dc06a6d044"]}]],ExpressionUUID->
         "d3141988-ada2-4e5e-85aa-0b23358c675c"],
        ", A Quantum Computation Workbook (Springer)."
       }], "RelatedLinks",ExpressionUUID->
        "486dfb34-753c-4438-bf68-77f23c8e0961"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"b42e7a0f-e900-455b-acfb-\
1e3b188005a8"],

Cell[" ", "FooterCell",ExpressionUUID->"fa5b933d-38eb-4e0a-88e3-e9eeb5c370a8"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Stabilizer",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "AllOptsTable" -> Closed, "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2024, 7, 10, 13, 31, 23.334582}", 
    "history" -> {"12", "13", "", ""}, "context" -> "Q3`", 
    "keywords" -> {
     "stabilizer formalism", "stabilizer codes", "graph states", 
      "cluster states", "measurement-based quantum computation"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Q3 Symbol", "language" -> "en", "paclet" -> "Q3", "status" -> 
    "None", "summary" -> 
    "Stabilizer[state] returns the stabilizer subgroup of the Pauli group \
that stabilizes state. Stabilizer[state, {s1, s2, ...}] assumes state to \
belong to the Hilbert space associated with qubits {s1, s2, ...}. \
Stabilizer[graph] returns the stabilizer subgroup of the Pauli group that \
stabilizes the graph state associated with graph. Stabilizer[graph, vertex] \
gives the correlation operator associated with vertex that stabilizes the \
graph state associated with graph.", "synonyms" -> {}, "tabletags" -> {}, 
    "title" -> "Stabilizer", "titlemodifier" -> "", "metadescription" -> "", 
    "windowtitle" -> "Stabilizer", "type" -> "Symbol", "uri" -> 
    "Q3/ref/Stabilizer"}},
CellContext->"Global`",
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"0aefaa0f-3b2c-4ca4-8579-d67580d4b33b"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[20020, 557, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"736bc98c-6069-4e4e-9175-2a2edcccceab",
   CellTags->"PrimaryExamplesSection",
   CellID->1026456342]},
 "RasterizedOutput"->{
  Cell[29635, 827, 5077, 89, 40, "Output",ExpressionUUID->"e5121d40-a858-4c81-af83-5499526bfe5a",
   CellTags->"RasterizedOutput",
   CellID->1830097146],
  Cell[64077, 1702, 17027, 285, 110, "Output",ExpressionUUID->"1982435b-a758-4cb8-bb70-2503a31dd818",
   CellTags->"RasterizedOutput",
   CellID->34456841],
  Cell[81526, 2004, 9872, 168, 59, "Output",ExpressionUUID->"6450e9b2-34c8-44e3-a5c8-9f8f1e60e99e",
   CellTags->"RasterizedOutput",
   CellID->1443025644],
  Cell[97824, 2362, 48716, 805, 185, "Output",ExpressionUUID->"33d04cbe-abae-4168-9607-7a2801e9662c",
   CellTags->"RasterizedOutput",
   CellID->1399173137],
  Cell[147009, 3185, 98194, 1616, 532, "Output",ExpressionUUID->"7449531e-5594-48c9-acd8-90952ca9d150",
   CellTags->"RasterizedOutput",
   CellID->956978909]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 292215, 6012},
 {"RasterizedOutput", 292416, 6016}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 7976, 192, 57, "AnchorBarGrid",ExpressionUUID->"d376326a-787f-4d62-8a83-f3e958eb4bf3",
 CellID->1],
Cell[8561, 215, 85, 0, 23, "ContextNameCell",ExpressionUUID->"37a7e8df-11b6-4908-8e99-c392ad84400d"],
Cell[CellGroupData[{
Cell[8671, 219, 553, 14, 60, "ObjectNameGrid",ExpressionUUID->"40cc3335-f508-4397-919e-8f27db880bcb"],
Cell[9227, 235, 4368, 121, 348, "Usage",ExpressionUUID->"fb5563e7-431b-4ce4-b439-22012d8eea4d",
 CellID->1659943857]
}, Open  ]],
Cell[CellGroupData[{
Cell[13632, 361, 1899, 47, 37, "NotesSection",ExpressionUUID->"37591feb-ac0b-4a49-96db-bda2e9482443",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1121398402],
Cell[15534, 410, 1555, 50, 70, "Notes",ExpressionUUID->"4f5b5dfe-a9ba-4523-97fb-9b61f49445d5",
 CellID->716346422],
Cell[17092, 462, 564, 16, 70, "Notes",ExpressionUUID->"fd3290ab-6b13-47f0-bfd1-9301139c0c73",
 CellID->1775811113],
Cell[17659, 480, 939, 28, 70, "Notes",ExpressionUUID->"11a54c13-0b87-4145-a5ec-b2a235c98a4d",
 CellID->1806974113],
Cell[18601, 510, 670, 19, 70, "Notes",ExpressionUUID->"f66185f3-25b1-4d0b-aec3-84c151fc800a",
 CellID->556455686],
Cell[19274, 531, 619, 20, 70, "Notes",ExpressionUUID->"d47ddd64-32be-4e1c-b62a-64126ed2efc4",
 CellID->1927784800]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[20020, 557, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"736bc98c-6069-4e4e-9175-2a2edcccceab",
 CellTags->"PrimaryExamplesSection",
 CellID->1026456342],
Cell[21413, 596, 192, 3, 31, "Input",ExpressionUUID->"1041afae-2121-4810-b4f5-75e79808af4b",
 CellID->1927565408],
Cell[CellGroupData[{
Cell[21630, 603, 1367, 36, 31, "ExampleSection",ExpressionUUID->"f27e3686-ab65-448b-90e8-de4d2eb2bd81",
 CellID->915603643],
Cell[23000, 641, 209, 5, 29, "Input",ExpressionUUID->"5b18dea2-0c2f-48ce-a36f-9f84ed41881d",
 CellID->2071554531],
Cell[23212, 648, 226, 7, 38, "ExampleText",ExpressionUUID->"2713fcdd-7c7a-4fed-958c-40a31504fad0",
 CellID->1005027312],
Cell[23441, 657, 525, 16, 48, "Input",ExpressionUUID->"e41a19c9-079b-4cd0-af12-e1c4fad3d0c1",
 CellID->1163998014],
Cell[23969, 675, 390, 10, 45, "ExampleText",ExpressionUUID->"87fca948-1082-43c1-9b27-24e2a35d4a39",
 CellID->634872595],
Cell[CellGroupData[{
Cell[24384, 689, 228, 6, 29, "Input",ExpressionUUID->"1bec4c99-3680-4396-b56a-3212a501a0e3",
 CellID->2013188467],
Cell[24615, 697, 4509, 111, 52, "Output",ExpressionUUID->"0070618c-ced8-4d72-a193-bed6f0623d02",
 CellID->2038036014]
}, Open  ]],
Cell[29139, 811, 140, 1, 38, "ExampleText",ExpressionUUID->"25b5ef3c-d248-4898-a9c8-cd953d47332c",
 CellID->664925693],
Cell[CellGroupData[{
Cell[29304, 816, 328, 9, 70, "Input",ExpressionUUID->"50c95bd2-d2e1-4537-8006-251fd796a980",
 CellID->1597565398],
Cell[29635, 827, 5077, 89, 40, "Output",ExpressionUUID->"e5121d40-a858-4c81-af83-5499526bfe5a",
 CellTags->"RasterizedOutput",
 CellID->1830097146]
}, Open  ]],
Cell[34727, 919, 150, 1, 70, "ExampleText",ExpressionUUID->"68059d70-6a64-4456-a784-3155bd619bd0",
 CellID->1016387260],
Cell[CellGroupData[{
Cell[34902, 924, 204, 5, 70, "Input",ExpressionUUID->"1107fe1a-9d25-4738-a67e-5b6a9bf18777",
 CellID->157444630],
Cell[35109, 931, 238, 6, 37, "Output",ExpressionUUID->"fa067ce4-6b84-4313-af7b-27582ba1f9d2",
 CellID->1590848746]
}, Open  ]],
Cell[35362, 940, 189, 4, 70, "ExampleText",ExpressionUUID->"a972a03f-8036-440d-bb58-9b95327e408e",
 CellID->222598595],
Cell[CellGroupData[{
Cell[35576, 948, 255, 7, 70, "Input",ExpressionUUID->"93794703-fed6-41e7-9626-f272d21a8875",
 CellID->74258951],
Cell[35834, 957, 4720, 119, 52, "Output",ExpressionUUID->"0fca9cb0-185d-4819-aabb-130e25c7da6d",
 CellID->762659664]
}, Open  ]],
Cell[40569, 1079, 167, 3, 70, "ExampleText",ExpressionUUID->"7025a3d3-6063-46e0-b99b-f855215f3561",
 CellID->809750563],
Cell[CellGroupData[{
Cell[40761, 1086, 190, 4, 70, "Input",ExpressionUUID->"feca352a-f22d-4c6c-9bd4-5d6cf343266a",
 CellID->902059061],
Cell[40954, 1092, 5128, 77, 70, "Message",ExpressionUUID->"5facd456-148a-40c6-8d67-4431e09d3bce",
 CellID->1320159376],
Cell[46085, 1171, 148, 3, 37, "Output",ExpressionUUID->"b6f48e8c-77aa-4a82-b1df-cfe1f3301d8d",
 CellID->117591628]
}, Open  ]],
Cell[CellGroupData[{
Cell[46270, 1179, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"d67fc7f4-4426-4ff2-a569-e6492c597a92",
 CellID->948941833],
Cell[CellGroupData[{
Cell[46537, 1188, 697, 21, 70, "Input",ExpressionUUID->"41ae8441-5eda-4781-80c7-e659d2d0e4c7",
 CellID->221438960],
Cell[47237, 1211, 517, 19, 58, "Output",ExpressionUUID->"7ea75851-bd50-4e14-954a-e54698c840a4",
 CellID->1304429397]
}, Open  ]],
Cell[CellGroupData[{
Cell[47791, 1235, 214, 5, 70, "Input",ExpressionUUID->"9598c1e9-29ea-40c5-8a9c-23ee4a606a91",
 CellID->15296663],
Cell[48008, 1242, 1499, 42, 37, "Output",ExpressionUUID->"6d6babac-3730-4044-9f00-f01106048554",
 CellID->513059048]
}, Open  ]],
Cell[CellGroupData[{
Cell[49544, 1289, 204, 5, 70, "Input",ExpressionUUID->"fbe8ccdb-e4a8-42d6-8bcc-4a4216c22085",
 CellID->465985504],
Cell[49751, 1296, 238, 6, 37, "Output",ExpressionUUID->"12c563bc-0cc0-4a08-84d8-4b4e943b087e",
 CellID->2133177512]
}, Open  ]],
Cell[CellGroupData[{
Cell[50026, 1307, 290, 7, 70, "Input",ExpressionUUID->"78552fae-34ab-4ebe-8ca6-79f1f938827d",
 CellID->836397124],
Cell[50319, 1316, 340, 9, 52, "Output",ExpressionUUID->"92a0777f-3382-415f-8ebd-4a4bb1d994b9",
 CellID->2100248577]
}, Open  ]],
Cell[CellGroupData[{
Cell[50696, 1330, 298, 7, 70, "Input",ExpressionUUID->"239b2773-bc53-41bc-ab8b-5fff3a8d5fab",
 CellID->629984294],
Cell[50997, 1339, 8899, 232, 297, "Output",ExpressionUUID->"11d29111-8d1f-4055-97d0-312a0e542407",
 CellID->530706706]
}, Open  ]],
Cell[CellGroupData[{
Cell[59933, 1576, 350, 11, 70, "Input",ExpressionUUID->"31414c10-6d22-4ad6-a37b-ff3791223f70",
 CellID->1402687322],
Cell[60286, 1589, 935, 23, 168, "Output",ExpressionUUID->"f0b95d2f-565f-4656-818c-212b2978dbc2",
 CellID->1356634765]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61270, 1618, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"cd51e6dd-4649-4c2c-b6b1-b2c3008de0a3",
 CellID->197993619],
Cell[61515, 1625, 209, 5, 70, "Input",ExpressionUUID->"2dee93d7-1a4c-4e58-a1e6-94a18c55569d",
 CellID->1412834126],
Cell[61727, 1632, 175, 3, 70, "ExampleText",ExpressionUUID->"30c76973-09e3-4242-aea8-2d1b1fea9ab2",
 CellID->1314027057],
Cell[CellGroupData[{
Cell[61927, 1639, 541, 16, 70, "Input",ExpressionUUID->"a4d5aa7d-fdd8-4249-aa60-3845b9624239",
 CellID->776470803],
Cell[62471, 1657, 1201, 30, 70, "Output",ExpressionUUID->"6205a350-9460-42c4-8c42-e97409d98e95",
 CellID->1823992853]
}, Open  ]],
Cell[63687, 1690, 148, 1, 70, "ExampleText",ExpressionUUID->"1efe1bb1-e663-4202-aefa-fa26d5cf4542",
 CellID->545842666],
Cell[CellGroupData[{
Cell[63860, 1695, 214, 5, 70, "Input",ExpressionUUID->"8acb50c1-0245-4a16-b45b-9e648e4e9743",
 CellID->2113914550],
Cell[64077, 1702, 17027, 285, 110, "Output",ExpressionUUID->"1982435b-a758-4cb8-bb70-2503a31dd818",
 CellTags->"RasterizedOutput",
 CellID->34456841]
}, Open  ]],
Cell[81119, 1990, 166, 3, 70, "ExampleText",ExpressionUUID->"2435f077-1abf-4f7c-ac55-b9e1ef2478d1",
 CellID->56135352],
Cell[CellGroupData[{
Cell[81310, 1997, 213, 5, 70, "Input",ExpressionUUID->"b923f36e-fbc5-483e-b0d0-a2f7cb119ad9",
 CellID->499072911],
Cell[81526, 2004, 9872, 168, 59, "Output",ExpressionUUID->"6450e9b2-34c8-44e3-a5c8-9f8f1e60e99e",
 CellTags->"RasterizedOutput",
 CellID->1443025644]
}, Open  ]],
Cell[CellGroupData[{
Cell[91435, 2177, 205, 5, 70, "Input",ExpressionUUID->"77b0a411-aa4c-4c0d-b4ee-e0a2ac57d1c6",
 CellID->1793387777],
Cell[91643, 2184, 322, 7, 37, "Output",ExpressionUUID->"ce903a5a-3a5f-4085-a253-9e39643c108a",
 CellID->734527492]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92014, 2197, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"cb466b40-93d1-4546-8720-730d72c6f7b8",
 CellID->572275399],
Cell[92259, 2204, 219, 5, 70, "ExampleText",ExpressionUUID->"6171e1cd-a81c-4674-984e-df24e1bce034",
 CellID->1607426879],
Cell[CellGroupData[{
Cell[92503, 2213, 266, 7, 70, "Input",ExpressionUUID->"a2074f30-3601-48ca-9c53-9ce2515f531c",
 CellID->495331282],
Cell[92772, 2222, 1494, 35, 39, "Output",ExpressionUUID->"8ffde1a9-b2b2-404c-b5eb-a3fd6c26cd9b",
 CellID->1328922587]
}, Open  ]],
Cell[CellGroupData[{
Cell[94303, 2262, 204, 5, 70, "Input",ExpressionUUID->"ea7b19b5-f722-4080-8f78-b221f5436f72",
 CellID->1782118670],
Cell[94510, 2269, 126, 2, 37, "Output",ExpressionUUID->"2cdff9b4-abe8-4000-a058-9c1ff56c1224",
 CellID->881806405]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[94685, 2277, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"272ef75e-b6f4-4950-867e-1a9b2e4f852a",
 CellID->1035144769],
Cell[94931, 2284, 208, 5, 70, "Input",ExpressionUUID->"d40559e9-8473-4177-a3fe-eadca7a7bb1c",
 CellID->691980990],
Cell[95142, 2291, 201, 4, 70, "ExampleText",ExpressionUUID->"73c28301-1f60-40d4-ab30-50714106179d",
 CellID->134861196],
Cell[CellGroupData[{
Cell[95368, 2299, 238, 6, 70, "Input",ExpressionUUID->"d3e2b8c3-368a-4d4e-937e-2e0aa14b72e4",
 CellID->402131762],
Cell[95609, 2307, 1738, 37, 70, "Output",ExpressionUUID->"a60c23ce-a4ce-41c0-9821-173c61fb332c",
 CellID->1269414660]
}, Open  ]],
Cell[97362, 2347, 136, 1, 70, "ExampleText",ExpressionUUID->"57f95d1f-4b25-4f16-97cd-21c4030e7fbb",
 CellID->1814854717],
Cell[CellGroupData[{
Cell[97523, 2352, 298, 8, 70, "Input",ExpressionUUID->"ba1d86d9-3483-432c-bf60-716df6c8e8a9",
 CellID->1920493854],
Cell[97824, 2362, 48716, 805, 185, "Output",ExpressionUUID->"33d04cbe-abae-4168-9607-7a2801e9662c",
 CellTags->"RasterizedOutput",
 CellID->1399173137]
}, Open  ]],
Cell[146555, 3170, 130, 1, 70, "ExampleText",ExpressionUUID->"54dcab9e-d122-4ca2-9b45-a2d4ba5dba9c",
 CellID->314575822],
Cell[CellGroupData[{
Cell[146710, 3175, 296, 8, 70, "Input",ExpressionUUID->"82cae13d-b402-4428-a573-6e7d06766941",
 CellID->291474834],
Cell[147009, 3185, 98194, 1616, 532, "Output",ExpressionUUID->"7449531e-5594-48c9-acd8-90952ca9d150",
 CellTags->"RasterizedOutput",
 CellID->956978909]
}, Open  ]],
Cell[CellGroupData[{
Cell[245240, 4806, 240, 6, 70, "Input",ExpressionUUID->"108e59c2-1222-481d-a9ae-fb997c6ce5f4",
 CellID->307792948],
Cell[245483, 4814, 115, 1, 70, "EchoTiming",ExpressionUUID->"6b1f621d-8660-40aa-8a89-42e852115e5d",
 CellID->655460138],
Cell[245601, 4817, 827, 13, 55, "Output",ExpressionUUID->"7deb33a0-cc2e-4494-bb1f-b4d90157cb8d",
 CellID->1874913903]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[246477, 4836, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"f0aabde4-d5aa-4f13-84d2-c89a514a750a",
 CellID->1131057651],
Cell[246723, 4843, 531, 14, 70, "ExampleText",ExpressionUUID->"d4933cf0-9348-4b8f-b4ee-24896d301d33",
 CellID->1408340143],
Cell[CellGroupData[{
Cell[247279, 4861, 214, 5, 70, "Input",ExpressionUUID->"b10b35d8-eca7-4454-920c-f68613b09307",
 CellID->1449433912],
Cell[247496, 4868, 18003, 376, 208, "Output",ExpressionUUID->"2de7b1d1-6dd3-4f22-baea-656bd853cab6",
 CellID->724305716]
}, Open  ]],
Cell[CellGroupData[{
Cell[265536, 5249, 212, 5, 70, "Input",ExpressionUUID->"b256adf2-5b0f-4133-8ede-c43d36eb673d",
 CellID->930381099],
Cell[265751, 5256, 9792, 323, 436, "Output",ExpressionUUID->"12693aa9-a6a2-460f-8fc5-204b030a24b0",
 CellID->762707195]
}, Open  ]],
Cell[CellGroupData[{
Cell[275580, 5584, 241, 6, 70, "Input",ExpressionUUID->"930b4291-55d6-475a-b773-2a192e96eae5",
 CellID->1884103588],
Cell[275824, 5592, 116, 1, 70, "EchoTiming",ExpressionUUID->"969b87f9-db08-48bd-8e55-690b14783468",
 CellID->1349511612],
Cell[275943, 5595, 827, 13, 55, "Output",ExpressionUUID->"14894a5d-7cf6-4946-94e8-7bb9944d2941",
 CellID->1666866917]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[277024, 5618, 3365, 91, 70, "SeeAlsoSection",ExpressionUUID->"23358829-9b4f-4de9-9852-88fdc561304b"],
Cell[280392, 5711, 1823, 47, 70, "TutorialsSection",ExpressionUUID->"ec32eec2-8f18-4e34-92a8-506a533da98f"],
Cell[282218, 5760, 742, 19, 70, "MoreAboutSection",ExpressionUUID->"396e1956-9ae2-4790-84e1-606da8f0973c"],
Cell[282963, 5781, 6772, 176, 70, "RelatedLinksSection",ExpressionUUID->"b42e7a0f-e900-455b-acfb-1e3b188005a8"],
Cell[289738, 5959, 78, 0, 70, "FooterCell",ExpressionUUID->"fa5b933d-38eb-4e0a-88e3-e9eeb5c370a8"]
}
]
*)

(* End of internal cache information *)

