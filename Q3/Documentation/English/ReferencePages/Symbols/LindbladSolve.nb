(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    278412,       6683]
NotebookOptionsPosition[    262506,       6335]
NotebookOutlinePosition[    265149,       6400]
CellTagsIndexPosition[    265025,       6394]
WindowTitle->LindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["Q3 SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus: Quick Start\"\>":>
       Documentation`HelpLookup["paclet:Q3/tutorial/KrausQuickStart"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"LindbladStationary\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladStationary"], "\<\"LindbladConvert\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladConvert"], "\<\"LindbladBasis\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladBasis"], "\<\"LindbladGenerator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladGenerator"], "\<\"DampingOperator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/DampingOperator"], "\<\"Supermap\"\>":>
       Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus Package Guide\"\>":>
       Documentation`HelpLookup["paclet:Q3/guide/KrausPackageGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Q3/ref/LindbladSolve\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Q3/ref/LindbladSolve"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Q3/ref/LindbladSolve.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$97771], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Q3/ref/LindbladSolve", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["LindbladSolve", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]returns the solution of the Lindblad equation specified \
by the effective Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula"],
     " and the Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula"],
     " with the initial condition ",
     Cell[BoxData[
      StyleBox["init", "TI"]], "InlineFormula"],
     " as a function of time ",
     Cell[BoxData[
      StyleBox["t", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]is also allowed."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1314838848],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->889790706],

Cell[BoxData[
 RowBox[{"<<", "Q3`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->615462090],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->383286299],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->586405171]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->575047188],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->52192358]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1820491489],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->828256374]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
  RowBox[{"LindbladSolve", "[", 
   RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->309037009],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->526134400]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "0"}]}], "]"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1017770999],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1708343010]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ">", "0"}], ",", 
        
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], ">", "0"}]}], 
       "}"}]}]}], "]"}], "//", "Simplify"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->766568750],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]], "0"},
     {"0", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[7]//MatrixForm=",
 CellID->575847813]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->435145815],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->774245539]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->1196829607],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Output",\

 CellLabel->"Out[2]//MatrixForm=",
 CellID->1914966838]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "opH", "}"}], ",", "opL"}], "}"}], ",", "1"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1273375212],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0.5477225575051661`"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]],
    ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0.8366600265340756`", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[233]:=",
 CellID->625111024],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
      RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->713763889]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->374788519],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->667061092],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwV2WVIjJIRiILL3IwIk5EwSEBpMDiOVSykuFzao
wGAhdoWgzIUAhVJQ4ip3IRZXzmSQOOIUB8RYjjaRJdLa9udv5j87O/ve5818
33+W/n58ULSSgoJC9H+P7PP5PH0mm1VS/pVs2kjh+rqO9YgYv/eQVKFb9OH6
R+QVR9kMk+VfF7Ujf1rA38fJGWZk9CjcJ3JtlpSEMxztVyZw/Tzh3OBRre2G
SGyMbBaIZ5SNB/MqH/cvkaGFoHSJFkcw0C+bZcJtNThjfuEXgdxbI4unc1rj
9t4VyNevk8BcXbakfUQg9yWEZ9O9lrgwjvv/IrHNZjwGb1IgP2+D1BlY3Nxc
n0Jvk4RVS4sGxFPoSYnL2yeL4cdJ9P4mPbwniu5JE+htk4+/pXvlBo+i95Rs
vHN+/2TJMHoKMFfrMXtONIjrFaCQXajR9LgbfUVYkQg/T7Nvx/1KMJI+oc6x
q8TzlCEp5HBJ6XY59lMBigpXdc9gE5F7KhA0TbNXDOnAXqpQILgdzNHrxp5q
4FUhvCJJu4O91cH2Bm/q7MVe9DTAtvScZcCpPvQ0YI7hFPnAsA89TbhmfveT
K3U96GmBbf3j/IVjIvS0QUN83TviiBA9HThQupQzL+xATweqbH6P8+a3obcD
xBSX66a1jejpQov+Wc+ug1Xo6cGHWpnBoYlM9PThhNvwtuRFDvbRhwiqbSg/
rAZ76kORLtck2atB8P92RwNwrt4SHzrYhH0NYKM/7/g9xRa8D0PwfjW1icNt
Rc8QNtUqeB6qbegZglID88GBk63Y3whGRyWNbtPN6BmBZq5h7UxBE3rG8NDy
g8kBXiN6xnDpdKpUtfB79IyhzjrZ1zu4Gr2d4PLGVoNwtgK9nZCrKlV3EeSj
ZwJBezPeu5nvgH1MIG4mpcPhUB72NIHBkCyjFr9S7LUL0vwv3MpWuox9d4EB
tyUj3K8K+5nCPbOysXZWNXqmMPJHwlJKVQ16plAU5//DPkENerthQlQgyhNX
o7cb3ny916PS9zv0KLDq9ELab8qV6FGg/+Xb0+Pxl9CjAIvNdXbfU4aeGZTx
i2caM4rRM4MNKV9Nk5WLHhVEvfezry0loEcFS8qJLEZBBPajAj2PLKoZZ2I/
c/i53th9v/Az7GcO1EdvqYbtY2M/CwjMGB7L8vkS78MCdBxG/JeUn/9/WEAA
7+jKwy4OepYQJTTJiqngoGcJip2vuVpXlqBHgx3SEGftjWJ8v2jgzm2Vdiax
0adB8fl//J/Q83E/DfzmYFTXIwfPowEneUyl2ScDPTrMHe37utYoAT060Khj
vZczA9Gjg93xOVOfklDsRYcoT9cvyjrjsS8d0szD8xeHPsJ+VrDGbE+/o32e
yD0rCI7f+uaZazb2tAJffpzoVD4LPStw0cvMuyVloWcFy+NmPQ3lLPQY8O52
TQE/JxvvjwElDB1blatM9BgQ9Wcj5aUj6egx4CI7/ti8Xwp6DOCuTiZ2TSWg
Zw0BNRyn2E9jyL9ZaseA
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXA8CgVqKa9eCi4zmwxQKgI9PyRMBIwDBUReIkMUIqsM
woqb4pBHYRQdIPLQAJtFx4QqcfJceUh4DIEKYyJPQRoILANUxiu4sf78Z7/k
prm553zOzfeWOvWFd/gWGo0W/u+1+fv/KcjfnBrCnphkJn7STpT3HeQsXfoh
I3OA7LHdnD7SbzIddIk9hs8HiVR87LzvbxNEqYyT7XU+i6nLL3H9JHk6Ntfi
x1KQiNOboyBiMcXq2afA/TNEZeFB0axgijzp2pw5Uvs2wezZ6CR688TF7shF
VckLXL9AxB3und8+H0H/Fek51s3OrfkD978mIXa2Ait7OZ63REIb+jOX3FvR
WyZ71ZNjy3Tuo7dCXC1CQvqGCmRKb40k1fsKV9/UyZTeOtl1O/d2vFqbTOlt
kOHDNorpQ90yzAYyYe5UolyO62ngvybi6yX3yZT+e5Bt1GjZ49qP+7cA3XOJ
ocntx/O2whFBwsCAbR96KlAwzKa55b7zVIDzE68rTd6N3jbYWXKuL/7HDvRU
gcfM+GZhrgU9NbhTNe/tqKhDTx2W6ou/lM9WoqcOI7aq9tr079HbDhb0mrQE
1g3s9T54xqvdcyitwL4aoOv4Q8ADo0fYTxM+HTy+rL2/AXtrQoBASzbT2Yg9
tcA49rPfY5nN6GnDn9sa9w6kNqNHh4PTj+f4Vs3o6UBhjPSokNuE63Xgb4+o
E7U0Gfo6YCj1KIrsrCX/bbfVhZhrjK+8FA/xPF1Yn7OSROdJ0WPAaFJxb7CT
BD0GPMozkWhOXEePAT/v83zyUUAYvo8elNiZyu5bX8UeetAeztzJsS7Gfvqg
4dfbZjkiwd764LOSNdiwWo499aHeOyJF40Il9jeAntXPaaVSKXoGEH3S60bk
uBQ9JvClPHVRkBQ9Jpi7RQenfV2BHhOcY5tOcveXo7cDnHU3KP7uMvR2wBiX
N/84txQ9Fszyw0QqAYXoscCmvSw/KOQaeiyQ1QVW1YovomcILQZRvzgU+mE/
Q3jGzbhbfDQJ+7EhmJqobqq4iv3Y8MrSciEn8F0/NghNFeX++QXYzwjqPXyZ
8YE30TOCM5SLQfC9W+gZw4Fd9p0PS26hZwynivhvqICb6BnDZZHNeItKIXom
0HFCaH29Nw89EwgNGTnX/DobPVMYPFQmYnlnoWcKYr+iswNuKeiZgtx+Kqkw
KgE9M7hwRpy1ezQUPTPwCHc8HbERiP04YF3OnDmYHydT/r84QMXlZbsMJWJP
DkgOv82JvJOM/TnwwkLP9QNKhH054BVFT9c6kIEeBZy/0unjBt+hR0EmPP+1
rSoDPQqElwLr7ZzS0aOg1Ce6KWcoFT0KovQEak8brqBnDiWtPN66wWX0zIFj
Gec0/HECeuaguFK/EfzyPHrmUD2/yPc/HoaeOThJe2x6U5zQ48JKjHtQNd8H
+3DBeXFrhJtlBPbkgtyhq/VuqwB7cUGxp1Kw1hWLfbmQV6EL4sJ4/B4WEKo1
WWRlIyT/AJLXtsM=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlMk3cYB/COAYIgcrRY7h64i2PjmMdg+z0KC2McAs5BFAhDjhmiDB3I
3BAYbhYQy91WXJBMso1hFFQcSqwTkKsyS4G2YUNLEza8gEikXGUyf0//2Dd5
8+aX9/l+njdvXm5yZkyqEYPBSH1xrd3/nzOStbST6EfjZTvzfpS+PPeRsJpH
MX8JW6X+fmtRkDmy71hYyXX6XE2utbDivTW3pC+VB+Tmn5dNPtrcRee1RJSY
8+SeQ480PW0tk8RoOjJj350+2p8itUX6z373kUnvytbymOyyuiN7N3mQejPk
hOJ6VJP3PTo/S4bnukVsppz6z0iOrq68RSun/TmS3tjjVlw/RPc9JykDVqcK
QhXU0xHvkyW7wrQK6i2Qvk/Tjxw5NEy9JeLXcrQw4fEw9ZZJd/9lVnjiCPX0
ZGXdAHt/9wj1GGA5adncxBul8wzoFW0etDk6Sv1XwDHgS+kXnaO0bwQ7S5w8
S82UdN+rYH4ujmsboqSeMegj3BWN+UrqGcN0yC9blK1K6pnADVlT9psaJfVM
YTqp6gM7CxX11kF8g2Bu9R0V9cxgIUh4O2q3inpmUL29oDrhsIp65mBxN1yX
fVpFvfVwaWpoSvMTehaQ1x1WOnETPUs495WXrFWBniWccfJgCCbR2wD+20fT
K+fRswLSS5pXTNXU2whTH49EzjLV1LMGbZfYqoKrpvPWsEXZFrTiqaa+NTxt
SvXdvVUt/a/uZwPzKw/2XAA13WcDTllB5/mh6NmC8MnDgYEo9Gyh7qBJRnss
erbw9OvhHfoEfB87GPN5I6lpP3p2kBjwfaTsc/SYwIpO88s6iB4TLgq1c+ez
0GPC/Oq22MPZ6LHgWUYsW5uLHgve9x4zY3yDnj0ETzfw5MfRs4cVr/d+SChE
zx5000mM5iL0NoHbQof/7e/Q2wRRB4yqGk+ix4ZbxY2ze4vRY8P9CdIyWYIe
Gybie3rCT6HnAEOvXekvL0PPAepS3tZdPY2eI1x6K5lIheg5woz1YsjFcvQc
Yaj+ea6gAj0nEJrI9eGV6DmBQLVBrq9Ezxk0HiHX6qvQcwbJ/RsRPtXoOQNz
LNP8ajV6LsDp+jvAswY9FwjtLLYX16DnCgvLv15YqEHPFfZWxy1F16LnCv9E
DGoaatFzA9OALq+Htei5wWJAjthDhB4HVkX5fWki/L84kJMhiDsrQp8Dudv6
B2Ui7HMgMS/zZ50I93FgeUS+hyNGjwvSUUlgsBg9LrgVdf6WIkaPC4OLxS7f
itHjwoH2wLazYvS44FDK6Lli8HiQ7368rN/g8cDXpWDHuMHjQZumkDVj8Hiw
ut5nK0OCHg+M0yf+sJKgxweP8SVjZwl+Hz7ogj/RvS5Bjw8xG0t6fSXo8aGj
M7oi0ODxIXS+I+NDg+cO8YJjhyJenP8Fqgr6pQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.46789376727999843`, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2118019245]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1425866839],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1759656048]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2]:=",
 CellID->1104129648],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0"},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]]},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]]},
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1607835124]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->252233040],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->483610080]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1792714312],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.802789`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->534923729]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1112511420],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Diagonal", "/@", "data"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellLabel->"In[6]:=",
 CellID->1239593903],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
0f48FTZc6R99aCUi/wd+sW5y
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd1ns01OkfB/BxSbk0mcEwF2MuKJeWtnZzon0+WylFlBbRbSmXirJOSVqx
xarWrQtFLpFV0UYNUmGYYXJf/XRKWx2KpMuvsFqidn/183l+f/y+58yZM2e+
z+v5zPd53p9nxAG7PQPVGQxG86fX5/f/v7IyP1+XSNzm69aCb7aRqc83CGPz
y90few6TBfM/X0oCYUcC/DvS8ftmsqblxsk0VQGZUjqJ/tyaH5UOl/H+LmKr
X/RxLERGgoM+X/dI+YeO78yYN3D8A/Ihumu5b0ctaW/7fD0iEbeXvdX+WoFe
L5l4NujMuteA9z8hToKWW7q2t9HvIy7P7j76UtSM4/vJEdOj5/l5LTjfAHmS
megVkdWK3iC5sGbWsjjtNvRekLHhqKLIF63ovSJ5tsdn/7i4Fb3XxEJbvCCG
Sb03hLH0cWL9jib0hoihX3mja6AK7x8isQUP1HSMaL3DZE6IzUjPyXocP0J+
fce+ZzVZg/P9SVwybUv8H1ehN0rcV8fVXtAqR2+UhHq5jniuL0XvHdGUW79S
Tl5A7y8yQ8PRImRlAXpj5Iy20GmpRg5642TwtYbHQH4meuPkXPYSs0vZWei9
J/aewsWto3noTZDQfNd5P8sL0ZskDQKDE50RJeh9IOcSz5q+e3kVvQ9kx/2F
ga1tleh9JG+I+7Uo+2r0/iYjdxVnVw3XofcP+UngVxhyT4keA3L811kyL6vw
fga85LCSg33oejIgIuV5v7+8lfx3+Hw1GArymShob8f51EBu8lJ32+7f0VMH
a81iLwPXTvTUIcFw70Fhdid66mC/0No27WIn1qMBBxWqC83hnehpQED1gFPK
W+ppwmSW+5mxhA70NCF6/lt/m/I29DQh4TfZfe/kFvSmwfKMMN/S2U3oTQNf
3kVl0tlG9LQg19I1I1xdiZ4WMGqsBjUi69DTAtvveQ9thdXoTQfzxIngtc3X
0ZsOIdcKvDmccvRmQP+ennVfWV5FbwYwjrWEJFpeQW8GdP+k+iP9YQl62tCb
F/8qZn8JetrQnZliemXiMno60BS98tBKaRl6OjC6RzgelHkNPR3o5yQuTVFU
oKcLTvvHuG+iaZ514cyT7DmJmTXo6cHmvg0r347XoacHl4WVqc+tlejpQd0H
OyuZayN6M2HkS779Jufb6M0ESerr+V0azegxYf3yParf9tI8MiHy2Maqh0k0
r0xQOp6JsyJt6M2Cc7rJqryfad5ngcPSwGsV/m3o6UNuypVwry66v/Qh7Fm7
jewp9T99PyxNGs9qxvH6UFpcHd+k04Tz6QPn2Hj1uaUq9FiQEpPgYObbgB4L
BOLgF/O/V6DHgpzYzuPLd9Whx4LYubwYmX0NeiyY3MH3Ce6/gR4bHNVuWtrw
r6PHhtzs/ET2n+XosYGV43br9GEZemwY+O5od+Ujul5sWL7ec7aPlgw9A8hW
WoxNZ5Tj8zGA7d2NT9j1FegZwJbmLzSfOlShZwDB6UuCKjxuoWcAdv8qLst7
XoueIVzf53m7Z1c9eoYwGqkeeDeB7m9DSCVJC/YVNqJnCJVNMaObK2+jZwi1
2iMnai7Q9TWC/ezXayyDaD82AkmCvceyJ23oGYG+fHBXtG4HekZgcDAnKOiP
DvSMQG3YXrhkBc0vBxZdUzSaefyOHgd6Mrfm/D1C88yBbaFZf11fSD0OdKzq
Smq0aEePA2kv+u/1NdHzwxhMpmf6nbKjeTeG85uKnRM+nQdTnjEIfPqP9/+i
Qs8YHo2tuvlrUQN6xmC8YefB+nZ6vpkAM1u6YZ8BfX4m0FBbF2XPkqNnAk4r
XMYU+6rRMwHzlAzW44ib6JlAmnP6qmRDul+4UOB9v9copAo9LgwpzQNSf6hC
j/upHp+bd+fSvHJBnbm1veoE9bgQlb1dcSi1Gj0eNMS/2VIyU44eD9Jqoy69
+F+eeXC8Xa61J0WBHg8MXcZOVXxNfy8PSHFlbHAv7X98+DjPwi4smp7ffHBe
ySs4NEqfHx929h3w7yUt6PFBIz+7sMOD5psPlhU142Ieza8AFsUKy7JP07wL
YO92vZh5DXS/CGDTUZ8e8zyafwE45Hn769nQ/i2AXxZG/lMSRtfXFHJsHENl
u+n6moLBXJHFZqdm9ExBKrPbNdFL+5MpWM+MJxtD6flvCsmeuW+/fdOAnhCO
hZQOlkUq0RPC+bQH42uMaD8Qgo4fv62tm/YDIfT7r684kC1HTwhWrA7LdWo0
b2ZwJ3FvltUwPR/MAFZPOmzdR89bMxhyKbX0yqT7xQxGQ79J4HnT/mIG8ZH1
ppeKqCeC5u3yOWyC83NFUOrhtfirwHrsNyKI9GN67LypmBrvJgLubJbF6XkN
OJ8IDnckD66vxvWNE0Ffi19/vit9PiJw45qOrO5smvJkIghftndPtWML1iMC
7Yz9nQFxrVPegAhUvK6Lnifo+opBe1pA0ZVgPO+5YqjgB/hov2/H+sSwrfRi
RvG3mH83MeiESseqCM23GBo2+t5xHm3H+sRwqrawxnEr/f8gBtUh8wj7k21Y
nxj4T3l8QTLdb2JYsHCV2/sNeB4MiIF7pCh1rR7tVxK4OJ6x5lYJ/l6uBF7z
poW6u6iwPgkca8n/x3AI8+AmAbLF1+ZgGe2PEnB9esC7Ox37QZwECs/G2ncX
12N9EghfkWY871PepuqTQG5ZWNeSePp/QQILIj2u9nhiHgck4B71nDk3sA7r
k0Lb86S1eTfo+krh7B2jL1hutN9IwU4gYL0zousrhZeZbj/kMml9UhBssBnM
s8H9HCeFeHmWZJE/7edSULEtufcLVFOeTArRzPSUpD7a36Xgtqgs/RwH8zMg
hfDYdfd17FuwPnM4466I/bd5K/kPO89Shw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
P/jPXG50M/kfaVRYpw==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
81mAayxrkdPpavInzYVsuA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probabilities\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \
\\!\\(\\*StyleBox[\\\"t\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-5.551115123125783*^-17, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->794832193]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1261705519],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->427878852],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      SuperscriptBox["\[Sigma]", "0"],
      DisplayForm], "+", 
     TagBox[
      SuperscriptBox["\[Sigma]", "x"],
      DisplayForm]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1598207672]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1686455809],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1773608757],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1721018070]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->813112276],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[256]:=",
 CellID->520954565],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[256]:=",
 CellID->392545136]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"0.5`", " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", "0"],
     DisplayForm]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", "z"],
     DisplayForm]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->1720060524]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Pauli", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1408697964],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->316250285]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->743762978],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwX2IDVCQikGIns/IkBCDkkUEQuTw5AjFrBYQA6X
EojL3QUSK1eRc0JAEITclWF1g8AyRI44wwEpQGgTWSKtdX/+Zv6zs7Pvfd7M
9/1n6R/HB0aoKCkpRfz/yD9fzrPn8pkk57+Wzw1SuLKiZzM4jt97SIrYLWJf
/Sh5w1E+A2Th5zndsM4H+PsIicsIixiCX4lCmyLcUKajw1Ivrp8hvGYB1ca+
i0RFymeWeIbbemTUNuD+eXJvNjBVqsMR9ffJZ4Hw243iLPObRQpvmczFctqj
t98SKdavkP05+kXSjtsihS8lAtvbywmzPbj/bxJ13ULAFPSJFOetkjojq2tr
K/3orZGQK7Li/sV+9GTE5f0TJdDah94/pEfwVNmd1YveBvn8O7pXTpAEvWdk
9YPTO8e43egpwXS1x1SyRIjrlaCwqFCr5Ukr+sqwJBWfZTvU4X4VGEwd1eTZ
n8PzVIEVvI9btpGH/dSAosZX33a3kig8NQicoDkoBzdiL3UoEN0J4hm0Yk8N
8KoQ10jZ7dhbE+yaBeNJpR3oaYFdWbJ1QEwnelowzXQKe2jciZ42NFj+cqam
7gZ6OmBX/yRv9kgberqgtXjV++iBFvT0YFfZPGdG3IieHly2/S3aW1iL3iZY
pLhcNa8WoKcPbYZJnt17uOgZwEmd9KDDCfHoGcJxt4EN6asc7GMIR6l2h4Uh
pdjTEIr1+WaJXhdFL7Y7GoHzlfXFvXsqsa8RrPblHruvXI33YQzeb6a08Pg1
6BnDmkaFwEO9Fj1jUGnMeLjrRA32N4GhIWmT20QVeiagnWNcPVlQiZ4pPLL+
ZKxfIEDPFL6NTZGpF15AzxTqbBJ9vYP46G0Gl3fWG8VT+ehthhx1maaLiI2e
GQRuT/vwWh4D+5hB9OSpW7v3pmBPM7gbnGnS5vcl9toCbP/8m1kqxdh3Cxjx
29JC/bjYzxzuW5QPd2Tz0TOHwT8/nT91uRQ9cyiO9v9+h6gUva0wKimQ5C7y
0dsK777d63HJl4ceBR47vcJ+oHoOPQr0vX5nYiS+ED0KZBfxnd23nUXPAsqF
JZNNaVnoWcCqTKihnZ2MHhUkvb9nNcyHoUcFa8rxTGaBL/ajAj2XzGmYxmI/
S/ih3tR9p/gz7GcJ1D/eUw/ZkYH9rGB/2sBwpk823ocV6O0e9J9Xffn/YQUB
gkNLj7o56FlDuNgsM7KCg541KHe95Wpz6Qx6NNgkC3bWXc3C94sG7vx2WRcr
A30alJz+1/8pnY37aeA3DUP6Hkl4Hg14icNq131i0KPD9KGfLlSbhKFHBxp1
uPdiuht6dLA/Nm3uw/XGXnQI93T9qrzrI+xLB7ZlaN7cvSjsx4DljI7UH3Xj
iMJjQFD8+jfPXROwJwN8hdGSmDwWegxwMUjPvSljoceAhRGLnsbzLPSYcHCj
qkDIScD7YwKXqWenVhuPHhPC/2qivHbgJHpMKC2KPzLjF4keE/iPxxK6x8PQ
s4GAKp5T1BcHyX+RnsEw
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXCA5dVayqu3pS4zUwYoiEDPDwkDAeMAAZG3ExGIrCKM
FdxAmTxD3SaPIUQLG6AytEKcgEBlwBAGKy8bkYcMZgOBZYDKeAU31p//7Jfc
NDf3nM+5+d5SJz/1idxCo9Ei/702f/8/14o3p4GwJ6eYaR/WE9V9F4mmS9/X
z/uF7LPZnEEyZDodksqW4/NhIhUfO+f/6wBRKRNk+0O/xczlIVw/RQaez7UF
sBQk6vTmKIlYTLHkBxS4f4aoLdSWzgqfkN6ezZkjjW+SzZ+OD6I3T1xsj36p
XtmP6xeIuMuj+9KzXvRfEvmx39gFDZ24/xUJs7URWtq34nlLJKJ5KG/J4z56
y2S/5uWEKt0y9FaIq0VY2OBIjkzlrZH0Jn/R6utqmcpbJ7srCiqSNB7IVN4G
GT1irZw+3CLDbCATFbxI62/F9TQIXMsWGFxuk6n8d+Cq8SO+3LUd928ButeS
vjavHc/bCkeFyQqFTRt6anBtlE1zL3jrqQHntl1PVn8LettgV9nZwaQfGtBT
Bztm7hcLc3XoacDNunkfR2U1epqw1CQ53z97Az1NGLNRt99Bv4TedrCgN2Ql
s7Kw17vglaRR41B+HftqgZ7j90G1xlXYTxs+Gj6+vONgDfbWhiChjmymW4o9
dcAk4eMnCcxa9HbAn9se7Vdk1qJHB7fp9jmBZS16ulASL/UV8e7hel342zP2
RCPtLvq6YCT1LI3pvk3+226jB/Hf6H/urazA8/Rgfc6yMq5Igp4+jKdL+kKd
CtHThwdFppXakxno6cOPB7x6PwjyxfcxgDJbM9k9qzTsYQCPI5m7OFZfYz9D
0Aro6+SPFWJvQ/BbuTLcvFqCPQ2hyScqQyvlBvZngHz1FK1cKkGPAXHh3t/F
TEjQY4JAaqeZHSJBjwlc97jQrAvX0WOCc0JrOO9gCXo7wVlvgxLsLUJvJzzn
2c23F3yLHgtmBZ9kqwXloscC68dVxSFhF9FjgexhcF2jOA49I2hjxP7kUOKG
/YzgKS/3lsT3PPZjQyg1Wd96Jw37seEln7+QH/y2HxtEZsrqwOIc7GcMTZ7+
zKTgPPSM4QzlwgitEaNnAod223ffLxOjZwInSwWvqaA89EzgYrb1RJtaLnqm
0HVCZFXYl4meKUSEjZ39+VU6emYwfLgqm+WTip4ZiANKoxXun6FnBv32L9JL
YmPQM4eUM+Ire8e90TMHz0jH01EbXtiPA1bVzBm34kiZ6v/FASqx6KrLiBB7
cqDyyJv8mJuJ2J8Dv1sYuL5HibAvB7xj6Tk6h1LQo4DzVw59gnEBPQry4FlL
Z10KehSIUoObbJ2S0aOg3C+uNX8kCT0KYg2EGgPNCehxoazDzm6dcQ49LnD4
iU6je2LQ44Lyq6aN0D8i0ONC/fyiIPC4L3pccJLKrfsy9qDHg5V4j5B6gSv2
4YHz4tYod34A9uRBv0NPx62OcOzFA+W+u8K1nlPYlwdFd/RAXBKF38MCInSm
Si2to8k/Lzqwgw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->653393673]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1470681252],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->963207285],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"x\""}, "RowDefault"]},
      "Superscript"]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1321628607]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1701417680],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->682224499],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->75316473]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->39881190],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"+\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"-\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->540818487]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "init", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->719143774],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[270]:=",
 CellID->1701594824],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[270]:=",
 CellID->664479869]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->829277253]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1210483635],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->278233393]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->1754552550],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwX2IDVCQikGIns/IkBCDkkUEQuTw5AjFrBYQA6X
EojL3QUSK1eRc0JAEITclWF1g8AyRI44wwEpQGgTWSKtdX/+Zv6zs7Pvfd7M
9/1n6R/HB0aoKCkpRfz/yD9fzrPn8pkk57+Wzw1SuLKiZzM4jt97SIrYLWJf
/Sh5w1E+A2Th5zndsM4H+PsIicsIixiCX4lCmyLcUKajw1Ivrp8hvGYB1ca+
i0RFymeWeIbbemTUNuD+eXJvNjBVqsMR9ffJZ4Hw243iLPObRQpvmczFctqj
t98SKdavkP05+kXSjtsihS8lAtvbywmzPbj/bxJ13ULAFPSJFOetkjojq2tr
K/3orZGQK7Li/sV+9GTE5f0TJdDah94/pEfwVNmd1YveBvn8O7pXTpAEvWdk
9YPTO8e43egpwXS1x1SyRIjrlaCwqFCr5Ukr+sqwJBWfZTvU4X4VGEwd1eTZ
n8PzVIEVvI9btpGH/dSAosZX33a3kig8NQicoDkoBzdiL3UoEN0J4hm0Yk8N
8KoQ10jZ7dhbE+yaBeNJpR3oaYFdWbJ1QEwnelowzXQKe2jciZ42NFj+cqam
7gZ6OmBX/yRv9kgberqgtXjV++iBFvT0YFfZPGdG3IieHly2/S3aW1iL3iZY
pLhcNa8WoKcPbYZJnt17uOgZwEmd9KDDCfHoGcJxt4EN6asc7GMIR6l2h4Uh
pdjTEIr1+WaJXhdFL7Y7GoHzlfXFvXsqsa8RrPblHruvXI33YQzeb6a08Pg1
6BnDmkaFwEO9Fj1jUGnMeLjrRA32N4GhIWmT20QVeiagnWNcPVlQiZ4pPLL+
ZKxfIEDPFL6NTZGpF15AzxTqbBJ9vYP46G0Gl3fWG8VT+ehthhx1maaLiI2e
GQRuT/vwWh4D+5hB9OSpW7v3pmBPM7gbnGnS5vcl9toCbP/8m1kqxdh3Cxjx
29JC/bjYzxzuW5QPd2Tz0TOHwT8/nT91uRQ9cyiO9v9+h6gUva0wKimQ5C7y
0dsK777d63HJl4ceBR47vcJ+oHoOPQr0vX5nYiS+ED0KZBfxnd23nUXPAsqF
JZNNaVnoWcCqTKihnZ2MHhUkvb9nNcyHoUcFa8rxTGaBL/ajAj2XzGmYxmI/
S/ih3tR9p/gz7GcJ1D/eUw/ZkYH9rGB/2sBwpk823ocV6O0e9J9Xffn/YQUB
gkNLj7o56FlDuNgsM7KCg541KHe95Wpz6Qx6NNgkC3bWXc3C94sG7vx2WRcr
A30alJz+1/8pnY37aeA3DUP6Hkl4Hg14icNq131i0KPD9KGfLlSbhKFHBxp1
uPdiuht6dLA/Nm3uw/XGXnQI93T9qrzrI+xLB7ZlaN7cvSjsx4DljI7UH3Xj
iMJjQFD8+jfPXROwJwN8hdGSmDwWegxwMUjPvSljoceAhRGLnsbzLPSYcHCj
qkDIScD7YwKXqWenVhuPHhPC/2qivHbgJHpMKC2KPzLjF4keE/iPxxK6x8PQ
s4GAKp5T1BcHyX+RnsEw
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXCA5dVayqu3pS4zUwYoiEDPDwkDAeMAAZG3ExGIrCKM
FdxAmTxD3SaPIUQLG6AytEKcgEBlwBAGKy8bkYcMZgOBZYDKeAU31p//7Jfc
NDf3nM+5+d5SJz/1idxCo9Ei/702f/8/14o3p4GwJ6eYaR/WE9V9F4mmS9/X
z/uF7LPZnEEyZDodksqW4/NhIhUfO+f/6wBRKRNk+0O/xczlIVw/RQaez7UF
sBQk6vTmKIlYTLHkBxS4f4aoLdSWzgqfkN6ezZkjjW+SzZ+OD6I3T1xsj36p
XtmP6xeIuMuj+9KzXvRfEvmx39gFDZ24/xUJs7URWtq34nlLJKJ5KG/J4z56
y2S/5uWEKt0y9FaIq0VY2OBIjkzlrZH0Jn/R6utqmcpbJ7srCiqSNB7IVN4G
GT1irZw+3CLDbCATFbxI62/F9TQIXMsWGFxuk6n8d+Cq8SO+3LUd928ButeS
vjavHc/bCkeFyQqFTRt6anBtlE1zL3jrqQHntl1PVn8LettgV9nZwaQfGtBT
Bztm7hcLc3XoacDNunkfR2U1epqw1CQ53z97Az1NGLNRt99Bv4TedrCgN2Ql
s7Kw17vglaRR41B+HftqgZ7j90G1xlXYTxs+Gj6+vONgDfbWhiChjmymW4o9
dcAk4eMnCcxa9HbAn9se7Vdk1qJHB7fp9jmBZS16ulASL/UV8e7hel342zP2
RCPtLvq6YCT1LI3pvk3+226jB/Hf6H/urazA8/Rgfc6yMq5Igp4+jKdL+kKd
CtHThwdFppXakxno6cOPB7x6PwjyxfcxgDJbM9k9qzTsYQCPI5m7OFZfYz9D
0Aro6+SPFWJvQ/BbuTLcvFqCPQ2hyScqQyvlBvZngHz1FK1cKkGPAXHh3t/F
TEjQY4JAaqeZHSJBjwlc97jQrAvX0WOCc0JrOO9gCXo7wVlvgxLsLUJvJzzn
2c23F3yLHgtmBZ9kqwXloscC68dVxSFhF9FjgexhcF2jOA49I2hjxP7kUOKG
/YzgKS/3lsT3PPZjQyg1Wd96Jw37seEln7+QH/y2HxtEZsrqwOIc7GcMTZ7+
zKTgPPSM4QzlwgitEaNnAod223ffLxOjZwInSwWvqaA89EzgYrb1RJtaLnqm
0HVCZFXYl4meKUSEjZ39+VU6emYwfLgqm+WTip4ZiANKoxXun6FnBv32L9JL
YmPQM4eUM+Ire8e90TMHz0jH01EbXtiPA1bVzBm34kiZ6v/FASqx6KrLiBB7
cqDyyJv8mJuJ2J8Dv1sYuL5HibAvB7xj6Tk6h1LQo4DzVw59gnEBPQry4FlL
Z10KehSIUoObbJ2S0aOg3C+uNX8kCT0KYg2EGgPNCehxoazDzm6dcQ49LnD4
iU6je2LQ44Lyq6aN0D8i0ONC/fyiIPC4L3pccJLKrfsy9qDHg5V4j5B6gSv2
4YHz4tYod34A9uRBv0NPx62OcOzFA+W+u8K1nlPYlwdFd/RAXBKF38MCInSm
Si2to8k/Lzqwgw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->411756991]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->290448684],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->993111197],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->763452790]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->501635503],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"0"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"1"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"+\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->586120978],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"+\""},
           "RowDefault"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"+\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->427788457]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{"LindbladConvert", "[", 
    RowBox[{"opH", ",", "opL"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1865696334],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["6"]], "-", 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["6"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "+", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["6"]]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["6"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], "0", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "-", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "+", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "-", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "+", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], "0", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "-", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "+", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "-", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "+", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], 
           RowBox[{"2", " ", 
            SqrtBox["3"]}]]}], "-", 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["2"]], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["2"]]}], ")"}]}], "+", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], 
          RowBox[{"2", " ", 
           SqrtBox["3"]}]]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], "0", "0", "0", "0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "1", "1"},
       {"0", "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0", "1", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0"},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], 
        RowBox[{"-", "1"}], "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}]},
       {"0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], "1", 
        RowBox[{"-", "1"}], "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 6, 12, 18, 24, 30, 36, 42, 48}, {{1}, {2}, {4}, {7}, {5}, {
         8}, {1}, {2}, {4}, {7}, {5}, {8}, {3}, {6}, {4}, {7}, {5}, {8}, {
         1}, {2}, {3}, {6}, {4}, {7}, {3}, {6}, {1}, {2}, {5}, {8}, {3}, {
         6}, {4}, {7}, {5}, {8}, {1}, {2}, {3}, {6}, {4}, {7}, {3}, {6}, {
         1}, {2}, {5}, {8}}}, {
        6^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            0, "+"]) - 
         Rational[2, 3]^Rational[1, 2] (
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
          Rational[2, 3]^
           Rational[
            1, 2] (-$CellContext`\[CapitalGamma][
             0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
         6^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            1, "+"]), 
         2^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            0, "+"]) - 
         2^Rational[-1, 2] ((-
            Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
            1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]),
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Complex[0, 1] 
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         Complex[0, -1] 
          2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Complex[0, 1] 
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         Complex[0, -1] 
          2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Rational[-1, 2] 
          3^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] - 
         Rational[2, 3]^Rational[1, 2] (
          2^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
          2^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
         Rational[1, 2] 
          3^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"], 
         Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"], 0, 1, 0, -1, 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 0, 1, 0, 1, 
         0, 0, 0, 1, 
         Rational[1, 2] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Rational[1, 2] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 0, -1, 0, 0, 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), -1, 0, 1, 
         0, -3^Rational[1, 2], -1, -1, 0, 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 
         Rational[1, 2] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Rational[1, 2] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), -1, 
         0, -3^Rational[1, 2], 1, 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"])}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"+\""},
                "RowDefault"]]}], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"+\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            RowBox[{
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["6"]], "-", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SubscriptBox[
                  TemplateBox[{"\[CapitalGamma]"},
                   "RowDefault"], 
                  TemplateBox[{"0", "\",\"", "\"-\""},
                   "RowDefault"]]}], "-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"1", "\",\"", "\"-\""},
                  "RowDefault"]]}], ")"}]}], "+", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"+\""},
                "RowDefault"]]}], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"+\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]]}], 
          SqrtBox["3"]]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], 
             SqrtBox["6"]]}], "+", 
           FractionBox[
            RowBox[{
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["2"]], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["2"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["3"]]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
      SparseArray[
      Automatic, {8}, 0, {
       1, {{0, 6}, {{1}, {2}, {4}, {5}, {7}, {8}}}, {
        3^Rational[-1, 2] (
          3^Rational[-1, 2] ((-
              Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
              0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
             0, "+"]) + 
          3^Rational[-1, 2] (
            6^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
            Rational[2, 3]^
             Rational[
              1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
            6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
          3^Rational[-1, 2] ((-
              Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
              1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
             1, "+"])), 
         3^Rational[-1, 2] ((-6^Rational[-1, 2]) $CellContext`\[CapitalGamma][
            0, "+"] + 3^Rational[-1, 2] (
            2^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
            2^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 0, 0, 0, 
         0}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1676223087]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->260219023],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.430889`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->325482359]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1542313529],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
IA9MFnCAyQIlwGT1wDTZR48e0T44ly5dMnJWdN1rc3Nzkpe0tbVR+X38+HGG
49LeOt45ZNhDRZSYrFlvcmiyxsPB2QJJfCyZbLzR2DZZ41Vz6dWxN88gP5th
I5BtNTjuk9xkUw1p+YpbwAkwWcABJguUAJOVp7u7+2oljh49Grjbtm3bKm4T
pbOz05PW48ePv/XWW9Qfb926ZeRsZ82aFexz7ty5SV5y4sQJeibXrl1jHnfv
3r30V/fu3fNM33NS71368ssvz5w5k7zCVS5NVqZQakVyY7KW4oA0y1TGZK32
f5G5OsImaykTWKART7yJZK7NhaJPBQEmCzjAZIESYLLybN26dZxlGhoaTJUv
bmpqCna7cuXKJC/x5JqezOnTp9MedHh4mMaXgwi1t6sFCxZU/HuXLl16+/bt
mntWYrJmvcmhyRq3AFcFZwRMNvr+1J3J0nfJnskKJ7haWmbu3GQzr2hG0aeC
AJMFHGCyQAkwWXlevnw5bdo0exrrsWTJEiOnOjQ0RHe7adOmJK+6c+cOfdVX
X32V9riPHj2ie7h69WpfXx9dflsRz2c9UY1flptLk7XRCichuTFZS9HGeEuy
YbJWpzVoLoG9q5MPk6UXwlLOf4yJcMYzij4VBJgs4ACTBUqAyTrh1KlTpqQ1
yqRJk+7dM/ME++LFC7rn7du3J3lVT08PfVUGeQy5sGeys2fPTvjnx+u2EpM1
600C0Z9qGK9sI9+BxcfS07u8yVpdNC12dTLHEzNgyf0FVq/HmAgneo6iTwUB
Jgs4wGSBEmCyrli8eDHTWKM0NjYuXbrUlMZ6PH36lO5/9+7dSV71+PFj+qq2
tra0xw214KFrZsf9tbfsjh07Dhw4sHPnTu+/o+9DTBQ4lyZrtVxtPDDZeOJ1
xrbJGm/JRFdQWr06kkWHLJmsQCOeGBNhfo7oTAKWyuYVmCzgAJMFSoDJuqKv
r+/Pr3PmzJnAxfbs2fPnxNy5c+f+/fvPnz8fGxsze5K9vb3UEBNqoHcm9FW7
dqV+jvrhhx8qqvqcOXO6u7tDG//0009/+MMfQkZfrWCyEpM1601KTNZIjVZX
1WYsxaHiLcmGydIosHGBylxEKC2Sw8DSxye+2JcRYkyEeaVQ9KkIwGQBB5gs
UAJMVg/8frLGyWayz549o69KGMmlnD9/Pqqxixcv/u23ys+Z/f39f/zjH+nG
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
WHlmv9aWOsUxWSVlpY0nOTt5lLJXztR2Ejh/GtCsyYYWPNIAdyiyqWQ2KR56
x6j4o+E2QrE0bRKTYMw3WZoq85+lqgzZmNW0mn2RnJhU8HicXAiDwGS1USqV
1q1bR7W0vb2dbkArGFdk8uTJvb29rs5fOTpNNnjmoWWdPHWl21CT9X7U3nNS
PaJrNtkMM5xpg0piJps2t1bJSswomVfvaiv3zUlqVVJW2mxCBb+ec2YsFX2y
HabhL5U1a7LxUVfv+obcUNu6GErNHGltMmv1m7RagjHfZOmQEJvcsLFU1mr2
RXIyfzVoW32TFpisTs6dO/fmm2/6ZnrmzJnQbz/99NNqGtvU1HTt2jUn51wX
6DRZ/5nw+qf/plrhYp+KRZ/kzzaeVCZLE+RgsvZI601qZxgyf1NbLVGbAc7T
lJJiXGbLtdFHKeGSXJbi9cbXEccfIsOchkGTTWKp3i2R3iHV5hiHwsdBLnE0
suz9SsPNpGw5JlhtYpNvsk7WZhpPw6DvT9pkIbNkXnGgbaY3LTBZtYyNjd24
cWP79u3379+P/tbT23feeYc6bENDwwcffNDT0xPdGARoNtmYck8+1GSnrFig
02RTTe4pWfFXkQwP6mmDSjDZtGR+dHeyBjMGzvJMJU9NZs/EYVCA6olBiRYI
08S3+6yJKZMNqUHMbEBoS4XRn1COdNRVQ3+CkgJWVgdbtQRjvsmaNcrkmJ3Y
1PN1mXlZkLbvx7TAZOuXUql0+/bt8+fPnzx58uLFi8+fP3d9RnVAXZtstHyx
wmntVE+kSlb8VSPtg7pak03rTWpnGDIPGFePTDGkHS0+qopxGcxzdhgUsJFt
KBOmYa4CMGWy1AtqTgWESgEr+TAGhIpTVdSckO0693EBk6o4Z8I0WSWTV/xD
63mMyZwnk+3LSA8wWVAodJqsf/+JKVzsEy1frNBkU4X/9HwFVCRVGmeGKJta
k1V7XTIrtsJvavrMnDwuoGoJs0GTFW7GQbFRvlgmTMNM8DZisiGtqzmSQznG
zjWQknwlbyjN2G2OsUAeO73xBrcdpsk6WSTrY3bySslyD58M92SHKztMAZMF
hcIz2T+9jusz+gv+A0lM4WKfaPlihbedVCarpHZNNVKdXoYaPmImW06pcnVh
sskFwWqnlcxky3DTk8lWNhq7d5veZnwZtdgnqGLaZ0KMmCz1kYT3PfrkrGep
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
QSZZN0qgZyz6bpH2I6HyuLaNaPXeh4V4GKYvhn2RJGtcE4oOQpKlbywUIVlH
SCZPHzab1M2CMFbBLPNITCh3VKZtg4szyboZwZ1ZhYlgI21LcbaUgdjKeDu3
zh9HfunoBlkpY+qnMLMsxFg1x1Cm5YhPOUg6quVSXTwQkAU5VmujCJJso7lk
OPzSOcs2WD0KvTEK3lmLp45i+9QNUyXZwE8CrV69WlHYc889F3CGxx9/XJ3h
0KFDUVr1zjvvQDzcs2eP+/iLFy+OGDFCHb9gwQLfX9y9e/cUsm6++Wb1W8OH
D4f/tHfvXv3k3EgW4Y/bPQ+5IELPZCYGTejkOWHFL23EpPZvORfiQVTusG7I
Pk5Ze53vcHAm2fwN85W8WeBmCPqoMG3+JOuIynQY17iRLL0QTy8cvymhspxv
mVZn79b54/AOhR2PuLAXaAk3B+QsQmZZyiIcPuWU+QkFnMa1oRtbbmyPl4Mx
W9fiRiNZyEpvrvx3x+ThLFuobL+2eXXByb9z9i/YPnXDVEmWD8kK6FNQ9vHH
HwecAVp1t2/fHqVV3333HUySPH16y8P/4MGDkHxffPHFKM2wqe+5i71IFi3/
mJOsLMFjfHerfWbOhXhgX5Y/+TPbelW9+AIK8RQhWRtE+FZRKS55s8A7aP87
82Bo85S116GlLGfpC28ph1cbN5KlT6G+mMvhoOgAQix2U0qtJnL3/HEkno2V
stgoYxwraowbBlHlIPWUi5voidhyKYp93yjbCTkIkSy8/Q/Pv3bMxOXMnS5s
0rcdOFvGiUKjw/mpG6BKsnxI9tFHH1VQZktW7Na7776rzrBuXbRt0hUrVkA4
PXHihO3IK1eu3HffferIkSNHnj9/PlYzjOo1ycJypTK40otk4aKdXvklqWCy
33HzxtrMLkaSZZW3qjGV4DHux6pVU0D64iIka0suRDeoMZFYTu9Z8WO0F4Qs
6Tc8MivAo6+IbPmFekSyDdly0Rd7jTtUlrO9rCFsLLjnD3zdIBhJZJBV0pFT
TBI4FuJmsU0bZFNT2Jgi0ROl5XqrHI1HYg5QiGSbq7u/eOqoABs0B+nbDszv
dIrEGmzn7F+w3RXpqEqyfEh25syZCso+/fTTgDMcOXJEnWHTpk2xGnb8+HFI
soJVbTG8qBjukiVLjId9/fXXXwB9++23wW3rNclCVpIWSXcsBspgA7GRiWsu
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
846IJPvBBx9AOF2wYIHj4Oeeew4evG3btuDfrZLiQLKt9gjkxYpCTfXjmZOs
SrxsLPgCVTzBbCt+GuMxjbugrebdJgvJuuNDxdDYSJaDszeUe2h0kkWDwjk2
EwWZIrv/hBW/tN1ffEjWcW3FI0u/8TNsLMgEL76pS5Bh4oQWzt8XibcG4tm7
Fv0GDpOYS8+8eD/8G55u3lVsxZxkUwuZGCh1nFMItqFjArf+FpYdTJK1WVpP
HNsiAHbenEeee3rx1meXzpj+oPjfBfOnwmN+oOBQ7d69G8Lpn//8Z1czv/lm
9OjR6uDHHnss+HerpDiQbCv6IZJFhWz048vam1rxU5GsMU0uVPHouYgkS+lL
ZpLVJ5sYGpu/NysjZiuH6iVl9UEpvk9ik821eOOMX4mOjJs31rZPxYRk3XZ/
mzNGCoayORbKFKbnjq1zY6mOsf1ysdMlFtt7Dp0Ua+ylz+2GF1xuah15ax98
THEzjlcx14CTbKOZZbvYQ8ME6zMaHfa81Mc0d1KVZOHnLydeOPbWM+p/T5/c
IUh28qSJEUl248aNikxvv/321uNnz56tjr/nnnuCf7dKqhck21wdjwm9R4zQ
xJxk1dOeOclSrJAws5DojmNQKKOcgWTdo7Nj737HHixc+pZFP4qrMzJl6oFL
xfdJbIJj9Oa2/6N6sXfZ9b/+PtOsbVoyIVk41RHJqmeXHiobdzj0ApG2jyrM
gb6u1+boXQJPh+AYqVkk5g9KNcbqvqhirkqyyCybuaYVtHHEitWFj8EemWWT
kuwbH67P/KG2jJbW6cyf/5tkFz02PaJ3MSwjO3ny5NbjYb2eW2+9Nfh3q6Q4
kCxlCedFsk3RCNPWn1ZObq0kW7YwLiVxljGzkNGtiJLTJgPJumn00Ev/zMGl
+3vzQT/K0KCSsvprvezssgmZm+FWyYev/BCIDR2M4UAwJFl0YdW9D4s9yXs/
YtInHUKJHxk6Z/ynPobHOgTnmBojOX+qWbYqTJVkGy1MNVvqJwTRRm+9APU0
71NSkoUPzzwfasucAPvd3w98emrnyy+unT5tysSJ9/75w+cjkuyiRYsUmU6b
Nq31+D179qjjR40aFfy7VVIcSJbi5QjXVzv27m8l2YKek3SStZUuVWJeTqix
kKzx5cWQZPV/hTla//TH0ehf4RK3LPpRqsEix29uZZdtQrMOFVyW2dKggzGc
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
1m2tE+vww/Ovda/VlYoEZnrhM3yYu/tSimRbTZmIxx3oUSoHlxS9mKxOssb0
xRzqCjXafKPsjUgHY5j0qSzJ2u5TGCTbmrpErIVg+uLlT/6seGyskgM0mJtl
9XxiRhlJtobK5pFjn0SK+RxrKskOnsSyAW66doHZC395OSIIDybJFoyTrSqr
siTrtYrWE/K4STY/cXhFUNJJNn9gptfizcu+7AaxgiSLon0VenArKUsvJis/
XoV4Si3UvdI9KUkHY5j0afeRGRlbjWVkJXf9HaNOHZ6pzjN//c/hpSiYJLPV
dt9KIgVFfBfYvNOZA9TQEOUic55jTSXZgZQOs8b3rFty+RHxCV9JtpLsQKks
yXrBJqpb2mrgyE8cXsZT+Ohzx5bmJ1mvSydGgU6ybkN5OpJtNdBDevrTH0fD
MnboyLLoB9d7tjmmitQQC/FQzFVJhbLxtKZ7kpLdREmfcjYbymb1o7sWQ8FT
HXvyX8RFKGiKlWotxloqNx1FRE8GG8kyye89hEX0Tuc8x5pKsoMqHWa9mBTu
oseC2QEl2apBVa9J1g2AnEkW+bK6kTx/6iqvcdlz6CQxe1XrmdORbOs1hLOL
TrL50Y/y0yjFUKvvd9m6Qo02Oq3pnqRkqCxK+pSz2VC2id1af8cobuiEON04
STg7fxJnuI1kKXmPq7qodZ9ECiXKLphr3ahKsgMrI8y2egsbs/lF2bSsJFs1
UCpLsl6hrNBSI9CplWTz287ogAN34Q7Pv9ZNsvkDfr1WbmJ9TqyN27RtL6Qj
2VY0QPQEAYRPSVnfYrKSZGGAuXG/tzg3+aZ7UhK9gySbf2NByXjLQOM40bVY
ip47Lo+IW1uw2ayIjzhDbCTL3BTYd1FK/SpxTsBVSXaQpcOs5FmxtNBfu0aG
jZgGoZJs1UCpRySrRzK6j+8LyYq+cCNZr4X0hp3vhpGsPijpSLaVPRHJymxC
3ErK+pbgkXZASLLGF2XxkrLoxoFvdvcXJSrCpE+lTIHGaxjmWtyUzo+ti2gy
40l89OzcNpLlEEs+hOW1AcLZ9F9JdsBl41OJtOIj3sXwdZwIY5tKslUDprIk
67WE9iXZJm8AoNdqB9mX3W6H+d2kvcZFLNGnPjSemO7AfZXSkWzrTIC7qWKm
QZLlU1KWSLKo8fDdatxnKMtNaGlKDJKVkg7GkGRLORxC1lOr6zDX4qZ0VjFd
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
V4ZexpRoNE+62EAk2z3dkxIcLOniGzew1Da7oGuxOzNYR0UflwzE5CbZuNBU
ah0Yd1yK9CguNEXsQheSjft+yZ8iOy40lU0rBBUXmtzEFJ1km9gOxhwM5U3K
x3Ied9+k2z6VZKtK6dKlS4JYX3jhhfXr169Zs2bTpk379u07c+ZM6Xa1KzPJ
BrzubehEzykkFX1l7rWCopgC6SVl476dvTpCNwgStxqij4sD86Oke5LSHYzj
mv9sm+cZshZLxTX950n5qJNIOr4otQ6MOy5FbDRxuxBxULqQbNznWPT4booi
QhOHIFmpiDO8Fc9TkGxEl4OGh6G8SXmz5Hksi/ZH/NEU2z6VZKsGSplJNmD3
jC3JepHLkCRZ95H0AYr7GHe8rKFlvCPJ6g7Gcc1bxvU5xOekrsVSEZfTeWx/
OonEveuj53Pu3oyO41KKzSN2IaKDSheSbaIaVqKvbCmKaCljYvtrou6hteJ5
CpKNaCvn4FKiFOtZijAwG57Dm6XjvEqR16uSbNVAqSDJEp+lDnTyjXmMuzyg
LwKJxVXpJWXjrj/pSE5voRRxgOIaIByjHCVIVgnuPIirEdf8Z3zR6zmTkyoi
buSx/RlJJOI6p3gJHqmIQF2qRxG9ZyM+1TuSbKz7pRRxRNz2KQIXRkUkwdb3
VAqSbeKRDpONOKlY2yalrP+x5hXKwRXrZqkkWzVQYk6yyPKF/pVY50Up7rKN
/l4ghmcaM+IaFdeRlc7FvvVfiOmLIxKTYwcejgLFiN8qNDlffuuNWOvAxjJX
4c8ldS2WiogbeWx/RhKJOLviboUFK+LtX6pHsbZ94obIdSTZWONS0DU3yqYi
nyBZqSgkSOlUIpKNZVbms73QxNs2ibVNESA4r4IfPolu9kqyVQOlzCTr+653
GwGJoKQU1ymXzsVEkqWXlI1LsnQkpxeTlYID5PDmjYg5jq2SiOmelGDep9vn
boi4ftNPBS9+q2t3FEWcZnni/owkEovHU9RxLtuS/JlSlGKtY+OaLzuSbKxx
KeiaGwX6+ATJSkUx/1E6lYhko5j/Ct7sNnW3EZct7YrMqWHjkojEK8lWDZQy
k6wvs7iNgH0hWXrpW2IUZNxFNb0j9BI8UsSORyQmx8o2YronJWRGn7L2OuKV
dMuYEiezQbaJOs1gd9KZA4wkEsuxmU+UWSwMLFiSA83w4CkR19bfkWRTmJm6
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
Y8bJI0eOBAIBh+vElWSTeN+5b2+fX5JnyZIlSbyaPupxRj3OqMcZ9TijHmfU
44x6nFGPM+pxZlQ9SS8m7jyDDDY2Nnb48OGCgoKIWbKysrKjoyPmRWxJVgXV
1NwXAAAAAJCxvn79qpLjpUuXGhoaampqGhsbW1tb+/v70/W+AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAACkn56entOnT+/YsWPDhg2VlZW7du2qqalpb2+f
mZnxuzSYbnJyUjWV+vr6nTt3bty4cd26dZs3b967d++5c+eeP38eCAT8LhDz
z/j4+L59+/Z8c/z4cb/LgdHUh0xnZ2ddXZ1qLeojSH2Fbdmy5dixY7dv31af
Tn5XB6OpTs7jx48bGhrU91dVVVVFRcXWrVsPHjzY1tY2NDTkd3UwRW9v79pv
VA9ndnY23tPpYwPe6e7uLi8vXxBFSUnJxYsXg8Gg32XCRKOjoyplFBQURGs/
ytKlS2/cuEETQlxUr9JqQj/++KPf5cBQKsM2NzcXFxdH+/wpLCxsbGxMoOeJ
tKe+la5cubJ48eJojScnJ+fAgQPkWagPENlP/vr1q/tz6WMDnrpw4UJWVpZD
DAnZuHGjyix+FwuzPH78+IcffojZeEI2b948Njbmd8mYH1pbW2XjIckiooGB
gVWrVrn5/Fm9evXIyIjf9cIgExMT1dXVbhqPyhqdnZ1+1ws/1dfXyybhPsnS
xwY81dzc7OZjPKSqqopfa8Py9OnTnJwc9+1HKS8vZ6QfYurv77c95SfJIpxq
J6ph8PmDBKjOjMoO7htPXl7eixcv/K4a/jh37pytPbhMsvSxAU/19PRkZ2fL
95H6YH/48OHY2Jj6ulcf2gcOHLD9Kuno0aN+Vw0jDA8P27KG+qKvqanp7u6e
mJhQn8aDg4M3b96sqKiwfVbv3LnT79phNNV4Kisrbc2GJAsb1ZNctmyZbCS5
ubnHjx/v7e2dmpqanp5+9uyZHKAewoRrhJw8edLWNtS3VXt7++fPn0P9H3WA
7Ve1ZWVl/CYkAzU1NYWnTjdJlj424KlgMLh69Wr5Djp16lT4YR0dHQsXLrSO
Ue/KDx8+pL5amEZ9AsvGs2LFik+fPkU8Un0L2D6rVQ8zxdViHjl79mx4t4Ek
C5vGxkbZQkpLS9++fRt+WEtLizxMfYWpqJL6amGUoaEh2bFRzpw5E74yYV9f
35IlS+Rhf/zxhy8FwxfT09O2ro4lZpKljw147f79+/IttmvXLv0jkSHGx8fl
L6uLi4udO4enT5+WTWj79u0pKxXzy8uXL22/xA4hyUL69OlTbm6ujLHv3r2L
dvChQ4dkW1IfR6ksFQa6evWqy68kFWblJ9LixYtZmSdDfPz40WGZpphJlj42
4LXNmzdbbxyVSqI9UAvZsmWLPJhp6Rnuxo0b8oO3qanJ+fjZ2Vk5nW3hwoVx
rfuHDDE1NbV06dKI3QaSLCTb6is3b950OFh9YckwUllZmbI6Yabdu3fL9uPc
/7EdrAJOyuqELyYnJ//44w/bU3ubmH0Y+tiApyYmJuQ3+44dO5yP7+7ulm9h
FWRSUyfM9Pvvv1uNISsry82n7okTJ2QTYvwMwslnZyrSqs8lkiwiktumrF27
NubxmzZtso4vKCjgsVqGq6qqstpDUVGR88HXr1+XX15Pnz5NTZHwxV9//RW+
I0Nubq5t0Q/nJEsfG/DavXv34nrXBAIBubxPdXV1auqEmVTX0WoMy5Ytc3PK
tWvXZJNTn9teF4n5pb293Woeqg/Q09Mjf2FCkoXF1ut7+PBhzFN6e3vVt15X
V9e7d+/Yiwfr1q2z2k9paanzwbap1g8ePEhNkfBFSUmJLcYuWbJEfR/Zli92
TrL0sQGv2YZmDQwMxDxl69at1vGFhYX8TjuTXbp06dixYzt37qyoqHA5p8O2
+h/bGUBS4UL1J63mEVoZgySLiORaT+rLaGZmxu+KMM/YBgyPj487HGwbUNTX
15eyOpF6MslmZWWprk5oweq4kix9bMBrckx+QUGBm1NU31K+Mfv7+70uEulE
jhRVBgcH/a4IplBf2dXV1VbbWL16dWhPPZIsIpJ766jvMr/LwfxjW/j68uXL
0Y6cnp7+6aefrCOzs7OnpqZSWSpSzEqymzZt6u3ttf57XEmWPjbgNbmsyqpV
q9ycYpsq8uTJE6+LRNoYHR3Ny8uzGk9paSm/b4TlypUrVttQ7eT9+/eh/06S
RUTy+8u2K0pfX19LS8vp06dramrOnDnT1tY2PDzsV50w1ufPn+Xy+/n5+dGC
w9GjR2XPZ//+/SkuFSmm+ifV1dXhs6HjSrL0sQGvqc9t6/2ybds2N6d0dHTI
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
1vBhxvKPzp8/n6xKRkZGKisrrYt7kWSHhoasl7Nz586kXx8AAAAA4LWnT5/m
5uaGR9RNmzbdunXr48eP09PTgUBABcCenp4TJ06UlpaGH1xfX5+UYl69eiUv
60WSbW1tta5//fr1pF8fAAAAAOCp4eHh8GS6YsWK3t7eaKfMzMzU1dWFP6W9
f/++fj0pSLJ79+61rv/58+ekXx8AAAAA4KlNmzbZAunWrVvd7Lbz6NEj25Pc
wsJC/WDodZINBAKhGbihwJ7ciwMAAAAAvKZyoi3GVlZWTk9Puzz9zp07tiez
Bw8e1CzJ6yT78uVL6+InTpxI7sUBAAAAAF775ZdfZGzMz88fHByM6wpHjhyR
V8jNzY33CjZeJ9kzZ85YF+/o6EjuxQEAAAAAnurr67M9kD137ly8FxkbG7Mt
epzY0k9TU1Nvvmlra5NXu3z58pt/GR0dTeDKNtbCyHl5eV+/ftW8mrrCKy/p
VwgAAAAA6eTixYu2B7JupseGq6urk9dJbPLpgwcPFsRy6tSpBK4sTUxMZGdn
h662efNmzaspT548iVm2jvfv3+sXCQAAAABpQ0U5GZp+++23xK4T/mx3aGgo
3oukJsneuXPHulpzc7Pm1ZQLFy4kJbFGlJ+fHwgE9IsEAAAAgPQQDAZVUJK5
6d69ewlfbcmSJfJSt2/fjvcKqUmyBw8etK6WlMedu3btSlZuDbd+/Xr9CgEA
AAAgbYyPj9ty05cvXxK+mi3QXbx4Md4rDA4Otnxz8uRJeamampqWf3nz5k3C
FYYsWrQodNnFixdrXipEvdLD35OzhktLSw9HZ1tuq7q62nbA33//nZQiAQAA
ACA9fPz4UcYolb90rnbu3Dl5tbq6uoQv5d3axW/fvrUuq3Jisi5rU1xcbN1l
z549Dkfa5inrb8ULAAAAAOmtp6dHxqjElmmy3LhxQ15t//79CV/KuyTb3Nxs
XVZnKLWDoaEhWfz58+cdDt65c6d15KJFi7yoBwAAAADSSVdXl8xcFRUVOle7
e/euvNq+ffsSvpR3SfbXX38NXTM7O3tiYiJZl5VsSxk/evTI4eCysjKXT28B
AAAAAEpvb28Sk6xcE1g5cuRIwpfyKMlOTU3l5uaGrundSkpNTU2yeIc1nAcH
B+WRf/75p0clAQAAAEDaGBgYkElq5cqVOlezjS4+efJkwpfyKMk+evTIuua5
c+eScs1we/fute5SUlLicOT9+/fly3z+/LlHJQEAAABA2ggEAnl5eVaSKigo
CAaDCV/t9OnTMpe1tbUlfCmPkuzx48eta6pbJOWa4ZYuXWrdpbq62uFIuURz
VlbW1NSURyUBAAAAQDpZu3atzIw6a+faduHp6+tL+FIeJdlly5ZZj0p1MruD
8fFxlUmtys+cOeNw8NatW60jly9f7kU9AAAAAJB+GhoaZGa8c+dOYtdRwXDx
4sXWdcrKynSiohdJVg6l1lmNypltuaenT586HCyf3qpU61FJAAAAAJBmbBvx
JBzxXr9+La+js9zTnDdJ9urVq9YFdUY+Oztz5ox1l+zs7MnJyWhHzszM5OTk
WAefOHHCo5IAAAAAIP38/PPPVp4qKChIbG+a2tpamT11hhbPeZNkt2/fbl1w
eHhY/4IRydHaq1evdjjy06dP8jVeuXLFo5IAAAAAIP20tLTISJXAor7j4+P5
+flJHCib9CQ7MzOjQnroamvWrNG8WjSfP3+Wk2SPHTvmcLDtNd6+fdujqgAA
AAAg/QQCgfLycitSFRUVDQ4OxnUFFdnkU12dZaNCkp5ku7q6rKudOnVK82rR
XLp0SZb96NEjh4OfPn3q/mAAAAAAgE1PT4+cs1ldXe1+vabOzk6ZyK5evapf
T9KTrFzYSqVa/Qoj2rBhg0z0MzMzDgfbNpPt7u72qCoAAAAASFdnz56Vwer4
8eNuznr79m1RUZF1lopySdndxpZkOzo6NC+4evVqK2DOzs7qVxjuw4cPcmjx
b7/95nz8gwcP5Gvs7Oz0oioAAAAASG8qfMlsdeLEiUAg4HC8yps//PCDdfyq
VavGxsaSUoltJeT29nadqw0PD1sZc/v27UmpMNzvv/8ua4755PfZs2fy+Js3
b3pUGAAAAACksdnZ2Z07d8p49euvv0Zc5jcYDF67di03N9c68ueffx4dHU1W
JW/fvpVlaI5Ybmtrsy51/fr1JNX4HVWwHJ6t/jZintLf3y9fY11dnReFAQAA
AECa6e7ubvteS0vLTz/9JBNWQUFBU1OTPOvly5dyrxklKyvr4sWLbWESHmk8
NDQkr79kyZJPnz7NfUvQCYwN3rt3r3WpgYGBxEpyoKpat26dLLi1tdXNWXLB
5xUrViS9MAAAAABIP3v27FngzvT0tOZZcQkEAvIRZygsFxYWqv946NChuC6l
AmNJSUnoIsuXL0+sHmenTp2Spa5atcp5VLalurpansiiTwAAAAAQk7FJVtm0
aVPEa1ZWVsZ1Hbl4VE1NTcL1RHPnzh250JPy5MkTl+fadvJVLznp5QEAAABA
mjE5yfb19S1cuDD8mgUFBXFdR67JrL8Gss2zZ8/y8vJkeS7XfA6ZnJwsLi6W
p9+6dSu5FQIAAABAmpETSB1kZWXJTJrYWQlQYXbjxo22J57q/0ZchCqa9evX
h05UkVOzHpv+/n4Vq2VtFRUVznvIhrt48aK8QlFRkYq3SSwSAAAAAJB6Kre+
ePGivb29s7Pz06dPX79+dX+uSoXWfNvNmzd7VyQAAAAAAEkRDAY//UsSNwkC
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABjo/wNxQR+Z
    
    "], {{0, 384.}, {631., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{631., 384.},
  PlotRange->{{0, 631.}, {0, 384.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->810860447]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladStationary"]], "paclet:Q3/ref/LindbladStationary"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladBasis"]], "paclet:Q3/ref/LindbladBasis"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladGenerator"]], "paclet:Q3/ref/LindbladGenerator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DampingOperator"]], "paclet:Q3/ref/DampingOperator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Supermap"]], "paclet:Q3/ref/Supermap"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tech Notes"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus: Quick Start"]], "paclet:Q3/tutorial/KrausQuickStart"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus Package Guide"]], "paclet:Q3/guide/KrausPackageGuide"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1783761681]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Q3 Application", ButtonData -> "paclet:Q3/guide/Q3", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 7, 19, 14, 3, 42.830557}", 
    "history" -> {"1.8", "", "", ""}, "context" -> "Q3`", 
    "keywords" -> {
     "Lindblad equation", "quantum master equation", "decoherence", 
      "quantum noise"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> "Q3 Symbol", 
    "language" -> "en", "paclet" -> "Q3", "status" -> "None", "summary" -> 
    "LindbladSolve[{a, b1, b2, ...}, init, t] returns the solution of the \
Lindblad equation specified by the effective Hamiltonian a and the Lindblad \
operators b1, b2, ... with the initial condition init as a function of time \
t. LindbladSolve[a, {b1, b2, ...}, init, t] is also allowed.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "LindbladSolve", 
    "titlemodifier" -> "", "windowtitle" -> "LindbladSolve", "type" -> 
    "Symbol", "uri" -> "Q3/ref/LindbladSolve", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (June 19, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.3 for Mac OS X x86 (64-bit) (June 19, 2021)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7478, 216, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"615f6e5a-7785-4581-85d9-6290cd1badf5",
   CellTags->"PrimaryExamplesSection",
   CellID->1314838848]},
 "RasterizedOutput"->{
  Cell[157268, 4524, 102222, 1683, 70, "Output",ExpressionUUID->"3505ca06-4403-4a84-a8b6-5a535c46de30",
   CellTags->"RasterizedOutput",
   CellID->810860447]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 264642, 6383},
 {"RasterizedOutput", 264841, 6387}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 4728, 118, 70, "AnchorBarGrid",ExpressionUUID->"cee53e6c-59e9-454e-83f3-f1c61afc94af",
 CellID->1],
Cell[CellGroupData[{
Cell[5338, 143, 170, 6, 70, "ObjectNameGrid",ExpressionUUID->"c388e728-f2e4-4e9c-8efa-15cc4fac4c7a"],
Cell[5511, 151, 1930, 60, 70, "Usage",ExpressionUUID->"8ee8a9f9-10b4-4b37-8ea9-a9585b44bb7c",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7478, 216, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"615f6e5a-7785-4581-85d9-6290cd1badf5",
 CellTags->"PrimaryExamplesSection",
 CellID->1314838848],
Cell[CellGroupData[{
Cell[7771, 230, 195, 6, 70, "ExampleSection",ExpressionUUID->"4b9485fb-39e7-4df3-89f5-49cdf825feec",
 CellID->889790706],
Cell[7969, 238, 90, 3, 70, "Input",ExpressionUUID->"2926cd32-7827-4a12-aef9-03ccb6ec8439",
 CellID->615462090],
Cell[CellGroupData[{
Cell[8084, 245, 605, 19, 70, "Input",ExpressionUUID->"806bd5b7-7e05-492e-af60-ddeed11b58b2",
 CellID->383286299],
Cell[8692, 266, 1513, 55, 70, "Output",ExpressionUUID->"0b86b29e-fd8a-47fd-9523-74c1e428461e",
 CellID->586405171]
}, Open  ]],
Cell[CellGroupData[{
Cell[10242, 326, 233, 7, 70, "Input",ExpressionUUID->"a443d79a-41a1-42ed-b2f8-e4493b8fb07e",
 CellID->575047188],
Cell[10478, 335, 589, 18, 70, "Output",ExpressionUUID->"2307409c-396e-4976-92b6-29c4f81f09c8",
 CellID->52192358]
}, Open  ]],
Cell[CellGroupData[{
Cell[11104, 358, 631, 18, 70, "Input",ExpressionUUID->"59f1d88e-0d28-4f7b-8db2-4d514d71917c",
 CellID->1820491489],
Cell[11738, 378, 1680, 54, 70, "Output",ExpressionUUID->"2dd03723-af99-4a89-bba1-f0555ca5b50c",
 CellID->828256374]
}, Open  ]],
Cell[CellGroupData[{
Cell[13455, 437, 217, 6, 70, "Input",ExpressionUUID->"96607830-8f5f-413a-9f14-aab44b9a1b9b",
 CellID->309037009],
Cell[13675, 445, 10050, 316, 70, "Output",ExpressionUUID->"c9f46764-613a-4217-aaec-e511dd7aaaf6",
 CellID->526134400]
}, Open  ]],
Cell[CellGroupData[{
Cell[23762, 766, 263, 9, 70, "Input",ExpressionUUID->"003a6b8a-3394-44a3-bbed-462b257c1516",
 CellID->1017770999],
Cell[24028, 777, 1514, 55, 70, "Output",ExpressionUUID->"200dbc62-77bd-4dcd-b6f7-dbe54cc66387",
 CellID->1708343010]
}, Open  ]],
Cell[CellGroupData[{
Cell[25579, 837, 562, 17, 70, "Input",ExpressionUUID->"52d0844c-df42-4146-9f3b-b8cfd8a94f17",
 CellID->766568750],
Cell[26144, 856, 1497, 51, 70, "Output",ExpressionUUID->"b88715ee-007a-4904-8f3b-a1d3bbee0359",
 CellID->575847813]
}, Open  ]],
Cell[CellGroupData[{
Cell[27678, 912, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"90b10c4c-7d1f-4448-bcd2-2d7378ecce63",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[27829, 919, 334, 11, 70, "Input",ExpressionUUID->"072e324a-5d5b-417a-967e-e1f0b5254b32",
 CellID->435145815],
Cell[28166, 932, 796, 26, 70, "Output",ExpressionUUID->"97d89a81-f15f-43cc-ac0d-b0a5cdd906e4",
 CellID->774245539]
}, Open  ]],
Cell[CellGroupData[{
Cell[28999, 963, 213, 6, 70, "Input",ExpressionUUID->"e218c0c7-38a0-486f-aacd-2fd695549a4f",
 CellID->1196829607],
Cell[29215, 971, 633, 21, 70, "Output",ExpressionUUID->"273f8296-440f-4cfd-ba90-24a97751886c",
 CellID->1914966838]
}, Open  ]],
Cell[CellGroupData[{
Cell[29885, 997, 1138, 32, 70, "Input",ExpressionUUID->"6436c9e7-469a-43dd-8df2-6c517a9ebba6",
 CellID->1273375212],
Cell[31026, 1031, 1913, 58, 70, "Print",ExpressionUUID->"c7c507aa-2ad6-46af-a580-312b0645c6ba",
 CellID->625111024],
Cell[32942, 1091, 2757, 71, 70, "Output",ExpressionUUID->"b63b6535-db7c-4497-930d-a1803f546230",
 CellID->713763889]
}, Open  ]],
Cell[35714, 1165, 740, 25, 70, "Input",ExpressionUUID->"9a4a0127-9994-4081-8782-d249aec8f11b",
 CellID->374788519],
Cell[CellGroupData[{
Cell[36479, 1194, 1149, 31, 70, "Input",ExpressionUUID->"4633b02f-2f16-4db5-9489-d60be1500d6d",
 CellID->667061092],
Cell[37631, 1227, 6490, 134, 70, "Output",ExpressionUUID->"5f4a5ea5-ccba-4f28-892c-85ccd2ca735e",
 CellID->2118019245]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44170, 1367, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"c8a34d42-45f5-485a-9201-efde54707ed5",
 CellID->1586259128],
Cell[44299, 1372, 78, 1, 70, "ExampleText",ExpressionUUID->"105a309a-76ed-4924-b4a2-1aa09548aa37",
 CellID->692904445],
Cell[CellGroupData[{
Cell[44402, 1377, 290, 9, 70, "Input",ExpressionUUID->"fdab2702-4fe2-4961-aa62-4a459250a4b9",
 CellID->1425866839],
Cell[44695, 1388, 612, 19, 70, "Output",ExpressionUUID->"a23b91d5-83ee-4ac3-9d41-1b2e37d43fcf",
 CellID->1759656048]
}, Open  ]],
Cell[CellGroupData[{
Cell[45344, 1412, 543, 16, 70, "Input",ExpressionUUID->"18bdc042-fbcf-4600-80b3-5a429e6d0345",
 CellID->1104129648],
Cell[45890, 1430, 1822, 65, 70, "Output",ExpressionUUID->"88381b11-ec4c-45b1-8028-05f84d803544",
 CellID->1607835124]
}, Open  ]],
Cell[CellGroupData[{
Cell[47749, 1500, 1008, 28, 70, "Input",ExpressionUUID->"8b90276a-cdc3-4cee-9c92-5b89ade6b79d",
 CellID->252233040],
Cell[48760, 1530, 1766, 56, 70, "Output",ExpressionUUID->"8267f90d-119f-4580-9ece-bf34a10f8138",
 CellID->483610080]
}, Open  ]],
Cell[CellGroupData[{
Cell[50563, 1591, 940, 26, 70, "Input",ExpressionUUID->"5f454450-9e6f-47fc-8287-5650b7ff4179",
 CellID->1792714312],
Cell[51506, 1619, 127, 4, 70, "Output",ExpressionUUID->"a2282891-8a1b-4f98-a84e-cfdcbe5f2353",
 CellID->534923729]
}, Open  ]],
Cell[51648, 1626, 288, 10, 70, "Input",ExpressionUUID->"5a9d5ae2-c81e-49a6-8f26-59de5fba1b68",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[51961, 1640, 558, 15, 70, "Input",ExpressionUUID->"b194c8fe-9a64-4968-ac7b-d5f8a750fc17",
 CellID->1239593903],
Cell[52522, 1657, 13635, 253, 70, "Output",ExpressionUUID->"70d43a14-7586-46d7-aaed-340a9a28e54f",
 CellID->794832193]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66206, 1916, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"f180784c-60e1-4e17-908e-897b291b5dcf",
 CellID->1261705519],
Cell[66335, 1921, 221, 7, 70, "ExampleText",ExpressionUUID->"7b033960-18fa-48ca-ae95-097fc4812685",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[66581, 1932, 328, 11, 70, "Input",ExpressionUUID->"ce636589-e28a-473d-99ba-da6caa7ad239",
 CellID->427878852],
Cell[66912, 1945, 376, 15, 70, "Output",ExpressionUUID->"83420747-9437-42b6-8b5c-a6bcbd1c7518",
 CellID->1598207672]
}, Open  ]],
Cell[67303, 1963, 146, 5, 70, "Input",ExpressionUUID->"7281ddfb-1aae-4aee-affb-65ddc7635797",
 CellID->1686455809],
Cell[CellGroupData[{
Cell[67474, 1972, 527, 15, 70, "Input",ExpressionUUID->"c1bc7503-48c7-4725-a9b8-38f6b1f44ae7",
 CellID->1773608757],
Cell[68004, 1989, 787, 32, 70, "Output",ExpressionUUID->"3ffc79b6-95ca-4e26-81c9-c20bac3936e4",
 CellID->1721018070]
}, Open  ]],
Cell[CellGroupData[{
Cell[68828, 2026, 1211, 32, 70, "Input",ExpressionUUID->"0bebc0d6-9c76-425b-b18b-7ccc0408d889",
 CellID->813112276],
Cell[CellGroupData[{
Cell[70064, 2062, 642, 21, 70, "Print",ExpressionUUID->"65ef90bd-24a8-4b0d-b297-dc4cb76d5aa5",
 CellID->520954565],
Cell[70709, 2085, 1338, 40, 70, "Print",ExpressionUUID->"764547e0-f77c-44ee-909f-b14500f5a637",
 CellID->392545136]
}, Open  ]],
Cell[72062, 2128, 2107, 67, 70, "Output",ExpressionUUID->"ef544202-d8b0-43c2-9509-a4df78091a99",
 CellID->1720060524]
}, Open  ]],
Cell[CellGroupData[{
Cell[74206, 2200, 524, 17, 70, "Input",ExpressionUUID->"586c89c5-ab40-4ea9-a08b-da82bf434082",
 CellID->1408697964],
Cell[74733, 2219, 813, 23, 70, "Output",ExpressionUUID->"c5bee79a-9717-498a-bdab-866a4d8a03ba",
 CellID->316250285]
}, Open  ]],
Cell[CellGroupData[{
Cell[75583, 2247, 1149, 31, 70, "Input",ExpressionUUID->"0de9559e-6e7a-47eb-b7d1-b4af422b0de5",
 CellID->743762978],
Cell[76735, 2280, 6485, 134, 70, "Output",ExpressionUUID->"a8661578-966f-4c67-84b1-4822cf259199",
 CellID->653393673]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83269, 2420, 125, 3, 70, "ExampleDelimiter",ExpressionUUID->"38ba835b-985c-4c94-b72b-dbdb9505bab5",
 CellID->818700002],
Cell[83397, 2425, 146, 4, 70, "ExampleText",ExpressionUUID->"73192bac-10cf-4ca2-9bcb-63fc2f785978",
 CellID->1536645940],
Cell[83546, 2431, 127, 4, 70, "Input",ExpressionUUID->"e7aa382a-1d57-4184-b263-f47ca3f73541",
 CellID->1470681252],
Cell[CellGroupData[{
Cell[83698, 2439, 288, 10, 70, "Input",ExpressionUUID->"212d9236-10ae-4868-974e-da5e8fca70de",
 CellID->963207285],
Cell[83989, 2451, 365, 13, 70, "Output",ExpressionUUID->"a5f8051e-8f67-4b30-9b54-c270c4b15b54",
 CellID->1321628607]
}, Open  ]],
Cell[84369, 2467, 142, 5, 70, "Input",ExpressionUUID->"2aeb168e-002f-436d-a778-48946497208b",
 CellID->1701417680],
Cell[CellGroupData[{
Cell[84536, 2476, 523, 15, 70, "Input",ExpressionUUID->"0e240ad8-7044-4839-a8ca-b0a6d8856de6",
 CellID->682224499],
Cell[85062, 2493, 691, 26, 70, "Output",ExpressionUUID->"f9c1d951-d458-48dd-bfa9-55d61b13b39b",
 CellID->75316473]
}, Open  ]],
Cell[CellGroupData[{
Cell[85790, 2524, 239, 7, 70, "Input",ExpressionUUID->"07b1a751-58c5-4e02-abc7-54693e0b6ebb",
 CellID->39881190],
Cell[86032, 2533, 1049, 39, 70, "Output",ExpressionUUID->"11515ce8-8097-4e1d-905b-2fa05d23b50c",
 CellID->540818487]
}, Open  ]],
Cell[CellGroupData[{
Cell[87118, 2577, 1193, 31, 70, "Input",ExpressionUUID->"55580a24-df9e-41b7-be79-b7b40f27ff19",
 CellID->719143774],
Cell[CellGroupData[{
Cell[88336, 2612, 643, 21, 70, "Print",ExpressionUUID->"6a3e7606-c563-45ee-9c1e-7b19befba916",
 CellID->1701594824],
Cell[88982, 2635, 1338, 40, 70, "Print",ExpressionUUID->"40ee5964-3b2c-484a-ab85-34b4e30a4b2a",
 CellID->664479869]
}, Open  ]],
Cell[90335, 2678, 1999, 58, 70, "Output",ExpressionUUID->"34834f33-41b9-4bc2-addf-9b86551507f1",
 CellID->829277253]
}, Open  ]],
Cell[CellGroupData[{
Cell[92371, 2741, 519, 17, 70, "Input",ExpressionUUID->"fea9d12c-c26c-4c6b-bb01-d91d264a2c07",
 CellID->1210483635],
Cell[92893, 2760, 813, 23, 70, "Output",ExpressionUUID->"cfba86cb-829e-417b-85de-81d6ab350202",
 CellID->278233393]
}, Open  ]],
Cell[CellGroupData[{
Cell[93743, 2788, 1150, 31, 70, "Input",ExpressionUUID->"abc50920-f965-47e1-933a-188e5f0331d4",
 CellID->1754552550],
Cell[94896, 2821, 6485, 134, 70, "Output",ExpressionUUID->"71888777-a146-4603-83c3-e32bb5dfb4df",
 CellID->411756991]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101430, 2961, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"ca2f59e4-5ca6-4b71-845d-59e3c278e495",
 CellID->1593892289],
Cell[101559, 2966, 120, 2, 70, "ExampleText",ExpressionUUID->"67a87241-9759-4f48-9e77-a6c8a48a4e7a",
 CellID->210970783],
Cell[101682, 2970, 126, 4, 70, "Input",ExpressionUUID->"ca37c6e9-b853-4d89-a03c-0eca204330a0",
 CellID->290448684],
Cell[101811, 2976, 166, 4, 70, "ExampleText",ExpressionUUID->"239db4cd-31c8-4a3f-ab05-02f81145f670",
 CellID->340702357],
Cell[CellGroupData[{
Cell[102002, 2984, 872, 27, 70, "Input",ExpressionUUID->"ce9b68dd-6c34-43ae-a2f1-333fa8427cab",
 CellID->993111197],
Cell[102877, 3013, 765, 24, 70, "Output",ExpressionUUID->"8d172434-b0c9-4364-bc5f-eba63ede4582",
 CellID->763452790]
}, Open  ]],
Cell[CellGroupData[{
Cell[103679, 3042, 1346, 36, 70, "Input",ExpressionUUID->"65f0b182-3115-4f54-963c-3fc45f55396a",
 CellID->501635503],
Cell[105028, 3080, 1480, 64, 70, "Output",ExpressionUUID->"4006ae3a-7968-4edf-860f-9043d40a5624",
 CellID->586120978],
Cell[106511, 3146, 3480, 108, 70, "Output",ExpressionUUID->"045dc207-c270-4bb0-8281-60724583310f",
 CellID->427788457]
}, Open  ]],
Cell[CellGroupData[{
Cell[110028, 3259, 349, 11, 70, "Input",ExpressionUUID->"23ffcdf5-83f2-41fa-90d2-d5ef212fcc4b",
 CellID->1865696334],
Cell[110380, 3272, 44642, 1180, 70, "Output",ExpressionUUID->"4f26c3ac-f640-4375-b2a2-07569960e232",
 CellID->1676223087]
}, Open  ]],
Cell[CellGroupData[{
Cell[155059, 4457, 1387, 37, 70, "Input",ExpressionUUID->"bd96527f-e30f-4be0-aa21-96e8c9b99135",
 CellID->260219023],
Cell[156449, 4496, 127, 4, 70, "Output",ExpressionUUID->"a991a19b-f07f-4152-8797-046fd3cd6c29",
 CellID->325482359]
}, Open  ]],
Cell[CellGroupData[{
Cell[156613, 4505, 652, 17, 70, "Input",ExpressionUUID->"66a74420-9250-420a-afd2-a8cca6b64e8d",
 CellID->1542313529],
Cell[157268, 4524, 102222, 1683, 70, "Output",ExpressionUUID->"3505ca06-4403-4a84-a8b6-5a535c46de30",
 CellTags->"RasterizedOutput",
 CellID->810860447]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[259529, 6212, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"864feacc-3c22-42ec-8671-dc8a82879fad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259597, 6217, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"313e43d1-18bd-4a42-b719-2b6719624f4c",
 CellID->1255426704],
Cell[259750, 6226, 1848, 58, 70, "SeeAlso",ExpressionUUID->"30f2e36f-bd79-44c8-9888-1b4941efc8a1",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[261635, 6289, 153, 7, 70, "TutorialsSection",ExpressionUUID->"dda1ce11-5be1-4c8a-a6bf-764ccf7fe87a",
 CellID->250839057],
Cell[261791, 6298, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"2b25adc6-feec-4020-a639-8567e4a082b0"],
Cell[261825, 6300, 187, 6, 70, "Tutorials",ExpressionUUID->"7a51cb3e-1108-4e1c-81d5-041b2be86aa3",
 CellID->341631938],
Cell[262015, 6308, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"47b8913d-8708-46ac-8c78-9dc8862fd639"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262083, 6313, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"7f6d42d8-cbb6-49f3-adc3-c2e070b4eff9",
 CellID->38303248],
Cell[262242, 6322, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"54058033-577c-443b-a9b0-cbd111a3a1c2"],
Cell[262276, 6324, 188, 6, 70, "MoreAbout",ExpressionUUID->"bd025f33-893c-4ae4-a16c-b90033d2871a",
 CellID->1783761681]
}, Open  ]],
Cell[262479, 6333, 23, 0, 70, "FooterCell",ExpressionUUID->"d5113840-2a28-4905-a1ea-f14baef033bd"]
}
]
*)

(* End of internal cache information *)
