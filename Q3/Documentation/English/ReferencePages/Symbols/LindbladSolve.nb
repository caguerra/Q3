(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    279594,       6702]
NotebookOptionsPosition[    263692,       6354]
NotebookOutlinePosition[    266333,       6419]
CellTagsIndexPosition[    266209,       6413]
WindowTitle->LindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["Q3 SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus: Quick Start\"\>":>
       Documentation`HelpLookup["paclet:Q3/tutorial/KrausQuickStart"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"LindbladStationary\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladStationary"], "\<\"LindbladConvert\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladConvert"], "\<\"LindbladBasis\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladBasis"], "\<\"LindbladGenerator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladGenerator"], "\<\"DampingOperator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/DampingOperator"], "\<\"Supermap\"\>":>
       Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus Package Guide\"\>":>
       Documentation`HelpLookup["paclet:Q3/guide/KrausPackageGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Q3/ref/LindbladSolve\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Q3/ref/LindbladSolve"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Q3/ref/LindbladSolve.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$108839], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Q3/ref/LindbladSolve", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["LindbladSolve", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]returns the solution of the Lindblad equation specified \
by the effective Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula"],
     " and the Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula"],
     " with the initial condition ",
     Cell[BoxData[
      StyleBox["init", "TI"]], "InlineFormula"],
     " as a function of time ",
     Cell[BoxData[
      StyleBox["t", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]is also allowed."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->943075604],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->1842361568],

Cell[BoxData[
 RowBox[{"<<", "Q3`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->615462090],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->383286299],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->586405171]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->575047188],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->52192358]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1820491489],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->828256374]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
  RowBox[{"LindbladSolve", "[", 
   RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->309037009],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->526134400]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "0"}]}], "]"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1017770999],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1708343010]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ">", "0"}], ",", 
        
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], ">", "0"}]}], 
       "}"}]}]}], "]"}], "//", "Simplify"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->766568750],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]], "0"},
     {"0", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[7]//MatrixForm=",
 CellID->575847813]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->435145815],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->774245539]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->1196829607],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Output",\

 CellLabel->"Out[2]//MatrixForm=",
 CellID->1914966838]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "opH", "}"}], ",", "opL"}], "}"}], ",", "1"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1273375212],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0.5477225575051661`"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]],
    ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0.8366600265340756`", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[233]:=",
 CellID->625111024],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
      RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->713763889]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->374788519],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->667061092],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwV2WVIjJIRiILL3IwIk5EwSEBpMDiOVSykuFzao
wGAhdoWgzIUAhVJQ4ip3IRZXzmSQOOIUB8RYjjaRJdLa9udv5j87O/ve5818
33+W/n58ULSSgoJC9H+P7PP5PH0mm1VS/pVs2kjh+rqO9YgYv/eQVKFb9OH6
R+QVR9kMk+VfF7Ujf1rA38fJGWZk9CjcJ3JtlpSEMxztVyZw/Tzh3OBRre2G
SGyMbBaIZ5SNB/MqH/cvkaGFoHSJFkcw0C+bZcJtNThjfuEXgdxbI4unc1rj
9t4VyNevk8BcXbakfUQg9yWEZ9O9lrgwjvv/IrHNZjwGb1IgP2+D1BlY3Nxc
n0Jvk4RVS4sGxFPoSYnL2yeL4cdJ9P4mPbwniu5JE+htk4+/pXvlBo+i95Rs
vHN+/2TJMHoKMFfrMXtONIjrFaCQXajR9LgbfUVYkQg/T7Nvx/1KMJI+oc6x
q8TzlCEp5HBJ6XY59lMBigpXdc9gE5F7KhA0TbNXDOnAXqpQILgdzNHrxp5q
4FUhvCJJu4O91cH2Bm/q7MVe9DTAtvScZcCpPvQ0YI7hFPnAsA89TbhmfveT
K3U96GmBbf3j/IVjIvS0QUN83TviiBA9HThQupQzL+xATweqbH6P8+a3obcD
xBSX66a1jejpQov+Wc+ug1Xo6cGHWpnBoYlM9PThhNvwtuRFDvbRhwiqbSg/
rAZ76kORLtck2atB8P92RwNwrt4SHzrYhH0NYKM/7/g9xRa8D0PwfjW1icNt
Rc8QNtUqeB6qbegZglID88GBk63Y3whGRyWNbtPN6BmBZq5h7UxBE3rG8NDy
g8kBXiN6xnDpdKpUtfB79IyhzjrZ1zu4Gr2d4PLGVoNwtgK9nZCrKlV3EeSj
ZwJBezPeu5nvgH1MIG4mpcPhUB72NIHBkCyjFr9S7LUL0vwv3MpWuox9d4EB
tyUj3K8K+5nCPbOysXZWNXqmMPJHwlJKVQ16plAU5//DPkENerthQlQgyhNX
o7cb3ny916PS9zv0KLDq9ELab8qV6FGg/+Xb0+Pxl9CjAIvNdXbfU4aeGZTx
i2caM4rRM4MNKV9Nk5WLHhVEvfezry0loEcFS8qJLEZBBPajAj2PLKoZZ2I/
c/i53th9v/Az7GcO1EdvqYbtY2M/CwjMGB7L8vkS78MCdBxG/JeUn/9/WEAA
7+jKwy4OepYQJTTJiqngoGcJip2vuVpXlqBHgx3SEGftjWJ8v2jgzm2Vdiax
0adB8fl//J/Q83E/DfzmYFTXIwfPowEneUyl2ScDPTrMHe37utYoAT060Khj
vZczA9Gjg93xOVOfklDsRYcoT9cvyjrjsS8d0szD8xeHPsJ+VrDGbE+/o32e
yD0rCI7f+uaZazb2tAJffpzoVD4LPStw0cvMuyVloWcFy+NmPQ3lLPQY8O52
TQE/JxvvjwElDB1blatM9BgQ9Wcj5aUj6egx4CI7/ti8Xwp6DOCuTiZ2TSWg
Zw0BNRyn2E9jyL9ZaseA
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXA8CgVqKa9eCi4zmwxQKgI9PyRMBIwDBUReIkMUIqsM
woqb4pBHYRQdIPLQAJtFx4QqcfJceUh4DIEKYyJPQRoILANUxiu4sf78Z7/k
prm553zOzfeWOvWFd/gWGo0W/u+1+fv/KcjfnBrCnphkJn7STpT3HeQsXfoh
I3OA7LHdnD7SbzIddIk9hs8HiVR87LzvbxNEqYyT7XU+i6nLL3H9JHk6Ntfi
x1KQiNOboyBiMcXq2afA/TNEZeFB0axgijzp2pw5Uvs2wezZ6CR688TF7shF
VckLXL9AxB3und8+H0H/Fek51s3OrfkD978mIXa2Ait7OZ63REIb+jOX3FvR
WyZ71ZNjy3Tuo7dCXC1CQvqGCmRKb40k1fsKV9/UyZTeOtl1O/d2vFqbTOlt
kOHDNorpQ90yzAYyYe5UolyO62ngvybi6yX3yZT+e5Bt1GjZ49qP+7cA3XOJ
ocntx/O2whFBwsCAbR96KlAwzKa55b7zVIDzE68rTd6N3jbYWXKuL/7HDvRU
gcfM+GZhrgU9NbhTNe/tqKhDTx2W6ou/lM9WoqcOI7aq9tr079HbDhb0mrQE
1g3s9T54xqvdcyitwL4aoOv4Q8ADo0fYTxM+HTy+rL2/AXtrQoBASzbT2Yg9
tcA49rPfY5nN6GnDn9sa9w6kNqNHh4PTj+f4Vs3o6UBhjPSokNuE63Xgb4+o
E7U0Gfo6YCj1KIrsrCX/bbfVhZhrjK+8FA/xPF1Yn7OSROdJ0WPAaFJxb7CT
BD0GPMozkWhOXEePAT/v83zyUUAYvo8elNiZyu5bX8UeetAeztzJsS7Gfvqg
4dfbZjkiwd764LOSNdiwWo499aHeOyJF40Il9jeAntXPaaVSKXoGEH3S60bk
uBQ9JvClPHVRkBQ9Jpi7RQenfV2BHhOcY5tOcveXo7cDnHU3KP7uMvR2wBiX
N/84txQ9Fszyw0QqAYXoscCmvSw/KOQaeiyQ1QVW1YovomcILQZRvzgU+mE/
Q3jGzbhbfDQJ+7EhmJqobqq4iv3Y8MrSciEn8F0/NghNFeX++QXYzwjqPXyZ
8YE30TOCM5SLQfC9W+gZw4Fd9p0PS26hZwynivhvqICb6BnDZZHNeItKIXom
0HFCaH29Nw89EwgNGTnX/DobPVMYPFQmYnlnoWcKYr+iswNuKeiZgtx+Kqkw
KgE9M7hwRpy1ezQUPTPwCHc8HbERiP04YF3OnDmYHydT/r84QMXlZbsMJWJP
DkgOv82JvJOM/TnwwkLP9QNKhH054BVFT9c6kIEeBZy/0unjBt+hR0EmPP+1
rSoDPQqElwLr7ZzS0aOg1Ce6KWcoFT0KovQEak8brqBnDiWtPN66wWX0zIFj
Gec0/HECeuaguFK/EfzyPHrmUD2/yPc/HoaeOThJe2x6U5zQ48JKjHtQNd8H
+3DBeXFrhJtlBPbkgtyhq/VuqwB7cUGxp1Kw1hWLfbmQV6EL4sJ4/B4WEKo1
WWRlIyT/AJLXtsM=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlMk3cYB/COAYIgcrRY7h64i2PjmMdg+z0KC2McAs5BFAhDjhmiDB3I
3BAYbhYQy91WXJBMso1hFFQcSqwTkKsyS4G2YUNLEza8gEikXGUyf0//2Dd5
8+aX9/l+njdvXm5yZkyqEYPBSH1xrd3/nzOStbST6EfjZTvzfpS+PPeRsJpH
MX8JW6X+fmtRkDmy71hYyXX6XE2utbDivTW3pC+VB+Tmn5dNPtrcRee1RJSY
8+SeQ480PW0tk8RoOjJj350+2p8itUX6z373kUnvytbymOyyuiN7N3mQejPk
hOJ6VJP3PTo/S4bnukVsppz6z0iOrq68RSun/TmS3tjjVlw/RPc9JykDVqcK
QhXU0xHvkyW7wrQK6i2Qvk/Tjxw5NEy9JeLXcrQw4fEw9ZZJd/9lVnjiCPX0
ZGXdAHt/9wj1GGA5adncxBul8wzoFW0etDk6Sv1XwDHgS+kXnaO0bwQ7S5w8
S82UdN+rYH4ujmsboqSeMegj3BWN+UrqGcN0yC9blK1K6pnADVlT9psaJfVM
YTqp6gM7CxX11kF8g2Bu9R0V9cxgIUh4O2q3inpmUL29oDrhsIp65mBxN1yX
fVpFvfVwaWpoSvMTehaQ1x1WOnETPUs495WXrFWBniWccfJgCCbR2wD+20fT
K+fRswLSS5pXTNXU2whTH49EzjLV1LMGbZfYqoKrpvPWsEXZFrTiqaa+NTxt
SvXdvVUt/a/uZwPzKw/2XAA13WcDTllB5/mh6NmC8MnDgYEo9Gyh7qBJRnss
erbw9OvhHfoEfB87GPN5I6lpP3p2kBjwfaTsc/SYwIpO88s6iB4TLgq1c+ez
0GPC/Oq22MPZ6LHgWUYsW5uLHgve9x4zY3yDnj0ETzfw5MfRs4cVr/d+SChE
zx5000mM5iL0NoHbQof/7e/Q2wRRB4yqGk+ix4ZbxY2ze4vRY8P9CdIyWYIe
Gybie3rCT6HnAEOvXekvL0PPAepS3tZdPY2eI1x6K5lIheg5woz1YsjFcvQc
Yaj+ea6gAj0nEJrI9eGV6DmBQLVBrq9Ezxk0HiHX6qvQcwbJ/RsRPtXoOQNz
LNP8ajV6LsDp+jvAswY9FwjtLLYX16DnCgvLv15YqEHPFfZWxy1F16LnCv9E
DGoaatFzA9OALq+Htei5wWJAjthDhB4HVkX5fWki/L84kJMhiDsrQp8Dudv6
B2Ui7HMgMS/zZ50I93FgeUS+hyNGjwvSUUlgsBg9LrgVdf6WIkaPC4OLxS7f
itHjwoH2wLazYvS44FDK6Lli8HiQ7368rN/g8cDXpWDHuMHjQZumkDVj8Hiw
ut5nK0OCHg+M0yf+sJKgxweP8SVjZwl+Hz7ogj/RvS5Bjw8xG0t6fSXo8aGj
M7oi0ODxIXS+I+NDg+cO8YJjhyJenP8Fqgr6pQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.46789376727999843`, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2118019245]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1425866839],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1759656048]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2]:=",
 CellID->1104129648],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0"},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]]},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]]},
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1607835124]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->252233040],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->483610080]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1792714312],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.802789`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->534923729]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1112511420],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Diagonal", "/@", "data"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellLabel->"In[6]:=",
 CellID->1239593903],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
0f48FTZc6R99aCUi/wd+sW5y
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd1ns01OkfB/BxSbk0mcEwF2MuKJeWtnZzon0+WylFlBbRbSmXirJOSVqx
xarWrQtFLpFV0UYNUmGYYXJf/XRKWx2KpMuvsFqidn/183l+f/y+58yZM2e+
z+v5zPd53p9nxAG7PQPVGQxG86fX5/f/v7IyP1+XSNzm69aCb7aRqc83CGPz
y90few6TBfM/X0oCYUcC/DvS8ftmsqblxsk0VQGZUjqJ/tyaH5UOl/H+LmKr
X/RxLERGgoM+X/dI+YeO78yYN3D8A/Ihumu5b0ctaW/7fD0iEbeXvdX+WoFe
L5l4NujMuteA9z8hToKWW7q2t9HvIy7P7j76UtSM4/vJEdOj5/l5LTjfAHmS
megVkdWK3iC5sGbWsjjtNvRekLHhqKLIF63ovSJ5tsdn/7i4Fb3XxEJbvCCG
Sb03hLH0cWL9jib0hoihX3mja6AK7x8isQUP1HSMaL3DZE6IzUjPyXocP0J+
fce+ZzVZg/P9SVwybUv8H1ehN0rcV8fVXtAqR2+UhHq5jniuL0XvHdGUW79S
Tl5A7y8yQ8PRImRlAXpj5Iy20GmpRg5642TwtYbHQH4meuPkXPYSs0vZWei9
J/aewsWto3noTZDQfNd5P8sL0ZskDQKDE50RJeh9IOcSz5q+e3kVvQ9kx/2F
ga1tleh9JG+I+7Uo+2r0/iYjdxVnVw3XofcP+UngVxhyT4keA3L811kyL6vw
fga85LCSg33oejIgIuV5v7+8lfx3+Hw1GArymShob8f51EBu8lJ32+7f0VMH
a81iLwPXTvTUIcFw70Fhdid66mC/0No27WIn1qMBBxWqC83hnehpQED1gFPK
W+ppwmSW+5mxhA70NCF6/lt/m/I29DQh4TfZfe/kFvSmwfKMMN/S2U3oTQNf
3kVl0tlG9LQg19I1I1xdiZ4WMGqsBjUi69DTAtvveQ9thdXoTQfzxIngtc3X
0ZsOIdcKvDmccvRmQP+ennVfWV5FbwYwjrWEJFpeQW8GdP+k+iP9YQl62tCb
F/8qZn8JetrQnZliemXiMno60BS98tBKaRl6OjC6RzgelHkNPR3o5yQuTVFU
oKcLTvvHuG+iaZ514cyT7DmJmTXo6cHmvg0r347XoacHl4WVqc+tlejpQd0H
OyuZayN6M2HkS779Jufb6M0ESerr+V0azegxYf3yParf9tI8MiHy2Maqh0k0
r0xQOp6JsyJt6M2Cc7rJqryfad5ngcPSwGsV/m3o6UNuypVwry66v/Qh7Fm7
jewp9T99PyxNGs9qxvH6UFpcHd+k04Tz6QPn2Hj1uaUq9FiQEpPgYObbgB4L
BOLgF/O/V6DHgpzYzuPLd9Whx4LYubwYmX0NeiyY3MH3Ce6/gR4bHNVuWtrw
r6PHhtzs/ET2n+XosYGV43br9GEZemwY+O5od+Ujul5sWL7ec7aPlgw9A8hW
WoxNZ5Tj8zGA7d2NT9j1FegZwJbmLzSfOlShZwDB6UuCKjxuoWcAdv8qLst7
XoueIVzf53m7Z1c9eoYwGqkeeDeB7m9DSCVJC/YVNqJnCJVNMaObK2+jZwi1
2iMnai7Q9TWC/ezXayyDaD82AkmCvceyJ23oGYG+fHBXtG4HekZgcDAnKOiP
DvSMQG3YXrhkBc0vBxZdUzSaefyOHgd6Mrfm/D1C88yBbaFZf11fSD0OdKzq
Smq0aEePA2kv+u/1NdHzwxhMpmf6nbKjeTeG85uKnRM+nQdTnjEIfPqP9/+i
Qs8YHo2tuvlrUQN6xmC8YefB+nZ6vpkAM1u6YZ8BfX4m0FBbF2XPkqNnAk4r
XMYU+6rRMwHzlAzW44ib6JlAmnP6qmRDul+4UOB9v9copAo9LgwpzQNSf6hC
j/upHp+bd+fSvHJBnbm1veoE9bgQlb1dcSi1Gj0eNMS/2VIyU44eD9Jqoy69
+F+eeXC8Xa61J0WBHg8MXcZOVXxNfy8PSHFlbHAv7X98+DjPwi4smp7ffHBe
ySs4NEqfHx929h3w7yUt6PFBIz+7sMOD5psPlhU142Ieza8AFsUKy7JP07wL
YO92vZh5DXS/CGDTUZ8e8zyafwE45Hn769nQ/i2AXxZG/lMSRtfXFHJsHENl
u+n6moLBXJHFZqdm9ExBKrPbNdFL+5MpWM+MJxtD6flvCsmeuW+/fdOAnhCO
hZQOlkUq0RPC+bQH42uMaD8Qgo4fv62tm/YDIfT7r684kC1HTwhWrA7LdWo0
b2ZwJ3FvltUwPR/MAFZPOmzdR89bMxhyKbX0yqT7xQxGQ79J4HnT/mIG8ZH1
ppeKqCeC5u3yOWyC83NFUOrhtfirwHrsNyKI9GN67LypmBrvJgLubJbF6XkN
OJ8IDnckD66vxvWNE0Ffi19/vit9PiJw45qOrO5smvJkIghftndPtWML1iMC
7Yz9nQFxrVPegAhUvK6Lnifo+opBe1pA0ZVgPO+5YqjgB/hov2/H+sSwrfRi
RvG3mH83MeiESseqCM23GBo2+t5xHm3H+sRwqrawxnEr/f8gBtUh8wj7k21Y
nxj4T3l8QTLdb2JYsHCV2/sNeB4MiIF7pCh1rR7tVxK4OJ6x5lYJ/l6uBF7z
poW6u6iwPgkca8n/x3AI8+AmAbLF1+ZgGe2PEnB9esC7Ox37QZwECs/G2ncX
12N9EghfkWY871PepuqTQG5ZWNeSePp/QQILIj2u9nhiHgck4B71nDk3sA7r
k0Lb86S1eTfo+krh7B2jL1hutN9IwU4gYL0zousrhZeZbj/kMml9UhBssBnM
s8H9HCeFeHmWZJE/7edSULEtufcLVFOeTArRzPSUpD7a36Xgtqgs/RwH8zMg
hfDYdfd17FuwPnM4466I/bd5K/kPO89Shw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
P/jPXG50M/kfaVRYpw==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
81mAayxrkdPpavInzYVsuA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probabilities\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \
\\!\\(\\*StyleBox[\\\"t\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-5.551115123125783*^-17, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->794832193]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1261705519],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->427878852],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      SuperscriptBox["\[Sigma]", "0"],
      DisplayForm], "+", 
     TagBox[
      SuperscriptBox["\[Sigma]", "x"],
      DisplayForm]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1598207672]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1686455809],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1773608757],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1721018070]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->813112276],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[256]:=",
 CellID->520954565],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[256]:=",
 CellID->392545136]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"0.5`", " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", "0"],
     DisplayForm]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", "z"],
     DisplayForm]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->1720060524]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Pauli", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1408697964],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->316250285]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->743762978],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwX2IDVCQikGIns/IkBCDkkUEQuTw5AjFrBYQA6X
EojL3QUSK1eRc0JAEITclWF1g8AyRI44wwEpQGgTWSKtdX/+Zv6zs7Pvfd7M
9/1n6R/HB0aoKCkpRfz/yD9fzrPn8pkk57+Wzw1SuLKiZzM4jt97SIrYLWJf
/Sh5w1E+A2Th5zndsM4H+PsIicsIixiCX4lCmyLcUKajw1Ivrp8hvGYB1ca+
i0RFymeWeIbbemTUNuD+eXJvNjBVqsMR9ffJZ4Hw243iLPObRQpvmczFctqj
t98SKdavkP05+kXSjtsihS8lAtvbywmzPbj/bxJ13ULAFPSJFOetkjojq2tr
K/3orZGQK7Li/sV+9GTE5f0TJdDah94/pEfwVNmd1YveBvn8O7pXTpAEvWdk
9YPTO8e43egpwXS1x1SyRIjrlaCwqFCr5Ukr+sqwJBWfZTvU4X4VGEwd1eTZ
n8PzVIEVvI9btpGH/dSAosZX33a3kig8NQicoDkoBzdiL3UoEN0J4hm0Yk8N
8KoQ10jZ7dhbE+yaBeNJpR3oaYFdWbJ1QEwnelowzXQKe2jciZ42NFj+cqam
7gZ6OmBX/yRv9kgberqgtXjV++iBFvT0YFfZPGdG3IieHly2/S3aW1iL3iZY
pLhcNa8WoKcPbYZJnt17uOgZwEmd9KDDCfHoGcJxt4EN6asc7GMIR6l2h4Uh
pdjTEIr1+WaJXhdFL7Y7GoHzlfXFvXsqsa8RrPblHruvXI33YQzeb6a08Pg1
6BnDmkaFwEO9Fj1jUGnMeLjrRA32N4GhIWmT20QVeiagnWNcPVlQiZ4pPLL+
ZKxfIEDPFL6NTZGpF15AzxTqbBJ9vYP46G0Gl3fWG8VT+ehthhx1maaLiI2e
GQRuT/vwWh4D+5hB9OSpW7v3pmBPM7gbnGnS5vcl9toCbP/8m1kqxdh3Cxjx
29JC/bjYzxzuW5QPd2Tz0TOHwT8/nT91uRQ9cyiO9v9+h6gUva0wKimQ5C7y
0dsK777d63HJl4ceBR47vcJ+oHoOPQr0vX5nYiS+ED0KZBfxnd23nUXPAsqF
JZNNaVnoWcCqTKihnZ2MHhUkvb9nNcyHoUcFa8rxTGaBL/ajAj2XzGmYxmI/
S/ih3tR9p/gz7GcJ1D/eUw/ZkYH9rGB/2sBwpk823ocV6O0e9J9Xffn/YQUB
gkNLj7o56FlDuNgsM7KCg541KHe95Wpz6Qx6NNgkC3bWXc3C94sG7vx2WRcr
A30alJz+1/8pnY37aeA3DUP6Hkl4Hg14icNq131i0KPD9KGfLlSbhKFHBxp1
uPdiuht6dLA/Nm3uw/XGXnQI93T9qrzrI+xLB7ZlaN7cvSjsx4DljI7UH3Xj
iMJjQFD8+jfPXROwJwN8hdGSmDwWegxwMUjPvSljoceAhRGLnsbzLPSYcHCj
qkDIScD7YwKXqWenVhuPHhPC/2qivHbgJHpMKC2KPzLjF4keE/iPxxK6x8PQ
s4GAKp5T1BcHyX+RnsEw
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXCA5dVayqu3pS4zUwYoiEDPDwkDAeMAAZG3ExGIrCKM
FdxAmTxD3SaPIUQLG6AytEKcgEBlwBAGKy8bkYcMZgOBZYDKeAU31p//7Jfc
NDf3nM+5+d5SJz/1idxCo9Ei/702f/8/14o3p4GwJ6eYaR/WE9V9F4mmS9/X
z/uF7LPZnEEyZDodksqW4/NhIhUfO+f/6wBRKRNk+0O/xczlIVw/RQaez7UF
sBQk6vTmKIlYTLHkBxS4f4aoLdSWzgqfkN6ezZkjjW+SzZ+OD6I3T1xsj36p
XtmP6xeIuMuj+9KzXvRfEvmx39gFDZ24/xUJs7URWtq34nlLJKJ5KG/J4z56
y2S/5uWEKt0y9FaIq0VY2OBIjkzlrZH0Jn/R6utqmcpbJ7srCiqSNB7IVN4G
GT1irZw+3CLDbCATFbxI62/F9TQIXMsWGFxuk6n8d+Cq8SO+3LUd928ButeS
vjavHc/bCkeFyQqFTRt6anBtlE1zL3jrqQHntl1PVn8LettgV9nZwaQfGtBT
Bztm7hcLc3XoacDNunkfR2U1epqw1CQ53z97Az1NGLNRt99Bv4TedrCgN2Ql
s7Kw17vglaRR41B+HftqgZ7j90G1xlXYTxs+Gj6+vONgDfbWhiChjmymW4o9
dcAk4eMnCcxa9HbAn9se7Vdk1qJHB7fp9jmBZS16ulASL/UV8e7hel342zP2
RCPtLvq6YCT1LI3pvk3+226jB/Hf6H/urazA8/Rgfc6yMq5Igp4+jKdL+kKd
CtHThwdFppXakxno6cOPB7x6PwjyxfcxgDJbM9k9qzTsYQCPI5m7OFZfYz9D
0Aro6+SPFWJvQ/BbuTLcvFqCPQ2hyScqQyvlBvZngHz1FK1cKkGPAXHh3t/F
TEjQY4JAaqeZHSJBjwlc97jQrAvX0WOCc0JrOO9gCXo7wVlvgxLsLUJvJzzn
2c23F3yLHgtmBZ9kqwXloscC68dVxSFhF9FjgexhcF2jOA49I2hjxP7kUOKG
/YzgKS/3lsT3PPZjQyg1Wd96Jw37seEln7+QH/y2HxtEZsrqwOIc7GcMTZ7+
zKTgPPSM4QzlwgitEaNnAod223ffLxOjZwInSwWvqaA89EzgYrb1RJtaLnqm
0HVCZFXYl4meKUSEjZ39+VU6emYwfLgqm+WTip4ZiANKoxXun6FnBv32L9JL
YmPQM4eUM+Ire8e90TMHz0jH01EbXtiPA1bVzBm34kiZ6v/FASqx6KrLiBB7
cqDyyJv8mJuJ2J8Dv1sYuL5HibAvB7xj6Tk6h1LQo4DzVw59gnEBPQry4FlL
Z10KehSIUoObbJ2S0aOg3C+uNX8kCT0KYg2EGgPNCehxoazDzm6dcQ49LnD4
iU6je2LQ44Lyq6aN0D8i0ONC/fyiIPC4L3pccJLKrfsy9qDHg5V4j5B6gSv2
4YHz4tYod34A9uRBv0NPx62OcOzFA+W+u8K1nlPYlwdFd/RAXBKF38MCInSm
Si2to8k/Lzqwgw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->653393673]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1470681252],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->963207285],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"x\""}, "RowDefault"]},
      "Superscript"]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1321628607]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1701417680],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->682224499],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->75316473]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->39881190],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"+\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"-\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->540818487]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "init", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->719143774],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[270]:=",
 CellID->1701594824],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[270]:=",
 CellID->664479869]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->829277253]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1210483635],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->278233393]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->1754552550],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwX2IDVCQikGIns/IkBCDkkUEQuTw5AjFrBYQA6X
EojL3QUSK1eRc0JAEITclWF1g8AyRI44wwEpQGgTWSKtdX/+Zv6zs7Pvfd7M
9/1n6R/HB0aoKCkpRfz/yD9fzrPn8pkk57+Wzw1SuLKiZzM4jt97SIrYLWJf
/Sh5w1E+A2Th5zndsM4H+PsIicsIixiCX4lCmyLcUKajw1Ivrp8hvGYB1ca+
i0RFymeWeIbbemTUNuD+eXJvNjBVqsMR9ffJZ4Hw243iLPObRQpvmczFctqj
t98SKdavkP05+kXSjtsihS8lAtvbywmzPbj/bxJ13ULAFPSJFOetkjojq2tr
K/3orZGQK7Li/sV+9GTE5f0TJdDah94/pEfwVNmd1YveBvn8O7pXTpAEvWdk
9YPTO8e43egpwXS1x1SyRIjrlaCwqFCr5Ukr+sqwJBWfZTvU4X4VGEwd1eTZ
n8PzVIEVvI9btpGH/dSAosZX33a3kig8NQicoDkoBzdiL3UoEN0J4hm0Yk8N
8KoQ10jZ7dhbE+yaBeNJpR3oaYFdWbJ1QEwnelowzXQKe2jciZ42NFj+cqam
7gZ6OmBX/yRv9kgberqgtXjV++iBFvT0YFfZPGdG3IieHly2/S3aW1iL3iZY
pLhcNa8WoKcPbYZJnt17uOgZwEmd9KDDCfHoGcJxt4EN6asc7GMIR6l2h4Uh
pdjTEIr1+WaJXhdFL7Y7GoHzlfXFvXsqsa8RrPblHruvXI33YQzeb6a08Pg1
6BnDmkaFwEO9Fj1jUGnMeLjrRA32N4GhIWmT20QVeiagnWNcPVlQiZ4pPLL+
ZKxfIEDPFL6NTZGpF15AzxTqbBJ9vYP46G0Gl3fWG8VT+ehthhx1maaLiI2e
GQRuT/vwWh4D+5hB9OSpW7v3pmBPM7gbnGnS5vcl9toCbP/8m1kqxdh3Cxjx
29JC/bjYzxzuW5QPd2Tz0TOHwT8/nT91uRQ9cyiO9v9+h6gUva0wKimQ5C7y
0dsK777d63HJl4ceBR47vcJ+oHoOPQr0vX5nYiS+ED0KZBfxnd23nUXPAsqF
JZNNaVnoWcCqTKihnZ2MHhUkvb9nNcyHoUcFa8rxTGaBL/ajAj2XzGmYxmI/
S/ih3tR9p/gz7GcJ1D/eUw/ZkYH9rGB/2sBwpk823ocV6O0e9J9Xffn/YQUB
gkNLj7o56FlDuNgsM7KCg541KHe95Wpz6Qx6NNgkC3bWXc3C94sG7vx2WRcr
A30alJz+1/8pnY37aeA3DUP6Hkl4Hg14icNq131i0KPD9KGfLlSbhKFHBxp1
uPdiuht6dLA/Nm3uw/XGXnQI93T9qrzrI+xLB7ZlaN7cvSjsx4DljI7UH3Xj
iMJjQFD8+jfPXROwJwN8hdGSmDwWegxwMUjPvSljoceAhRGLnsbzLPSYcHCj
qkDIScD7YwKXqWenVhuPHhPC/2qivHbgJHpMKC2KPzLjF4keE/iPxxK6x8PQ
s4GAKp5T1BcHyX+RnsEw
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXCA5dVayqu3pS4zUwYoiEDPDwkDAeMAAZG3ExGIrCKM
FdxAmTxD3SaPIUQLG6AytEKcgEBlwBAGKy8bkYcMZgOBZYDKeAU31p//7Jfc
NDf3nM+5+d5SJz/1idxCo9Ei/702f/8/14o3p4GwJ6eYaR/WE9V9F4mmS9/X
z/uF7LPZnEEyZDodksqW4/NhIhUfO+f/6wBRKRNk+0O/xczlIVw/RQaez7UF
sBQk6vTmKIlYTLHkBxS4f4aoLdSWzgqfkN6ezZkjjW+SzZ+OD6I3T1xsj36p
XtmP6xeIuMuj+9KzXvRfEvmx39gFDZ24/xUJs7URWtq34nlLJKJ5KG/J4z56
y2S/5uWEKt0y9FaIq0VY2OBIjkzlrZH0Jn/R6utqmcpbJ7srCiqSNB7IVN4G
GT1irZw+3CLDbCATFbxI62/F9TQIXMsWGFxuk6n8d+Cq8SO+3LUd928ButeS
vjavHc/bCkeFyQqFTRt6anBtlE1zL3jrqQHntl1PVn8LettgV9nZwaQfGtBT
Bztm7hcLc3XoacDNunkfR2U1epqw1CQ53z97Az1NGLNRt99Bv4TedrCgN2Ql
s7Kw17vglaRR41B+HftqgZ7j90G1xlXYTxs+Gj6+vONgDfbWhiChjmymW4o9
dcAk4eMnCcxa9HbAn9se7Vdk1qJHB7fp9jmBZS16ulASL/UV8e7hel342zP2
RCPtLvq6YCT1LI3pvk3+226jB/Hf6H/urazA8/Rgfc6yMq5Igp4+jKdL+kKd
CtHThwdFppXakxno6cOPB7x6PwjyxfcxgDJbM9k9qzTsYQCPI5m7OFZfYz9D
0Aro6+SPFWJvQ/BbuTLcvFqCPQ2hyScqQyvlBvZngHz1FK1cKkGPAXHh3t/F
TEjQY4JAaqeZHSJBjwlc97jQrAvX0WOCc0JrOO9gCXo7wVlvgxLsLUJvJzzn
2c23F3yLHgtmBZ9kqwXloscC68dVxSFhF9FjgexhcF2jOA49I2hjxP7kUOKG
/YzgKS/3lsT3PPZjQyg1Wd96Jw37seEln7+QH/y2HxtEZsrqwOIc7GcMTZ7+
zKTgPPSM4QzlwgitEaNnAod223ffLxOjZwInSwWvqaA89EzgYrb1RJtaLnqm
0HVCZFXYl4meKUSEjZ39+VU6emYwfLgqm+WTip4ZiANKoxXun6FnBv32L9JL
YmPQM4eUM+Ire8e90TMHz0jH01EbXtiPA1bVzBm34kiZ6v/FASqx6KrLiBB7
cqDyyJv8mJuJ2J8Dv1sYuL5HibAvB7xj6Tk6h1LQo4DzVw59gnEBPQry4FlL
Z10KehSIUoObbJ2S0aOg3C+uNX8kCT0KYg2EGgPNCehxoazDzm6dcQ49LnD4
iU6je2LQ44Lyq6aN0D8i0ONC/fyiIPC4L3pccJLKrfsy9qDHg5V4j5B6gSv2
4YHz4tYod34A9uRBv0NPx62OcOzFA+W+u8K1nlPYlwdFd/RAXBKF38MCInSm
Si2to8k/Lzqwgw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->411756991]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->290448684],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->993111197],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->763452790]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->501635503],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"0"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"1"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"+\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->586120978],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"+\""},
           "RowDefault"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"+\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->427788457]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{"LindbladConvert", "[", 
    RowBox[{"opH", ",", "opL"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1865696334],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["6"]], "-", 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["6"]], "-", 
            RowBox[{
             SqrtBox[
              FractionBox["2", "3"]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "+", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["6"]]}], ")"}]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["6"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             SqrtBox[
              FractionBox["2", "3"]]}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], "0", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "-", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "+", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[ImaginaryI]"}], " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "-", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             FractionBox["2", "3"]]}], "+", 
           FractionBox["\[ImaginaryI]", 
            SqrtBox["6"]]}], 
          SqrtBox["2"]]}], "0", 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "-", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "+", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]]}], 
        RowBox[{
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "\[ImaginaryI]"}], " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "-", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]], "-", 
         FractionBox[
          RowBox[{"\[ImaginaryI]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[ImaginaryI]", " ", 
              SqrtBox[
               FractionBox["2", "3"]]}], "+", 
             FractionBox["\[ImaginaryI]", 
              SqrtBox["6"]]}], ")"}]}], 
          SqrtBox["2"]]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], 
           RowBox[{"2", " ", 
            SqrtBox["3"]}]]}], "-", 
         RowBox[{
          SqrtBox[
           FractionBox["2", "3"]], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["2"]], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], 
             SqrtBox["2"]]}], ")"}]}], "+", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], 
          RowBox[{"2", " ", 
           SqrtBox["3"]}]]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], "0", "0", "0", "0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "1", "1"},
       {"0", "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0", "1", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0"},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], 
        RowBox[{"-", "1"}], "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "-", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}]},
       {"0", "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "5"]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "5"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "2"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}]}], ")"}]}]}], "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], "1", 
        RowBox[{"-", "1"}], "0", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}], "0", "0", 
        RowBox[{
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["\[ImaginaryI]", "10"]}], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["\[ImaginaryI]", "10"], "+", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"0", "\",\"", "\"-\""},
                  "RowDefault"]]}], "-", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"1", "\",\"", "\"-\""},
                 "RowDefault"]]}], ")"}]}], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "2"]}], ")"}]}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 6, 12, 18, 24, 30, 36, 42, 48}, {{1}, {2}, {4}, {7}, {5}, {
         8}, {1}, {2}, {4}, {7}, {5}, {8}, {3}, {6}, {4}, {7}, {5}, {8}, {
         1}, {2}, {3}, {6}, {4}, {7}, {3}, {6}, {1}, {2}, {5}, {8}, {3}, {
         6}, {4}, {7}, {5}, {8}, {1}, {2}, {3}, {6}, {4}, {7}, {3}, {6}, {
         1}, {2}, {5}, {8}}}, {
        6^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            0, "+"]) - 
         Rational[2, 3]^Rational[1, 2] (
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
          Rational[2, 3]^
           Rational[
            1, 2] (-$CellContext`\[CapitalGamma][
             0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
         6^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            1, "+"]), 
         2^Rational[-1, 2] ((-
             Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
             0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
            0, "+"]) - 
         2^Rational[-1, 2] ((-
            Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
            1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]),
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Complex[0, 1] 
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         Complex[0, -1] 
          2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Complex[0, 1] 
          2^Rational[-1, 2] (Complex[0, -1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, -1] 6^Rational[-1, 2]) + 
         Complex[0, -1] 
          2^Rational[-1, 2] (Complex[0, 1] Rational[2, 3]^Rational[1, 2] + 
           Complex[0, 1] 6^Rational[-1, 2]), 
         Rational[-1, 2] 
          3^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] - 
         Rational[2, 3]^Rational[1, 2] (
          2^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
          2^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
         Rational[1, 2] 
          3^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"], 
         Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"], 0, 1, 0, -1, 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 0, 1, 0, 1, 
         0, 0, 0, 1, 
         Rational[1, 2] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Rational[1, 2] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 0, -1, 0, 0, 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), -1, 0, 1, 
         0, -3^Rational[1, 2], -1, -1, 0, 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), 
         Rational[1, 2] (Complex[0, Rational[-1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])) + 
         Rational[1, 2] (Complex[0, Rational[1, 5]] + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][0, "+"] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"])), -1, 
         0, -3^Rational[1, 2], 1, 
         Complex[0, Rational[-1, 2]] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Complex[0, Rational[1, 2]] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 
         Rational[1, 2] (Complex[0, Rational[-1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]) + 
         Rational[1, 2] (Complex[0, Rational[1, 10]] + 
           Rational[
             1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
           Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"])}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox[
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"+\""},
                "RowDefault"]]}], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"+\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            RowBox[{
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["6"]], "-", 
             RowBox[{
              SqrtBox[
               FractionBox["2", "3"]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SubscriptBox[
                  TemplateBox[{"\[CapitalGamma]"},
                   "RowDefault"], 
                  TemplateBox[{"0", "\",\"", "\"-\""},
                   "RowDefault"]]}], "-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"1", "\",\"", "\"-\""},
                  "RowDefault"]]}], ")"}]}], "+", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                FractionBox["2", "3"]]}], " ", 
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"+\""},
                "RowDefault"]]}], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"+\""},
                "RowDefault"]], 
              SqrtBox["6"]]}], 
            SqrtBox["3"]]}], 
          SqrtBox["3"]]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], 
             SqrtBox["6"]]}], "+", 
           FractionBox[
            RowBox[{
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["2"]], "-", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"-\""},
                "RowDefault"]], 
              SqrtBox["2"]]}], 
            SqrtBox["3"]], "+", 
           FractionBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"+\""},
              "RowDefault"]], 
            SqrtBox["6"]]}], 
          SqrtBox["3"]]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
      SparseArray[
      Automatic, {8}, 0, {
       1, {{0, 6}, {{1}, {2}, {4}, {5}, {7}, {8}}}, {
        3^Rational[-1, 2] (
          3^Rational[-1, 2] ((-
              Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
              0, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
             0, "+"]) + 
          3^Rational[-1, 2] (
            6^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
            Rational[2, 3]^
             Rational[
              1, 2] (-$CellContext`\[CapitalGamma][
               0, "-"] - $CellContext`\[CapitalGamma][1, "-"]) + 
            6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
          3^Rational[-1, 2] ((-
              Rational[2, 3]^Rational[1, 2]) $CellContext`\[CapitalGamma][
              1, "+"] - 6^Rational[-1, 2] $CellContext`\[CapitalGamma][
             1, "+"])), 
         3^Rational[-1, 2] ((-6^Rational[-1, 2]) $CellContext`\[CapitalGamma][
            0, "+"] + 3^Rational[-1, 2] (
            2^Rational[-1, 2] $CellContext`\[CapitalGamma][0, "-"] - 
            2^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "-"]) + 
          6^Rational[-1, 2] $CellContext`\[CapitalGamma][1, "+"]), 0, 0, 0, 
         0}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1676223087]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->260219023],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.430889`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->325482359]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1542313529],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvdtvFdf277nV3Q/92P9CS60j9UNLrX7q39NW91FL3dJP5+Gc008/6Ujn
9+uNwWBzCxAIl3CJQyAhGEwgJhATk4QQc0u4GIdLIDYQiLlsExzYhjiQeGOc
YAx2bAxeq+dO7dQeVK1Vq6rGvIxV9f3I2pt41WV61Vy16jPnmGP8j/86+z9O
+2/+8Ic/zP/v1f/8x/+66P+YN++/Lv5P/4P6j/+3fv6Mmvo//X//T/1Lf6r5
07z//V//W/XLP6j/efjf/fZ/fygCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGCM/v7+136joaHh+fPn
5k7U19f32WefvfPOO+vXr1+7du22bdv27Nlz5cqVZ8+emTspAAAAAAAAAICM
odR11apV035ncnLSxFlu3bpFzxJg3rx57e3thUIhzqF+BgAAAAAAAFQ5JqQD
5Iq2tjYqlSZM9tixYzU1NeU01ufNN998/Phx9KG+++67xfpQJ9V4ND5oTzRo
TzSi2uN9qF234h+gPdGgPdEIbI/rJrwA2hMN2hMN2hNNttujjqbdO0B+OHLk
SEAntZtsR0dHRYf1WbduXXSk8We/oaVhSoqVO2s5lBbQnmjQnmiktaerq6ul
pcV1K/4B2hMN2hMN2hMN2hONtPZofJTSAtoTTYbbI+3RBVQXx48fD7ukXpPt
6+ubPn16YOL12rVrT548GR8fv337trq3B6ZrP/zww4gDZvjjg/ZEg/ZEI609
0p7c0J5o0J5o0J5o0J5opLUnw2akBbQnmgw/ioNq4enTp+qmWnJWVKPJFgqF
1atX04MfOHAgvBi2p6dn1qxZ/jbKfAcGBsodM8MfH7QnGrQnGmntkfbkhvZE
g/ZEg/ZEg/ZEI609GTYjLaA90WT4URxUBffv349IvqTRZC9fvkyPvG3bNv6W
Gf74oD3RoD3RSGuPtCc3tCcatCcatCcatCcaae3JsBlpAe2JJsOP4kA44+Pj
Bw8epBOgRk1248aNdKZ1cHAwYuNNmzbRjculfsrwx0daDje0Jxr0n2jQnmik
PdlKe3/QnmjQf6JBe6KRZkbS3h+0J5oMP4oDyZw9e/all14KeGttbe3rr79u
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
TNb5muUAAZONnj3HUlkQACYCOKD/AA4wWSAEmCyIQ6FQWL16NbVF5Y/hxbA9
PT2zZs3yt1HmOzAwwDnv8PDwzJkz6Xk///zzqampwGb37t1bvHgx3ezgwYPl
jmnZZDnmxUdXVKqc6FbOyIBwk40ec0BVWRAAJgI4oP8ADjBZIASYLIjD5cuX
qSdu27aNv2UcTp8+TY+2ZcuWclsqmaVTxosWLSqXdcqyybpNmatrLlWOyXLW
HTufHw9ATZYuki15peilxFJZUISJAB7oP4ADTBYIASYL4rBx40Y60zo4OBix
8aZNm+jGnNRP7777LjXZ6PMGNr5//37JzXJlshozNWmJUuaTVZOlU64lrxQd
THB7CYAQYCKAA/oP4ACTBUKAyYKKjI2N0enOrVu3Rm9/69YtapRnz55Nfeo3
3njDP86cOXOiNz5z5gw9740bN0puZtlk3RZ/0WiyWnIg8+FkbaKR3hJKylKT
jU735IGkT4ACEwEc0H8AB5gsEAJMFlSku7s7kZlOTU3V19f72zc2pp/8amho
8I8zf/786I07OztpO69evVpys1yZrMY6sEI0imOybufHw1CTjTNQQG0XSZ8A
TARwQP8BHGCyQAgwWVCRtrY2aohDQ0MVd9m8ebO/vbLacktWKxIIGB4dHY3Y
+JNPPqEb37tXWnMsm2zRaRlTje4jxGQ5b6bbUYUw1GTjRA4j6ROgwEQAB/Qf
wAEmC4QAkwUVoetelZbG2SVQOufBgwfpTn3o0CF6nJMnT5bb8unTp0uWLPG3
nD59+sTERMktc2uy5WJWY0JNlnmo1FAVzZLJxszmJKcWEpAATARwQP8BHGCy
QAgwWVCRV155xTfElStXxtkl5pLViqivWlortq6urpwUf/TRR/SMO3fuLHdM
+ybLCYhlolE/NUpxavjhwQ5HFcL4JhtzObOcDNJAAjARwAH9B3CAyQIhwGRB
RZQ/+obY1NQUZ5eenh7qlV1dXanPHlDUefPmnT9/nm4wMjKybds2uo1qcLnE
xUUXJuuwjCldfckMCda45DY1/OK8DkcVwvgmGz8IXEjeLSABmAjggP4DOMBk
gRBgsiCaiYkJKomtra1x9urv76d7ffHFF6kbMDU1tX379mkvsmjRok2bNu3c
ufP111+fNWtWQGP9tYclya3JMsUnGybr8FqEKWmy0fPdQlYrAwnARAAH9B/A
ASYLhACTBdE8evSIeuInn3wSZy91f6N7Mc1RyezJkycXLFgwrRIbN24sl+jJ
x77JckqgMtFYgVRjQZ/U8AvCUpO1fC3C+CYbf8BBwngCEAJMBHBA/wEcYLJA
CDBZEI36sqOquG/fvjh7PXjwgO514MABZjP++te/7tq1K1pjX3rppUuXLlXM
kwyTTYeEdEP8d5LvwhrxTTb+ZaIm62o8AQgBJgI4oP8ADjBZIASYLIhmaGgo
xezq8PAw3autLb2+TU5Obt++vaampuKErMfy5cujv53tm6wre6IJgmCyHgJN
NtFlknAVgBBgIoAD+g/gAJMFQoDJgmjSmezDhw9TzOSGGR8fV/0z4Krr168/
efLkjRs3bt26dfHixQ8++IDmpFLMnj379u3b5Y6p/oTFZegxQ+/hl317ut2x
3NBZwpz66mua6lbU0dJx54N/8t/Jb7vTtOF6x1v+Ee7u/8/aW5iICxcunDhx
ovVgp//GvtXaGb2LhKsAhNDV1fXll1+6bgWoVtB/AIczZ8589dVXrlsBckf4
0d178k9nGSAPjIyMpHDSwcFButehQ4fSnb2xsZEeZ+7cuX/+859LNrKpqYlu
WV9fPzAwUPKYymRbWlp+LsWEGWieooEv5hg6Sxg6f/dq8xnm0ejU4ax17Toa
mBiaeXj059spjkDr+CiT1d7CRAwPD6vbMl2A3LT3YsW96ATuj/eHLbQTyOT+
/fs3b9503QpQraD/AA4//PDD999/77oVIF+UfHTHnCyI5unTp9QQ02V8OnIk
TWirktaAnEaEshQKhR07dtDt33777ZJb2o8u5ldBTYf2HE0aY5XTwa8G++zx
Pf8Iyou1ti4xXnRx0kK9SF8MPBAdCjig/wAOiC4GQoDJgmiUIdI1qjGr8Kjv
RyqVp0+fTnHqwDRrZ2dn9PaTk5OvvPIK3aXktCxMNjXOi5lm0mSpmSY12Tjb
g6wCEwEc0H8AB5gsEAJMFlRkzpw5vhsqu4yzy5UrV6hRdnd3Jz2pMuj6+nr/
CIsWLZqamqq411dffUXP29HREd7Gvsm6siftFVvczgbqehv5OqwLz2STjg+g
EA/wgIkADug/gANMFggBJgsq0tDQ4LvhqlWr4uxy8uRJapR9fX1JT/rLL7/Q
I+zatSvOXo8fP6Z77dy5M7xNfkyWhq1mwGR1TW3Txbbq0mhsYVI8k00as02n
2pG+OM/ARAAH9B/AASYLhACTBRVpaWnx3XD27Nlxdtm7dy81ytHR0aQnvXfv
Hj1CfPdULfT32rRpU3iDfJqsljBUt3GtNHHWL2cWpj6OsmD/OMqONbYwKcpk
u76+SnMRx9kLhXiAB0wEcED/ARxgskAIMFlQkePHj1OpvH//fsVd1q9f72+/
YMGCFCcdGBigJz1w4EDMHefOnevvtXnz5vAG9k226CiiVbvJap/kTUQmTZaW
4Im5lpkmkY4pvyCTwEQAB/QfwAEmC4QAkwUV6e3tpVJ59uzZ6O2fPn1aW1vr
b9/c3JzipKOjo/SkMQ8yPj5O81OVjEl2YrJOIlq1BwO7XaE53N3ov4fq36mP
oyzYP46yY40tTEo6ky0KSCKdCNXh1fVSb7v6X7fh3BkDJgI4oP8ADjBZIASY
LKjI1NTU/PnzfT1sbKwgEd988w2V0Io5h0tSKBToSevq6iYmJirudenSJXrq
Y8eOhbfJj8lqTzVMTVZLMuRE6DJQXUbMR5ns6ztOphgcoFdWeCEeGlrvRde7
nQfPEjARwAH9B3CAyQIhwGRBHHbv3k0Nsb+/v9yWykBXrVrlbzlz5syxsbF0
J925cyc96fHjx6O3V6des2YN3eXHH38Mb+bEZJ1EtGo3Wbe5hkyYLCdKmU/A
ZONHgFdRSVna832ZxcysFmAigAP6D+AAkwVCgMmCOPT19VFDVK46Pj5ecsvD
hw/TLVtaWkpuNjo6Okx49uxZeJubN2/SQ9XW1v7www8Rjdy3bx/dXlltyc3y
Y7LaY1Dd5hqi89qc99BVed8wymRnrWtPMdrgdsFyfOigAf1xO4CQGWAigAP6
D+AAkwVCgMmCmGzbto164rp16x49ekQ3KBQKR48epctUZ86cqb4rSx6NVvZR
XLlypeRmmzZtopvV1dVduFBCYSYmJlpbW6e9SG9vb8ljOjFZJ2szjZqs/VxD
uiK0M2Cy1VJSNjAVixhjvcBEAAf0H8ABJguEAJMFMXn48KESSaqKc+fObWtr
6+npuXnz5pdffhmI7I2OB45psuqkCxcuDBx2xYoVx44du3bt2u3bt69evbp3
7166otbj008/LXfqnJisiQy3brPm6sr/7KooUhhlsulGG6qiEA/NNe0NPtDI
BEzL8oGJAA7oP4ADTBYIASYL4qO0kSYljmb79u2FQqHcoWKarOLu3bthUY3m
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
9On+BitXrgwfobOz09+go6PDSqurDLcmazqc1do8ETVZc2szTc+ZZsNkbZb3
DcO/RsIL8UR0dfrO2w8whokADug/gANMFggBJisKutD1wYMHgVe7u7vphOze
vXvDR/j222/9Dfbt22el1VWG0ljV5z/7na6uLptnt2myRh+t7WQZMm2y9uNa
6SzexZ5+LSZrs7xvGBpmkK5LuyrsG4fo99ZtCSSYCOCA/gM4wGSBW/zH+JaW
FpisHDZs2OB76MTEROBVOmOr6OnpCR/h6tWrMNlosm2y1qTGTlyl6ay29uNa
6QjAnXuDWkzW2vBFSbQEzIstKUvn0Et+oBwGGMNEAAf0H8ABJgsc8t1338Fk
ZbJ582bfQx8/fhx49eWXX/ZfnTFjRlh1FSdOnPC3OXLETXFJ4biNLjY9yZgx
k+XP90Vj32RpqGo2TFbLdKrYkrJ05KFkP6cfBMuh3TARwAH9B3CAyQIhILpY
FDt37vQ9tK+vj76k7hh0QrbcVdu+fbu/zdmzZ620usqQY7ImFmY6MVlzWYZM
T9XZX6FJTfbJkydaTNZhjKuuwGCxJWUrZjZzOIwAEwEc0H8AB5gsEAJMVhQd
HR3lYoMPHjxITfb48ePh3QcGBmhKKHxJlcStyZpOMWQt+Y+dfLkZM9mAcmbA
ZHVNasssKRtnXMjhmw8TARzQfwAHmCwQAkxWFHfu3PE9tK6u7vbt297vBwcH
aaHYmpqaoaGhwL6PHj1qaGjwt1HbT05OWv8LqoBsm6y1gix2lNlCIiCbuYYC
83e6TLZoqyhSGF0ps+jnQk5J2ZifJldLZWEigAP6D+AAkwVCgMmKolAoLF26
1LfRWbNm7d69+8CBA/PmzaMTsuvWraN7jY6Onjt3buHChXSbXbt2uforhOPW
ZE0ny4XJCjyFj7oi/rpLdaU0mqydVNJhdBmozJKyMd9VV1WQYCKAA/oP4ACT
BUKAyUqDFoQtx7Vr/4hzu3r1Ko0o9qitrb1//77Dv0Iybk3W9BO7NZO1sCDX
Tuivzay5gTdNo8m6mhbUlcFMZknZmDPdrpbKwkQAB/QfwAEmC4QAk5VGoVDY
unVrhMY2NzfT7fv6+sLbfPHFF67aL59sm6w1o6FSZujp3c48nc2suYHJO5is
j0CTjd/DXS2VhYkADug/gANMFggBJiuQycnJ999/v6TGvvvuu4HVr6Ojo3SD
6dOnt7e3u2p5VZBtk7UWZWphHsp0JLaHTZMNzJhrNFlrc/EBNM5o0zBvCSVl
6bBDxagDOntrbSQBJgI4oP8ADjBZIASYrFjUpdm+ffsrr7xSV1e3ZMmSLVu2
9PT0FAqF8Jbz58/3NPatt966c+eO/aZWF25N1vTcE0w2KaYr/FLMmayrpZoa
TVZaSdlEgwNO5sRhIoAD+g/gAJMFQoDJZoCjR4+eOHFiYGDAdUOqg2ybrLUc
thYiKu2brOn6LwHfMWSyRusIB9CYL0uaySYaFHIykgATARzQfwAHmCwQAkwW
5A23Jls0nCw3SyZrp8aozUqmATnSaLJOkg7pHZaxOaQQh0QfJSfvP0wEcED/
ARxgskAIMFmQN2Cy1XIuO3G/MNnU0Elz/qJvmxeiIkkTmjlJ+gQTARzQfwAH
mCwQAkxWPs+ePbt169axY8eam5s3bNiwZs2aZcuW7d+/39+gra3t3Llz4+Pj
DhtZRTg3WXNlXyw/TmfDZO3EMHsE3jGNJuvEpPS+dXq9mEmKaG06TGFnqSxM
BHBA/wEcYLJACDBZyYyMjBw6dGjevHnhJMY7d+70N5s7d676jfrf9vb258+f
O2xwVZBhk7U8MWc6u5SdhZN2av14ZMxk9c6i2rwQFUmRC9p+0ieYCOCA/gM4
wGSBEGCyYrl8+fKcOXPKVZX1TXZ8fJz+/o033nj06JHblgvHucmaEzTLJmv6
0Z0qfwZMNiybGk22aDew3EPvpLmokrIpRmnsJ32CiQAO6D+AA0wWCAEmK5PP
P/+8nMMGTFbdSQIvrVixYnR01G37JZNhk6WL+ywksLVpsuYKjFoTqPA4g16T
tVaAycecyZpYQp6IFMMC9pcqw0QAB/QfwAEmC4QAkxXI2bNnozWWmmxvb2/4
1S1btrj9EyQDk9UFTDYR4auj12TtR7dqv0B2rnhFqJPGN1n7Ad4wEcAB/Qdw
gMkCIcBkpfHgwYPa2lqqpQsXLuzo6Ojr6/vxxx/DJlsoFC5evPjqq68GZPba
NXs1JasL5yZrLpGR5fjGFGsJE2Fths7OiWCyFRFSUjb1iBD1XwvT4jARwAH9
B3CAyQIhwGSl0dzcTIX04MGDk5OT3ktDQ0Nhk/VQPvvpp5/SHd9++20Xza8C
nJusuWojlk3W9OkyZrLht0uvyZoeWAij/X0TYrIpEhd7WB5MgIkADug/gANM
FggBJisK9WQ7ffp030Y///xz+mqEyXrs27fP36CmpkYdzVbDq4kMm6xllzFq
sjbz/9gJag1fHb0ma3kcw8QFouEKDkvKpv4cUZO1cAlgIoAD+g/gAJMFQoDJ
iuL8+fO+iq5evXpqaoq+WtFknz59+tJLL/nb9PT02Gp4NQGT1YXRZbk2a7LY
mQrMmMmauEDmPhqJSJ07y/IlgIkADug/gANMFggBJiuKjz/+2PfQs2fPBl6t
aLKKgwcP+tt0dHSYb3L14dxkn9xs8x/XfzmzUOOR6ZRQtZusuXcpjB2TDYee
6jVZejks5M41cYFsXvQIUqR78rCcvhgmAjig/wAOMFkgBJisKN59913fQwcH
BwOvxjHZixcv0jW25ptcfTg3WXOzjZaX6Rl9brcpNeZycFHCM316TdayRtH5
U10XyOZEfDloCuKkJms5fTFMBHBA/wEcYLJACDBZUWzYsMH30PHx8cCrcUxW
XVB/m08//dR8k6uPDJus5YqiMNlEmDZZyxplYk2rzcXR5WBGGqS24BTARAAH
9B/AASYLhACTFcU777zje+jDhw8Dr8Yx2W+++cbf5sgR449S1QhMVhdG1cnm
kkk75wo7TmZMVpf+SzDZ1ImLPWzGRcBEAAf0H8ABJguEAJMVRWtrq++hykkD
r8Yx2Y8++sjf5syZM+abXH04N1lzj+s254OKhtXJzjypRzZMtuQpzGFocbG1
0kvlYKZNs7lWnWMi6i6kurq6iOqD5rDgEXAITBZwgMkCIcBkRdHR0eF76KZN
mwKvVjTZsbGxuXPn+tvofUjODDDZqjijTZO1EMlc0vq1m6zNSXlDpYvoYZ0Y
Fn0PU6iozfTFqU2EhoU4zxQNXAGTBRxgskAIMFlRDAwMTCNcvnyZvlrRZHft
2uVvUFdX9+zZM1sNryacm2zR2MRTlkyWTvmZNlkLiYZKrinWbrI2Q1sN9WE7
eaQjYI4G2My7lc5E6EgaZDbPwGQBB5gsEAJMVhqvvvqqb6P19fW9vb3+SxEm
WygU9u/fTy24ubnZeturA6WxiwlO2mDCAiwvk/QwNwlo02gsmGzJPEIw2TA2
5+JLwhycsfkxTGci9JNFf37a80eEGecKmCzgAJMFbvEf4z3rcd0c8A+uXr1K
hXTGjBmffvrpyMhIsbzJ9vX1vfnmm3Svmpoa3GHKoUy2paXl599x0gYTkZmW
i7B4mFMnQ8GrJbGQaMi+yRpdpGnuHbOZ6SsM/RCl81BOEZ+kpDARGkjvvcP0
g+aq8hFwAkwWcIDJAof8TMCcrECampqmvcj06dPfeOON5uZm/zfqP8+cObNn
z54VK1ZMC7F7927Xf4RcJEQXw2QrkjGTLbl8UrvJ0mxFRhdpUiHSqz8mytTG
h1mCx4MGKhidGU9hImFvDayZxbRsfoDJAg4wWSAEmKxAxsfHV69eHfbTmKxf
vx4rZCOQYLImQme1PIQnxZzJWs5ha/p0JTPiajdZa+mGzOXIshDpHQGzBI+H
tRjvpCYSmJD1B4jo7QjTsvkBJgs4wGSBEGCyMnn8+PHbb7+dQmM3bdo0Njbm
uvmigclqhFmyJAKYbAqs9QFzM6duTVZLf7Y2M57UROhth161QA4oTMvmBJgs
4ACTBUKAyYqlUCgcP36cVtWJZs6cOWp7tZfrhksHJqsRQ5OAFsJ9A5gOZi65
glW7yVqLMDeXl8n+padoWWhsbWY8qYmUnJD1oHckJDHOCTBZwAEmC4QAkxXO
06dPz5w5s3Hjxvr6+pICO3PmTHUFT5w4MTEx4bqx1YEEkzUhAjYLWZo+qf2J
OdOpkkuunYTJhgnMD2o8chy05OK2dhUSmUh0QDh91f4AAnACTBZwgMkCIcBk
q4WpqSl10+jt7e3u7u7s7Lx06dKNGzfu3r2LJbFJkWCyJhK0mgv0jQAmG5OS
iqTdZK2VgDH6dtlM9hVAS9pha1chkYnQdzU8+IAA4xwCkwUcYLJACDBZkDdg
shoxFNJsLqFQOUyXMS2pSNVrskZl02YpYYqud89aIZ5EJhIRWuyBAOO8AZMF
HGCyQAgwWZA3YLIaMRRICZPVeyLtGA0AdmWyGodltEQpVyS+icT5QNFACAQY
5wGYLOAAkwVCgMmCvCHBZE2YmrXaHxRDJmvC9B2esdxknwmTteNQRk3W9KhC
OTSarJ0PY3wTifOWBgKMLcd1A/vAZAEHmCwQAkwW5A0JJmtiHagdhQlgKJw1
YyZLfd+myRpyKNPphe1ffQ+NUQ12CvHEN5GYiupqNhw4ASYLOMBkgRBgsvb5
+uuv9xJ6e3v9l0ZGRvZqoq3N7FxGX1+f8sF33nln/fr1a9eu3bZt2549e65c
uWI6A9XU1JR6x9Rf19zcrLquOvWmTZs++uijixcvjo+PxzkCTFYjhkzW/qyc
0XjmcjPXJkzWwmyg6Xxc5orVRqPRZO0kEo9pIrRvR8+h03fefjFfYBmYLOAA
kwVCgMnaRykYLaNz+PBh/6W7d+/GrB4bB0Ptv3Xr1qpVq8qddN68ee3t7SbK
2iqH7ejoiCiwO3v27EOHDlVUaZisRjJjskbtrFzYqmmTNbRc2vQqZvuZqz00
foLsFOKJaSLqGvkZuqKvF5bK5gqYLOAAkwVCgMnap6pN9tixYzU1NRVPrTrV
48ePNZ53aGho5cqVcf7q1atXj4yMRBxKgsmaiM+0k+rHznntRzlmxmQtxLVm
1WRpT9ZosuaSSMc0Efppih4XQi2eXAGTBRxgskAIMFn7VK/JdnR0xD/7unXr
dEUaP3jw4OWXX45/6lWrVkVEGsNk9WJiLth+RVGjaz/LxZqaMFkLca10xtzE
OlbT63DLofETZKccUkwTSZTHCbV48gNMFnCAyQIhwGTt09LSMovQ3t7uv6Ru
C7M0UVdXp7fZfX1906dPp8Koes61a9fU07jSxtu3b6u/KzBd++GHH/LPOzk5
uXTpUnrY2trajz/+uL+/f2Ji4unTp6oPb926NSCzaoNyB8ykyVorJBoGJluR
cgswTZusxgq/FNOx305MVns8sIVo/zgmEn+RrAeWyuYHmCzgAJMFQoDJgjgU
CoXVq1dTVTxw4EB4MWxPT4+SaH8bZb4DAwPMUx86dIied/78+SVvnp2dndSj
1anV13TJA0ow2aLuOiYOTdZEiqFEs0i60HtFKDZN1sIKTQux3/Y7gMYSPB4W
Um8lNdk4oeBYKpsfYLKAA0wWCAEmC+Jw+fJlqpPbtm3jbxmHwcHB2traihrr
0draSk9dTleFmKzeaUc7GWZKYtpktRzQ7UnLvUVVarIWZszpKeys1tQ+l60x
E3I54phI0gl0VJXNDzBZwAEmC4QAk80q0VmPkrJx40Y63akEM2LjTZs20Y05
qZ/a2tqonF64EPVMq05E45/Xrl1bcrNMmiydUXJosrqe2J2YrDlBKxdoasJk
LczOWzBZ+ym/tIunhQXLcUwkxcVCVdmcAJMFHGCyQAgwWVEoFzvwO3fv3k26
+/Pnz3ft2qUMrr6+vqamZnJyUkurxsbGqCFu3bo1evtbt25R/Tx79my68xYK
hUWLFvnHee211yoW99mwYYO/vXoTSm4vxGT1Pi5qj42Mj3YFcJXwx9wDfMZM
1sI4g/0yTNoHZCxMjscxkRQXiy6VRdKnDAOTBRxgskAIMFlR0NzFnZ2dSXdX
4jZjxgz/CNEzp/Hp7u5OZKZTU1PKIv3tGxtTPgsFjPjatcqC1t/fr1qr7EDd
YMvNSsNk9aJ97slVERZzJlsuKa4Jk404nRYC0afaj+9hX6a0J2iSYLLp6iW5
+gACy8BkAQeYLBACTFYUTJNVzJ492z9Cb2+vllYFQnyHhoYq7rJ58+aKc6MV
obme1N+lq6ZPJk3WQiijtVO7epA2Nw9o2WSNZs21kxHIvsnSa6TlTbMwOV7R
RGiXjm+yroIigGVgsoADTBYIASYrCqbJDg4O0vy9V69e1dIquu5VaWmcXQ4c
OEDl98GDBynOS2vrqDakOEJJhJisXm9yaLLap4PTTSTxMWSyEUZjwWS1Z82l
V8fcOIP90QwTE9lGJ8eLCU02UZe2n3EL2AcmCzjAZIEQYLJO6Ovru16KkydP
+u728ccfl9wmTE9Pz5UrV06fPr148WLqj7dv39bS2ldeecU/5sqVK+PscubM
GdqSGzdupDgvLSN78OBB+tK9e/eU6SshVe/S559/fu7cuUePHsU8bCZN1kKi
1HJkxmQNzQPSKFM7Jmu0/oudq2PZZA1FApsuxFPRRFLn5kLSpzwAkwUcYLJA
CDBZJ+zevXuaYWpqanSlL66rq/MP29TUFGcXJde0MV1dXUlP+vTpUzq/7M9Q
q0MFKtv6f++GDRv6+/srHlmIyer1Jocmq90CXCWcsWCygfenGk2WvkvmTNZy
gKuhZebOTTb1imYkfcoDMFnAASYLhACTdcLo6Oi8efPMaaxC12WdmJigh21t
bY2zlzJKutcXX3yR9LyDg4P0CNevX1diTpfflkT5rLLU6GW5mTRZE6VwYpIZ
kzU02xhhSYZM1uiwBo0lMHd1smGy9EKYiPmPNhFOf0bSpzwAkwUcYLJACDBZ
V3R2duqS1jCzZs26d0/PE+yjR4/okT/55JM4e6n7G90rhTnSJcPTfjPZ5cuX
x/zzd+3aFXFkISar15tMz/5EoD2zjf0KLB6Gnt7tm6zRRdPWrk7q+cQUGHJ/
06vXo02EM3uOpE95ACYLOMBkgRBgsq4oFApr165lGmuY2traDRs26NLY4m9f
dvT4+/bti7PXgwcP6F4HDhxIet5ACR66Vnfab7Vl9+7de/To0U8//VT9O/w+
RMwCZ9JkjaarjQYmG02EzlgwWe0lmegKSqNXx2bSIUMma7oQT7SJMD9HdCQB
S2UzCUwWcIDJAiHAZB0yMjLy/YucO3fOd7H9+/d/H5sffvhB3VKGh4enpqb0
NnJoaIgaYkwHVC2he7W1JX6OCqy09VmxYkVfX19gY6W9y5Yto5vNmDGjXDld
9Se0tLR8V4onFhm6dYJ6E/No1GTv3BvU0sKYqNPRHK38A97d/5/9d+Zx/1n+
AWMyPNBL56F0HbZp70X/zTl58TZ9SX1mr127putEPuosVKD0HpwKpnrH9B6c
YrMbGPr4XOzpp4M8ug7ro2773377bblXmVfK1ccQWCO6/wAQTd9vuG4FyBfq
qSn86K6e6mGycuDXk9VOOpN9+PAh3SvmTC7l0qVLYY1du3btr7+WnnBUPfzV
V1+lGytdLbml+hMWL178ZiluWuTON/v9B8W/7PkPzKNRl9TSPIdnv/PBP/3j
nfnzV/wDxkSdyz+vaoOuw77V2um/OZ8c/Zq+pDT25MmTuk7kc/Jcj3/GxZs7
9B7c2tWhJnXry83mTqSYta7df8cuXflW12HVofzDqlPoOuw/jn/p0ldflb0E
dFI1xcFvdyz3d1f/ZjQTCCW6/wAQzfnfcN0KkDtKPr2rZ/6klgEMIdBkR0ZG
UjhpIF/ToUOHkp738uXLAY2dO3dudKmdgYGBGTNm+NvX1tY+ffo0vJmQ6GK9
K9GoS+poXTL0xjanLh3Cx8TazIglzE/MRBdrj/emWFu+ajPxl7mPDz2y9rD/
iOhQftlfJH3KPIguBhwQXQyEgOhiUUxMTFz9nYcPH7puzt9QMkh1Ml3GpyNH
Ej8f3rhxI2CycQ6yc+dOusu3334b3gYmqx2YbAQRbw5MNgJrJmv07TKaii2m
yaZbho+kT5kHJgs4wGSBEGCyIJpCoUDrusaswqO+H6lRnj59Oul579y5EzDZ
Bw8eVNzr6tWrdJejR4+Gt8meyRp9FI+D3sd1m0lrA5iQaPsmWzQ2smHTbgwV
RQpDk0trz8vkymT5adPotbb/SQQWgMkCDjBZIASYLKjInDlzfDdsamqKs8uV
K1eoUXZ3dyc96cDAAD3CvHnz4uwVqBm0d+/e8DZCTLaoT9lMp0itSGZMlibm
1ZWvNUIq7ZisxqBWmxGn1s5lqJish9GSshEmoiXFtImPA5ADTBZwgMkCIcBk
QUUaGhp8N1y1alWcXU6ePEmNMpxtuCK//vornQtesmRJnL2mpqboXu+//354
G5isdjQWMXEb05gZkzVUlcnaPGnxRZM12hOMVn01evAIE9ESXUA/DqaXKgP7
wGQBB5gsEAJM1j5ff/31XkJvb6//0sjIyF5NpCh8U46WlhbfDWfPnh1nF9UA
arKjo6Mpzvvyyy/7R3jppZfi7PL8+XN63j179oS3kWOyumJZjU4qxUGjybrN
M6O9lG104Lc5kzUU1GrTZK2NaRgqJuthdJQpwkS0jJLZTLoF7AOTBRxgsiCM
eubZf/qmetpRP+q7VfuampLAZO3T3NxMbevw4cP+SzR3MR9dDT5+/Dg97P37
9yvusn79en/7BQsWpDtvU1OTf5CamprJycmKuwTq2KqWh7eByWpH48RTxkyW
ikwGTNay2tiJM6fvlVGT1b6GvZyJ8BMXe1RR+mLv8Und/dT/as8RnVVgsoAD
TBYEoI+C5oKRwsBk7VN1Jtvb20sPe/bs2ejtnz59Wltb62+v/t505z106BA9
79WrVyvuEsj4dPHixfA2ckxWVyxrlkzW5qxfGO2mFj0lZ85kDc0zajf9aOxk
sTYUie1hNBtbHJPlfIiqJX1x4PFJvc8Wnp0yAEwWcIDJAgodEw78mM5ECpO1
T9WZ7NTU1Pz58/3DNjZWeML/5ptvaDNSF8b98ccf6XHiGDENhK6pqSlZySh7
Jmt0LV4cNKp0xkw2+p0xZ7KGuoRlk7WTcchQdqySx9d75HImovEy0WlxyyWx
YlLu8QkyWxGYLOAAkwU+JWdj6Y/RSRaYrH2Ubc0itLe3+y+p28IsTdTV1Wls
8+7du6lU9vf3l9uyUCisWrXK33LmzJljY2Opz0sPpcz09u3bERur72V1On/7
DRs2lNxMjsnqeuA0mh81DhrrmLhdmqfdozNmspZL/do3WRPHp3O+ehcNlTMR
epmYJis8fXHE45N62+0s0apeYLKAA0wWeNDYM+/eq558hoZ/pd99Jhbv+MBk
QRz6+vqoySrBHB8fL7nl4cOH6ZZK20tuNjo6Okx49uxZyc1Onz5Nj7ZixQr1
8F9yy8nJyTfeeINufO7cuZJbZttkzd0rItCY1satyWpfGBhtlOZM1lCNVMsm
a2EK2EItZnMlZeOYLPMy0UsgLekTvXbe5aN3QgshbdUOTBZwgMkCD2qs9K4b
kFlzN2SYLIjJtm3bqCeuW7fu0aNHdINCoXD06FFaBGfmzJnqu7Lk0WhlH8WV
K1dKbjY1NRXYcunSpeGb58jIyIYNG+hmr732mtq35DHlmKwua8uSyVqOXw2g
3WSjL405kzWUMtdOCiYfC8MahpSfYu7jWc5ENF4myemLA97qRYbTC+rqflgt
wGQBB5gsKIYCYwKjtYHxRkMxxjBZEJOHDx/W1dVRW5w7d25bW1tPT496Gv/y
yy/XrFkz7UVKpg72iGmyxd8jrunGSpbfeeedrq6uW7duqbPv3bt3zpw5dANl
0AMDA+UOmD2TNTfpExONE1tuTVZ7ihsJJqtxIDTbJmvoS9bcMvaSJqJ3NEZs
+uLAAxL9cNEPHaZlI4DJAg4wWVB8cXlOyS84+g2obsgmklHAZEF8rl69SpMS
R7N9+/ZCoVDuUPFNVqGMtb6+PuZ5VQsvXIiaW4HJakejybpdl6fdZKMrvJgz
WRNBs/Yz2eqqJhOBhWxp5qZ9S5qI3rXeYtMXU10NvKsBycVq2XLAZAEHmCwI
TMiW3CYQY2xixBgmCxJx7dq1uXPnVtTJ3bt3lwvu9Uhksooffvhh5cqVFc87
f/78v/zlL9GHkmOyup45jZYRiUnFu1lMLK/EDKN32jE6248dk2VeER/703MW
zmghMt9QpHexjIloX9lqeSI+JtEhxBGeC3xgsoADTBbEXMpBh3NNxMnAZEFS
Hj9+3NraWm6SdO3atT09PRUPojajeylBrriLUuOTJ0+uWLGi5HkXLFig/FS1
reJx5Jisrgd1mKxGzJls+NKYM9migeIy9gskWZgQtGCy5pJKVTRZLfH5AtMX
BxbDhjfAtGwcYLKAA0w251S8D/sEpmW1f9XCZO1z/fr1E+Y5dcrs+qDJyUll
rOpE+/bt27Nnj3LDrq6uwcFBoyf1GBgY6OzsPHLkiH9epQPPnz+PuXv2TFb7
7FsKdNm0c5PV24BonTRqstrHNzJpshZGgUzMj3uUNBHtnyBqsvaXrpeEBu2X
i1WLs03OgckCDjBZvajb9XB3o/pRt1khY4bRJIoZNjotC5O1T3Nzc8UoWS24
/kOFApM1ga6imc5DGfXOQEVfGqMmq331tJM0tqb7g514BkNnKWki2t8xgemL
48QbGEp6liVgsoADTFYj9DbrD946GcyPSaCGbMXvNaNxMjBZ+8Bk3SLHZHVN
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
cUN99fT396v/vX79+pkzZ3bt2rVw4UK68RtvvHHnzp27d+9qfLeyhDSTTT22
JtBkU892STNZ5hyxKJNlqpNAk2U2w63JapwQ9ExEY9x1HKyFT5hb0Oo86VMg
ZrjiVTO0Jg4mCziYNll6q0wX2up8zCpm3EU6LCyVlRb1Vw6YrH2TbW5unmYF
je9WlsiMyerNHqOF1CYrJITVh/m4HtNW7JgsU51sZviJQGMPcRtcSs/O9Oiw
yepqZATWiv6YW6LlPOlT0phDOtCn8T2HyeYWdQv1PEh1J/WPdGODpk2WalS6
8BW3n3TT4/OmBxUdpkZMCkwWJps3pJlsMe3AnUCTTf3wKc1kmYtQYk6DVp3J
WpjyK4fGHuI247fGVbrKRHrP7bEzQ+pjLc24uSVazqNZksYcGsr7BJPNIYHS
TvSznPT2btRktWiU2wBjc4tkPUzfik2kjjcETBYmmzcyY7IC08qlbpKQEFaf
LJksM5jW8pRfOTSOb7uNmNL4eKBM5HrHW/bD8u3EM2ucvI4+uOXn2/i5nijx
19XGByabN8ppbDqZNWqyuj7+DgOMjS6SDZ9Ce8SU22U4icityf69ko4Lk33v
vfcsaOz06dM1vl1ZQqDJppv2EmiyqaeJpZlskWdwMV3JjskyJwGFmKzGSCq3
JqsxlOJvc7KHX7ZvsnYK8RidOjeqydGkm6kxEdQNk80V0RqbQmaNmiw/tNjD
YYCxha9Oo0tl3QYvJQImW+5nYuT81i1vbWlar91kC7bQ+HZlCaWxiwmum/M3
0pms22IiJUn9lG6zSGVMYLJFi6GkFdH1JO88slTjk5UykZv7/83+EJDG7FsR
GB1wcHjzTDdTYyLAGCabHwL9xxcf9Xu6cCPR3dWcyWpcoekqwNhOEkujVWXd
DvnGwX+Mz28YanmH/f5W+4n21q3vvLV8+fKPP9wa3uDvFgyqE2WyLS0tP/+O
6+b8jXQeJ9BkU2uCkLRClNTrQ+O/CXZMljN3L6fOry6ndp7FQqNKq9vXX/b8
B/sma2FVu+nL5CrJQLrQYg/t8y8w2fxAO0/4SzYgszF7lzmT1RvX6iTA2PQi
WQ9zQ80CQ/4C/EzI7ZxshMm+u23D8t/pOrMHJpsxBEYXpzNZgasYtJisw7RC
lNTTxNJMlvPQLqc6UmBOIfVxJHxB6xrrVt/gdz74J/sfHKMTAR6mL5OrqXnO
8632AGOYbE4IjJ+ERVXdOuj3nepdcb7yzJmsrtBiDyejlxYWyXpoD9XwMJdw
zwSmTfZ09w+Wf+K2rLzJDv10eqD/ROuuJmWy9+50aI8uBm4RbrLxb3oCTbaY
9ik9SyYb3xxhsomgX9mpO4mEfIx0/REn2k2ZiBa7T4qFmXoLNzddVyERnOdb
7QHGMNmcQHtduQ+s6l1xNnvhsGZMloqnlrhWJ8NWWr6t4mBoqSy9Pcp5vCyH
aZOlHdLOT9yWVUro1LR5/apVrz4f+xommzEEmmy6fEdZMlknD+TRpF4MGH86
yY7Jcr7HRVVH0hKCLuFToytx7vBAr5MPjoXV0xaeo5ykL2ZeL71PrTDZPBCY
kI24c8bf0sOQydJbtK7BRssfdkMFoEtCv6M1jivqnRY3DUy25M+vj86tWL58
x3uNJnIXm2ZqaurGjRvbtm1z3RChCDTZdL7gsJBEBOny3Qk02dTplLNksvRN
cG6yWtKCSTBZXW143H/W9NxoOUx/YC2kzbSfZ4Af4aA3rhsmmwfoR7Vir6P3
2IodzJDJmgiWsByKQ5/oTMcymchqrn1a3DQw2ZI/N68fXr58+RftH7g1WXWX
+Prrr0+dOnX8+PH29vZjL3L0N44cOaK87MCBA5988smuXbsaGxvnzJmT30Re
MciMycrMkZ7Cr+UkyKWkno6M/4Rsx2SLjIWZoqojaUmZK2H8R5dDOYz9Np1s
3MJzlP2kT/xPk95bJUw28yTNMJYogt2EyRpyKMu1eOxkd/cwkdVcQjaJRJg2
2Z2f/9nyT9yWRZpsx7EPlMkqn3Vlst3d3cuWLWOWlDXawuoFJmuUFKYgJ0Eu
JUsmm7qriKqOpCXUWcKnRtdzgsPYb6Mdw06GFvur5+gDZ+qlcxrfeZhs5qEr
MmLeIuJPy5owWROhxUXrtXi0fNLjo/1uLCFyKRHIXVzyZ3vz28pkfx3ucmKy
yrOYDguTjUCgyUbPrYyM/XRvqER/k/BMHiYzJpt6wiv+t4A1k009ESkqE5cW
cZMQNKVrNtDhjLlRibY2I0A7g+lbKKf+DkVj4CJMNtuk63Lx5/hMmKy5BfLW
avHo+qTHR3sws8xnywhya7J/r6RTSlEnRy+sXPnq5k3rKmSFMsONGzdqamr4
Gjt9+nRDLax2BJpsOZVTDvtp55/ePvi/qZ8dHf+s/pPuJeGZPEyK0TxRCXJ9
Uvs1TNYQWvqJhE+NrtlAmzFsAYwuBLM2I2Az1FxXfUmNy+JgstmG3h8SdbmY
07ImTNbc4JK1Wjz2n2e0L5WV8C2ZCJgs/fnLjSOXzredON66fPnyLU1vqn9f
6z5o2WTXrVvHdNjGxsYTJ04MDw8bamG1U0Um62usL7N0L5l3mxRrADNmsvEf
j62ZbGo1sDy2HA1/7t5VFVFDzXA4zmA0jsJaAQibSZ901ZfUuCwOJpth6Cc0
6f0hYEbl9tVuskaDMazd/O2Hyugqtu7hpPwuk9yabEk53dS4bvmLNL/7dniz
v1uwAYaGhqiT1tTUvP/++z09Pffv31dmWldX5/3+tddee/To0eDg4J07dy5c
uLBjx46ZM2f6e23evLlQKJhoXjaoFpP99ofPqMZ6P+qX3qtCnsnDpHg4FFXq
xSd1cpX4kTnWTDb1E7tYk0038iznO1rL1IPDq2M0S5u12Db6uTDdH1JrRRhd
tXhgshmGGQMQp49pN1nTwRh2YjCcDDBqXCoroeR6UmCyKX7MmWxXVxc12c7O
Tvrqli1bfMMdHR2lL6n7yerVq/0dv/jiCxPNywYCTbbkY+GOjn8Om6w/LSvW
ZFMMq8JkTZPOZKXllOa3R05KRv4zld5xeFFntxZtYi2jqd7qObqOBpPNMMyJ
+zgVUbWbrLnQYg87MRhObssaH6KqLt1TESbL+THAxx9/7NvomjVrAlOr7e3t
/qvd3d2BfcfGxl555RXv1dmzZ6v/NNHCDFAVJntv6FJYY70fL/uT/RISMUkh
C6JKvfikflaP/xxuzWTTGZzATFzMhwQ5o818k9UrRykwNPVgc948kNHU3Il0
LZL10DXEBJPNKvykQ3GC2PWarIUaphZGrlwtldL4ZV116Z6KMFlhJrtjxw7f
Vbu6ugKv9vb2+q+2tZV44P/hhx/8bFEHDx400cIMINBki6FH9OOXV/jqqv5N
//PTzj8VJc0uBUih2DJNtpjWmwSabLpxD4Hrl5n2JGe0mbYk3eyA86tjqBCP
5Tub/YBDLbc4LW8+TDarpM71RKHfyyXlSK/JGqq/Q7EwcqV3zCo+GgOorIXE
aAQmK8pkN23a5LvqrVu3Aq8+fvzYf/Wtt94qeYQNGzZ4GyxatMhECzNAVZgs
DS3+9ofP6BStF2CcJZMVVbSUksKbEkV9w2STwuwqckyWH+fmPCbf0AAU3/ET
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
DBmiTnXwIN78HAQkC5m0cSWg1n6cS8pCNr/nmeXGPXyx3oPxp9xgXAnG89aR
LDxm0eaniWfOQrL2FamfZS2LiPG8bFkJikKyOrlzI1mPCGu2CypX11BWiEE0
kznNn0YjDrwCdKs0okj4xbDleCww5WRKVkJmXGOXwwb80h1R0kiSbEW48Z3K
EGcUJXq0W0GyUmhri3/Msqtikyy879J8qC0jYOw/Lh16dtJTgmS/ObsnI8me
Pn168+bNM2bMeOihh0aMGKGoTfz32LFjn3/++ddff/2rr76K9Ovnzp3zsK5+
/fXX8Ftr1ni+2S9duiTgVJ1n/vz5+jFdJ1nkvNr4kFSPIM4kC3tU97QUHex/
8adsu6CEopiNb+q3P9rjEfObhWTt0OSXtyeLiNzElpWgKCmG9NccN5J1Td7L
OX+may0YODrZHQ6JMcv0+dNoU0NBr05XABlz1T5AWAys82NHLXfKoYS+q+9g
hHUw5sZQimQbd04CXoSootz13QqSlUID1ImIGycVkq373Lx8eO3q+QJj16ye
FzZ3MV0nT56cNm3arwgaMmSIODJIsRskP5I9f/68hyVXF6xYNGbMmIsXL+rH
eJCsmPOLTfo0hw4N/NN5VZCdmsmfr/t/jcerR9BjfXf/k7DeXpS21TYNvLcf
kewT83cbjnvlXljdZuuR3ydvKUnPb/xX6Pv9p2Ob9GM27dkFPaWJZ37vvff2
7t0btLHNWrD2gJpCSze+hf711IH5agaKAUrcNje9cq9qqmh23VFwEZWydU46
cvQ9uILSD/joj3vha07+cWBg4MCBA2lbatPHWx9XLTy9+6nG49dve0f1ekr/
vgQtpAuOSOPMgXeNGp28gu0xPrI+dZk/YnQsI4US2Ipp4NRUMbdhWVKB3vLv
YghGPLtZ/e6re487nRYKzjQ4muLKwJaLZrRsubgU6JiHZ261PG+d9MnS/0F5
4iXTkSNH3n777U9vfzqp4VOqu/gMhe76gfdP6sfAUdCHm6c+eXMdHCB4Wxn7
yFlbtmzRl+6/vyU/yqCooyR77W8HX1gxR2DskkUzr108mJ5kb968uXHjRuhV
S9GoUaPEiylsS7799lsPJj1z5gz81ksvveTx04cOHYKo/u677xoP8yPZ/Sb9
JYcOvvfP3E0vb/o5JFnj8eoRNGbuaIiBaVttE+yRwG1JsvphZzb9f5tX/Jhn
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
j1YUaooOzpUBhrgmRwCFUiPqx+e1AKKLCd/+FG8rgeoc0hfrq3Fv1+K6E+aS
034jQwdj4tPMTrJswzN1iT52iC88Yqt5mv4HPcmKyw5vJXWPl42dOoklq3iF
wb3Z2AwrVUi2qNeUl2RdbabwOaAX+tSV0iXMiWRRbVx7XwYZydYNSjySbRwa
uEki2w9z9fApKUvZmZEOt5Bk9d4h5bUAIlCiB8kqTVn5Wl56MhqJ4CjYA+GN
4uPOCheujU8DRBkckIq4J2AnWYaErktcbXU3dcVkRgzBRmJoIh/cJIuyl6MP
kyHgLPEWvvzlQfWJ+luFZIt6Td0lWYqZI+Vq0Mnj1Ilkq+QGGqefk2t1OoCk
J9lGEyp09pb+t5AH+ZSUpdwvRmsyigJGX8lbVwh26oujM+lu6kqCE2H7P/7i
ZNQG69K3Stq4FksxqTbi4fzJh8Erlw1GO8kyJHQkI2swN5nVVWFuFEMT+SAm
WTT5jR9WFZF6XIVki3pNeUnW9S0GF+QvvrKz8fiUSVmdfgvmrxs7cXqjp3TK
gF9XrpFr9YF5d8A4U8vxdRcqHsk2Do2eZUi3bELlIlnKuBhJtrEQT8aSsrBT
n7z2f+npnqAgPa3ctiFea43S45e9cz0pMUlf7OFIz4oy6O23k2zFjNCRLCYz
cWtza62SkyMTFKtAcqlBTLJw5svHkbj+8M6So8Bwe6c3VUi2qNfULZKFC/Kj
bzRbOlKuBp1IFiL5qAn9jSSbchHl5DqriG/X7J/bWUmpblAykqwxu6+9pCyc
umne4MQdBlSCR/6xMX1xrlU66pRrkKwSHOIxc0d7ePO2EZpg7Q2yVe7gZSUP
0zArR1z6Y7mRZJnsLRiFWAPFM2YfhTq1cTzgtrEwWEkWeWXAmY+e3tm3rYqk
CskW9ZoykqzHtipnknXKLoVItnG5yzbgV8WT0km27vzxSNa1mKz8I7eSssSM
ncb6QY3pi5nUFYI+6nbLPhK80wXJUtLBBRSaYHAPxCPXkxQTHvTYsWGVkIfu
bNBIskz2FnQh65h806E/pkxMR1eb/cBcaffqNFhJ1s6qiHM5bCkUFZIt6jVl
JFmPhYGROCzydl7ykJN/Jlyx11n9oFK6STtdNGV+2jDjl3arn1LduGckWbhD
ouaV0biplJdkLeNiNCU3pi/OZW+Cv7tu1U88gmSl4KQav+wXbRDSQ3AtB+s3
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
Lv/JfI5vEpbuEwkYSRY6SLIwBEkWmSaYJJvSbF6VSkexUtqIJ+3NaxQTh37h
Yov8q0gU6tMLDiqra+WRca/KPdkcw7Li/1tJdtF1bqo8FGv93K395/T+lAFQ
/5IhrPSXKpXNWMNa8JtqEpHflOSes3SnFttia/8SY5MiyUIHSRaGIMki04gY
K/p89V98SrUpJdn0JrWmtBFPqtV4bIpbq+gXLrbJS2XjFn1KL5W7pEWbHKI9
LPdkk/O++HlxeaWVZOMOZYoMK39ZETfJmpYB1f80S6hSbtKlsipdyw+pJpFE
qVxO4iktPTCKVTFJ9Kul+xQCRpKFDpIswmXfxu/9KOzmAMGxkmzLX3799Vc/
HiWl+rr6STbphN60t2FVTByeFC62yEtl407xTe+5JB11kv8KiZbo6pN/UeLn
7Q8FizErf0WGdRxmD+aKbJvqtq1BUv/T6GxwHDD3pbKh7CRrSSOJyD3Naq3d
fusvYvjfAh4iyUIHSRYhErfu9m28dVcfdouA4AQzuzilG/Wk2S2uVDfiSW8C
oWINH08KF1vkpbJxE2UaSVZlrFBeJOttuSeZY46x9be72fAfdvOun/qX2HFY
a9jd+sWGsuGLOsUZnktoOqt7fwuxVlIaSUR+IVgNdvyjLw2FkUiy0EGShSGY
XYxME0ySTelGPdXNZG0p5cf0RsEUz/KkcLFFZdVwqs9FZbWvr4tkZbFh9lHN
/7KbV3vuXx0Z1ioPZZ9u+GimStGnpVLuyebypMKaWryYbhKRn4vjx8DuBP+Q
ZKGDJAtDkGSRaQxMsnKGirsyNJGUNuJJbxtWlSciL/9MumJXRdKlsqk+F5X6
Qn4vkpU5wmzX8X+ym/f38/8mZ9jYRceGj2aqFH1acnu+JJpgHG6tpPSSSKJt
ayiRlGlIstBBkoUhSLLINAEk2VTLK6WxmawlpTpLadTYcdz0JjrMq8LFtqTT
rVOdYZv0uQezSFYmF3SSk6z4sQJs3K8mQlyVqUil84dV7DdtjgnGduiT+2Hw
kTztJCKejvwnWCp/BXiLJAsdJFkYgiSLTBNAkk01bqSxmawlpY140tiGVbEU
rYflnixJd5VN9bkkTb7BLJJ1eP/+/S+Pb//PxrLd9XXX/o/K6Jj583JVvv1Y
ijNaY0OrY81p8E9EJ4lYlX7FkxL/u1T+BPAWSRY6SLIwBEkWmSbgJJs0biRN
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
AAAAAAAAAMBA/x/mVrtc
    "], {{0, 384.}, {631., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{631., 384.},
  PlotRange->{{0, 631.}, {0, 384.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->1320048677]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladStationary"]], "paclet:Q3/ref/LindbladStationary"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladBasis"]], "paclet:Q3/ref/LindbladBasis"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladGenerator"]], "paclet:Q3/ref/LindbladGenerator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DampingOperator"]], "paclet:Q3/ref/DampingOperator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Supermap"]], "paclet:Q3/ref/Supermap"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tech Notes"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus: Quick Start"]], "paclet:Q3/tutorial/KrausQuickStart"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus Package Guide"]], "paclet:Q3/guide/KrausPackageGuide"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->4167283]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Q3 Application", ButtonData -> "paclet:Q3/guide/Q3", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 9, 26, 9, 17, 49.658759}", 
    "history" -> {"1.8", "", "", ""}, "context" -> "Q3`", 
    "keywords" -> {
     "Lindblad equation", "quantum master equation", "decoherence", 
      "quantum noise"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> "Q3 Symbol", 
    "language" -> "en", "paclet" -> "Q3", "status" -> "None", "summary" -> 
    "LindbladSolve[{a, b1, b2, ...}, init, t] returns the solution of the \
Lindblad equation specified by the effective Hamiltonian a and the Lindblad \
operators b1, b2, ... with the initial condition init as a function of time \
t. LindbladSolve[a, {b1, b2, ...}, init, t] is also allowed.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "LindbladSolve", 
    "titlemodifier" -> "", "windowtitle" -> "LindbladSolve", "type" -> 
    "Symbol", "uri" -> "Q3/ref/LindbladSolve", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.3 for Mac OS X x86 (64-bit) (July 9, 2021)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7479, 216, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"eedea2ed-58d8-499b-959f-8e6eafbf8190",
   CellTags->"PrimaryExamplesSection",
   CellID->943075604]},
 "RasterizedOutput"->{
  Cell[157269, 4524, 103410, 1702, 70, "Output",ExpressionUUID->"8b8ed77e-9db1-4259-8df3-2a5c6d21b6ab",
   CellTags->"RasterizedOutput",
   CellID->1320048677]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 265826, 6402},
 {"RasterizedOutput", 266024, 6406}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 4729, 118, 70, "AnchorBarGrid",ExpressionUUID->"6f4703c7-dca5-4a86-afb9-9873a0d720ce",
 CellID->1],
Cell[CellGroupData[{
Cell[5339, 143, 170, 6, 70, "ObjectNameGrid",ExpressionUUID->"1f3f8c41-0296-4cc7-8622-e80ab4a70091"],
Cell[5512, 151, 1930, 60, 70, "Usage",ExpressionUUID->"99ff3910-b348-46a6-8bf6-7074226d8701",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7479, 216, 267, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"eedea2ed-58d8-499b-959f-8e6eafbf8190",
 CellTags->"PrimaryExamplesSection",
 CellID->943075604],
Cell[CellGroupData[{
Cell[7771, 230, 196, 6, 70, "ExampleSection",ExpressionUUID->"50c71e6a-1ec9-40ac-8c47-7abca3369fbf",
 CellID->1842361568],
Cell[7970, 238, 90, 3, 70, "Input",ExpressionUUID->"71600887-730a-401a-85a9-c1b89155e5ac",
 CellID->615462090],
Cell[CellGroupData[{
Cell[8085, 245, 605, 19, 70, "Input",ExpressionUUID->"1d705db8-a3df-48c0-8bad-500ea672c43e",
 CellID->383286299],
Cell[8693, 266, 1513, 55, 70, "Output",ExpressionUUID->"6aef693e-09f6-4904-a5e3-4953356c797d",
 CellID->586405171]
}, Open  ]],
Cell[CellGroupData[{
Cell[10243, 326, 233, 7, 70, "Input",ExpressionUUID->"22b51247-7fed-4565-a0a9-9df849e4e0db",
 CellID->575047188],
Cell[10479, 335, 589, 18, 70, "Output",ExpressionUUID->"f976aed5-d943-40be-8b2b-0be9b1aba2b8",
 CellID->52192358]
}, Open  ]],
Cell[CellGroupData[{
Cell[11105, 358, 631, 18, 70, "Input",ExpressionUUID->"ebf39152-1845-427a-b663-c70f88f434f6",
 CellID->1820491489],
Cell[11739, 378, 1680, 54, 70, "Output",ExpressionUUID->"d9174862-ab2c-4eac-b125-8a701b5aaf4c",
 CellID->828256374]
}, Open  ]],
Cell[CellGroupData[{
Cell[13456, 437, 217, 6, 70, "Input",ExpressionUUID->"e8686231-9e68-4aca-9b05-405c7dbd7503",
 CellID->309037009],
Cell[13676, 445, 10050, 316, 70, "Output",ExpressionUUID->"1a188f07-bcfb-4d51-b8f1-f1686c7d0cfe",
 CellID->526134400]
}, Open  ]],
Cell[CellGroupData[{
Cell[23763, 766, 263, 9, 70, "Input",ExpressionUUID->"16bea23f-c492-445c-bc70-b8c4adb4957f",
 CellID->1017770999],
Cell[24029, 777, 1514, 55, 70, "Output",ExpressionUUID->"def0ceb4-efc7-41a5-b638-100a47923fcc",
 CellID->1708343010]
}, Open  ]],
Cell[CellGroupData[{
Cell[25580, 837, 562, 17, 70, "Input",ExpressionUUID->"b3a93fdd-f7e8-49cd-bc60-0a59774b3fb9",
 CellID->766568750],
Cell[26145, 856, 1497, 51, 70, "Output",ExpressionUUID->"ada552ca-656c-4ba5-924c-49063bcbe0c0",
 CellID->575847813]
}, Open  ]],
Cell[CellGroupData[{
Cell[27679, 912, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"a73d6e47-ad65-484f-aa73-a518a478bded",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[27830, 919, 334, 11, 70, "Input",ExpressionUUID->"daf346e8-7db7-49d1-a9bf-656895471d23",
 CellID->435145815],
Cell[28167, 932, 796, 26, 70, "Output",ExpressionUUID->"54d0b23f-9bd5-4f83-83c8-4a160232a5d3",
 CellID->774245539]
}, Open  ]],
Cell[CellGroupData[{
Cell[29000, 963, 213, 6, 70, "Input",ExpressionUUID->"d8a06719-a2f5-4a94-8348-f85eea94a601",
 CellID->1196829607],
Cell[29216, 971, 633, 21, 70, "Output",ExpressionUUID->"ff22ae1a-4026-40e8-82f9-e60842ae2dbd",
 CellID->1914966838]
}, Open  ]],
Cell[CellGroupData[{
Cell[29886, 997, 1138, 32, 70, "Input",ExpressionUUID->"8d9af16a-4d24-4e4a-a92f-055a696a1f42",
 CellID->1273375212],
Cell[31027, 1031, 1913, 58, 70, "Print",ExpressionUUID->"2b95bb8c-1629-4531-8e8c-0621c81db2dd",
 CellID->625111024],
Cell[32943, 1091, 2757, 71, 70, "Output",ExpressionUUID->"a97d702d-e1b9-4c9f-85fb-f0a2a74d03de",
 CellID->713763889]
}, Open  ]],
Cell[35715, 1165, 740, 25, 70, "Input",ExpressionUUID->"3c9d8680-d3d5-43e2-8e5c-6012ac18283f",
 CellID->374788519],
Cell[CellGroupData[{
Cell[36480, 1194, 1149, 31, 70, "Input",ExpressionUUID->"806c7141-481b-451c-8b68-ff8b3038f211",
 CellID->667061092],
Cell[37632, 1227, 6490, 134, 70, "Output",ExpressionUUID->"f03d4a4d-9b71-463e-b6e6-bf30e1ab3b49",
 CellID->2118019245]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44171, 1367, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"bf517ec1-046a-4494-9f4c-425def466523",
 CellID->1586259128],
Cell[44300, 1372, 78, 1, 70, "ExampleText",ExpressionUUID->"b3a97b8e-5177-4e5e-bb82-5260b872e569",
 CellID->692904445],
Cell[CellGroupData[{
Cell[44403, 1377, 290, 9, 70, "Input",ExpressionUUID->"0b1df4ee-0e1f-4051-aba3-bc5fe4d66719",
 CellID->1425866839],
Cell[44696, 1388, 612, 19, 70, "Output",ExpressionUUID->"9ae7fa2b-178b-4d80-851a-6c461608f26b",
 CellID->1759656048]
}, Open  ]],
Cell[CellGroupData[{
Cell[45345, 1412, 543, 16, 70, "Input",ExpressionUUID->"9e35c834-ee2c-4bf3-ab5f-cb3e0c97d3c4",
 CellID->1104129648],
Cell[45891, 1430, 1822, 65, 70, "Output",ExpressionUUID->"3ec7d070-0406-4dcc-8ad0-8f5adfcd040f",
 CellID->1607835124]
}, Open  ]],
Cell[CellGroupData[{
Cell[47750, 1500, 1008, 28, 70, "Input",ExpressionUUID->"9fe16cf0-935d-4f55-b553-a97e93f3471d",
 CellID->252233040],
Cell[48761, 1530, 1766, 56, 70, "Output",ExpressionUUID->"06111cd1-2020-4d7d-ab5f-85c0bb07c2e7",
 CellID->483610080]
}, Open  ]],
Cell[CellGroupData[{
Cell[50564, 1591, 940, 26, 70, "Input",ExpressionUUID->"752856fa-5cfd-4eef-a762-38763120e9c2",
 CellID->1792714312],
Cell[51507, 1619, 127, 4, 70, "Output",ExpressionUUID->"500e1c79-847e-42ea-afba-d05c246e4d43",
 CellID->534923729]
}, Open  ]],
Cell[51649, 1626, 288, 10, 70, "Input",ExpressionUUID->"16bb1c2d-8326-46a3-b57d-d0e3a47dee0e",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[51962, 1640, 558, 15, 70, "Input",ExpressionUUID->"f1944119-65cc-40a6-9dae-f237c13e2ccb",
 CellID->1239593903],
Cell[52523, 1657, 13635, 253, 70, "Output",ExpressionUUID->"d12e3fc5-fcbb-4058-92d7-da261cfb6103",
 CellID->794832193]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66207, 1916, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"f9d284cf-b03c-4559-9768-04767a08daf4",
 CellID->1261705519],
Cell[66336, 1921, 221, 7, 70, "ExampleText",ExpressionUUID->"8b97747c-c0a7-44bb-8597-fbe0703c0298",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[66582, 1932, 328, 11, 70, "Input",ExpressionUUID->"d7a4b404-3e13-4eaa-b746-99ed67a973b4",
 CellID->427878852],
Cell[66913, 1945, 376, 15, 70, "Output",ExpressionUUID->"0b3eb9a7-bf7a-4f94-abe7-5f37b7716b0a",
 CellID->1598207672]
}, Open  ]],
Cell[67304, 1963, 146, 5, 70, "Input",ExpressionUUID->"03d424f5-7bea-48cc-907c-dacbe73f1dbb",
 CellID->1686455809],
Cell[CellGroupData[{
Cell[67475, 1972, 527, 15, 70, "Input",ExpressionUUID->"b5f7995d-0c0c-4720-9232-f4a4ea5a6e44",
 CellID->1773608757],
Cell[68005, 1989, 787, 32, 70, "Output",ExpressionUUID->"65217f5d-50fb-4a12-9dca-b027193c8a62",
 CellID->1721018070]
}, Open  ]],
Cell[CellGroupData[{
Cell[68829, 2026, 1211, 32, 70, "Input",ExpressionUUID->"e438597b-fa4d-4def-8398-1018bd0a3d38",
 CellID->813112276],
Cell[CellGroupData[{
Cell[70065, 2062, 642, 21, 70, "Print",ExpressionUUID->"97044dff-ce13-4626-809f-1d71b8b7bc58",
 CellID->520954565],
Cell[70710, 2085, 1338, 40, 70, "Print",ExpressionUUID->"47927bb4-4900-4860-8634-6803cb513c63",
 CellID->392545136]
}, Open  ]],
Cell[72063, 2128, 2107, 67, 70, "Output",ExpressionUUID->"72ec6b66-205d-4470-bf4a-d653abf7ae99",
 CellID->1720060524]
}, Open  ]],
Cell[CellGroupData[{
Cell[74207, 2200, 524, 17, 70, "Input",ExpressionUUID->"b898cd0c-0a56-47d7-b554-1b3c122eda39",
 CellID->1408697964],
Cell[74734, 2219, 813, 23, 70, "Output",ExpressionUUID->"0299a213-a26b-4fbd-91e3-fe0d2aa56ce9",
 CellID->316250285]
}, Open  ]],
Cell[CellGroupData[{
Cell[75584, 2247, 1149, 31, 70, "Input",ExpressionUUID->"40354252-a71a-46f2-9359-8a8f45d9a38d",
 CellID->743762978],
Cell[76736, 2280, 6485, 134, 70, "Output",ExpressionUUID->"dcc128df-53ae-4e9d-a571-6c03158864f6",
 CellID->653393673]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83270, 2420, 125, 3, 70, "ExampleDelimiter",ExpressionUUID->"557d0ae5-e59a-4e92-9ce4-af136cc27869",
 CellID->818700002],
Cell[83398, 2425, 146, 4, 70, "ExampleText",ExpressionUUID->"5a123459-e809-415f-89c1-8afb349ab06c",
 CellID->1536645940],
Cell[83547, 2431, 127, 4, 70, "Input",ExpressionUUID->"d19c5a5b-8078-401e-b5fe-a0eeab16a4e2",
 CellID->1470681252],
Cell[CellGroupData[{
Cell[83699, 2439, 288, 10, 70, "Input",ExpressionUUID->"87279515-f11a-4788-ba99-b1029bc4f1bf",
 CellID->963207285],
Cell[83990, 2451, 365, 13, 70, "Output",ExpressionUUID->"88bb280c-2845-4ade-85fd-5a1b03cbd08f",
 CellID->1321628607]
}, Open  ]],
Cell[84370, 2467, 142, 5, 70, "Input",ExpressionUUID->"67eca374-c221-4ae5-90a6-38340573550f",
 CellID->1701417680],
Cell[CellGroupData[{
Cell[84537, 2476, 523, 15, 70, "Input",ExpressionUUID->"74d48733-25bb-49b3-b3ca-0a8dcb4b5605",
 CellID->682224499],
Cell[85063, 2493, 691, 26, 70, "Output",ExpressionUUID->"0201598d-1e26-42e0-a16e-932ebb0baf84",
 CellID->75316473]
}, Open  ]],
Cell[CellGroupData[{
Cell[85791, 2524, 239, 7, 70, "Input",ExpressionUUID->"2d06192c-252c-47c9-9a9b-26a0423f1ac8",
 CellID->39881190],
Cell[86033, 2533, 1049, 39, 70, "Output",ExpressionUUID->"9d48deab-2187-4d07-b1c5-8c2511ce5ca0",
 CellID->540818487]
}, Open  ]],
Cell[CellGroupData[{
Cell[87119, 2577, 1193, 31, 70, "Input",ExpressionUUID->"c3ecb9b6-f1e1-464a-bfc9-7e28f213aa53",
 CellID->719143774],
Cell[CellGroupData[{
Cell[88337, 2612, 643, 21, 70, "Print",ExpressionUUID->"01197f73-c074-4fd9-a496-ae8d64fa15ea",
 CellID->1701594824],
Cell[88983, 2635, 1338, 40, 70, "Print",ExpressionUUID->"8fc9d7f1-53ef-4021-ba73-f181e2185ad3",
 CellID->664479869]
}, Open  ]],
Cell[90336, 2678, 1999, 58, 70, "Output",ExpressionUUID->"3c8632a9-341e-4e08-9ac0-841608102753",
 CellID->829277253]
}, Open  ]],
Cell[CellGroupData[{
Cell[92372, 2741, 519, 17, 70, "Input",ExpressionUUID->"f99a0a92-b4da-4b63-abe5-53447446b033",
 CellID->1210483635],
Cell[92894, 2760, 813, 23, 70, "Output",ExpressionUUID->"dddc9e8b-f7f3-42a3-a92b-5bb33169f72e",
 CellID->278233393]
}, Open  ]],
Cell[CellGroupData[{
Cell[93744, 2788, 1150, 31, 70, "Input",ExpressionUUID->"baaa89b3-d1fd-4337-bfbf-b6be07503373",
 CellID->1754552550],
Cell[94897, 2821, 6485, 134, 70, "Output",ExpressionUUID->"9112b460-6beb-44d9-ac65-5adee49b3b7d",
 CellID->411756991]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101431, 2961, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"95930dfe-0799-435c-8e44-a0790088aaf2",
 CellID->1593892289],
Cell[101560, 2966, 120, 2, 70, "ExampleText",ExpressionUUID->"1797c3fb-1f21-4e1f-b93e-3dc3c08c704b",
 CellID->210970783],
Cell[101683, 2970, 126, 4, 70, "Input",ExpressionUUID->"7ba4f52b-0c58-41ea-9188-d7533ccdccd0",
 CellID->290448684],
Cell[101812, 2976, 166, 4, 70, "ExampleText",ExpressionUUID->"abfcc7ad-282a-41eb-a63b-78d8ab90014a",
 CellID->340702357],
Cell[CellGroupData[{
Cell[102003, 2984, 872, 27, 70, "Input",ExpressionUUID->"0cd43fce-99cc-4cf2-a874-e2cc1f9ac043",
 CellID->993111197],
Cell[102878, 3013, 765, 24, 70, "Output",ExpressionUUID->"5343baa9-c5b3-46df-8575-fbf67028fd5c",
 CellID->763452790]
}, Open  ]],
Cell[CellGroupData[{
Cell[103680, 3042, 1346, 36, 70, "Input",ExpressionUUID->"af3fcc39-3fba-4a8d-a5c6-7cf146fcf4e1",
 CellID->501635503],
Cell[105029, 3080, 1480, 64, 70, "Output",ExpressionUUID->"9cc95e88-aa01-426e-9a0c-5850732d05cc",
 CellID->586120978],
Cell[106512, 3146, 3480, 108, 70, "Output",ExpressionUUID->"0e39e43a-a7eb-44af-b62d-b3c907f557c9",
 CellID->427788457]
}, Open  ]],
Cell[CellGroupData[{
Cell[110029, 3259, 349, 11, 70, "Input",ExpressionUUID->"000305fb-0c9d-4878-83e3-fd0667385615",
 CellID->1865696334],
Cell[110381, 3272, 44642, 1180, 70, "Output",ExpressionUUID->"ac488a31-81db-47b6-9898-1fd674213336",
 CellID->1676223087]
}, Open  ]],
Cell[CellGroupData[{
Cell[155060, 4457, 1387, 37, 70, "Input",ExpressionUUID->"9279533d-bb20-4aeb-9f83-a981fb14f65e",
 CellID->260219023],
Cell[156450, 4496, 127, 4, 70, "Output",ExpressionUUID->"222b7119-6bb6-45e0-b9fd-74c6c894a0f9",
 CellID->325482359]
}, Open  ]],
Cell[CellGroupData[{
Cell[156614, 4505, 652, 17, 70, "Input",ExpressionUUID->"0a5576f9-7ab6-426a-a453-e2e3ddcd03fe",
 CellID->1542313529],
Cell[157269, 4524, 103410, 1702, 70, "Output",ExpressionUUID->"8b8ed77e-9db1-4259-8df3-2a5c6d21b6ab",
 CellTags->"RasterizedOutput",
 CellID->1320048677]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[260718, 6231, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"2555b425-480f-4ace-beea-7d08d19b5cb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260786, 6236, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"9e122c26-35ad-42c3-9969-56e433201945",
 CellID->1255426704],
Cell[260939, 6245, 1848, 58, 70, "SeeAlso",ExpressionUUID->"909266b8-e206-4dc9-a111-1b7600369e9e",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[262824, 6308, 153, 7, 70, "TutorialsSection",ExpressionUUID->"bea8db74-3b59-4ee0-b435-3702cd4ecdf2",
 CellID->250839057],
Cell[262980, 6317, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"c8b935d5-0d81-4a1b-b3a4-50fa1dace38a"],
Cell[263014, 6319, 187, 6, 70, "Tutorials",ExpressionUUID->"c2c3115e-697e-482c-b062-ec5acc1da708",
 CellID->341631938],
Cell[263204, 6327, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"27b2c368-df55-4412-9b6b-9052dcc4fc93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263272, 6332, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"2d3e995f-d48c-45f1-b3a5-59bf5c55061a",
 CellID->38303248],
Cell[263431, 6341, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"106f1de9-faf3-421a-83a9-0242d98e3371"],
Cell[263465, 6343, 185, 6, 70, "MoreAbout",ExpressionUUID->"a2c3cebc-6da6-4200-b101-0a3c1285836d",
 CellID->4167283]
}, Open  ]],
Cell[263665, 6352, 23, 0, 70, "FooterCell",ExpressionUUID->"f32d3231-8a33-4a13-a9b0-4ea969f005b6"]
}
]
*)

(* End of internal cache information *)
