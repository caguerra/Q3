(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    439614,       9362]
NotebookOptionsPosition[    423126,       9018]
NotebookOutlinePosition[    425737,       9081]
CellTagsIndexPosition[    425613,       9075]
WindowTitle->LindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["Q3 SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "7b9e757b-d323-4398-8b00-6bcceca2f009"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "fa693d91-8d4f-45f5-aea0-177efe7c0831"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "913503b9-d998-4309-8be1-131514a00d9c"]
         }],ExpressionUUID->"0ddd9f1e-9ced-4729-9b28-ab8811d1d8dc"],
         StripOnInput->False],{
        "\"NLindbladSolve\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/NLindbladSolve"], 
         "\"LindbladStationary\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladStationary"], 
         "\"LindbladConvert\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladConvert"], 
         "\"LieBasis\"" :> Documentation`HelpLookup["paclet:Q3/ref/LieBasis"],
          "\"LindbladSupermap\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladSupermap"], 
         "\"DampingOperator\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/DampingOperator"], 
         "\"Supermap\"" :> Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "277d2790-4674-4b33-bad5-fd51f6d38f8a"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "ad167dbb-a09d-4b49-a05b-a21f5ae273a2"]
         }],ExpressionUUID->"5f424ec9-b9e1-4070-8254-55e882917f84"],
         StripOnInput->False],{
        "\"Dynamical Process of Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/DynamicalProcessOfDecoherence"], 
         "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "817325a0-ea60-46e8-a475-7be4f4a01dc2"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "3ff7a5fd-1361-4e05-8ff1-54e63ee20270"]
         }],ExpressionUUID->"ff52b13d-6895-4032-b565-bc68dcf99824"],
         StripOnInput->False],{
        "\"Quantum Noise and Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"], 
         "\"Quantum Information Systems with Q3\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "e8d149e0-f88f-4460-a0a1-7d29658a7453"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "a9988fe6-e3b7-4bab-85e4-fe2a887802c4"]
         }],ExpressionUUID->"d17dcf22-4fb9-4c65-943f-94072db239e0"],
         StripOnInput->False],{
        "\"Q3/ref/LindbladSolve\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["Q3/ref/LindbladSolve"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/Q3/ref/\
LindbladSolve.html"], StandardForm]], "Input", TextClipboardType -> 
                 "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$25858], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "Q3/ref/LindbladSolve" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "bc513af7-7620-40e0-9f3d-4fa2b6f9a3db"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "0f837536-35e6-4c3f-b0a8-1f4d03524ee4"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"da87cd65-2055-435c-9c16-d93fbe9fcce8"],

Cell["Q3`", "ContextNameCell",ExpressionUUID->"3fcca4fe-8151-4600-9612-bb9a9ef8a89d"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "LindbladSolve", "ObjectName",ExpressionUUID->
      "00772782-8a38-40b5-8ae7-71ea5baed9f2"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"a484d1dc-670d-4412-9a87-9880b4018029"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "39da997f-069d-4ab6-b2ab-ea329d16b662"]
    }],ExpressionUUID->"d09dff54-fc92-405c-ae8a-54cb79db9600"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"59fc2ee8-1715-4f51-8d6e-\
64322b2dfbe3"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c81af390-8fbc-4af8-a16f-0617af39502a"],
     "\[LineSeparator]returns the solution of the Lindblad equation specified \
by the effective Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9d12b857-253e-4e85-a216-d81c0d4326a1"],
     " and the Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9cb55753-fa56-41f7-b082-67c38abbeedc"],
     " with the initial condition ",
     Cell[BoxData[
      StyleBox["init", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "013934af-f6d4-4e58-8d84-c117ac33084b"],
     " as a function of time ",
     Cell[BoxData[
      StyleBox["t", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6eee2709-3257-4696-a333-a338eacc1aa4"],
     "."
    }],ExpressionUUID->"cba46cda-684e-44be-8f0f-390f32d8bec0"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "55ef1eda-440a-4543-bce4-1fdbcf0e219a"],
     "\[LineSeparator]is also allowed."
    }],ExpressionUUID->"ecc1a339-c41b-43d7-aa7e-a4f4f18e05cf"]}
  }]], "Usage",
 CellID->982511436,ExpressionUUID->"36d294c7-65ad-4677-b95e-6ff5e6e47ce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"fcc8d7f9-4772-4714-9d9c-1fc320058b28"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"a1f807b9-a84d-40b9-9398-80d6f8a0d6b1"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"b300193a-f8c5-415d-b4b5-b1e09a55dbc7"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"61c058fa-84e4-4291-ab88-ae3abc2243f2"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->1584149751,ExpressionUUID->"54a5e079-c64f-4979-96e0-1d9aaef08bdf"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladSolve"]], "paclet:Q3/ref/LindbladSolve", 
    "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "65cb29c4-a593-492b-88d4-425032d37a70"],
 " tries to find the analytic solution to the given Lindblad equation. It is \
convenient for relatively small systems. For larger systems, it may be more \
convenient to first convert the Lindblad equation into a set of first-order \
ordinary differential equations by using ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert", 
    "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3839b5c3-6076-4438-bb8d-4f57f6ef157e"],
 "."
}], "Notes",
 CellID->1067943069,ExpressionUUID->"f9730bf9-a3df-4498-9028-b1614e86f36a"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
    "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f8b4ffa3-5ac9-4c08-8049-271eb76cd40f"],
 " to find a numerical solution."
}], "Notes",
 CellID->94066822,ExpressionUUID->"251087f2-fd62-4dac-933d-18d6a0a1a408"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "d68fd55e-583f-4afc-a1b3-528b3b519f69"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"d5764cc7-c0f9-4438-9382-e8de6b071483"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "c3495da5-77b1-456e-9912-6686c0e6507a"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->302609551,ExpressionUUID->"8b8db0cf-8aa1-4d4d-a80f-4e891e92080e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Q3`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1927565408,ExpressionUUID->"f5966dca-a897-4aa4-8bba-5576f9eb69d7"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "b193b3d5-ebaa-495c-bd43-76d2357b0fea"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"d9b2976d-2b15-4500-90da-43093c366657"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "e593e7a3-a986-4390-8429-cf4ebf3a13d5"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->717447561,ExpressionUUID->"89131435-4bb6-4883-8aa0-4149a421c58b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->383286299,ExpressionUUID->"b62c2195-8339-41f6-865e-365f91973a9c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"3"},
          "RowDefault"]],
        $CellContext`x[3]]}], 
      RowBox[{
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"x"},
           "RowDefault"], 
          TemplateBox[{"2"},
           "RowDefault"]],
         $CellContext`x[2]]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"x"},
           "RowDefault"], 
          TemplateBox[{"2"},
           "RowDefault"]],
         $CellContext`x[2]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"3"},
          "RowDefault"]],
        $CellContext`x[3]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1154473629,ExpressionUUID->"82f38bd2-e9a8-4fc3-8095-8f85ce0dcc35"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->575047188,ExpressionUUID->"1bafd019-044b-48fe-acdd-7170d5e4c3e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->2120707895,ExpressionUUID->"82bf233f-75fb-4459-b081-e98339931a83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1820491489,ExpressionUUID->"5873a3e0-7ec1-4cc1-9f91-cfc0df3fdee5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]],
          $CellContext`\[CapitalGamma]["+"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]],
          $CellContext`\[CapitalGamma]["-"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1239799508,ExpressionUUID->"c0b5468d-b5bd-4d82-853d-6884796f9a58"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
  RowBox[{"LindbladSolve", "[", 
   RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->309037009,ExpressionUUID->"eb8ee413-e792-495f-9212-8f0a441a15a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"-\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"+\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"x"},
              "RowDefault"], 
             TemplateBox[{"3"},
              "RowDefault"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["+"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"-\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"+\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"x"},
              "RowDefault"], 
             TemplateBox[{"3"},
              "RowDefault"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["-"]], "+", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            InterpretationBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"\"-\""},
               "RowDefault"]],
             $CellContext`\[CapitalGamma]["-"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "2"]}]], " ", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            InterpretationBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"\"-\""},
               "RowDefault"]],
             $CellContext`\[CapitalGamma]["-"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "2"]}]], " ", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]],
        $CellContext`x[2]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            InterpretationBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"\"-\""},
               "RowDefault"]],
             $CellContext`\[CapitalGamma]["-"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "2"]}]], " ", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            InterpretationBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"\"-\""},
               "RowDefault"]],
             $CellContext`\[CapitalGamma]["-"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "2"]}]], " ", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]],
        $CellContext`x[2]]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"t", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"-\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"+\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"x"},
              "RowDefault"], 
             TemplateBox[{"3"},
              "RowDefault"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["-"]]}], "+", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["+"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"-\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["-"]], "+", 
               InterpretationBox[
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"\"+\""},
                  "RowDefault"]],
                $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}], "-", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"x"},
              "RowDefault"], 
             TemplateBox[{"3"},
              "RowDefault"]],
            $CellContext`x[3]], " ", 
           InterpretationBox[
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"+\""},
              "RowDefault"]],
            $CellContext`\[CapitalGamma]["+"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["-"]], "+", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]],
           $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]]}]}], "}"}]}], 
  "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1765503414,ExpressionUUID->"35a1de6b-b58a-4199-bdd7-b854b43f51c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "0"}]}], "]"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1017770999,ExpressionUUID->"f88c023b-be1c-443d-9bf0-1d5884e4bf07"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"3"},
          "RowDefault"]],
        $CellContext`x[3]]}], 
      RowBox[{
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"x"},
           "RowDefault"], 
          TemplateBox[{"2"},
           "RowDefault"]],
         $CellContext`x[2]]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"1"},
          "RowDefault"]],
        $CellContext`x[1]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"x"},
           "RowDefault"], 
          TemplateBox[{"2"},
           "RowDefault"]],
         $CellContext`x[2]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"3"},
          "RowDefault"]],
        $CellContext`x[3]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->1113541748,ExpressionUUID->"9f7c083f-961c-40b7-ad1d-2dbf9dc3363d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ">", "0"}], ",", 
        
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], ">", "0"}]}], 
       "}"}]}]}], "]"}], "//", "Simplify"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->766568750,ExpressionUUID->"a220232c-3e9b-4725-b7ea-cc78e6e6ead7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]],
        $CellContext`\[CapitalGamma]["+"]], 
       RowBox[{
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["-"]], "+", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["+"]]}]], "0"},
     {"0", 
      FractionBox[
       InterpretationBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]],
        $CellContext`\[CapitalGamma]["-"]], 
       RowBox[{
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["-"]], "+", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["+"]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1771841320,ExpressionUUID->"a81d6ac3-947e-40a1-ac4a-d64cc8823656"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1aa4f546-624a-4b77-91cb-fff8ee10b629"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697,ExpressionUUID->"a85f5556-69b0-459d-80f2-0f19331365f9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->435145815,ExpressionUUID->"9d5bb9d6-e9a7-4563-9896-51ed5603c463"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->834938680,ExpressionUUID->"2eadf139-ba04-4f5f-b4b4-2ebbca069f9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1196829607,ExpressionUUID->"a37b5f97-b656-4d8d-af6c-4a189ed4dcb6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Output",\

 CellLabel->"Out[2]//MatrixForm=",
 CellID->2044754869,ExpressionUUID->"b5b7c295-d243-4a55-9e4f-48e927247fe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", "opH", "}"}], ",", "opL"}], "}"}], ",", "1"}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1273375212,ExpressionUUID->"5941bdf2-d531-4ec5-b935-8d3956389664"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         RowBox[{"\[CapitalGamma]", "[", "\<\"+\"\>", "]"}]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         RowBox[{"\[CapitalGamma]", "[", "\<\"-\"\>", "]"}]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[290]:=",
 CellID->1593888076,ExpressionUUID->"eee71c58-c910-4e44-9ebe-f444f1dc41e1"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "-", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
      RowBox[{
       FractionBox["1", "2"], "+", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->765880654,ExpressionUUID->"166eb8b8-d305-41ee-8182-8d940b47ce2a"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->374788519,ExpressionUUID->"0b25324e-34e4-4cf0-874a-3dc9976be282"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->667061092,ExpressionUUID->"860f0568-e42e-4cdf-acd1-745301e76be4"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AtU01UcwHFe4y1vEcdgGyM1QkUoDkR2f0SIhDyTBIQOJqCRxEspXgIL
LGYwkC0IejAIUCgFJV7lBjFAQEgOEo94igfEeLZERqQ59/N3zs7O//zv/dxz
vndnzA+i/cKVFBQUwp99ZN8v5slT2ayQ4q9l00xy19a0LYeW8LmbJIqdw4/U
PCSv2slmkCz+Pq8V+sscvh8lUWmh4cNwj8i1aXIpmGVnszyG62cJ77qAZrlv
gJyKkM0ccQuzck27IsT9C2Rgzi9ZoskT9d2WzSLhN+l/bHbxN5HcWyVzUZlN
kbvviOTr14hvlg5X0jIkkvsSUmrVsRo7N4r7/yERDaYClmBcJD9vnVTrm9/Y
WJtAb4MEVUjz+pYm0JMSx3dO58PP4+j9S3oEjxVd4sbQ2yKffs90y/IfRu8J
WX/3/N7xgkH0FGCmynX6XFc/rleAHG6uev2jDvQVYVki/iLJpgX3K8FQ8pga
b18ZnqcMcQFHCgq3irGfClBV+JRd/fVE7qmA3yTDRjGgFXtRIFfU6c/T7cCe
quBWIr4sSbqFvdXA+rpg4uxXPeipg3XhObrPmV701GGGZR9636AXPQ24anbn
s8vV3ehpgnXNI87c8S70tEB96Zp7yFExetpwoHAhc1bcip42lFn9GekubEZv
GyxSHa+ZVNWhpwONemcPtR8sR08XPtJM9Q+MTUNPD046D25JXuZhHz0IoVkH
CoMqsace5OnwjePdakXPt9vpg0PF5tLhg/XYVx/Wb2efuKvYiPdhAO6vJdbz
+E3oGcCGaonAldKMngEo1abdP3C6CfsbwvCwpM55sgE9Q9DIMqiayqlHzwge
0D8c7xPUoWcEpVGJUkruj+gZQbVlvKe7fwV628Hhzc1a8XQJetvhAkWq5iji
oGcMvrtT3r/BscU+xhA5ldBqezgbexpDf0C6YaNXIfbaAUneF29mKJVi3x2g
z29MCfYqx34mcNe0aKSFXYGeCQz9FbOQUF6JngnkRXr/tEdUid5OGOvK6cpe
qkBvJ7z1Ro9rmecP6FFhxf6lpD+Uy9CjQv/+zsnR6O/QowKby3dw2VWEnikU
CfOn6lLy0TOFdalQVYOdhR4NOnvuZVxdiEGPBnTqyXRWTgj2owEzm8yrGqVi
PzP4tcbIZa/4c+xnBrSHb1OC9nCxnzn4pQyOpHtcwvswB23bIe8F5Rf/H+bg
Izi2/KCdhx4dwsTG6RElPPTooNj2upNlWQF6DNgmDXDQWs/H3xcDXPhN0rY4
LvoMyDv/n/djJgf3M8BrBoZ1XDPxPAbw4kdUGjxS0GPCzLHeb6oMY9BjAp02
0lOa6oseE/afmDHxKAjEXkwIO+T0ZVFbNPZlQpJZMGd+4BPsZwGraS3Jt7TO
E7lnAf7Rm98+dcrAnhbgKYzsOsNho2cBjrqp2TelbPQsYHHUtLu2mI0eC97b
qswRZmbg/bGggKVtrXIlDT0WhP1dR33laDJ6LOBzo4/PeiWg9+x5ZTy2fSIG
PUvwqeTZn7oQQf4HRVrHfA==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nkwnGccwPFtIkgd69rNWte+lnSaaaNIiGCfnxiNkExKHBFXUJEw0Y0y
utImVNy1krriSAZtkGpYMWkcq+uIESrYUK04Q2wZOkUSdY20ur/809/MOzvv
vM/zed75vksFf+YeuoNGo4X+e23//n8KC7angbCnppnxHz0m8vsucoEuel8r
c4gcsNyeATJoMOt/lT2Bz4dJrdDjktcvU0SuTJLdTZ7LKasvcP00eTqx0O7N
kpGwc9sjI0Ihxeo7JMP9c0Rh6X7xPH+GPOnZngXS+CbO6PfxafQWiaPVySuK
5c9x/RIRdrl0f/1sDP2XpM+jl53b8Bvuf0UCrSz5ZjZSPG+FBDcPZq64dKC3
Sg4qJ0VXaNSit0acTAIDB0YKJXJvgySIvQTrr5skcm+T7LuTeydWqVMi97bI
6AkL2eyxXglmA4kgdyZeKsX1NPDZSONpJw1I5P47kK3XYtrnNIj7dwD9+IqW
KncQz9sJJ/lxQ0OWA+gpQOEom+ac+9ZTAM4P1j2p0l70dsHe0osDsd93oacI
1syMr5YW2tFTgsq6RXc7WRN6yrAiLvlcOl+DnjKMWSraqNO/RW83mNAbUuNY
N7HXu+ASq3TPtqwa+6qAht13vvf1HmI/Vfh4+PSq+uFm7K0Kvnw1yVx3C/ZU
A/3oT36NZrahpw5/7mo5OJTShh4djs4+WuCZtaGnAUVRolMCbiuu14C/XSPO
NNIk6GuArsi1OLy7kfy33VITom5ofeEme4DnacLmgll5ZL4IPS0YTyzpD7Av
R08LHuYblKtO5aGnBT8eOv7kA98QfB9tKLUylNSaX8ce2tAVytzLMS/Bfjqg
4t3faTpWjr11wGMta7h5vQp76oDYPSxZ5XIN9mdA3/qntDKRCD0GRJ51uxk+
KUKPCTyRtXKavwg9Jhg7RwakflmNHhMcolvPcg9XobcHHDS3KN7+CvT2wATX
evFRbhl6LJjnhaQp+BahxwKLxxUF/oE30GOBpMmvrlF4BT1daGdE/GRb5I39
dGGYm3G35FQi9mNDADVV31p9Hfux4aWp6VKO39t+bBAYyqp8Cgqxnx6IXb2Y
sX630NOD85QjI+DebfT04cg+m+4HpbfR04fgYt5ryvcWevqQkGYx2a5QhJ4B
dJ0RmOf156NnAEGBYxfbXmWjZwjDxyrSWO5Z6BlCpnfxhSHnZPQMQWozk1gU
EYeeEVw+L8zaPx6EnhG4htqdC9vyw34cMK9izh0tiJHI/18coGLysx1H4rEn
BypPvMkJr0zC/hx4bqLt9B6Vhn054BZBT1c7koEeBZy/0umTjG/QoyATnv3c
WZeBHgWCq35iK/t09Cgo84xszRlJQY+CCG2+0tPma+gZQ2mHtfUmIwE9YzAy
jbEf/TAOPWP445p4K+DFJfSMoX5xmedzOgQ9Y7AX9Vn0J9ujx4W1KBf/ep4n
9uGCw/LOMGfTMOzJBaltT8fdDj724oLsQA1/oyca+3Ihr1oThEWx+D1MIEht
utjMQkD+AYpHtsE=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlMk3cYB/COAYIgcrRY7h64i2PjmMdg+z0KC2McAs5BFAhDjhmiDB3I
3BAYbhYQy91WXJBMso1hFFQcSqwTkKsyS4G2YUNLEza8gEikXGUyf0//2Dd5
8+aX9/l+njdvXm5yZkyqEYPBSH1xrd3/nzOStbST6EfjZTvzfpS+PPeRsJpH
MX8JW6X+fmtRkDmy71hYyXX6XE2utbDivTW3pC+VB+Tmn5dNPtrcRee1pCYx
58k9hx5petpaJonRdGTGvjt9tD9Faov0n/3uI5Pela3lMdlldUf2bvIg9WbI
CcX1qCbve3R+lgzPdYvYTDn1n5EcXV15i1ZO+3MkvbHHrbh+iO57TlIGrE4V
hCqopyPeJ0t2hWkV1FsgfZ+mHzlyaJh6S8Sv5WhhwuNh6i2T7v7LrPDEEerp
ycq6Afb+7hHqMcBy0rK5iTdK5xnQK9o8aHN0lPqvgGPAl9IvOkdp3wh2ljh5
lpop6b5XwfxcHNc2REk9Y9BHuCsa85XUM4bpkF+2KFuV1DOBG7Km7Dc1SuqZ
wnRS1Qd2FirqrYP4BsHc6jsq6pnBQpDwdtRuFfXMoHp7QXXCYRX1zMHibrgu
+7SKeuvh0tTQlOYn9CwgrzusdOImepZw7isvWasCPUs44+TBEEyitwH8t4+m
V86jZwWklzSvmKqptxGmPh6JnGWqqWcN2i6xVQVXTeetYYuyLWjFU019a3ja
lOq7e6ta+l/dzwbmVx7suQBqus8GnLKCzvND0bMF4ZOHAwNR6NlC3UGTjPZY
9Gzh6dfDO/QJ+D52MObzRlLTfvTsIDHg+0jZ5+gxgRWd5pd1ED0mXBRq585n
oceE+dVtsYez0WPBs4xYtjYXPRa87z1mxvgGPXsInm7gyY+jZw8rXu/9kFCI
nj3oppMYzUXobQK3hQ7/29+htwmiDhhVNZ5Ejw23ihtn9xajx4b7E6RlsgQ9
NkzE9/SEn0LPAYZeu9JfXoaeA9SlvK27eho9R7j0VjKRCtFzhBnrxZCL5eg5
wlD981xBBXpOIDSR68Mr0XMCgWqDXF+JnjNoPEKu1Veh5wyS+zcifKrRcwbm
WKb51Wr0XIDT9XeAZw16LhDaWWwvrkHPFRaWf72wUIOeK+ytjluKrkXPFf6J
GNQ01KLnBqYBXV4Pa9Fzg8WAHLGHCD0OrIry+9JE+H9xICdDEHdWhD4Hcrf1
D8pE2OdAYl7mzzoR7uPA8oh8D0eMHheko5LAYDF6XHAr6vwtRYweFwYXi12+
FaPHhQPtgW1nxehxwaGU0XPF4PEg3/14Wb/B44GvS8GOcYPHgzZNIWvG4PFg
db3PVoYEPR4Yp0/8YSVBjw8e40vGzhL8PnzQBX+ie12CHh9iNpb0+krQ40NH
Z3RFoMHjQ+h8R8aHBs8d4gXHDkW8OP8Lnjr6ow==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.46789376727999843`, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1206872817,ExpressionUUID->"fc74efe3-2225-4829-918a-a936e18dc78c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "5e1e5119-6905-402d-bdb0-f2ef83eb3dca"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128,ExpressionUUID->"d74132c0-0536-41dd-b2a5-3c526818dbe8"],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445,ExpressionUUID->"972e2169-e096-45bb-95d9-fdcb5f078ace"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1425866839,ExpressionUUID->"8c95e3e1-b94c-454d-a470-7cd9f2e7d4cd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1221683199,ExpressionUUID->"6326f8fd-40a1-467c-b615-3cf930669a91"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1104129648,ExpressionUUID->"881c7ddc-8630-4d22-9ff3-b27a71037425"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], "0"},
     {
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], "0", "0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]]},
     {
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], "0", "0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]]},
     {"0", 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "1"},
         "RowWithSeparators"]],
       $CellContext`B[1]], 
      InterpretationBox[
       SubscriptBox["B", 
        TemplateBox[{",", "\",\"", "2"},
         "RowWithSeparators"]],
       $CellContext`B[2]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->499592057,ExpressionUUID->"f03e0cb4-cfea-427c-b46e-ca46f9ad606f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->252233040,ExpressionUUID->"0d1540c8-7744-441e-8f21-75d4ba78f17b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"+\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["+"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        InterpretationBox[
         SubscriptBox["\[CapitalGamma]", 
          TemplateBox[{",", "\",\"", "\"-\""},
           "RowWithSeparators"]],
         $CellContext`\[CapitalGamma]["-"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1388630669,ExpressionUUID->"370b349f-b6f3-4b06-9b31-6fd48e255f39"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1792714312,ExpressionUUID->"975a1b30-91b2-4f18-b660-3c615aa01da5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.952878`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1668984482,ExpressionUUID->"97b31409-7c62-4ba8-8db1-8f0c897345cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1112511420,ExpressionUUID->"0d223633-c3aa-465e-8995-928b6fa506eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Chop", "@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Diagonal", "/@", "data"}], "]"}]}], ",", "\[IndentingNewLine]", 
   
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1239593903,ExpressionUUID->"2357a509-eadd-4783-a634-b10d4d1d5ee4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1: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
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd1nk41OseAHDrJOsYxlhmmCVdtKgolM77bbfV7dEthaPOibQdy0mpJ53I
aDsq6iSdJHGupaiO4YSyjjUztkrE7SSOaGGqySHUrdv3/ef+nmeeeebxez/v
93m/y0vwfah3kJqKikrD58+X7/9/fr345ckhKo4VrcsiAsnX38Wk4rGE2eUh
Jo4OXx4p0drwaWTX4ST8ewOpaGOoxp3LIF+VFuK6Ytr6utI8fP8+SYssTxnM
KyDB27487SQpx/ei38cSXN9J1sy8ZvxjQwWRy7483eQAN/zAM3Y1ek9Jt2vd
pxvL6/D9HiLWsfX2cbqHfi9JA+a3Xa0yXN9Has132LSMN+F+/UT4Vp+btbYF
vQHyR/Hc2R2dLegNkuK45gE9dit6L0l7vHtQv0oreq9IpTRgD+tKC3pDJJuT
l3hwoBk9BbFsdSzNN2jC9xXkbOirsl/qGtF/Q6r3vnJRs2nA9W/Jax2z+6Oe
tbjfO9Jf+Ht/1FopekrSVj0nNnwdPQ8luaX4RvdhHz2v90T2TVfu1HOF6I2Q
obUTxWl9t9D7m3x7oX6Or8419EbJJd/9s7kOv6E3SvSJsZ7HnjT0xoiSd7Jd
1noZvQ/EY3C79lXHK+iNk9zYhkVukenoTRCnuKnMR5uy0JsgnhMW51haN9Cb
JD8d9rH2tpCg95FoH+QWTNbcRu8T2dJ9lqfedhc9FVgf7KZvpFmJ76tALRjG
GKRI0VeB0zPU6rYa1ZL/LXdQBbnBclcL73rcTxWyLhg6P15yDz01uMRcIr7T
3IieGqStdPLUek3rQw1klZM/S8/IMR518IkcGlWXyNFTB0lmvK2Zjxw9DchK
kE8/GCNDTwOKbaKj4lwb0dOAzC6FruqFBvQ04WDivpaYDFqvmiCbNA+4ElmD
HgNCrq8WM2dI0WOA284/PSTtNN8MSDiW2WLyj1L0psDp3MTxI++K0JsCH5/1
JvuSQvS0ICKs22pwbj56WuB16Jgq79FN9LRg9D3vk9pU2o9TIXDfksJmTi56
U8HrZfzmi/p56GnD3QX2Me/6bqKnDc7DW6CA5KOnDc8qgno2bSxETwf2hiXp
PeIVo6cDpfHK0pc7S9HTBUWexc1kbZpfXfhLUPp4eyTNry5slDpEz+6rQU8P
sh/pz9jgQvOrB0+OchICttD86oO2OCqseDnNhz6MZD7vTHogR08fbuQIB8+q
NqNnAGzT1T+Symb0DCDEJsmpikHnARMi9E2r7vc1Y30xYXePMnu2RzP6THgQ
qsGeXN6E65kwPWHucNFTWk9MWLBrj3b4zEb0DEHkl8m2XdiAniEIRRsdeZZ1
6BnCrrED7xWvq9EzBBfXFF5beRV6hnDoVqQgOacCPRa4zcrY03a4FD0WjL2c
5dNlV4IeCzztMyLmRdxGjwXpOzaeFu0tRI8F2ukMWTgpQM8IlIG6scXdEjwf
I1gnSuVOX0PnsxEs2BPk9FN8IXpGsH8kIl98/DZ6RjA6cPJ9zowS9IyhVzIj
W3MTrVdjmO9fZLkqsgI9YzCNjbsFW6vQM4bBUx0Q6V+NnjGEaMWX56ypRY8N
vcMr9vOm16PHhqJ7hfVBLXR+soH1S8cZ7mI6X9mwbm6CnTiA5oMN12xd6nTt
aP+awPx6Dd2iZNrvJvCvzeohPlly9EzgeEaUecYG2v8mIJZLB22uU88EtnzX
u8M4j+aXAy/E/OS2YHr/cEDdW9Xz/GA9ehzQmGdx6s5S2v8cOJm62N46rgY9
DtSU5Kfsl9J5bwpP5wgiv2dWoWcKgVovctsP0fMzhTWnZjkVOpehZwpbTi6s
LlPeQc8UboQo0oNW0XyYAd968wvTpcXomUE5M4yxb7gIPTPwcLwb8MKb9qsZ
qKfZPE3dXoKeGUgvRZ7Js6bz2Rwm/zPqm7q/DD1zUAZtvsf6N43PHDKjskf1
CM2vOZwdZ3R6f6D9bQ5VpxQ/lNXQ+WcBL6rkJ7LP1KFnAZzxfT9dWEnzawEP
WIptis576FnAD+JjnMsLaT4sQHV3rctVP5pfLhx7LL6fPK8JPS6kfKe6y6KI
3v9csLIeMFcZoP3Lhb9yemZGV9L7mgsf84LsnFY1oceDpgL3ApXDtF54MFJZ
31gYTucND+xtBg7J7Gj98aCdBE95crsBPR5cn4iNNrWpR88SSn7b0Hv1Z3rf
WwLDklv79m01epZQvrgg2D5Eip4lWCdU5sXp0nlgCXvXtIQnddF5YAXnx3ve
/CkvR88K/hgy2Lk4tAw9K4g13K36e1YpelbQne3w9OShUvSsQE3Te2GLgs5n
PuTbvpnmNY71ZcaHzG0fboa6VeC84YNyflSW5trKr+u9+CB1N5qy6UQV7scH
l9iLlTHPsZ6j+WCbPKVxpX8N7s+H1Jk6zvkdeH9L+ODf2bb1+up6jOfz+7kh
ioRczH8/H/YuSDoqe07nvQAKm54f832H520mgNhh01CokWF8AqheJtzwej3O
fy8B+Du7qsek0f4WgN3RJwMj6Vgv0QKY6B3Lcgig/S4A6474NuVD9CQCCJMG
dmUwab0JwHvVuqX6HPx/ol8AJX5/mzCUDRifEJYz2A+HJHhfmQnB/fhuv0WB
dRifEP4Zq3B/xqrF+IRweaHejiY5zb8QwrYmtK9Np+cnBMsY4flfU2g/CeHI
uLJqaV0lxieEJxu97Z/YYT5kQmgLcvTMlWM/9guhYKz6tL+E1osI6lv0Qoa6
KzA+EaSOHunLdavE+hFBZmKieMVbmt/Pv/nOPWNtNL8iOL1s2HKwh8YnggMd
s06EGNP8imCU07soMQDrWyKCo0WOXtGSOoxPBPmC6mATBs2vCDy2dl3d7E7z
Ow2K/OZzueGN5L+pUF8d
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxV1nk81OseB/AJ2WkwDGMwi5JuqWg5afJ8nbQe5RzpqttCiJTqRFocOYrK
ReV0W+icpE1HioqkeGm5iBn7PoxlZCkhlSzDyanb9/njPq/XvOb1e83vef8+
v+f3/T6/4Xvtdd2uxGAwir98vn7//xgglxK+jhTyKo1tWLPvHR4/Jin/imR/
uNBP5tl9Hf8lMz9EBA7v78Pfi8mF4NHOmQa95JtTQXbYJCpWhfTg+dXEunS/
ZGbma+Ln+3XUkcTKrtYoSRfOl5K44EF+nKSDlJZ8HTKS8O7TzISn7ei1kSO2
w46FD9rwfDnxKMgVeXo0o/+KLPI9dWx2uBTnd5Ac5qecpdJavF4XMcr47rro
cBV6r4m3b0lZcH0Zem9I1Lrz010Di9F7S0R3NUQrS/PR6yVhvfItar3P0Osn
uo8D9qjE5xC6bq7jZ6t6irPw/AHC/KHtAKzLQP894Rb0nVujdx/nfyA+CtvG
tVnpeL2PJEDP9GO2Wjp6g4SpYM33eZyO3iCZURLE3vzoHnqfSP/3OmNGr6k3
RETFSzrOrMhAb5jYNDSWnMjMRG+EVK2O2WlqSPONENXelKhs90fojZJ4waHO
80HZ6CnIJWKkU7rjMXpjJOlCmJ0SPEFvnPi0JB1J1shBb5yMHDy/rlmWg95f
pMrjJVO/Lhe9z0RwpvzUWsM89CaILnkUtD33KXoM6GcoHz42RNeXASdrryZ5
e79AnwESifa0VNt88r/pdpPAtt3twKa9hXi9SfCb2pMF3bxi9JTggF8wJKwu
QU8J9j5v3jb9bTl6SpBxaGX5ks+VmEcZZMrC2opFNegpw8ZZh/lhSXXoqUB+
+krF2ulS9FTAK9nVZ1dBE3oqoFis4hi8swW9ydCzONA9JJLW62QoCP6c+7pI
jp4qjMxzDOpRtKOnCiXsLF+2Aa1/VUgWSvaFanaipwYN1+/EShs70VMDf/PD
lo1hXeipQ+LovH3LPnShpw46y70+Wtp2o6cO0xan3WwVdaOnAWaNV9tW6nej
pwHOc439r2VQTxN8/wi/+puQepoQLU1wU/ftRE8TtPS2aQjCO9DTAt+3aQ7D
B1+hpwXKHtPX7HCj/asNrHaTcTlXjp42BHqtMBM9aEVPG0ROxz3z+bSfdcDJ
xcHr14uN6OkAO4LRfYffgJ4u7FZaHG1fSvtbF3yzhcu8b1ajpwsDN99P25ZB
n+8UuPYiMNtvvBy9KcANGbg4xipFjwlJnnfc3meKsb6YcHHpwjdKsiL0mSAO
/el58PGXOJ8JIUm8pqg/C/F6TLDxyh9SXVSInh7ILO+tHrIqRE8PEn+uEW71
KURPDy4fuWjCkdH61YPGybGGD0JfoqcHArteT5t5Rejpw5IHqfNb3xehpw/2
u0M+TLlVjJ4+PFQMM66sEKOnD/Euovv7xWL0vhwnvMiusZagZwB+B26dP+kt
wfUxgMOsc88bD0nQMwCpjsePh/ZI0DOAlWlMkbGzBD0DOHa02XoKl3osmNiz
teppjxg9FiRvdtjyqUCMHgvevznbPiuX5mOB/sZnUlkTzceCsL+aj961pZ4h
bGRzoLSE5jOEDvux08syaT8bQtvO+TsDBkrRM4TA9pez9h2n/W0Ic9/+6D75
SQV6RrD1XsfoDRmtByMYjLmTs8qqGj0jOGVkfL31HO1/I8hTY3ilm9ehZwQy
Xk7q2dx69NigOL3r3cLtUvTYcNTQRhKo24QeG6wbonQu3JWhx4bfXRfmVi9s
QY8Np+c92nLlWit6xqAb9cpdLbANPWPIjd4ReWm0DT1jiO4b7LP3kaNnDJ5t
ypc60+ToGUOUf1ZOWD3dX0zgio7nrE6ZHD0TuH2mTzyeR/vPBGp+HfspPYx6
JiDbZCV5ZUY9E1g7R9EccKUNPQ50iHXE/ao0Hwe0XE4IQu+3oMeBgBOVq362
a0aPAwnbX5DZiXR/5ED8BofwmHEpeqZwg+NXuX5jA3qmIIjoHZzIq0PPFDqm
TZx0WliLnim0WJStrxfT/jYFq365Ev8ofZ9zQf3h0BF1T/p8uRBXvlS/ZFcF
elz4pSTldt0a2v9cGLE+Ne5kWYYeF5wexKj3b6D7gRlcKpu7K6WrBD0z6P5F
6U5QAa0/M4hcGnGsracEPTM4rjx36rXVpeiZgejPg3KLeuqZwy+fyx8aHitD
zxzi5P5eC5aUo2cOmfou3sUKms8ckm+rOlm4V6BnDnsmZaVtSKb1bAHcbU2p
qV0V6FnA7tjWH3pYlehZQP8aBtd+diV6FsB0C7Hgz69EzwKUbRJXRVhVoseD
9n+EFsWp4/kmPDBatlw7uakC9xseZBV1qVvcxDzOPPDK7E632EnXlwej5be1
3OZgvnDel/XjB6wfo/fDgzJHA1uTe+XfvIwvfkq8wjqa9isPtK/Z5Cf8B9ej
iwcilxZ5Q0055uPDi5QK06kzKjAfH1ZZmV4Yiqb5+LBfJcknTgfvz5kP/jpn
RI736Xrw4e7RqobBIKyXcD4s17zvDq7VmI//5f/Ad5dDV9RgPj7kOClu9a2p
xXx8cLO88f2nrVifXXx4K2RruQTR/UAAtUfm7FoX0YD5BMCym2hyOCnFfAKo
KTK+EXKwEfMJoMMsYkGHM90vBKA5e48/c5IM8wlg85zSNydP0/1DAIotWfGK
ARnmE8DjClGL39RmzCcA1VnL99rPaMZ8Aniiphr5zwn0GEL4w4+jyklGz0QI
kU0O4rV8GdaPENLyzu2fEoz96iyE2H+bz0hKbsR8QpATXoooF/s3XAjP2jWK
mnPxfhOEcJsTmTqSXv/NyxDCxd9nLLG/TPdPIfjEBMQ4xuL7uksI95yG8zZF
1mA+S/A4w1rsFFtN/gaBMm2f
          "]]},
        Annotation[#, "Charting`Private`Tag#4"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1: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
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1: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
Ow2K/OZzueGN5L+pUF8d
             "]]}, "Charting`Private`Tag#3"], 
          Annotation[{
            Hue[0.37820393249936934`, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxV1nk81OseB/AJ2WkwDGMwi5JuqWg5afJ8nbQe5RzpqttCiJTqRFocOYrK
ReV0W+icpE1HioqkeGm5iBn7PoxlZCkhlSzDyanb9/njPq/XvOb1e83vef8+
v+f3/T6/4Xvtdd2uxGAwir98vn7//xgglxK+jhTyKo1tWLPvHR4/Jin/imR/
uNBP5tl9Hf8lMz9EBA7v78Pfi8mF4NHOmQa95JtTQXbYJCpWhfTg+dXEunS/
ZGbma+Ln+3XUkcTKrtYoSRfOl5K44EF+nKSDlJZ8HTKS8O7TzISn7ei1kSO2
w46FD9rwfDnxKMgVeXo0o/+KLPI9dWx2uBTnd5Ac5qecpdJavF4XMcr47rro
cBV6r4m3b0lZcH0Zem9I1Lrz010Di9F7S0R3NUQrS/PR6yVhvfItar3P0Osn
uo8D9qjE5xC6bq7jZ6t6irPw/AHC/KHtAKzLQP894Rb0nVujdx/nfyA+CtvG
tVnpeL2PJEDP9GO2Wjp6g4SpYM33eZyO3iCZURLE3vzoHnqfSP/3OmNGr6k3
RETFSzrOrMhAb5jYNDSWnMjMRG+EVK2O2WlqSPONENXelKhs90fojZJ4waHO
80HZ6CnIJWKkU7rjMXpjJOlCmJ0SPEFvnPi0JB1J1shBb5yMHDy/rlmWg95f
pMrjJVO/Lhe9z0RwpvzUWsM89CaILnkUtD33KXoM6GcoHz42RNeXASdrryZ5
e79AnwESifa0VNt88r/pdpPAtt3twKa9hXi9SfCb2pMF3bxi9JTggF8wJKwu
QU8J9j5v3jb9bTl6SpBxaGX5ks+VmEcZZMrC2opFNegpw8ZZh/lhSXXoqUB+
+krF2ulS9FTAK9nVZ1dBE3oqoFis4hi8swW9ydCzONA9JJLW62QoCP6c+7pI
jp4qjMxzDOpRtKOnCiXsLF+2Aa1/VUgWSvaFanaipwYN1+/EShs70VMDf/PD
lo1hXeipQ+LovH3LPnShpw46y70+Wtp2o6cO0xan3WwVdaOnAWaNV9tW6nej
pwHOc439r2VQTxN8/wi/+puQepoQLU1wU/ftRE8TtPS2aQjCO9DTAt+3aQ7D
B1+hpwXKHtPX7HCj/asNrHaTcTlXjp42BHqtMBM9aEVPG0ROxz3z+bSfdcDJ
xcHr14uN6OkAO4LRfYffgJ4u7FZaHG1fSvtbF3yzhcu8b1ajpwsDN99P25ZB
n+8UuPYiMNtvvBy9KcANGbg4xipFjwlJnnfc3meKsb6YcHHpwjdKsiL0mSAO
/el58PGXOJ8JIUm8pqg/C/F6TLDxyh9SXVSInh7ILO+tHrIqRE8PEn+uEW71
KURPDy4fuWjCkdH61YPGybGGD0JfoqcHArteT5t5Rejpw5IHqfNb3xehpw/2
u0M+TLlVjJ4+PFQMM66sEKOnD/Euovv7xWL0vhwnvMiusZagZwB+B26dP+kt
wfUxgMOsc88bD0nQMwCpjsePh/ZI0DOAlWlMkbGzBD0DOHa02XoKl3osmNiz
teppjxg9FiRvdtjyqUCMHgvevznbPiuX5mOB/sZnUlkTzceCsL+aj961pZ4h
bGRzoLSE5jOEDvux08syaT8bQtvO+TsDBkrRM4TA9pez9h2n/W0Ic9/+6D75
SQV6RrD1XsfoDRmtByMYjLmTs8qqGj0jOGVkfL31HO1/I8hTY3ilm9ehZwQy
Xk7q2dx69NigOL3r3cLtUvTYcNTQRhKo24QeG6wbonQu3JWhx4bfXRfmVi9s
QY8Np+c92nLlWit6xqAb9cpdLbANPWPIjd4ReWm0DT1jiO4b7LP3kaNnDJ5t
ypc60+ToGUOUf1ZOWD3dX0zgio7nrE6ZHD0TuH2mTzyeR/vPBGp+HfspPYx6
JiDbZCV5ZUY9E1g7R9EccKUNPQ50iHXE/ao0Hwe0XE4IQu+3oMeBgBOVq362
a0aPAwnbX5DZiXR/5ED8BofwmHEpeqZwg+NXuX5jA3qmIIjoHZzIq0PPFDqm
TZx0WliLnim0WJStrxfT/jYFq365Ev8ofZ9zQf3h0BF1T/p8uRBXvlS/ZFcF
elz4pSTldt0a2v9cGLE+Ne5kWYYeF5wexKj3b6D7gRlcKpu7K6WrBD0z6P5F
6U5QAa0/M4hcGnGsracEPTM4rjx36rXVpeiZgejPg3KLeuqZwy+fyx8aHitD
zxzi5P5eC5aUo2cOmfou3sUKms8ckm+rOlm4V6BnDnsmZaVtSKb1bAHcbU2p
qV0V6FnA7tjWH3pYlehZQP8aBtd+diV6FsB0C7Hgz69EzwKUbRJXRVhVoseD
9n+EFsWp4/kmPDBatlw7uakC9xseZBV1qVvcxDzOPPDK7E632EnXlwej5be1
3OZgvnDel/XjB6wfo/fDgzJHA1uTe+XfvIwvfkq8wjqa9isPtK/Z5Cf8B9ej
iwcilxZ5Q0055uPDi5QK06kzKjAfH1ZZmV4Yiqb5+LBfJcknTgfvz5kP/jpn
RI736Xrw4e7RqobBIKyXcD4s17zvDq7VmI//5f/Ad5dDV9RgPj7kOClu9a2p
xXx8cLO88f2nrVifXXx4K2RruQTR/UAAtUfm7FoX0YD5BMCym2hyOCnFfAKo
KTK+EXKwEfMJoMMsYkGHM90vBKA5e48/c5IM8wlg85zSNydP0/1DAIotWfGK
ARnmE8DjClGL39RmzCcA1VnL99rPaMZ8Aniiphr5zwn0GEL4w4+jyklGz0QI
kU0O4rV8GdaPENLyzu2fEoz96iyE2H+bz0hKbsR8QpATXoooF/s3XAjP2jWK
mnPxfhOEcJsTmTqSXv/NyxDCxd9nLLG/TPdPIfjEBMQ4xuL7uksI95yG8zZF
1mA+S/A4w1rsFFtN/gaBMm2f
             "]]}, "Charting`Private`Tag#4"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {0, 1.}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 120]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {0, 1.}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.922526, 0.385626, 0.209179], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 120]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
T4GwK73Dj6aLyd+d0msg
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
ElffNZFosD5HkK5QJv7l2ET+AwfAVYA=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
Ow2K/OZzueGN5L+pUF8d
          "]]}, "Charting`Private`Tag#3"], 
       Annotation[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 120]], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1: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
1mA+S/A4w1rsFFtN/gaBMm2f
          "]]}, "Charting`Private`Tag#4"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {0, 1.}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 120]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Probabilities\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \\!\\(\\*StyleBox[\\\"t\\\
\",FontSlant->\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->404809319,ExpressionUUID->"1a19f836-b0c5-4a0b-97c4-c8ac60cd3a5a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d0c97c2f-2259-4d90-8a6e-6e7e06e1f84e"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1261705519,ExpressionUUID->"a7fad46a-2258-43b4-83d8-882e793c4604"],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355,ExpressionUUID->"530bc623-2c99-4925-b4a1-4ccac1385a81"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->427878852,ExpressionUUID->"29a296f2-4211-4c6e-90d6-7172394df88e"],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{
    InterpretationBox["\<\"I\"\>",
     Q3`Pauli[0]], "+", 
    InterpretationBox["\<\"X\"\>",
     Q3`Pauli[1]]}], "2"],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1555815591,ExpressionUUID->"0b50c386-4b5e-435d-9cf0-227b78ee8e6e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1686455809,ExpressionUUID->"98a6edb7-c4d0-45f4-801d-c22af0e5d1fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1773608757,ExpressionUUID->"84a403e1-3fd2-4b08-8da8-6fa5621346ad"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"+\""},
      "Superscript"],
     Q3`Pauli[4]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"-\""},
      "Superscript"],
     Q3`Pauli[5]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1954520658,ExpressionUUID->"c75e8e55-266b-4900-9b19-a4962bac3552"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "in", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->813112276,ExpressionUUID->"4ceccf5c-f279-4e7c-a611-6a5fa547d86d"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[133]:=",
 CellID->1114083042,ExpressionUUID->"f6665212-303f-4afe-8f14-390d942ad0d7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[133]:=",
 CellID->483768701,ExpressionUUID->"426389d3-15ce-4acb-8ac1-e48248c4adc0"]
}, Open  ]],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"0.5`", " ", 
    InterpretationBox["\<\"I\"\>",
     Q3`Pauli[0]]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{"0.2`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", "t"}]]}]}], ")"}], " ", 
    InterpretationBox["\<\"Z\"\>",
     Q3`Pauli[3]]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"+\""},
      "Superscript"],
     Q3`Pauli[4]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"-\""},
      "Superscript"],
     Q3`Pauli[5]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"0.4999999999999999`", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
       
       RowBox[{"Sin", "[", 
        RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->327470165,ExpressionUUID->"4fc1dfae-2971-4b65-9b16-29b00abd9695"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"Pauli", "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1408697964,ExpressionUUID->"0ea49ef7-29f5-43f1-91cb-e443bc638694"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{"0.2`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", "t"}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->893971258,ExpressionUUID->"69961275-10e6-4a64-9342-139b94be3b55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->743762978,ExpressionUUID->"6e604fd2-a166-47bb-86de-025cb0df3401"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
            0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->406856793,ExpressionUUID->"7e6e8eda-a30e-4545-9183-e4193c823a1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0a32ef23-5c64-4c5d-b3c4-5ed329f33391"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002,ExpressionUUID->"5809209a-25da-421f-a114-344dd0294c3b"],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940,ExpressionUUID->"e9db8f73-e254-4d14-9096-3aebb3a2d021"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1470681252,ExpressionUUID->"3eb8de68-ff12-43ca-92ed-b078bac20d3d"],

Cell["Set an initial state.", "ExampleText",
 CellID->2051494922,ExpressionUUID->"c2b3c2bc-03fc-4de2-be54-a8036c8aa330"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->963207285,ExpressionUUID->"8279e005-918c-459a-ae30-4215b4814db2"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     InterpretationBox[
      TemplateBox[{"S", 
        TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"X\""}, 
         "RowWithSeparators"]},
       "Superscript"],
      $CellContext`S[1]]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->881134970,ExpressionUUID->"d4c3f285-addc-45e6-a941-26b8b81c9146"]
}, Open  ]],

Cell["Take an effective Hamiltonian.", "ExampleText",
 CellID->894984484,ExpressionUUID->"52cb4fb5-2ba8-463c-bfd6-4fb124016409"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1701417680,ExpressionUUID->"35623ff6-7f20-4f8d-beba-afdd941ea1f0"],

Cell["\<\
Take the quantum jump operators that are responsible for particular quantum \
decoherence processes.\
\>", "ExampleText",
 CellID->1957216028,ExpressionUUID->"098ba08d-0cd3-4107-8c73-62dd26fe2a34"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->682224499,ExpressionUUID->"bcabe75c-21a0-4b71-b10a-b55f5b1f94e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[4]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[5]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1865958886,ExpressionUUID->"8d3b02d5-fc5b-417d-b8a7-bcc31c62ec15"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->1153262109,ExpressionUUID->"35310c28-743a-4853-9bfd-23a72e174b61"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ops", "=", 
        RowBox[{"Prepend", "[", 
         RowBox[{"opL", ",", "opH"}], "]"}]}], ",", "\[IndentingNewLine]", 
       "\[CapitalGamma]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "in", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->719143774,ExpressionUUID->"d667fada-5002-4736-9872-927b5f48dcb7"],

Cell["Take a look at the solution as a function of time.", "ExampleText",
 CellID->1738183371,ExpressionUUID->"bae39644-7bdf-4c99-8e8e-dbe1033ad290"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rho", "[", "t", "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->711450696,ExpressionUUID->"fae3ea3f-de95-4364-b5c8-0636065ea088"],

Cell[BoxData[
 RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
   RowBox[{"(", 
    RowBox[{"0.2`", "\[VeryThinSpace]", "-", 
     RowBox[{"0.2`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"1.`", " ", "t"}]]}]}], ")"}], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[3]]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[4]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.4999999999999999`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[5]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"0.4999999999999999`", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"0.`", "\[VeryThinSpace]", "+", 
        RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}], 
    ")"}]}]}]], "Output",
 CellLabel->"Out[6]=",
 CellID->2011581048,ExpressionUUID->"740bbb1d-753b-4bad-82a0-fbb9d74e61c1"]
}, Open  ]],

Cell["\<\
For a physical interpretation, it is useful to get the Bloch vector \
corresponding to the density operator.\
\>", "ExampleText",
 CellID->473288516,ExpressionUUID->"03c21235-d928-43e2-b450-2ec4a8f21878"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"Elaborate", "@", 
       RowBox[{"rho", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->1210483635,ExpressionUUID->"a8584dde-b442-4647-8faa-fffcea32b859"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
    RowBox[{"(", 
     RowBox[{"0.2`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.2`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1.`", " ", "t"}]]}]}], ")"}]}]}], "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->830332189,ExpressionUUID->"e232567d-5e17-4aef-8d17-af130168002b"]
}, Open  ]],

Cell["\<\
Plot each component of the Bloch vector as a function of time.\
\>", "ExampleText",
 CellID->1689424838,ExpressionUUID->"e0fd04a3-03d2-4c03-ab87-4bd7e967d4da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[8]:=",
 CellID->1754552550,ExpressionUUID->"0d88fc09-2a88-4c7c-a428-1a8a6b897ae3"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 
            0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AlQ1FUcwHGu5ZZbxGVhL1IjVJRiILL3I0Ik5JBEEbHW5DAENy6LFeRw
MYE4hF0gsYkl5JwQEAQhd2VYIQgoQ+SIMxyQAoQ2kSXSpP35m9nZ+c//vc+b
+b6dZX7C9Q1WUVJSCn752fh+Nc9fbMwEufr1xtwmWcvLulYDY/jcReKkzsEH
q0fIm3Yb00/mf57V4bQ+xPfDJCKREzwIvxKFNklyA9l2tovduH6aCOpFNKtd
bSQ0ZGNmiFuQtWtiZQ3unyP3Z3zPy7T5kt6ejZknwmbDsxYZ9RKFt0RmIvjN
YdvvShTrl8mhVL1sWcs9icKXkWLre0uRM124/28ScstcxBb1SBTnrZAqQ8ub
q8u96K2SgOvynN6FXvTkxPGD01egsQe9f0i36JmyS1Q3euvki2+Zbql+neg9
JysfXtg5mteOnhJMlbtOxnaKcb0SZGZnaTY8bURfGRZl0ss82yrcrwID50c0
BLty8TxViPI/mFewno791ICqJqRs6yslCk8NfMcZtsr+tdiLAlmSDj+BfiP2
VAe3ImmFjNeMvTXApl40FpPfgp4m2BTE0n3CW9HThCm2PeeRUSt6WlBj8cvF
iqrb6GmDTfXT9JnjTejpgObCDfcThxvQ04U9BXP8aWkterpQYv1bmLu4Er1N
ME91vGFWLkJPD5oMYva378tDTx/OaCf4HYvkomcAp5z712Wv87GPAZyg2RwT
B+RjTwPI0ROaRrsVS/7fbmcIDtfXFg7sK8W+hrDSk3bygXI53ocRuL8V1yAQ
VqBnBKvqRSJXSiV6RqBSm/hoz+kK7G8Mg4OyOufxMvSMQSvVqHwisxQ9E3hM
/3S0VyRCzwSKI+LklKxr6JlAlVW0p7ufEL3N4PDuWq10MgO9zXCJItdwlPDQ
M4VD2+M/upnOwj6mEDZx7u7eA3HY0xT6/JOMm7y+xF5bgOedcSdZJQf7bgFD
YVN8oFce9jODB+aFQy0pQvTMYODPz+bOfZePnhnkhHl/v0OSj95WGOnM7Exb
EKK3Fd57p9u1xFOAHhWe2L/Ge6iaix4V+nZ3jA9zs9CjQkq20MFl22X0zKFQ
fGWiLj4ZPXNYkYvVtVJi0aNBR/fvyTVzHPRoQKeeSmJnemI/GjDTyKy6SQT2
s4Afqk1cdko/x34WQPvjfUrAjkTsZwm+8f1DSR4peB+WoLt3wHtO9dX/hyX4
iI4uPm7no0eHIKlpUkgRHz06KLe97WRVchE9BmyS+zvorCTj74sBLsJmeVtU
IvoMyLnwr/czJg/3M8BrCgb1XGPwPAYIoofUbnmEo8eEqaM/XSs35qDHBDpt
qLs4wRk9Juw+OWXmkeeOvZgQtN/pq8K2j7EvE3gWgemz90OxHwuWElvO/6hz
lig8Fvhx17554RSJPVngKQ7rDE+PQo8FjvoJaXfkUeixYH7YvKv2ahR6bDiy
XpYp5kfi/bEhj61ro1bJRY8NQX/VUd84fAY9NgizucenvULQe/n8ZDSyfYyD
nhX4lAnsQy8dIf8BfY7BLA==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0nswXFccwPFtIiH1WBabtV57Lek000SREMGenxglyKQeIeKtEcFEN0J1
SYtIPGc3beNRYZKl9UhUspg0CDaKKqUsYioeUZotQ6dIol4jre4v//Q3c2fn
zj3nc+5871LhH3tF7KDRaBH/Xtu//5+bRdvTSNjTM8zU9xuI4r6bRNEl7zKE
P5JDVtszRIYNZ4NS2P34fJTUinwu+v48SBTKFNnz6NRy5uowrp8hg88W2v1Y
IyTy3PbIiUhEsfqPjOD+OaK0VFcyz39C+nq3Z4E0vU4y/nVyCL1F4mR98vPd
FTJcv0RE3W49V572of+C9Pv8ws5v7ML9L0mItRXf3LYNz1sh4S3DwhW3B+it
ksMq1+IrNUvRWyPOpiEhQ2M5UoW3QdKafQXrr6qlCm+T7C/PL09UfihVeFtk
/ISlfPZ4qxSzgVSQ/zxV1obraeC/kc3TvtYuVfhvwQ39x2b9zh24fwfQPVYY
atwOPG8nnOQnjYxYtaOnBDfH2TTX/DeeEnDu2vRmyVrR2wX7Si8MJX7biN5u
sGHmfra0UI+eMlTVL3rZy6vRU4GVZvEl2fxt9FRgwmq3rQb9Cnp7wJTemJXE
ysJeb4NbonKNXdkt7KsKmvbfBNTpV2I/Nfhg9PSqxtEa7K0GAXx16VyPBHuq
g0H8h0/imXXoacCfux4fHsmsQ48OLrMdCzzzOvQ0oThO4i3g1uJ6TfjbPeZM
E+0++pqgJ3Evie65S/7bbqUFcV8yPvWUl+N5WrC5YF4RWyhGjwGT6eKBYIcC
9BjwsNCwQm06Az0GfHfEo++9AG98H20otTaS1lqkYg9t6I5g7uNYfIH9dEDV
b6DLbKIAe+uAz9r10Zb1YuypA81ekRmqybexvy70r5+llUnE6OlCbKjn19FT
YvSYwJPYqGQHidFjgolrbHDW5VvoMcExvi2Ue7QYvb3gqLVF8Q4WorcXnnFt
Fjvyv0KPBfO8j7KVAnLRY4HlT5VFQSFp6LFA+iiwvkkUi54etOvGfG9X7IL9
9GCUm3tH7H0J+7EhmJpuaLuXiv3Y8MLMbCkv8E0/NgiM5NX+RTnYTx+a3X2Z
iYFC9PThPOWkG1wjQs8Aju237XlQKkLPAMJLeK+oACF6BpCWbTnVrpSLniF0
nxFYFAxkomcIYSETF354mY6eEYwer8xmeaWgZwRCv5KoEddP0DMCme3z9OKY
aPSMIfm86PrBSU/0jME9wv5c5JYH9uOARTVzzqUoQqr4f3GASii84TTGx54c
qDrxOi+6KgH7c+A3U23ndygB9uWAZww9R/1YMnoUcP7KoU/pXkaPAiE8be2q
T0aPAkFKYLO1QxJ6FJSdim3LG0tEj4IYbb7yYEs8eiZQ2mljs6l7ET0TMDZL
cBg/EI2eCfxxtXkr+Pcw9EygYXGZ53/aGz0TcJD0Ww5kHECPC2txbkENPGfs
wwXH5Z2RrmZ+2JMLMrvezjudodiLC/JD9/kbvWexLxcK7mmBqDgSv4cphKnP
lJhbRpF/ACaqsIE=
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntQVGUYBvATgUDgcseF5bIXrAzEEA0Jpu9VcNC4xM1gAhwCgRxGCRUx
SwWphEXkzu6aDmLuVBtOcfGCkRsssLuwUoRhjkEuzOCAOEDtyALtkuT37h89
M2fOfHPe5/eeOXN4GXnxWWYMw2Q9u1bv/895yWo6SMrjsYodJ2rlz89qEln/
OH608rJ8S+Bqhsk8STkeKZTR5/fJzRaXVH/t9/LnykMi/6PNYtf6djo/Qer3
Hn3yi9sNeU72aiYJMxuTm9LXQftTpKHE+H5XQKf8jmY1MySe1afZmnGbenPk
0+FbsTL/n+j8PLmr6xWxnbuo/zcp1H9R1TLRRfs6kiNVepc1dtN9T0nWAOts
0W4F9fRk0xnhO5ETCuotkoF3cw4fPthDvWWytaWwOG2mh3r/EGV/m0vU3l7q
GcmK5QA7s7eXegywJm2bZfw+Os+ARrR+0KGwj/ovACfkiPxDRR/tm0G4kONX
bqWk+14E60vJPMcIJfXMwRjtMyw9paSeOcxHfPPGvVYl9SzgR42sYINWSb01
MJde+5aTjYp6lpDaVKpbeV1FPSswhFV2xyaoqGcF4uCiurRDKupZg92dKH3B
ORX1XoK2qV+ntF+hZwOneyPLx2+jZwtffrRR0zqMni1c5PgypZPorYXg4JGc
mgX0WBCuIs2GNWrq2cHs27/FzDurqWcPj3rErGqems7bQ8i962EGPzX17eEv
WdbmhCC1/L96oAMYDA/3XAU13ecAvPywK4Ld6DlC7ZPpgYFY9Byh8YBFbkcS
eo6g+/judmMavo8TaANeTZdloucEmSGfx2g+QM8ZOHHZgfkH0HOG1soJ3ZV8
9JxhaWVb0qEC9FxgITeJPXEMPRfY4f/AivkEPVfYNdvEHzqJnisw/m9eTCtG
zxUMs+lMcwl668BnsXNL92forYPE/Wa10jPosUFdJp1/rww9NkyPk5ZJIXps
mElVKqPOoucGoy+391dVoOcG0n2b9NfOoecOt17LIPJK9Nxh2X4p4rsq9Nxh
tPHpsdJq9Dhw3mLIGFWDHgfqfl87ZKxBzwNmfCNuNNai5wHSP3+IDqhDzwO8
HuRZX6tDzxP8eh6F+NWj5wkJijJXcT16XmBu+PbqYj16XpBdl7wc14CeF+ii
B7VNDeh5g31Iz8bpBvS8wSL0qNhXhB4XrMWn1Nki/L+4UJRbmnxBhD4XSrb1
D2pE2OfC/hN5X+tFuI8LliNDe7hi9HjQPyIJDRejx4MNJYqb+8To8eD+Upnn
aTF6PDjSEXr9ghg9HviUM8p2k8cHoc/Jin6Tx4dQz6LtYyaPD13aYpc5k8cH
G5uAIEaCHh9YOeM/syToCSBobNncQ4LfRwDmOxP1r0jQE0CanVC1WYKeAJSK
uOpQkyeAxIXO3J0mzweyS48fjH52/hc/ku/Q
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox["\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", HoldForm], 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->487174564,ExpressionUUID->"4a5b54ba-3b37-4511-82f8-2f5b160aa8c5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8a4a76ca-59c9-45e2-8e2e-fe899a67416a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289,ExpressionUUID->"a7e8f41d-0645-4649-98a5-bf9e955e9c54"],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783,ExpressionUUID->"b4e46964-4fbf-49c1-a4c4-7ce1bb2db082"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->290448684,ExpressionUUID->"274168af-2f53-4018-8b3b-a46abde4ca21"],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357,ExpressionUUID->"88a131b4-35dc-452c-afb6-ef36c9ca0ef2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->993111197,ExpressionUUID->"36bbd0ad-1534-4d38-9da2-2886a8105f26"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->440769274,ExpressionUUID->"dc7e9c9c-02a0-467e-85a9-f5794fb5d7d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->501635503,ExpressionUUID->"2155afbd-7b9d-486b-b9b4-c0009af9a8db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{0}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{2}]], "\")\""},
      "RowDefault"],
     $CellContext`A[2 -> 0]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][0, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{2}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{0}]], "\")\""},
      "RowDefault"],
     $CellContext`A[0 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][0, "+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{1}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{2}]], "\")\""},
      "RowDefault"],
     $CellContext`A[2 -> 1]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][1, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{2}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{1}]], "\")\""},
      "RowDefault"],
     $CellContext`A[1 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][1, "+"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->585612556,ExpressionUUID->"e03e3e22-5115-4a4c-a80f-8970e9f8f279"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][0, "-"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][0, "+"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][1, "-"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][1, "+"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->472674491,ExpressionUUID->"11dfc88a-0a3e-4d2c-ae5e-6aa8b779df88"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{
    RowBox[{"LindbladConvert", "[", 
     RowBox[{"opH", ",", "opL"}], "]"}], "//", "SimplifyThrough"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1865696334,ExpressionUUID->"429e6d3d-e29d-4982-b7ea-1bcc97bcda03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        FractionBox["1", "10"], "0", "0", "1", "0", "1", "0"},
       {
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", 
        RowBox[{"-", "1"}], "0", "1", "0", "0"},
       {"0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "+"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", "1", "0", 
        RowBox[{"-", "1"}], 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "0", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma][0, "+"]], "+", 
          RowBox[{"2", " ", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]]}], "+", 
          InterpretationBox[
           SubscriptBox["\[CapitalGamma]", 
            TemplateBox[{",", "\",\"", "1", "\"+\""},
             "RowWithSeparators"]],
           $CellContext`\[CapitalGamma][1, "+"]]}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]]},
       {"0", "1", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]]}], ")"}]}], 
        FractionBox["1", "5"], "0", "0", "0"},
       {
        RowBox[{"-", "1"}], "0", 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         FractionBox["1", "5"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]]}], ")"}]}], "0", "0", 
        RowBox[{"-", 
         SqrtBox["3"]}]},
       {"0", 
        RowBox[{"-", "1"}], "0", "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        FractionBox["1", "10"], "0"},
       {
        RowBox[{"-", "1"}], "0", "1", "0", "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], 
        RowBox[{"-", 
         SqrtBox["3"]}]},
       {"0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"+\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "+"]]}], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}], "0", 
        SqrtBox["3"], "0", 
        SqrtBox["3"], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "0", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][0, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "+"]], "-", 
           RowBox[{"2", " ", 
            InterpretationBox[
             SubscriptBox["\[CapitalGamma]", 
              TemplateBox[{",", "\",\"", "1", "\"-\""},
               "RowWithSeparators"]],
             $CellContext`\[CapitalGamma][1, "-"]]}], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {8, 8}, 0, {
       1, {{0, 4, 8, 12, 15, 20, 23, 28, 32}, {{1}, {2}, {5}, {7}, {1}, {2}, {
         4}, {6}, {3}, {8}, {5}, {7}, {2}, {4}, {5}, {3}, {8}, {1}, {4}, {
         5}, {2}, {6}, {7}, {1}, {3}, {8}, {6}, {7}, {3}, {8}, {5}, {7}}}, {
        Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "+"] - $CellContext`\[CapitalGamma][1, "+"]), Rational[1, 10], 
         1, 1, Rational[-1, 10], 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "+"] - $CellContext`\[CapitalGamma][1, "+"]), -1, 1, 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "+"] - $CellContext`\[CapitalGamma][1, "+"]), Rational[1, 2] 
         3^Rational[-1, 2] ((-2) $CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][0, "+"] + 
          2 $CellContext`\[CapitalGamma][
            1, "-"] + $CellContext`\[CapitalGamma][1, "+"]), 1, -1, 1, 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][
          0, "+"] - $CellContext`\[CapitalGamma][1, "-"]), Rational[
         1, 5], -1, -3^Rational[1, 2], -1, Rational[-1, 5], 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][
          0, "+"] - $CellContext`\[CapitalGamma][1, "-"]), -1, 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][
          1, "-"] - $CellContext`\[CapitalGamma][1, "+"]), Rational[
         1, 10], -1, 1, -3^Rational[1, 2], Rational[-1, 10], 
         Rational[
          1, 2] (-$CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][
          1, "-"] - $CellContext`\[CapitalGamma][1, "+"]), Rational[1, 2] 
         3^Rational[
           1, 2] (-$CellContext`\[CapitalGamma][
            0, "+"] + $CellContext`\[CapitalGamma][1, "+"]), 
         Rational[
          1, 2] ((-2) $CellContext`\[CapitalGamma][
            0, "-"] - $CellContext`\[CapitalGamma][0, "+"] - 
          2 $CellContext`\[CapitalGamma][
           1, "-"] - $CellContext`\[CapitalGamma][1, "+"]), 3^Rational[1, 2], 
         3^Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0"},
        {"0"},
        {
         FractionBox[
          RowBox[{
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "+"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], 
          RowBox[{"3", " ", 
           SqrtBox["2"]}]]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {
         FractionBox[
          RowBox[{
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "0", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][0, "+"]], "+", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"-\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "-"]], "-", 
           InterpretationBox[
            SubscriptBox["\[CapitalGamma]", 
             TemplateBox[{",", "\",\"", "1", "\"+\""},
              "RowWithSeparators"]],
            $CellContext`\[CapitalGamma][1, "+"]]}], 
          SqrtBox["6"]]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
      SparseArray[
      Automatic, {8}, 0, {
       1, {{0, 2}, {{3}, {8}}}, {
        Rational[1, 3] 
         2^Rational[-1, 2] ($CellContext`\[CapitalGamma][
           0, "-"] - $CellContext`\[CapitalGamma][
          0, "+"] - $CellContext`\[CapitalGamma][
          1, "-"] + $CellContext`\[CapitalGamma][1, "+"]), 
         6^Rational[-1, 2] ($CellContext`\[CapitalGamma][
           0, "-"] - $CellContext`\[CapitalGamma][
          0, "+"] + $CellContext`\[CapitalGamma][
           1, "-"] - $CellContext`\[CapitalGamma][1, "+"])}}]]]]}], 
  "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1782726383,ExpressionUUID->"c3f8ecbf-a273-4820-996c-1365ea97dbbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "in"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"in", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "in", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->260219023,ExpressionUUID->"216c61b8-fd77-4688-9471-2cdc6504194f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.327256`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2119099875,ExpressionUUID->"c8156d9e-6f5a-4acc-85ac-b98283128008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1542313529,ExpressionUUID->"6d04cbac-6c52-4df3-9170-9eb1d4f40354"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3el3FMmZP/o5994X9+X9F+45P289Hi9jj2exZzxexuMZ+9oe2zOen+0x
vSKgm6WhocHQ0OwCJEBAIzYhISFASEJIoH1Hu4SEVrRvVVpLKlVpK1WpFm51
lx0ZKpVSWRURmUnx/RyOZ1wV+USQenDGo8yM+H/f3P7Ljf/HX/zFX+z6v73/
8cs3Pvzezp1v7PvV/+P9L/+5bdfmiG3vvP1v2z54J+KdnX/35v/p/fAvvP8x
8X999n/+4gUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAK8zlclk/Mzs7
q06Pdrvd25fb7VanOwAAAAAAAHipPXjwYOOfjY2NCeplZmYmJSUlKipq9+7d
vr42bdr04YcfXrlypaWlxVs7C+oXAAAAAAAAXmqDg4MRERGkbjUajdy7sNls
6enp77777sa1HTx40GAwKAwoEwcAAAAAAF4W3EsPCEtWq3X//v105nCvW5eW
lo4dO6YkaTdv3lxfX68kJq8M19u/FIxHHsYjD+ORh/HIw3jkYTzyMB55GI88
jEdeeI9Hb3870Ke5ubmDBw/6FY9861aXyxUTE6P89y1btmzp7+9fNyzqVnVg
PPIwHnkYjzyMRx7GIw/jkYfxyMN45GE88lC3gsrMZvPhw4dXV45869a0tDS/
+AcOHCgoKBgYGPB2VFpaevbsWb8Ge/bscTgc8mFRt6oD45GH8cjDeORhPPIw
HnkYjzyMRx7GIw/jkYe6FdTU1tb2/vvvB7zjybFunZ+ff++99+jgJ0+e9H5I
t/F4PHfu3PEbQ15ennxk1K3qwHjkYTzyMB55GI88jEcexiMP45GH8cjDeOSh
bgV1LC8vZ2RkBKxYudetmZmZdORjx46tdSOVXtDYy1tTy99yRd2qDoxHHsYj
D+ORh/HIw3jkYTzyMB55GI88jEce6lYQzePx1NXV7du3T6Zo5Vi3egvPHTt2
0JHb2trWaux2uw8cOEA3bmpqkgmOulUdGI88jEcexiMP45GH8cjDeORhPPIw
HnkYjzzUrSCUt4o8ceKEfMXKt27t6emhwx46dEi+fUVFBd3++vXrMo3DtW6F
lwvyB1ggf4AF8gdYIH+ABepWEGphYWF1ibpjx47Gxsa4uDgRdWteXh4d9v79
+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
i7Vc4xLTYe6WXmpO/RcuMYPV8HycnMZTScH9Nsbt8bxFLylsE7ukMOaNwAL5
AyyQP6AfqFs1ERsbS6rOpKQkv2+V1K1paWmkTWRkpPghv6y0zXC7qVV6MTDj
5xwjbz9bRObM01Ybx8gBjU5Jd6Z2X+RcKFmenpdedWyM4Rt8VV/nRPfl8Xg2
HMkmp8vp+nS3Hb7X/dkFO4m/KTKfY+SApoq3cr9J7bZbSUxDwle4xAwW/Y5q
CK8J/zFWWlK4xyB2F132/HE7bR6X8P16QJ9QdwAL5A/oB+pWTSQnJ5Oq8+hR
/+V6lNStp0+fxvutSmib4cvWAemmUsr3OUZ+67h0ryeo9/JCY52XCiXuT0Wa
qz6m7oEm8A3uR4V7u/OLDnKuIv5cVPK97gcsjcWZePQbctKWRrm9y2mI/0sS
1u0Q/szAatceNrMsyn2JWn2rnPemxn5Czh9vrbo4mD+e9V/DcV+cePxb+wTn
l9PhpYC6A1ggf0A/ULdqoqysbCOlpmbFVHDdutXbnj48MzNTrYG/fLTNcJdt
StqZ9Pa3eIX11ilkwuytX3iFlbHsdJEe3ziawzf4VMn71O28DL7B/Sz0ZIh+
l5a+N/3BhVLfh9yv+1ujpEeRzbNLfIP7WbF5kIXb7r2jKd+nwgrfzWe1w9RL
4m19pmAPTy/tJoffLXguYoREyPlD/6JG89WbQSuoO4AF8gf0A3WrJsxmM114
eotTi0XagkG+bp2ent62bRt9eG+vBlO+lwV9otTv3eO0SzPGm1/iFZZ+THTz
af/3owURd4d3MvcNao3fUo6RV7MNl4heu7hryExOlLcy8n3I/bpPP6Q69NnS
T+IMx79G3Rid5xV24vH/lm7jjnB+aVqJLacLyDmcsgT9sD29qvPZuw0iRkiE
lj8Oc9dw/Jf96lbvH+uzy9xHCHqGugNYIH9AKxsD0XpQryj6QV+vDz74oLm5
2feVTN1aW1u7a9cu+sC9e/e6XC4t/gYvB80z3Fuukumit4zlEnPCvLD6jp5o
26KLqBt8PN+oHX/4S2lPVcHPMXrjS28cP/yliC7o1X7O/bmc4X7dP3mrluVe
oXLiXkSl13ae70nnGFmJBdsyOYFvHct1ezzBRhgas6r2zzCE/PG4nWMPfrq6
aP30T9znHVPCt/0F/UDdASyQP6Afms/qX1l9fX2rf4cQGxtbUVHhLWDputXj
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
3G/lkBAV/ckAdeCXf2ADvuUfFerDy+XVCQV4RLvmR5XJgVWFF/uzqM5RjAfl
L9Dyxud2qjaudLRj1a9C5ufnd+3apcBpXWbfvn1mM4XMqZWNpjTcr2mpzGon
TT2T6GFy5UHoJErVgA0xkwu75d4+3x6L1mGu6TSLGUoERiwrLs0qpXcq6/e+
1+dbA97miotXUAmcJkFwVxV/R0LSM4K7qR6j1E01Ik9BUdyrYVKeZYH0x7/Y
77fJJYfEvxXO/zAaJZg7jzvQugm+v2I5T/2KEkd5l08LcL+VQ4L6+gOrHQo/
H16qGBh7dVLTOzr7wfly9O9rYgoGx7R1gmMdLkAPz4nMnyiWM99yGYSlbaY4
Q3GOxOMKA/VdE6qNKx1NWfWrCo/Hc/bs2ZAO6ebNmw8ePHj+/Plbt24J/3vg
wIGNGzeGvPLw4cMulyvav4qm0ZSG6++/hVP1F+U9EKpa8ElE1MNjBO8MTUZB
ubm5plM4CrE9lsUMJUKlQtTZe7jvRrigRBXe+7C9r3lRYXtf09PDOMCp6y7d
GUpBn/5D8p1qSF0HdmGuZbaSC5RCH0w3vqM83RiB9Meufwo8SmopwAHA8lzs
vONgYD2r7mHZhcoRU6AJ7LqTxZrNg1MN7rdySFBZf+xO9/aLuEe84KjOzuMs
S6PJCl92e69Vuz0aKjI8U72Tyra8c6YLZpb5vGqY+g6n+50YnNxKpRg+dTRl
1a8qsrKyApxQwTlNTk42GkNUUPT5fBMTE3fu3Fm/fn3AXbm5uepP/jVCUxo+
mfVTxYlphfXDOPKwuIfRDCXS8sKIJnP+vuzqtbNP9qN1WOi7z2KGEvHvyPMD
ZUI+vl2HVmNwPPTerwrv/b3XcdXcMaWNwmcqtoKCPFF4thge/w5NwG5oJheY
Vzek/hdnGvhNJHmaCKQ/MJB7pmonueSQBEUjWxkNBHG5PdBkstqI7DRo2U5M
L9KaJC3c1klLV4KpPma+9aoKFZu538ohQWX9ySjHEcJrYgqCqwcHnMbmaiZa
WLDVx+99i8or7JWo1O9gUXoK+58Rgflomi3GrimrfvVgs9kCjlCvXbtmMkWu
7D05OXn+/Hl446ZNm6xWNYyK1xRNabgh9/fggSbP3cuqxB21cqoHGM1QIvA4
6ehd2bGX0+WbsXM0XMBihhLxOubBluabyoTsvFyJVsMwG/rLqMJ7/3gCrl3f
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
Zlkq+hc2TzPvut4QwtdgX92tIEBfA/qbJDLXC2a4bpxIc5oFzyWgLIxiONmD
K5hM5s8uluDvgcos4B7Q75DiRbqlZqGNuGDS32fRQqefKG4mn5jxG4ZneTn/
pIHQbjT1eXaRDbVuJ/jp44oHvDHJM1yIIl5jz5SNZQoNHMDdo56L07oFw8YC
iNJ/nmHwiTcwG7UwKF234uHvdfo+2dnmcQ3T2Efiw6/EeTKGl8t2kVAHwRQ6
N6okZGDEvGQ2Oq3yYzKb91wl0QLcFyBjC8Jc1T/1aGlpgdzz0qVLOh3TklIa
jeb8+fPw9MZGz9PMn3oIc4RHFPwUc7rZntvOmun0StwsJOet/gk+y507A4z6
Cy34BYwQxn8/KP1ANd+AZ9elon/zbbUDwCggqK+yLBseni1eXrdKxLPyMi+s
u7w4x7x1aIpkU9KX/VWMpDD3MnOPleqDxMUwkcfklD1Xy3HfvSnVxzqgyPPI
tGvHnGIoEfd9LGcXBxa6xHp3KIilv+rBFZbWSLw0IvKsW8gQaP3sPRHbtE4u
WK11mvHBImyT7Jh5eL2Zf9By9/ANokHqTWg3pDBfXHGh2c46RmdI0W1vNrVg
TaugxDZ2jXQGxXAyeTwV/j9uPlRS5Y8/1LM6XOsbJLF0x4VipZq3vLYVmZUk
kbsVeM1mMxSWZBj8ww3m036BDdMudzttJlHgb2C/q+oPQoYwV/VPPVJSUjDr
PHToEBNPK8TKysrhw4fxFSIiInxk51MAAY5wk8lw60lh1pu5r692O+WtCCE5
JOx2cMq1/g/3iMzrexL6lXUz701sbfdk0r2in+P/jvTeZO7N5AW6tRHiEc7+
AzpiNOmL20/gLpR2nkZHqMZwIcekrAPHvBUtybB5J+7W0rSEYYe+VpXxANKW
i9g8eX+Uy/ZanYHEIl4s4cBC5ribSWLLmSTeQqGw4SJBbCkoJ/O9vIt7xpbJ
jopHXg9WAOnz3sByj68jqdhDHNAjKSxaSANYCFs1zch4b+afEUD3ENn0pv4L
THVELzQYPL6UBwhJISrr6G+PrzOzsA57wY3Q0HL5bjITupINZAsb49nkmZjr
ScgH9HKej+LZwwK1OMZn3VNV0ssm8Fcxm/A6l/HhLrFSfYiMjYEYZ83qeog2
GnMZbQFCgKv6ZwHh4eGYdYaGhnpwhaioKHyFa9dcaMiwAq1WK5fLTdtNN1uA
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
qb6agsRds6pHFso/oxQj08aRFFrwe+iEkHFpR0ARlPscmKG1pWwLFYdpRM3w
bUb3lXndKh/ELQNzqXyQ1sCdMyIZ72AHypq2RDCOh2xVq+8NfZiek6g3D/AT
Kv4N7acWvOWkDkcpNAyEwvuESlC/XtFXlDLcLbSHlbJYOcveiZbUT2BElWmn
ONt4IW9NrPwP/J0HpvI2NtNC98FA/C8dJ1/KNxE0noGVU+Cd0M00omjGh+xz
jdVaQ2hGp72P7L1zhZVtMlFtW1nTYeFQwmWE+4AqapreQc7W0uZ7uArG7sOq
Wh+Z3c1Kkd6aV2cLk4r7RToMEQ53rT/r4/nyxKc52Sv1w0b/dCb9NcJkV1qv
kfbG1Qk3MlmzdpHQZLotyfoHT+fkLw9fxIX4JnfZ4C5MIs0N8ppfESR4hWO2
NWP3wLmuPbxhVy8ufLz1/oY3zPCbFbSY5sxSN+tTZe6/YRnRKTYTJ2PzqAZI
cdMEqz1mSTqjBzJEcBzmgsqGVufVIU9xUf9y0znquei00dpNqHiT528iDQxG
DY5jZH263EC9YKqucPylFDVO4JbYaTu3OrjBBcl4hyNhoss3m4nle07kTIRT
TVGreTMLD5fy6RxPlcZOp8ho+BisGpTTKsbrE4Vg/9Ct/8KX4pe0xbixdllO
0+ceMl8oDKb1klsvZyf9pDThx8ORDyTEBnE28zbeqjOocMjEun4zr2q1gwY8
p/v/h3wpn1yjdbt4oui9B/OlH8EQyM7ZYbOVdbIIxOT2ROf25NePtQ3Mulyk
dVto6pvBO1XhaXfnImka+Kd+ZTuszuODGFCvG2q75DcL+0IzOsnjJrd2tKZz
ytNGbcGN64/FuL7aeWM64XF+9mrjkI371VzRe0t1JzRj+Tu5tdVinsvfQ3uO
/BHjKXCE6bk1/HObW/YKJWQADm+7KJhWLzedp6HCpfeA5L49vGFXLy52EiEs
QpywUqkkXLi4uDg9Pb28vHxwcFCtVrv3Fj5geMMMjyj6A2zeVjXsKgbzxQdg
GSF7cvJO8O0OWI7Ig4zVHhfcXFaLe8LPiaDc5x35KKtQZi55+C5WfUVdloMp
uCVmJSMz5dKOYAuLa+NgQ1Txn1mfkmcrGL/cdCEwjao0sEKGbtd94DQYUjLe
MawoBWOIYfA+2eISyz88lUg3Awlb/vqmoQi4pKL7ojR2OkV0yV84TwP0892U
t8a/CF8K2ekxDWaXe+DC2LLXPWS+IJBxhReiOqfpD58KOcvZ0tt4K67tFV/+
T+ZNnbwOvprmG89uOsHDSv2zHoeWaq3D2oLeANPatCzyQXqKONPoaYs4QNZV
vJeubHdObUanV/AlVR3ewoZ8uFfg9vXHajasj+cT3jQV+wvhBJYhmzPpr61P
lrpw06Xa73BXq+0BTi/BgbiJRV5U31yjM2KttrYBJyWAAfr5LuTa/sm9GCrs
Dbt6ceEdvNVisVRVVZ06dYqzkM2RI0fy8/PNZt8RqPvhDTP8es7TNG7TbpVY
rPqSRe4Y1xjzsq9InlT1FvSmWOyQaAx3YTRpcaAyK8YG1wm9ktgyX7wfUfJi
3LKk4xTy8aVseAKyuUawIbXmXdan5LsA4wkBPx/XCENj1drjESUGSMY7GgfD
EQmldW1ulW/GOR89GwyDIk9/5qNhJCmMqa4HwYp2xpI+uHTUWOTP4UvJrR1l
GuhsMo6f8NoaH2va2RCkx8u8rqQ/IZvjcAF4G2+t7LkMNld2bxWSvlP1eMub
PxH+wHsnb4VndiVX76XhxNM7cpeIDbytnbn9R0+bww2dwfRlYCVM+72n8vmL
dBhNNkrI5P99ma0+bBfirT9Wi0k/37nWG7tY/fVs1uvTcb8SSGAVKS+stPkb
VYIi3q0W81Ld9/hyZe6bQh4NNZ3T8Ns5eKFI746KzG4Bjm371K9sWz9qefJv
aKiwg/Reb4Y37OrFhRfwVqVSee7cOadlWL///vvhYc+Xtdpl8PgMx0SP7KLt
Gyw3UJ0ZVVc4eQdX67MXNs9s+MSDnsoVzRTcPaLoD6xPibVgORkFrjmum7UJ
uceFU+v6PZOE2CfLBhsYYRmM9ckSMH6uaN+xG9UwtImZVdyyfuCG07FIxjvy
W76hJHqCCt2XtWzqkZ69QGOE5grfYT7CocX236lHsKyeBJPCCl9mfSqLpqV1
CTnacoL3UH1UzAdX171UNzW9jqa941dE4T8sVvYZprfxVpz7MKIog/dnbr8K
X82J81eKmyZq+2hVppKO0x60mR8mzQwujaEeTve0RQ4xPbe272wh3U6fL+LR
aMIJDm/dKU8mpak+7A5Iuf6YdUt6ZZt6MHW58Ywy/79TcQ/LeAnsbPbra31x
Zu2Cow5NKhlhqfgSedJzPO0xjCbzh5eoirh93pZHYLZYCFcFq7JrRrZ1+Urz
JfttwD0Ej+/qRYeneevCwsIXX3zhlLQCCgsL3TJuHxh4fIar1md4duAEq+3X
YQ1Zadn0XHwVRI/TyRaF1b6o/XvosHvithRjQFAsdsDdEyv/y/50Xg2Wf3G9
UpH2exia0bbUOKFU0E9x+w8SjoACx8ey6uoS6JXt9MmY+TcsLbi4aiPtiJVv
C9u+47yXZM99LLI0vUDr9bQPbrrCr18+Sp3I1VtUfdO5mfkop3PTUxifrQZ7
0mreY32KFV+/OBNmf8KTXPU2XD4517DhfRibrcJcNT715/if9r9rr+KtBtM6
njA4WWCx5hv4amKufki+lMm5emjpzWHbS7XfIlfOb60Wb3GscIKV6PrBxeIx
OYciHNlm42bh3lqG0gcvhwfXH6vValgeXqr/YTrhSRkfgX1gNuv1ldarWlmZ
cWXUvD5nXJ1YnyjaFDFG51GyOwkyrN0IP5hQpbe8SYgbe4H3nSlQa7dXLdqw
NIjirh8USOG9Bx7f1YsOj/JWi8Vy4sQJ4aSV4MCBAz09Pc679kEYPD7Dlaji
akL5v+wbrPXFwRqyVLvJenCVwOU1Has9T/lUCYDTJ7MaP2N9qtLowfL3Lxbj
uhistRHv23GVEylR1nkObGgbTWB9alTRepTy5Oft64QCxpU10M+tuoOc95Ls
uY+D0hm1nC0jFaubSaBX36eHJK2Uqtskk64MSGMqD9pHbyInHVtiF2trnLlw
gflScJ2IojZ6ttM5liyt7YKQWvMuJq2TEf/vVvJP4Z3I4tdYLlev4q2y+SYw
NabURid8pT8NvpqKoFd0BpPeqMYKTnpPSMk5hXFlRBb5I+psHfQWdTIeZNeM
YE767pmCslYZJG5YrNbMqs0GBy5EfBv99rmU319I+XNN7w0QGPfBB+HwkvXH
pFteabk8V7gXh9xs6yVPenZbpHXjzq4GFz7GgT0eASHOX1yvsBd22BZmbv+R
hvn1RLvbRnHh8V296PAob21oaOAkpx9++OGxY8c+/vhjzk/JR9IXYt6t8PgM
n1DWwZ7tdt379g00I5mwgCyUf0LewYuk3q7SQetILHQImWWSoWMsGe5eahf1
R1ZUsHzPiVwscmK1LdKK6Xx8+RsSjoCC8G6wYUhezPr0TrLe3edd9E/w8Sar
5fzqsKNtPECa575aOw+WBOU+jz9aUW8eKWT4/x8Mam0gET7FwecD0+wBSo+y
rvNgT8twDOtT7NQLuvzVncmWh0tFNA1FwuXeozQFmFsdxN7VrujNn8lg1ANX
06kTEwffbnjNvpFB4yANVGAFSwwPUtWssfCHGMHquLI3kPu73kNW80GZR38X
ipQXvNzZCrhZ1I+pK5Ppdimh6VxsIxPc+Nn1k1czHsWTLbrkr14bOe+D18Kr
1p+NzafzmnowBddiEPKaK3jbrHUlTj4qhyr3bmaIe3R/Xt1Bna17T+W7VthX
1RUOf5aZDLYopZfD47t6sbFVy8YxLTWqG5eVVRat4zY7wOnTp1mc9Pz58729
vUBLFxcX09PTDxw4wGrmc7m6Cx6f4f1TubBnsE+iJNBOVeB11WAy40XJvj0u
85Hfekz8Edigrp9mqzUMhNg3OHihiDF+/0nqeZmK/SWrGWZYN/JfkMR2NnAB
SsVSp30DfKi772Q67AxZzbSGFegnMPdZzntJ89yfWmgBS8jo8EfkUfv2yfzS
wNdgRFoZHQh24tcP3JDAVH7g3E8Wg9uwrbdy0+898qV8fMVGXhJHBXjKm88D
zMpvptN6EGeiaXGojHqbIixetW/Epxw9kzZ5oEWNE90hj8KImKz2ko7T/IuG
Z7HWfxNvbtcnipxf4zXAxb5Zr0N+l69mcCRQR5f8xTu93j54Lbxq/cEwrclV
XaGzmX/lZ6yKlBc0o1ku30W5pNlzkv6yWAUFpITJbDnsXw6WEELtYj8aJWjo
kZdhyfNBVsLh8V292HDEWw3qhqz0iCuXz313B2fOnExMCJ6Xl7uRt2o0GhYh
DQsLs3DVjx4aGjp06BBuGRkZuYNB+0Dh8RneOhLP7/qxzaP8+/Kajm48LpfY
tx9X1iIHrtTqrzbauUj2B3AkYCuC5dPTMSjO9jesZharGafImW29sdIgtOAl
MEC1PmPfQJ70HAzhk9OxzLi+C6uxbxmQ/SSKhOSobCXNcx9n2tqfaRDG3XSD
jsiwQOOLeiYz4MK85q8kMJUfUcV/BntYNYI3NkMUMmAUedf/sSkCFlGHG2AP
uH2FI8/CYjHdyPstPSWI38q9mgz/fx9eDIb3ya8Dh3l71b4xtOBFR99OSHpH
VsC/4NtZbb9O3uyVZXlwyeKHYbFvKvon+OTQ0xZtG7Vd8veQTBPzeudMyqVb
z9iTVublKA3fBx844VXrDyfM63PkubBU970y903CUqdvPkV2Hcrcfy83nNEp
6neuKo/rTxHm6KkKyAX1VEZ476l8ltTGtjBXsBfWvaX6E240Umx4fFcvOhx4
USeHCwldDQm+kp8TXZQXG+B/kfwzLNQPt9nivK6io6ODFf3LSVoZpKen48bE
GJfv6wOGx2d4bd912C00DobbNzCujNJTwdTf4VLXXwVV2rdXLvdBhwkV/xZ/
BDbIqD8Edx+d4TCPMAjG+G/OBiE+/jf7lk5po6ggDzKnxBmf4pLhMOO6mMBR
4BvzrMW1cfsG0jz3q3r8eBxbJyLrBsJ+DiMyr9NqPvLFNjSp3pTAVB4QZueo
CA4D3WwzjKI++LebelNpbbgBFvEm37LFm8I+J+Zo4kBw7vMTdwfSH/EkGcjZ
pFfpuRCqqeQ9+0YsNHc952lWHu6XgZV+l6jAEdlDkjeX1ibgkqDc592eBWM1
601rcuPKmEkzY93OCRi5Sp70LAoL+QV5x722SQOyfQ1J73j7JM3BPx5FE6j9
sx7Prw7Kbf4KU1fpa6j5cO/Ce9YfT2FueR1rXOTVjUlvw4paf+B8EdgQl+9K
ZitgfTwflr7puF9ZTGwpFa+Fx3f1osMBb52ZLB3uy4V/zk2XE6p4/txpN/LW
kpISTEUrKip4GqvVapbLVae7Z2aRN8PjM7y4/SS/gxLXo5yOf2xwkpaSORlZ
Z98e7xvDC18RfwQ2wHK1s8sc0exXElsY40+fv4i8GHvtW+JSGjNLLoa7uAyN
bgHufiPvt5xt5grfpTGcd/V/btzm2O9hmR3ZXKN9A2me+9mNh8EM+1qZQSmN
MJzJiB/hI2iNbhEudBTqLBlwraXQgpfsG2yWLAG6F/oL8qXctKsIj09FSIeS
GC4IpShotqDqPRhI581/koF8cYOSC+ya9J59I47BZlU9XtcZN6NETsfTCL2o
hyzGTSGg4Lxfw1XLakElF51CP9+93HB65tYrOOBNFvmgIu2lxcoj6qE0k2aW
53KdomH6po1CqWYkwy2GeQqran1UTvfxkOpTURl+GVQLq2U4hswfk9kQX/6G
o+/OBx944D3rjweRUNAHezPCH8nPTWIDAtPawYCD54vW1rcnI8yC1WyYTqBZ
KmTBdJedYsNdu/qGgRCJX0ItEya+NC/f5K1REf5ujBNOS0vDPHRqysneKTAw
ELdXKHziCW6Ax3krFv8hWz77BlaLEW+62gZmYWkiHNC+vdOCsKLCqZM0LHMr
nObqRVrme6HisH3LjIaPkeu2QnTTbTGHhKHiyriFoRarvoQhXLt0nBkXeXjZ
t8RVU/tk2fYNpHnux5X9L8+pQlpOOQxnNOZJ1qeErsK1hMZKYK0j4MopKdUc
1eUI48alDfadTC9sYPu4yYXQiVeVwgkrfBkM66k5DKPoy/+WzK73zsdgNxnE
nHvPvhEHkFT1XMEf9Y4tML+R9hDKB7WyzRrThIPTE5WpvB3aoJ9rFyjJMpP+
2krzJZ281mKg0fuGpeHZrNdZLZcb2LLV9y5wQnFs6d8tFhMzf+SL7djlOrPk
K4vjgyB4z/rjQai1hoPI3UlYpJR3b7tTyQ5ebqkkiwu5zmb+decdSgN37erx
YijNS6hlvHTVrG1aUFQ01qb6X7tw+vQJ+USJG3lrfHw85qFqNUfWG0ZiYiJu
Pzo66vKtfQB4nLcmV++FSTu9wL34T8XQ6M2aVqqzEZLOHcqFa51wZlOKBCGx
tYl3JS5DLh9B2RMn7VsWt5+ArnBIpDTAFUId5dwtN12AIURc+ZQZV1Y1R41v
HKDLWZxIgue+1WoNyH4KzNAZVlkNKkqyYDg9sa+yPk2ooKJAZH8rtrU8IJMB
LHGUiKdI/R2M5Ysz4c197COUwrZv6eziinPwCBZUNPE2MOeZGeTQn+lMZibY
uWR6NAQnXd6zb7RhoLY+ffLTYIaQeu1t+tuv+35jk+1SPbfKHtdV0C0m7VLt
d0IYq/1LnviM4tYrU1xVIBcqDu88A85LoDOo8DowKN+UmYL5gxXPcr0gk92H
ewLes/54FkWNNgWRW/r5IjrciBW1nlEIvyuyUesWTWPT2jQOVtHN7kiHVjLc
57yVSWtlMluXZivdqyccHR2NeajB4MSnX1BQgNv7JIXdAo/z1pjSv8GkXVRx
n0Vg/Z/SqnpYnThdewQRRX+APqWMgcTRpMF5bKklBjk1o4zxuFToanuAfUss
TVwvucpoz2S6U3Kk6o6AISRde5cZV1mrzL5l22gC9FbWdd6+gQTPfSzRHJz3
a/sGHZU0gLMhhp0ZjdPfemWuSy/uHPgQoHEwjLPNXAFlRmcvnB+Tr7AaNAyE
QifVvdc4O5EerSNxYFVW46fy5OdhFIbF/vcvFpMJ9nUYTSGH2rXes28MyX8B
zFuyTeX2S+bIEVCkbAbhDyvK4KrUmn2u3dqompy5/SoXJ31AnvisIvVFVtyv
wBchwruGtG5s1j5OhD81eVIwCcgwf3DtXf+sx9f1yx411od7A96z/ngWFouV
cEbYoZEVe0nlujKSQJgtltPRdFu491T+5KzKXZ3PFdFclfnieyNv9D7nrY21
qaAqXFOZ5F7eGh4ejnkojygTA1axV99C4RZ4nLdi7VBH4Zcz6bQ6SX5BLixQ
6ZXcBbJvVuLMUOliveZXh+C+sWWvc7apbJ9ijL/l/xYMaq0v3r4lfylYsUEI
Edy9po+DVhOoh9NhCNkB/2TGZe/aIxiSF0Fv2Y0cQdES/JxxEODNiv+zbzBS
HQjDKQw/wPoUx3/W9QeJbS0Pcpq/AEv6HcSULtUch7HcuPzFil2qEbkQOslp
OiK+1YKAvV3tw1RwWxb5I6vZcDGhiUywD6/4Q5vI4j8xF3rJ40Cjo2cj13Oe
ZtG9Q1dKmd/IuyczJqNoDSnj8vDqugIuDMp9zgVpJv1cx3T8YyzKOVfw9vpE
IY4Bthg1upmm1faA2ez/xfWjHbweXKj6kikyu2uAAyeahrYKE+D5E1v6dzoJ
R296yEwf7iV4yfrjDZApVVig6URkndjawtG5PdjJyxnx5TJ0M414STSueEBv
arvw5beSl3KqjPDWy5fOupe3hoWFYR7qtH1bW5uPt7odnuWtZF/nl0n1MRzp
muKq91npN52mMGBR37HZKhEHYIsJJZVCvVXLJj4M2ga2sjDyrv8DBqUZy7Vv
OSwvQb6nz0S2nY3SzjNw946xJM422ukqGEJ54B+YcQ1MLtm3VCx2QG+Jlf+1
byDBzxkX9s1t/pLDyKpTMJyEwM9Zn/ZMZsLleS1fi20tD7Bgl6OI5cVWqlad
4v+uPQ9SLHVBJwnl/xLfaucwW4w4wn92PAeGMHN7M2ybqcW552TmlXQqp0wY
34bX7BvxCpBU9Rb+aGFFCwvXvjMFysJ3aLhFR/CGrTTTdqNEdLMtOJli042b
+iLZcfFfZdavaEZzFquPKm69YsNhox6Sp/x2rmifScvxW76ngaWbyaNHrd3S
DMfzp3Uklh5wVXIccPngAwtesv54CfLqxjCRDL7V7naNdMCtcpsCzRfjm9wS
IYwxm/k3WBvJaunezsWAx71RokMAb9Wu1BHe6n/tgo+37j54doZr9cuwQ+AM
3WQwX/ohrBsZScGwRtV2cRdlKGz7DroldEMs6+2A6zDalwdlMCTb0kOuDHqF
5k3IOYSRMddj7YElgI1elpyjTi6BYaEXhtB043lmXIoFjoTiVY0cegsrfNm+
gQQ/5/qBEOpB7vW3bzBf9ikMx+/SdyazjbNseqHNS3azOERBrZ3jbDPVngZj
qQj5h30DHNMelPucyCYLwgyi0mGFL6310bDthfJPSYPWu5psJxOoR4yJ2faS
x0HzcDQYVmIbI9HQo4CF60xMg3ogibLyjM0Summ1B+gvjkuhzhH0ynYWaSV/
LkamWDisZoNpbdqwPEz+u61aOfcWcHj8rbqD8D6eP3cSCuhpKnMw4oMPPPCS
9cdLQFjq5ZvNmE7G5u2oJI0jJJcM4Lsc9i9X70xDmBO4II4s6sdm7YLbb+Fe
7HreulXLBvFQ1UL16nw1fic/J5rw1pzMKB9v3X3w7AxfWhuH7UF0yV8cNVus
Pgrrxu2Ys7BMdQ5zb9pxAiDZSYplvR3wrrWq5ypnm5kF9VY87Q2atGtYZJcp
2bAtdxJR9AeRbWcjsfK/cHdHpQxxvZXe0IeZcam1HA8Ok9kAvV3Lesw+XU6C
n3NB6zGwoXvitn0DZe6bMJwT568srNgk5hCGiM5YuJOXJYDBtA5m+Gc97ijx
sLuVaiN3RXJbi52bWi/I48N+rryWr5dqaZ3T1c4bpMHymo6ZY1+GfA4ti9q/
3/CafSMxGwzrHE/FH8Xl98LClVI6sFneC7k4jarJyp7LcG1df7DAOxqWhqbi
HsakdaXVT4SR7RLEl/8THWnSsj6s+YPrdrWNJEhupg/3GLxk/fEeaHTGLwMr
MakMy+xkHQXvBDqD6XpaG+7/4IUixbwoIpxWi1mR8ltYYJebzolxFzfiPuSt
pUXxJ078cDs1rKEmpbE2NToqgJDWq1fOaVfrfbx198GzMxynHCZX7XHUDOvW
pkd8DSvVyBT3ZrtlmBbLcMQfxUBlN915kk04ZxtC6xjjCdGDQXEWUsQMJSCb
XZZFbIQXvko9DpppzjZWswGGMBH+wJ4TOXtP5TuKCLJNZJ5nfSrBzzm56m0w
QDbfZN8Aa/AeORMxJLMJkrwjR/wk9KA3roltMCew4i7PUU95fQeMZSzyp5xt
4spotUrOWsMSA7v4O8dTNhMw7w5BO1XBtPnkahn57Xxw+Trrj+AljwOcGqlY
6sQffRtaAwtX+6Byw/acZLX9ep8sG67NavxUyO3IuiFPfBaTVobg+8CJNe0s
PT3LfFRroGJlrPnTPnoTWnKWmvLBBwwvWX+8Cgsr2o/vZvRvxclE1rFOg11D
3/jC5/7lNqT1fJG99qAbgYN/pqJ/al5nb2C8Cruet9rz0Lam24wQE4MTP3yf
eTtCs1Rr33KL87oKH2/1BmzrK3A7RmbKYXuQ2fCJo2aqzhAaJ3zjA1isOENS
CXonabxuQetx0cxnI7/lKNy3f4ojZXXjDv3Zc3LT+PFw6m2xmrgrdAfmPAMd
6iQkSsRI/6zH4dYms85Ry+m4X8EoDp5KIc8pRy3jyylLUq6w/csS/JxDC36P
mDhHhPlUzM9gLPtPptX3sOMDYxArmVsZENtgTozNVoENt+ved9Qsqbh/JIwq
/5h1HImKmCcOTBeIabUgYCXeuZXBqdhfoIOdLbEv5ox9z8mMqxm04NS6ftkb
Hgcmsx6XwTIYNfCRzmBifvVbMQl3gtlwqLAi5QUyo+DayKI/Or2dxajBgnUM
+RVxePc+uiduO2KjrPmjWp+Bln6Zj6zrd1uerw/uhTesP14I+fzaR5dLMMF8
72xhXt2YwVWlpnHFytWkFtzhplLfpZKJGXZVO/eC7NDkiU/DSrtU+62ot9sW
9nPB00aJDAc5rerF2unx4gVFhUXb7KiNj7fuAnh2huNiK0y8HyfUgymwYuQE
/RfWK5WGm+7hvX16/YdiWW+HtNr9cN/JuQZHzcgy+97J2/T4LuZnjlpGlfwZ
Oly0rakhKtZx3nHu8zwtFWm/xz7K46E1jlqSLwL6HJ2pZH0q9s/ZaNJSV0vW
Y/YKYBbDGgxkNPyhTeGsOrZyINb72lYGohuBq3hAFRh7EH7XhALR9fOd9m2q
eq5AV42DHEV1pQSOig/MfdaomgTjp+OoPH5h4/hWimjia3g6ecPjYG6lnxLP
u0LHDLpH5mHV+ipoa/Jb9KsypCqskdeQmYkc+nwxb1arZa5oHyatS3U/iDi2
XQF8UANKwgzs5w9WP+uTZUtopg/3Hrxh/fFOKJc0RwIqWEzz0OWS2xVDs4tC
w3pJJ4UN49+H17L6Ia/jIdXzK9vL5XcNa/0JdL2NfNC44k7VYvfivuWt23i5
Ch9v9QZ4doY3D0XB3oCniOT6RCGsGIXX/wZLlqN0iZmlbuiWs+KJSMBRgvOr
3DV6CL4OqvrkdCyMSJ7skBimVL8DHU7Nu35GtF0Q4+G+ZFA8LZW5/4aBfH/O
71ICR/wtg+L2E9Bn13ga61Oxf86LqlFHnIIBeQzBQDpCniCzKy6fLSVR3nUe
OmkZjhHVYEfAWZCsvTfGD+G1hdf/SjnRKMfGuxMVWipu9zDrGZjOB2Nu1R5Y
nywF48kcg2bjihXmt/9N+AfQvrbvujc8DrBgNUsAPKWU6odE53TD+wvln8Aw
F8o+ji17HXpwpBTNYLnhNCat8yUHd1OJVTFgthhx+Mr86hD+1H7+YBk3z+qH
++D98Ib1x2uh1hpYMk3w+ty/PCS9I6dmtL5H0Tu2MCRbqu2aLmwcTysbjMzu
JsumX1ILK9gYvxIK+lx23W4XVosRZxLNFXpv+oCPt/p46+6GZ2d4Vc9VIUQA
l9CqCnoZAk4ctV/VTEO3UioaBef9BsUuOgwtOxPTcPRsMIxoNsNhliKu1Cll
JOfEHC3nkeagoA+DhbJDMJBLF0+GZnD49RjU9QdDn/b1T8X+OWMXPGeJIp28
Ds2xl8gEu5bMNql1JB46Kes8K6rBjpDd9LmQKfHR5ZJEP+qPW20PtG+Di7ak
1uwT02rnqOi+hHhoIDGY05Notlj2nS0k384n/ufwF+oNjwMsB8ea4Sci62Cv
1YDiz3WKenSG/6O8BpsMX0c3Wuu/iUnrbOZfLSY3ZI0Jh9VqJT+oiu6L5V3n
h+UlFqtEW8edYGq+Gf629pLm9vMHq1vfyH9BvEIePthjWS0rbPs2JP9313Oe
Tqz8b68sy8v//t6w/ng5yltlBy8UOWKg232diqofFTOhlRPrE0V44V2f5K6z
4HH4eKtkvPW4M3z88ce4Pfmn00sYTExMuO/vtdvg2RkusGCNYWkA1ormG88x
C9enfmUO29soGj0lju1smC1GuOm1zEd53B/XU9tOn79ID+4K3nbUEjv4pJS1
tE0Q5i7ow4BwChjIjctfJBVzCCMz6Jq4xePdE/u532HjWzxp30AznEFj0QPe
IBPsuzB2zDNOx06vky7+HCOh/F9gg2Kpi7ONwWgm9gde/hpGtFjFUa92WT0J
XYUXviqy4U6AVbPI3xmfh6gHknHL83GNZHT7zsVB++Dc51taXH8SuQs4En5Q
XgTv6w2mvafyYce1smaTLb5ZOxUOTEr+Az2U2pbRAWinqwnDpdEaic+a17ll
1UWCVr+cVvMe2Om3WZH5P2tapZQ2uIC6/sBtrT+EjJN5BZfM2aXk+yAShuTF
5KmNJxh5ZdQfMkp7OLMt+HirEKjXDcklA/vPFbpMV/ecyLuY0NQ94jFZJCym
R9Zei8Ez8oz88PFWyXireOjq4t7d+bDh6Rme2fAJPJhGZyocNcP1VnpCf8Ws
YMdCqnl6xtKv0jzvyM4N7hha8CJPy5jcnqsXv6fxgRWHHbVsGoqAPnniqN0O
4fdd7QiCgcT7HcivZ+eEAviTjsV+7jvN5VztvAEDSfTbRybYR5fZp6k4fJpH
y1dU4L20RsddSI6ptXTy/GUaapvzT/tmd05aoE7lIyaz+yvfCQThCLgoj1o7
hyOy9HM2ZZgyq0burAC5l27TS2oa8z1lPABLcC+qRuH97lGa3PrFdXZmt3qI
Vtptiv8p9JBcvdf+FoaFXlyqlfw/Zwkt8UDWUnxyAq+okj/rDOJKo+wQSVV7
UKACe7Zwrj85KLahdSROEjPvd4zPVmNxM/xKr/vQaz37Pt4qHFq9qaJNdiG+
CZ/m8b/2nSk4H9dY0DC+uOrhswvD0hA+Npy5/Zpn7eGEj7f6eOvuhmdnON5L
OCoSSmAxaWGhGA3/H2YpOxvjUPhog1XGRZLC8UqkyhJfzkETALcrhkKvfA4j
Wm5wqK7TM5kJfRa2SSdhJ9zPiyWzMvzfrO3i0OlloFzu4/n7iP3cz7EJr+Xg
OEt19CQh5MoRZo4ZbXNnBNZOFQ964xoYEJD9pKPYua47KkA4h3r6JncdpYii
P0CHS2sTIprOiwXVCDrz+T3WyJJFPmgx2Tgoh2RLzLdzMp5mg+ZXCy14KhL0
RjUYcy3rMbPFCB/h5NYolNzKwGoxypOfZwY7EPUAdBJkp4dmXBmZTngcBao9
sC6TWhysuP0kJ6fws0vp9SqQXy7WvLI/8OFcf3CQBo/cvQ/uwppWic/l7F/C
6xpLDB9vdQEGo3lwcqm4aSKhoO96atu52MYTkXUHLxQdOF/00eWSz/3LE4v6
yY5iclZltnhR8v5K8yUcLbzSKp1DQSB8vNXHW3c3PDvDsV4u/7YZC2++ezKD
7AD9U/ieFAkV/4aeCWNys91cGFfWwB1v133A05Is1PF+B2nuYQc72dOFPt2L
nKYjcN/BaYd5xARk5wwDKQn8U/eowwAetXYe+gzJf4H1qdjP/YSKN+kJyRJH
Eu588QEYyIWLpxmWoVzSsJrhWi1rWo6qu6JibnUQ7h7jWC+rrGXyTkhVDq61
ZDFyiC7igE8y2cS0nQ+4dGlGw8c4n33mNjuA2WS2vHcnxfXrMBqtkVrKEQgt
JbAWHEvK7LswWrm1sZfjDE09nA7jvZ7+MJpgNPjWsNhvS1r/31qf1B5A+WIb
JhFk8pAvC78zMlMusUkCMTlXz//D4Vx/sJhbUO7zXuvs2zXA0+la5qM9kxkr
6in8KL+W9diCyqHgoQfh4633D6xmvSz6p/j8UD/PPo30LHY9b92qZePjrfcr
PDvDg3Kfg0cSf5jZ9M2nYKH46NRNsgOMzOZbKwjLQxvyWncbzgHhRWPJ3vW2
/3/o/nMg0VHLORsf7hsiWM2NZOQHn15o42mpn++CgTQE/3pyVuWopcViQlGp
v8IOqQ3xn/tYMoswaPsGsxl/gYEcOxfIsIy+cbZfJrHyvwL/MmLAJsHWcYGn
5JItB19bCP3VcAaUFrf/AB12jqeKaTsfsChTXX+wqjuCZuZWfmHfnlGnPHTt
IlwVmc8X4SAB8M8/p5narF437EEBb2vrHMHYVqt1NusfzHhj034O/UzM1TEN
1idLp2J/aXPI33xJooEhYHlzws2NJi35FeOYmZjSv3mnrDFObuVMHOZcf8j3
gs+ppDn/vG8xOdeAz0BaR+KZ99f1S2GFL9HTEl6dQE/Bx1vvK6wNpuLVWJH6
otXEXZPRI7ifeSs/paWfugqlUtklCfR6L5pR3gYPznA7ISM+wcCZ26/CKvHl
mTCyAySbc572+S3fQOd9shx3284BXNOnqsePpyVhQ7hGyfq4Q1VYfh+leIgs
+iPcd1kt42lpUitw6jFLc4aF0ILfO3JWivrcNxg1cN+A7Cc4Zxp2ZjEHI+RV
3THNapbb/BWaV1JXdWwbSaDb784zjppdT2tj7C8J/BOaZhzR0Q0DodChlAnU
LKTW7KM+O0XZQvmn9FSnN9a+fWHDZhXXd8/epF9r1lOeVRwlfz1MveH9hh4F
kFae6saGpUFZ1ENkvOnJNMW1uS9YPZxBNkV4jyTbFFj+Xooh2WJ6oRXTCvni
1qHNomoMh+AOIUEq7wGurD0wlWffwNH6gxXdfSmuoiKxkoqSpVS/g3/OWBuB
vGTzDquteQo+3nq/Ya5gL16TF8oOec+R3a7nrTyOVLF5qw/eAA/OcI1uQTgp
wzJu35/zI5vAnNpRnvbYgwMnt6LC9o4cm23AlFJVE0T3orpZhz+iOz5KeF4/
Qv4pguEcwKpWBhNfUW+zUQ8DGQ9/0GTmC6XDEV+zyz34I1Gf+zh9klNPyWo2
wCgmIx7ccyKHIRrpleyYtJpef+iqYSBEPJs5UdFNPYw8daOgPnvStXdRODpH
ahguOZrX/JWYtvMBJ7WtauSYqemVHE5txbyaGeClW7Qi54p6SnrLAVhiDtcn
Cs3oBN6aUsp31KYeSCLjLU34MfRDOCyLsZLXcqNnCjBlNdIaPRn1h/BH2Guf
VLXHI+bxgCybWPWLTDD7No7WH5zi6s0JvPc6ZHONmJkq7dSbcQCVF7pcfbz1
foPFYp7J+DNemRdrvvGSak33M28VO07YB2+AB2c4ZhOxjpP1GMyXfMBKP6xo
4/MDNg6GQ+c1fQFuNZwbeS1fwx37uY70AStqfUfIEzAc44pDDd4N24RKzgBX
t0NnUMEdA3Oe4W+8qtYPhv0MxmLWLvI0xulLrFQ4UZ/7NsVb6w7aNzCpZDCE
sZgngGiEZ7FTDLrG06CrorbvxbOZE1mNnwpxbL1/sZix36YUTuUR+5bYiZZU
9ZaYtjuEan0GbAjKfY4tysSVlktw2L/8jjTTP+DaYbknq+lFFdNU/bnVQeZN
i8X6wd3vgrwGJh3WdGaw0nqtOfZHdFVM+7kNaY38H07vswRQa+ewyqt8sR1/
urQ2gUnH3AofPZceWDEvtOAlzjaO1p/51SG49oaEES/3GzLqD8HfObuRQ2B/
drnHdo55V1kiH2+9D2ExqHEc4GYkTM0x17yu+rl27VSFuwzb/bzVh/sbHpzh
eM+cUv0Of+PFmm+odMnlo2QT2Nw3w9PetlooR71OtwOHok3O8Wkdmy2WobCf
wHBMumWexnFlb0j8sMZqJNElf+VvLFOqWm48Q5MolwZ5GmMxUlY2pajP/U6b
4q0n7BvoZpoob035CxCNc7GNrJYTyjroKrVmn3g2cwJPBpbDGqDVm2hx9gt+
MK7ZrNftG2POGFrwe5HN58boTCVaB97VyevA5pnbf3B0VVx+Lxng0bCP4Nq6
fof6ZmLDZNbbVhTaipYfnFyC7+L9C8WExjrtaraHHrgFpj+MSOuPeAIzxEbT
UCRYxSmWjmvXlnedl95CHrSPJoJtOU0cpzcbjtcfsgvFIgzL6kkxLb1PsaqZ
xtIHMw7KUqfVHkDLOLsCr2fh4633J0zqGXnis5i6zhfvJ3x2W53oFA2b1c2i
f6xT1LvFKh9v9WF3w4MzfFhRBo8hpyFYWHs84sondzRz+Fx7w4pS4Z27BbFl
tCrH/OoQT0sclToe/uCqmi8n1FZgSgrFVxyy5ZSa9YzOVwS9AsPRTvMV1a3r
D0YswyZsVdTnPs49bBwMs2+gGcmkj568A8A1jgRUsFpi11Jk0R/Fs5kTgbnP
wt3X9dzHHbJZFdh/IpAK1U7HPWLf2GIxYT8a4V8ij4ADODSCUB5cSHex+mtH
V/WOLZABfhpwGq71YKUSXNg3sphW9Ess6ofvIiTdYZ0vFgJzaPDzYMxPphMe
X246b/Go7kdsGfVrd4wl2zcYQYv5jfwXJMtoEII8lJPuqKoXz/qDV+BeWZZo
Zt6/qO2jqlmJlf9x1AyHzVzPeVpv3B47EBU+3nrfwrg6Pn3zSUxdFakvGha4
T5XtoRnLJYyVuZCwV72y3fk1zuDjrT7sbnhwhndP3Ob3gmGousJgWUj020f2
gTLH0rUbm85cWrIhuXqvWw3nBg7o1ej4AnpNmhkYS2/ow/L5NZ7GhW3fQrc9
k5nutpoDNjmPLQ6JA4O6bnl2wD9hOOrhdJ7GOMiW9Y2L+tzHIdycYkqqzhAq
sFB3CrjG3lP5FtuMFZNZB11dy3pMytIYOsMq3rY5atbSPwv2X4pvnEKK/WYd
R5wqLuHqEXcSlroiawIuSMQjtc2E4B64EAHXkoFIaTbGoLwIzMC5n0cCKuC7
4I8PwcACNbJZKbTQ+YEDMPyzHtcaVuzbmC1GLNktjYS7QOAZPrPErULPs/40
DITA5SVcWsQ+7ARWqyWs8GV6MjDp8GSAtMRfZc8k37NGYvh46/0M48qYPMnG
6yqLfHC54ZSZN5TOYlhbqv2WJV+g6grduT0+3urD7oYHZziOPXOqZapGwuOZ
/m+SfeDiqpan/aJqDDp3Guy6c5BHKo504nc3GBZ6YSxNN54fmOBzHGNfYdNQ
hLsN50DLcAzcsbLnMn/jgvqxRL99dNXt5JMqGp2p4Nzeb4j83E+uehvuOzXf
bN9gqe4HOoTuSJyTuKRie8NDC16E3lTrQsnIzoGLt/Lkg+fXj4HxMXk9M+mv
8Wscpda8C91OzrknTmlbIGNBtKJrOoGmfnPW7gH8EF6752TW1QzqL9Yb+Y6A
xAOmNlU9V5k3seP7ndMFOoNQFyQ+quJ0bkoMPDrWzxaDcDpoVtT+vYQG8kGj
W8Skm1V+C8Cz/uDar5wx0j7sBGRBhj9vYM4zRhPfY70eTcW0mvckM9IpfLz1
PodJo2TJNN3xn/5sqfY7vbLVarE53zatTa+2X2fV42b2Hm4xxsdbfdjd8OAM
Jxs8eAbxiKMyWJ8sgV930fXNDEQ97z5wXb8MnQfn/cathnMA745u5P2Wv7F2
uhrGUh74hyZeRwwufVLedcGtVnODcFXh30tyyUDYlcMwnOUGPn/E7HIv9JxQ
/i/8kajP/fDCV+C+KxoO1Vns41sfz/8urAYYx5CM7aP0VAlXzPp5irdG53SD
8QUN4wtlh6g3fOiWfXvMkronbos5Ag4QHoGrqKwvD+GHPutxz0JW1QgZ49kk
+uUqFoXG4roX2KEPf8PU0kH4Iq4mbSM1tXk4Gnor6zwnjsnbACFryMnlMORD
Nt9E18D8F7ykKgTOnuZRHuNZf7BO3bXMR/mJlQ/bBRY9IGsRf+MV9RQ09tss
pqaUxkin8PFWH6wm/VLNMRYVhQDg2cy/zhW8rcx9U570HEebqB/zx6ptCz7e
6sPuhgdneGHbd0K2Qwx0sy3wG68JevGd0w5rnjKwWM34ASd2POeCiia4OdVG
1oxkwFhyAt4obeYLzhyYzoeecyWpVJLfchTu6LT0bVhm55WL1Fm5UPYxT2Oy
zYCeQwtexB+J99y3S+E02LfBJ6V6ZXtAahswjtoudtUM2xKuUpQGZtAxlgT3
5YlXPB/XCMa3DypXWq7A0FaaL9m3x0nHtX2BYo6AAzgGNbzwVc0w/Wko8xxm
ujEwmEx7TuR9F70Heuia4CDmEgAXeGIKm1qt1sPXynlmEQ8w1Uqr9fAOZE07
i1kbZ5AwA/JDw6HCLM1hT6Gun+ZO8pz78a8/MaV/88hR1a4Ha85MzNU5vQQf
G/LXm5MSPt7qAwPtVKU8+Tec7NXRS5H6O/08d/6Ca/DxVh92Nzw4w3HFw9GZ
Cv7GxpUR+Jm33nj60JVSp/3jB+K63kkFih0Caxk5jV9S9UTCWJKvvZNewSfi
hL0YqTXvutVqbhD74Y5OA0cv32z+4fxVyjVy3+RpzFOOVrznvhDJ3On4x2AI
Js1sUjGV08msYpdwdaryJBJwfAJPxPinfmVgvGJBjZngfAlHDaCeyUzoNr/1
mJgj4MCwvIQ6kes+xOfVK61+Ti8/Glz1xY0vEDHxgJItoai4PCijlzUwsQjf
wrtnCrT6begULatljo53pAcWZk+pdrL+FLQeg8bSVB9zCqyqxFOejH/9wTEJ
TkNQfBAO/NwUKOeF1aEJh5XASCG4H3ir0aRtHYlPrno7rPCl2LLXK7svS5km
cw/BataTPZ488RmnjHUq9per7det7tbc8/FWH3Y3PDjDk6qoo8RpgJ9Zuwg/
9v7QX5D9qtP+8SH5ooqvRurOsS2vKNZGjrz6cUwun/QcdkiREbnVam7EoHzD
BRWbtbHwXVjNkTMR9OQwzUktlZD830Hnau0cvC/ec1++2Ma/z7GYdPRREvkj
q9VS2jIJpCMss5PV3mlVHZGQ2/yl0x240WTec9dy8j/kn/r5bv5vBx+MSKNg
htEwEAp3r+y5rLglVJuawdSc6pAfDWtPKHdSTksMYI9kcN6vmTdD0jtgCgXf
2p7n0WI1+2c9Dn16KmmXQXbjYbCkeSiKv/HgdCH9Lir+LY2F/MCnl0trE46a
8a8/neMp0ImjSjpeggXVSNvoTYOJu+qxt6Gs6/x211KNbh4dfnpLqPCu561z
K/2Rxa/hvzx5BWQ/5VXqWF4Fq8W0PlG8UP4ZVmy4GxX8kDL3zbW+eItBlLXd
x1t92N3w4AyPLvkL2lGM8zcmiwD86ifCHzgT5TygiGzCof/pBXEfK9vKQl2s
PgpjCbj0TUAqX+CZFiXqBuU+71aruRGc+zzLecSDT66WHTiVis8P+dvjXDnl
ch+8L95zf2Aqj+45m7+wb2BcHQf75cmbf+GukXkgHWdi2KV4cTmGW3UcHkyR
ICSvVj6/BpYfvlZO3rEYNTas3C5MekVDU8bCC18RfRi2wDVKOkcSkKkPCqyC
dzYum26lMqT4gbCAfUZJVXvIOxqt8d0zBfBF9I4tbLdPXFTLkQSuBLBYTLh6
6dwqX3VmAq1hBcvTaXR8inMSYFUjR4vnc1arw/q5/OsPWanQb+RVESx1A5qH
o+FU8Frmo5kNnyw6e6p6HFh5YHzW+TkVA6yz1+kFwmUbu523zix14eJcrJcv
AsEpTBqlXtmmna7SyesMy8P2T2H3wsdbfdjd8OAMt43jdcKPCCaifw7b2uDk
SqftsadgWOE8rngnqOkLgHs1DobzN54v3g8DOXfh7OlovlhcstfCwjWc6Zlu
BOkf7kXuy7PTY7D3VP5bJ3LHwx+EEZn1fPWJMuo/gv5HZ+iXKN5zH8tWV/Vc
sW+gk9fSOOecTbWo2UU1kI5P/cpY7XEuswRS1YDQgt/DfR0FaLUNKMHy83GN
zJtYop88NFmXmC1GtAl5xJHgqkiIL38D7j7WRx33Mxl/FthDc5/iSvoT0MmU
chuZpG4BdsYVtn1H3smro5LOh/3Lnf6I7JHT9Dn0KWUONQuKpU4wI7TgRSED
wacr/VO5EhjJA1zFm78UNf/6Q34UAdl0jnmcj9tjar7pWtaj6Ie8+bqe8/TY
rPPAJE9hbmUAmyq8eDRWvL9d94GoRgrELuata9pZXOOP8zUkL/a0mT5Q+Hir
D7sbnprh2yocw2A0jm6/b6YXOm1f0nEK+u8aT3OH1Q5R3P4D3MupKOts1usw
kOPnAr4MdMLBwwpfckpY3AWcDUruy99YozMym/OJ8AdgRLqZRp5L8B8Kq+iI
99wv7TwDd2wfvWnfAJdYWqg4vHEn2vYtFG1rMtsoo+qNaugwIPtJF1iJC7A5
T8h81NHvxaYIzt3487mCvTBAzRhHgDGun7iqmRZxGLawWM2YDszWfw92LtUL
DcC2WK0XU/8MnQTedljyVSRUdF+EuzcNRZDZ8slVmmKcUzvqQp+1fdehT+nF
sgCNg2FghsDcZyzzVSB5ujQL+M/IeWYFcLr+YD4u3DMoDeZWB3GGNX6R35en
RLadonEwHOzMbjws/MKltQk8QG9QeN6tvJU83VKq38Uzqqzr/IpmqmcyHU+5
oNznfLmu3gMfb/Vhd8NTM1xrU6fm10IuGYh/Fba1ublO9Ic3bDctTn2gO0RG
w8dwL6caU4qUF2Agn52JPni+iL89ViudXeZLht05Zpa64V4JFXwiSwSKhS2/
5EjYj2FEa/18xKGuPwj6rx+4Ae+L99zPqD8EdxxRsJ2nBCtt/lQL6K7i7idX
S4F6KJc0rEtwKLU0zhdcAIInUpFVBId5c7nxLBI74iiUbFvftkmsMdiBJUCE
VZ3XJ5wfTAHiS49AP4eDvrUvXSQq0us/hLsPK0qr2qfgK9h3tlCtdSVAok+W
DX3mNH3udpsF4lbtATDDqeQ7A/liu/CDL7GRXke/moHpfJ6WTtefss5z0FXD
AF+VaolBWBvOuPG7EyeD/xlW+LLOwBcD4yngRJ7tpklGFdOjKm/wKe9W3opl
2cirrj8YPpIvtuFTR57SbD5IDB9v9WF3w1MzHB+ZRpUIignsTPhf2NZWFiY5
bd86Eg+3qOjmqADiRiRW/gfupVjq4m88FftLGMj+k2lv2Xn0WMAbY7Gf0bhI
KCHj/I37xrdEU3tDH4YREZbEcwkOqizpOAXvi/fcjyv7X7ijcqXfvsFi1VeI
dG85ZE9H1wP76BmdZ12Co1vFPklgMCVMPYlVBId5Uz2URiWFSzl2F/kt30Dn
vZNZYo3BDjYFX6rfkUVQr71Z5zxxANA8RAuefhNx4MvASv7izu4F3kLPLg1+
do06W+Pye13rEx8fxZa97l6DBcJsMWKXikBHPOuqZTVfkS+xcQPFN/JLKDhd
f8jvArrKbPjErWbuCFjenLyqezdVuLvG0/CbPGWzPAWdcQ2XJ8MafUKAgxxK
vWB0u5K3ruuXcTIX2YewgouwRKGfbeKPDx6Ej7f6sLvhqRmuWOyA5Y4RM3GK
xri3YVvbUhLptH2fLAduQXbmO7WYFxFFf4B7rWimeFpazXoYxXj4g2+dyCX7
2yUVX6RTUdv3Lp9Lbxf4fNWpwGN9j4LZn9cEvYg8eld5LhmZKefkxeI997Gw
DGcatTLvP1TDdmrryRua0Qnso6xVxroEl3CSJrUHb5t5JjOrCA7zpn6+k19S
GEcmYCe42GgeioL7FtV8QJNb01/bVj9YKetkwt/J2APT2qWJ3yY0DW+/s2v6
4O//zumCxVUXIxjJrh76DMh+wmrlO9cSCTNLXWBDWOHLwi/EpWecJk2IB6zz
HJjzDP/f0On6M786jP4aHvYjA1bXFVh6urTzDHyEf9R+mY841dSSGDj1OK7s
je1ePjFXB5eTh68YFm4Lu5K33qz8P/wLspduJmtsWu1+esJW+neL1ewRU33A
8PFWH3Y3PDXDsavFqV+PQVkM3dn2lTkvDjiurIVbiK3eEJD9FNyLvwaBSTMD
o+gN/dVWfujMKs8lNb3+0HnjoMPCnW5B/UAI3Kuu30liXUHDOGN/1NVD9qG2
nHAUhyzSc19vs/9/krMNDtsG2aL0iiEgICklA6xLylH5htaRODEsZ6EBfS+O
KmPaF8Fh3rcY15Er8wGLSce6kJAL6JxRFpIGBa3H6WQroacHy41nnF+MgIOo
L6Y9x/wFIrO7zRY+qrKq1ncMzeXUjEbldPuntF5JbCb/jc7pzqsb6xtfNBgF
bcBw3EhI/sv7zhbCtEko7HN+vWPgilFSJh0DsPpNfstR4Rc2DUXQCz2X4oqP
yFKqnRRIcrr+WCwmsoBAhxrdtjWixUBROz3SDC98FWd6mi3GWFTRzKt8xBub
6hOnwbaqHueVmlkwmfX4mbusZh8tSozdx1vxyua36cf352y2qBrFB3c8JZJ9
kAw+3urD7oanZnjPZOZ2t8qZEUdgZztW5nxnO7vcy0mR3A6DUYPI0VNOGi/0
wiiabjzPbHE7h/mipGyL7Jx3q+1slKLtRIezEgNJxf2M/f6XjsOgFis5as0A
sO5TaAH1/Yn03Heq/Wu1WmVRD4HxFuNWKmttlxwIyHW7QkWtI7HoG3FS9sgt
wHpWneOpnG3si+AAFKm/gzHq59lx7Nh5wS+76l7crKDn+e2pT1Ovt4DKrRgW
q/laJvU67T11i/kj/BBRSxgoOF7J/yiXNOSbjcjqOhJQAX8rzte7pwsIkyWN
9bwEFrt6L6X9Cy5//0Kxen1H0t+pNVQOZVxZs5OuXANODN+Wrh2OpfGgLwwf
wVV0X+RvLGT9Sap6y7PfCAtr2lmcymqv3oxPbslrftVJMW4pgaPrJ+f4FPUd
4Xbd+67NTzGw+3hrCso+JsyUp4o0PjyJLXtdmkAXH3jg460+7G7sR5Dyvvgw
n1/pERAb/C3sbKdLv3baHhfvE7XoHnb3RBb9kb8x2ZPDKMoD/7AVZ9vJ508Z
mM6H/nObv3Sr7WxkNX4G9xqWl/A3DknvYOw/ff4iDGoufw/PJayqKxBWJNJz
f3y2Gm7HWWvVpJmlkyr+UXh/eGoZOMjxUPYedUheBN1mNX4qhuUs4E2aoxxn
ziI4DOZLP4RhqgdTWBfio3WnE9hdINsbnAg5FLnlEZ6K/onVJLQiBiA09zXo
6uClG5iBHjxfdOxG9VdBle8hZ6jw14HzRXH5vTML3MVkcRL9scj9cFVVO1+y
gBBgOfS2kYQd9rZdkG8Hi48tqsaEX8uqGmMfXigNyA8TbHCatS1k/cHK5GIL
/QkBzmyNKf0bZyB0ctUeaFPY9q30RnICn176Zz1uMrMjQISgeZhmtXMW5pYS
u4y3km/EH/2Eya6ApzHZaOHzE29T29712M8FTxvlgw8iwlMzHMe+Ng0Jin31
v3oG9t6zRc7F6wymdbiFUzfoToCrHCZW/pe/sWYkA0aRE/AGs8vN5S2WgTV5
UmvedavtbGCfgnyxnb/xhfgmxv4vz4bSDMpbr/BfhcVSNLotySORnvud46lw
r+L2H+wb6Gab6aTKpA7ZVbUeOMj+c2xtW5to5/J/iWE5C2Rf6tRvwlkEh8Fq
ewBPiRmyS6FH61mPSZOjhPeuQdlP0XOPQichnZyIL3oPejsecd4Ffur0dTG+
qW1AyYo9xlzmSPBRpuWVxOad/31aR+KgZ+mVZxZVo3D34LzfbNeHklL9Dlw+
KHeily4SsOaA0+xOIesPDqf3oMgzA5NZjzVzHOke4HiAgOwntALqpEuAXhnN
1nc5wEO50g+d3Mj7rWfdfLuMt+JwOL/MR7T6Ff72WNnvdt370hjpgyP4eKsP
uxuemuHF7SdgoROi3UG2iz+cvwqbW2Xu/wm5Cz72F6/KG06kcppGpOqOhFEk
X3uH2eje5E2FW1SNQf+cwa5uhI3AlNqJz+hocNWWS+tUCgxqKu5h/quwGC8I
/Ir03K/pC4B7cVavUA+ng+ULZYfwR9g9p9LYeADV2nm8qxfDchZwMpfOQciW
TRGcehsH2fpkCfrtcMTMhxa8CP1LU4lvQkmDk+OznqGSzr2xLvR2q+xbxPKu
BKS2OeWhe0/l/xBeSwh+UeNEU99Mx9Ac+W9hw3hYZudh/3Ie9+vxkOrYvJ7G
HsXAxGJIHj3n+cjvCmnwuX+5a7VvWMChAlIGbzOo7L4MdxeoP4CBjyWlCaRn
QWdYBQP8sx43W4z87YWsP5goSRaW4Ag4CIewNkJjOZsRNhdVQiNyW0dc+XG5
HYVt9NfqclEhq9USnPdrejSxwlYhkBK7jLdiRSYhv9859NPw87SKuA8+3urD
7oanZnh242FY5YYVpU7bE+KAnXoztwWlTYUVvizBbnxbGrwrzZdgFJFXP2E2
w8G3+UrDaw0r1DOV+7xbbWcDa4/wC0wRfHCx+O5+PlcW+T80S5T3iAAXVYSQ
V5Ge+04rvKzaFG+1SYIj9ATYCqskKNkNYhlPsQvf42LHgbnPOmrGWQSHgWlt
ioZDx/3K/trEyv/CLaYX2Pm8YqB99CbcMT3552CeUeXKnie/Oph1dkS+MvKz
OnihyCZm+EIR+SvdrhjqHVvgT1ydUqqSSwY+ulzCT34vpFKf13vnYw5dLpld
5I4o3i5w9gHOBJcGuCQoWau3ezl284mqLeAIU/PN1AABERFC1h+T2YB/9Z4t
iopFm6t6+CTccTJ+TOnfJbOQB+GFr4BJ8kXXV5ucps+9hJI71/Wymu8Vrd25
lQFEQh8RuHHC1Xj5J6QPYsPHW33Y3fDUDE+ppqojUwstTtvL59c+Op1A9943
BcX9kh0L3IWzdqdb0DgYBnep7bvO33ix+iiMIuDSMWb3ey62kecSwpJw/gjZ
PrnVfApcfeN6ztP8jU1mC+ze95zIkyc9J5B64LI+4GoXibfiaSabb7JvsFj5
BfX0DSTij66nUZ9ddQc7ATmy+E/Q8yJvacidA59m81Tz5CyCw4BMIVw12LQm
Z12b2/wV3MJe4EUMlHWehTuW3PyxwCBzR6isT4fecD1oMvAllVY2q5qeW2M5
zYWATPL6HsWJyDpO0rrnZObVjK2bXs145KvAUuWSxjX77UF2uZgl8eiiiAGc
3dY6vG3FbHzUdi3zUbEPduyBteyE6P4JXH/iy/9JH1tc64k00OgWsIjrooov
zUSrX8YTSZp60zzABzLkKePUFc4DXA08vd556pB4cDR/LBZT13haQsWbd76v
R+LL3+gYS9rJkCVAGVLLz6j/SOBV/VN5cFVI/u/IwEU10gce+HirD7sbnprh
WKJ/QTXitP3A5NI7J2hmqCzqISF3uVn5H7hL14RYkoO4KkrbqBMFlfmi/TCK
cxfOMhvgr4O4lXYAYYUvwS3EcxxjfZ6o4j87aazSwQb+o8sls9mvw7h0M3w7
OlxYsGEglHlTJN4aWfRHuBdn8JIy51+OZGzTygZhgOT/WRem1dCEyom5OjGM
B4zOVDjdnumNZsSnaBEcAB7p+gS75izWeGkcDBNlGLa4VXuAToO4/7nr8uYr
osSDpmYadUy2iG4/25mcWY3O6WZ5b/dfiISbBmS9rDe4eauGF0kp6YZqnVY+
JS+1dt6FTnBGtpCTSfeCcFXha/KG4PUHS6dKUwCLE5iVJ1T822n7bOSXrOh2
8SfmLuDcSU6tPOHAD6wdUuAdgnP+aHQLSUgXC39l0uRiuADyN8R508OKMoEX
biZcIyW30ZlKUe30gQc+3urD7oanZjiuTgjiPDxo6Z8lG8WRMFSyxODcAYGz
Ncs6z7rDcA7kNn8JdxmYLuBvPJtF+d3xc9ffuls1g/8q8qSTYAc7vdAKd0mu
3svfeFyxAhv4YyHVWLFWM5rNc2HHWBLcpbRzq56RGLxVSDSvPPFZ6iZencAf
VXdMwwCvp7GD2XCKlpAE7Z0A/8VKHEj0EGIF1h4JqLBvsNxwikZEt7LjuLDn
wmmsu1uAYwV7ox9kDDMsuDi3yfzBZxQLKlFKfhiM5uTi/hMRdR9eKnn3TMGZ
+CB6nlDnfncPphtSFkYcQ8W1HVU9dgocVtE8FOVeC50CL5hT885lsgSuP+2j
idBtgedK0+Ko/taReKftCfuA9qEFL3EqD0sGvHLuXJYZpwLtJOR4h7CfPxrd
Is4sZr3IzsQ7qSuO8L+R/8K2jgKwSF22p4XL7mf4eKsPuxsemeGswFcha2N5
q4xsyLtCHqOxjirnpcZxWBe/lvtOkFqzD+7CGYyKoUj5LQzh8Jlo4BomM99e
Ir2eIyfU7RhE5V1ymo7wN24fpFVXLiU0LdWfhHGpuvgcdsOKUvsvRQzeqtE5
UU+ymg2yiAfumv2A1dZJNyRbwsScdW1dP+Us5P/dbjyGrTOUW3y7vpsWnL2a
xOHe0gzTcIW5AvahhE3BoNoD7h+DLYwmLdzuWsbDE0yQcMoLLndI5g/+jQzJ
nRwEuQWEjsEdxVAfwupGYs8xDFxhxOXiKV3jaXQTu/0M2Z3AYjFhRT6twYka
6obg9Wd6oQ26jSv73x1b6gqwELefMG+4yawPyn3OG/jdhm0MzM5T6Qtaj6O1
UYpAEU6w5g/Z0iRzeVrxKyT/hbX1WU8Z7Ah5KGFku0f9WGbfP+txnWFVJCN9
4IePt/qwu+GRGY7zKHl0ZjCyqkfIhrw+mJI+/Xyn06vSavfDjZKr396x4dyI
2U7M81TsL2AIR65kAtdYUvGlgGHnhaOSBzsHlsop6zrP35g5SWBe4ZldhKvC
uJYbTvFcaFs26D/Mm2Lw1tnlHrhRfPk/7RsYVyfAZnkSex6q1w0wwHfPFLDq
LOCiGGIXRhSSfHqrnEY1J5dwSGsaV0ZoejiqVMsA1z3B+aEiAUt/hN3+xV0v
sJ/LHZL5U9lDJXAh/lxUFLf/AHfsGEtye/+9k7RcCJkDbu/fEXKajsB9Cf10
rRP8FYcWvOReC/lBFmE6uwpfFnKJwPVHj55c17IeE09qgAdtozRIOKVaaNGo
/NZjcFVl92VRLeTBmlYJZgRkP7HzP6BN1LH4B26OwJo/WMfebzNL9JBaO6/R
LeIICr87VXc9ZTAnDKZ1LFyvWOSTi+QE3guJHYbkgyP4eKsPuxsemeErGqrM
ILCgwM3CPrIhLw18jWYjysqdXlXWeQ5u5LRCjcvA+SDr+iWellaTnqboRv7P
MaRYO67gcwpgz4sjj9vOgZ+2Ts+u0yuHcfqnZjQbhjZfyhczuaqRw13CC7d0
eMTgrTg6jvPb105Xo+owHGli71PB5Lz5FRt15Yk5mlCZVvOe243HwElS0wvc
fyhc+cVeRWrDXprJNlwBFzv2z3pc7GKI2LOflPqzrTjtFT55GX6Q+YNPEvJb
jrrRWkfAql8TSvfnOJN9I//Bi0jA6RXKZb4SXTy44/Ske2BCWNxrJA9wjRiB
wjLC15/I4tfoH0c0rT8e4Mx6Iam7DPBiSL5fUS3kwcB0ASLdbqhFjvcSHkxx
xfNnfnUIh5Ol130IIkVWqyURVUj382iWtD3wt0M2Zi48BRoHw+ljsdbHnjwD
H2/1YXfDIzMcx5PcrBRUiTUkvYNsyLMCqLaMetj5aR4OSRUpVo08ktBj6BH+
1CGTWkEdfIlPX0xoAq7RMTTHcyEW4hCvHiKn0q8jRKFqoSXNE7rZZhjabNY/
eC40mfX2FEkM3mrjPuYKeVrrvwk2L1Z+Yd/gVFQ9jLF7xCYeb3FtnD7ii//k
duMxcA4XYf2cbb4OqgJTR6e5z0CUef/Hk4N8I++3cBfXpHiEo2EgFO6Vk/gT
Ys9Mxo6cvGT+yBdpDKeQ0ic7By56u6rhOCvYIXD9I7InF/swgcG6fgluGpD9
xE6IQEr1O9DViGCBl50Dx9XX9AUIuUT4+oNdZj2TGTsw0xXojGuYEzlaDexh
NGnJFPIs496wPUl2qr0vEHh5nFnqckuf2wWeP6k19DgrvPAVVr0knWHNP4sG
sQfmPus99XHw3K7p9XehBywWTbZDGt2C2430wSl8vNWH3Q2PzPBxZQ0+jRRy
yeWbzWRDnnTtXZpE2e3c7YjTkZwKDbkGssOHW4Tk/46/sX6+E+wnG/XQjE7g
GpXtUzwXYg+CeBGD28qivZrUAsa39M/iCqHyxGf4r8XCg+v65Q1xeGtVz1W4
S9NQpH2D5aYLYPNqO8f+NiKrC8ZY2GhT7EYyB+Wdg5FH4F6cPMJssew9lQ+m
ruu4uQauHbxU9wPr04SKN+EuiiXnQfg7gU3UYsKm2Npan3N5GR6Q+YNZXkD2
U2KzPINRgyeASJvP4Lxfw13WtFJkw+FMZwjjdw04cttdJEUIcIXowelCIZcI
X3/wkUu5s2QKtwMHKvCUxOIErnZaP3BDJAv5gRUnyDbALX3mtxyFPluGY9zS
53YB82dCSeNwHD1Gceq3n4PC4tLDaNLiAAmXTzbwc6RzPNW9RvogBD7e6sPu
hkdmeP9ULqxs+S3fCLnkh/BasiGPuPIJ1URtvuj0qkXVGNwouuSvOzacAziN
K67sDf7G67JSrI2TXDIAXCOrmi8xVjbfBHdJrdnn1hFQ4HK3s8u9/I2/C6sF
40emlu9oHEEI9INWC982PrbsH3Cj+dWhDXF4q9O00IWyQ9T/OMzhOsmrG4Mx
RueypW5xfLgQTWzXgGVYHOUJziyowc6Pr5Q66korK8PHJqxP8bbWqSz2DpGI
ClS1xv5oKvonFr3K+WWOwcwf7DIWW64T//DFy1PDIeJONd/cgoaBELhjWee5
nXSFT9t2WPFkWyA/E7gveQQIuUT4+jOKxJaFp5e6C1iGaLsesT5ZDlxLyIVI
FvJAb1TjIziWI9JlEHIEfYqXDcQPmD9JKAw4o/6Qo/ZYETqy6I/eUO0UB6dF
Fr/mcj9Y1c2DGcdCsKqZnlnqWtFMSRPKIhl8vNUHgdDr9SqVymKRWmHeZDLt
5L4emeE46rWi2zn9JPjcv5zsyQMuHaOBndXOU9jWkQuGU1F258B5jk5XafVg
CrW/6suChnGgG3H5fDwRK43ElP7drSOgwHGPTp07hB+B8Qsrm6JS0wmP0/RJ
DR9rwLU7mcRAMXgrVnTkrCA5m/EXMFg3y9EAayafjWlgfYpp/sxSt9vtZ4DD
X8luh7MNUyWKeZ2Pa3TUlVm/gs8WLEYN/hR7xzjd024EdrgPRj0g5LfMD2b+
JFe9Dd1OztW7w1KHGEKer4yGj0W6Cy4aIo3zguz84Y479AQtq2V0+c19XprN
oa3b/QmBjED4+oPPkYJyn5Nyx2u1Wm7kvwB3364s8J2/DKWN4h21OQJ+VrpR
jRk/HIPzfu0RDsLMHzxA8ppb4dDHY0Aer1jyWsoqV45QgGJgqnquuNwP/tVf
y3pMiJq3xDBbjK0jsTiLP7zwFfLIM5n1njbNPfDxVh94sLy8nJKScvny5S++
+GL/HRw8ePCrr74KCQnp6uoym0WJHCPLMlkkExMTr127dvTo0QMHDpD7fvDB
BydOnCD3zczMnJycFN6bR2Z4XX8grBgClT/3nyva3JNfOEvFf4qdW26xmvFz
RIxYPlvfsZPt92pHEPYX1/coaIXQVL5NiA0Bz33erSPYwp2/lZN4VNTYuudk
HquIz0zGn6na81w7z+X4EcnsjcXgrbhC6IqGIwx7Ou4RRLQ5ePrsogbGeMjO
j5nV+Cn0L17hlYGpPLhLTjNHEi5BZhXVyEoo4BPSUaS9RKm63EZKCNemLHVQ
JdYtwJM5IOPhzbKtS4M77JOZP0XtNEFbDIFfjKahCLiXeAKtjYP0LhXdl0S6
C0ZYIXVWzq/uqAwueVThAwqyoXWXkTyYmm+GOyZUcIitcWJb6w8O3uZcWETC
7HIvJmguPM6w+75nMlMMI3lQ1x8sxgqzOc1Q6ItTSX8xwMyfW3UHwQyneho4
1ddppJbYsFhMeFbvsFISGY4Hpxk/yA8Wm4dfMaV/X1obd96F18PHW33ghFar
vX379ocffrjfMb777rupKTc/1EZGRs6dO8dzUwLCZG/evKnRaJx356EZTp5Z
sFZ0jqc4bU9oEbMnP34ugIr/ZAvK7sGhg/xiv66hdSRO+MZyqe4Hmp/bEzkw
sQh042Qknx6p1Wq5lvmoQFLpGjS6Bej/Rr6TSporazqw/IOLW5Rtvmg/jG59
PJ/ncvuCpG7nrWRTh/9i9gUXLIY16nyM+jHnKb3FYuXJGy3vOg/9iycLiYuE
VvZw86PANComXNHGxw4Wq486SukdnamAGwnMOncNWCY36tYv5grcUKCKmT84
RM1pIacdAouYdY4li3SXYXkJ3EWgNO5OoNEt0iOF7Cd3Hr6Id/JiB58zwGps
hW3fCbxqW+sPLq82rHAYlu92YLHW3OYvXeohbIc97ARpKMzGUT0v14CDBDyS
U0nmD3b7+gkQ4l7VyPETSgxBcuGYQolIIfkv8MtLOgXONchq/NRdRu4ci6rR
kPzfcZLWu8dBv5nzkGSZG+HjrT7YQ6fTnT59mp88Mnj//febm5vdclOLxRIV
FSXkpgwOHz7c1ub80MwjMzyn+QtYKAblRU7bA0s6fCYKdt2KFCfcigEuKEZW
rR3bzgamYE1DTqSibBIqR7OwO+/wNSdlfXDSlhgKLXOrg+j410kQ17hiFSw/
dqOaeXOp9jvEyqN5LsclCBl+4XbeigsFhnDRcMNiP51Lab931M/RYKrTOzK1
jD9qGY5BRxaCwt1dQFnnWbiLo7IXWEyYZSQL6qE0Wvon3ybqeH51CJ88u3MM
tujoonpZqSk/0824IW2TmT8jM+XQs9gJlVgsV7yY5PnVYbiL2LLVG5uKebVw
O0dB6dsCLq1V1XN15x06BS6q2zoiVOxrW+sPjqiv6w9yyUxXgOsuuSZlbOux
/c0O6cm2YLGaA3Oegbu7V38bL8XS1MBigcwf7D9NrRFU4iev5Wt0KuUwGVYC
VHRfAkuK2r/fYW941bqe87TJrHOHjTuFWjuPQ7AY225W/h/W2WZ2C6vrCk8b
uyP4eKsPLJjNZn9/f+H88YMPPhgbEyQNwY/8/HzhN4VbKxROfoAemeH4vFo2
5zAdDzClVDF78gMnU2HXPRX7SyH3wttLziTHHQK7XXom0/kbK3P/TaM0FfV6
gwnoxt5TfA7KjW2KJrkALITodM+PEz8vJWzxjtWOYBjdchOfogvODcxu+nxD
BN46s9QFt+AUIVmfKMIaWY76uY5cmSzNZ6ztKVKVpQ1bVwKnc8dktrx9kjqF
tXo+X7xJJaO/oOifWFFGj864BjcKyH7K/SO5A6vFVJj+LN0jZXMrTW0XzPzB
xYnCC191S8+OYFsER2g5ku2CbPngLtcyHxW7PCUOSy7tPLPzDrG/WJp6jljy
a3KOnZPuCNtaf7DAkWRCQAbTun/W43Bf144uNzNkUQCSeFn59sA6ZuS3497O
FWi190h12qbmuiAUEi/QC4+PEfwyH/EgXYos/hNYMjpTsfMOcfao09oEEsBi
NSdX78X8NL/lqM6wunHnwYd3cX53imXf07muPt7qAwu3bt1i0cPjx48XFxeP
j49PT09XVFRcvXqV1eDLL780GNhhitvC6OjowYMHWd0GBgY2NzfL5fLV1dWR
kZHS0tLPP/+c1ebkyZMmE1+sl0dmOM4vmFt1ntrWNw7xtLkTEQ/CxtsqYG3B
JcnIJsod5tsgo/4QWvAr+Rsr0n4PxhuWN3PHmLxd5rW2zjdJtlWkxgX0yrKg
/4LWY/yNy1omwezwrK2SeZrhDBjdQhmfUg3WGkqq2rMhAm8dkhfDLbIaP7Nv
oOoKR0VhvnfUT3olSh0ttAn9Ujijxm5BfDn9sXCeV8hmVWDhZ9ecV8mUJz2H
Dk9sNvZBNvWJ3B9Uv3Hnz56a8jO4S2eve9xVzPwhtA6H3hlNWrd0bg9piuAw
wDvARZHTr7CmtNMKzkLw/9n7Du44jivrP7MO612vvassW7IsyZLlbDlHZYmk
sqicJYoSJQaQIAkQJEEwAQQIEjnnnHNORI6DQQYmYAK+AkZ89aanpzpVN0b4
+h4eHxmorno9qOmuW/XevYurY9DhSf2lmQgvw6cnq3arzAsVPX/wcdKZnJ+r
ilQxsHmcFv3qTKSyXtNzmmOEbLTciKe7fFt7lRxBvvjhaXciUj/Nt39JZJaG
Y1Yuf38Jb7NUdp3QNchgwLYL5GPk8tjERTT5zfu0d6gROMc+TEwpvbzjGG4Q
rCTnGwGTt5rAWFlZeeGFFzAx/OKLL8gPcRvyao6LixPwx5wcWS5yonC73W+/
/Tbu7bXXXhN9z66trcXExAiGTkpiHQJuywzH0h9y9o1rOydhZd4bjbV0pK0u
8v1qaflXvsSW/EP+9vXohR9C8G77Ji9462QJ3NrINMsXQNHBrgrgOsrS9jB2
42tFPRD2taJe3w/tkzUyq4+xO7lve5w7b23ov0RfUmKljnPlVJt6qf1csH7q
0NwTSPWu2GZgCMmKYNXAchmi6/DyljGI8MgV6YwCa+lbVBys3u/tLMmRNWJ9
YWA05r/OXfsBjMLLKBbmz7n83yjaE1MHY0xwfMAlov2TEtUEGoGPXSQL9GQC
SzORLz6XPoNhfmUYxhKtDggGRc8fwkrw0afv1EZvYDdqLbXbHcN0f9JIHx9s
2dzQf4F7/ziJWqZpL0dEZ9EnpyJ/ovbhZLwHYmTmNgBnWfMqoh+eqUZE/mfb
azRjXR7EX9ikqudFP+eMujcRdb1lal7ofPdNgclbTWCkpqZiSvjZZ58FO0gl
bBG3fPXVV1Ufud64cUNARVtagi72PB7PwYMHceP333+f0fm2zHCsAC9ncw+f
7nXEPECPLGell9YVnYq1ixXhTM4j0D87XdDrdiAXku/4nuSECsGttfazjAnw
fmBNzxnOt+Ff4SKpMhSV3AJhFzV8LQS0vjQMNzge92PG5eSPDmORF8qGDrwV
16DV9cUENpjO/AdEaxsJSgewNeoLh/zO6zfFslJvg1H0qOJxutbwByX69o/N
7YIIEwulmdrqQBrdXkj+Lf4VzknmrpDscdkmr/+CDBqe/L8wypqDVY0rHzB/
kqtfQrcgXTuvDsaY4PhQiE4uyApTv4G27DW/HohMbF6ZcliNR7+/iA/Yg1KR
d6TS5w+u2hg1xFf3cvHfYMS+Cem0imDAhf/kr+xcl6XfqB3Reb+iu1XWZu79
40rqIp012QTASQVKN2fIqxCX/ert3iWKxPJnIAA5Oply4Pasn8y4B7rdXg6I
t/5OZT0Q7KVDvgt4ll4u/ruuiTT6weStJgCEeL7yyiuYEra3B/0yEv5ICCNu
3NTEcgZhIDs7G/cTGRnJbj83N7d79258id0edEVt/AzHS/HwtDvlXJJS2g8r
87bLf6B0Y6xM8losAVTU+qXm8IXA6UlsDu5amUC07m7fD08lNQcrnxTA/0b4
v5dx/li3lJ0cptstfTO+H/oT8297mWKk+KVmcy5w561Y+0v0dgizhmjXF4Om
X3o83qc+y4abXVr1W8xH5/4SRplbHuJ7Cxv+GVzn8n4j2uaLC9UQXl2ndAaC
22alf6az/+G2zcKv/BWSeZ6JEI5vyd9Dhus59y0Y4iQ/RyeYP6Xth9H2jl5p
kMaY4PiA/Ynymj7Wb6CxWZq9z9FeEyvXkf/m1a0oqroj6d9FSaaf0ucPzn5p
7BdXS+MI8oREzOgWjSe8WKvQmNpDrFN9LPV2PYoHB6fKKOMo+iv3/hmo7o6C
oVUcYeO5ZLyoFCFr+CySY40tPr7crhRoAjLD8a4Cez92BOkqh3GqlTAeJm81
Aejr68Nk8KOPPmK3Ly8vx+3PnFF5RiaQgerokD5kFMgd9/cHdTQzfoZj33aZ
xUGXszspb736NJXk7ZfWVOxC9peZ9W9rDt8P+ITiePrdEo0trRD5ZPLXHCSh
oBtuLaWU5ZbYM5YDYwXz8dSCq+U0z2pE6gThzRM0vXkUpTePxd5Js7iXWafP
eO00u9THnbdip0KyIBf81uOy+1NsVjnSh6fL6XH/jVn8K/yhyReBkQ9sZJ9Y
/oxom10HaIn0zPyanG6nUh6F21/poRvs2NSJ496I1+O2lr7pG67h/HdgiNiS
f/AaAuYPWWnQRaBUmbZqGGOC4wOeA/FlQQXEtAMTZMkKd/nADy69RZ6xmoHP
GFomlD5/8C5iTuMHCsNUDHyOLN+UNhjw9pTeuy4+YKHvK6X/1mMIu3MJhjia
cqth58gbm++y32thOmOzDXB5eNpdTpesZzgv9E8UwugXuMrI46XXpaLtMaj1
ej0XC/8EYVyv3C15SVb9O9A+Kvtn+okk6AeTt5oA5OTkYDJ49apEseT8/Dxu
//LLaoQHPR7Piy++iPuZm5PWSyEcGV9SWhp0T9X4GT690KV0XzTyOj2U7Eh7
k5YltkVLXotXfdxXTbhOMzr3l+zGa8MFVMA25+td2bzaIbi1mAxWLs2opU7L
pq4kYvJ/B/1LGgY9/XkOhL1qo6QPEyL7FMsBCmtKD89Uceetp3MepnvIAZ4L
zrke+YZKp1NoUnR2td/JbDYq2lLnTMEGZmGiy2PLwhrE9tyBXJllRItNx+H2
Lbn0CYDVX3kJpXrW1yx5z8FwJZf+k/JKfocLMH/wIpAjLxbAGBMcHxbXJmAs
/cqoCXKbKBnn6Ec8vzIC3UZk3serW1Gcy6PVzdNKfBiVPn9GZ+uNXJNjpqnd
TgizSGMIBT5z148pXyj8g2HfSgD2jzuWejuhz0p7IA9tnLfTPSbhLMAX+c37
0NQ6zLFnu3MRq+QtrUnnAnFH91g2BBCWcsvsUtATHMCKzYK13USLjEIcJm81
AYiMjJSZJAx47733lFJOAdxud3p6+qVLl06cOPHZZ599+KEsI/VDhw7hcauq
gj7DjZ/h5IVCiaS8EqSvLtfC4rwn/0uqKlN3UPLaGUSTLxX9RXP4fpiYa4HO
Je0OV7qvQOTW0rd8P8SyP2xRHezxEZP/W0ZLdRAk7jJaEqIKMRMCi3/lZ1DL
PA3HMh0dI6l8eavH48JvzEB1x7WhHGSC8zi7t5zqQbjfqGS/0vKKzuMwSlX3
KY634ENlVwT0L5pqVd81BbHtPy/3wNc5102Pm2O+53F+rSw3Pd8Jw10s5LCg
dc71TF5/BKclZyXegT4xiZIH+YD5s2q3QP8nMlhF1lpgjAmOD16vJzztLhhO
PxUgXEEpmXEhH2RZjp8t+pl94Kp5skZVVG+u9PmDT/cIW9HbnwifGQ1OSVfH
sLHleHULdMirxpwBLJqkX40z1mDk+GxhA9fVqt7r49KJOmBLUzmmhIqA85F4
Vc7KB3ny4K0M+XkRWBTlVNb937gjV5O3mgC88cYbmAwuLkqvHwRUV06Kr3Z4
PJ6XXnoJj9vVFXTn2fgZjnfAMureknMJTtQcrI6m7K9MOu8XpyWfzuFjFgnA
G9eSr5vFpvBAxt0/Ng+3Rm6TcTlZr+q3IHe5HXgZxj62G5mmxitvnvCz/pmv
+RzucbGZZXFS2h4GI9b2RvPlrfiPHpX9M5EGLaeQCY5EzWDXENgwZb4X6bdo
bB1MhIG027UHIqfxQ+hfNAPtWlFvMJseNiYS7kc7DCm+H5IVLK855nHZFxrC
Rs79Jyat4/H3plbshiG6pMqo5QPPH8ySCI3lNQTASBMcH7DOMy8FZgEEGrns
nSuluFr+NPQs09pSBSbn2mAUpSLPKp4/2J9IP+VqAhv6Vh5NudWxvqy9TyyD
r4c9HIbH48IbL/qdu2Ff3UQlqlxagCW4JXUhgkF4aMvjTywHs0vU0el4+t0u
tya7xkD4KxW/yLdzSQxMltAvTuptC6ty9bLI549fIhyTT4yByVtN+OByuTAT
3LNnj5yUvISEBHxVfr6+LwgfSktL8aDPPffc8nLQx6DxM7z5xhV4IAS6aIni
1aOFsDifaE8VTXEMBpfbjt8ImsP3Q+vQNeg8r+kTduO5ig8h8uWOr0VvrIs2
uLUXD0us6PDCkq967eLqOPQsWXTc0jcTzBqG3Bflg+WsErnGfj+ZKb68dcLa
DJ3HlfwzsIG17O3Av0Uw4PPlJ/ZlrbsoT8Gmior0S2UCa7EOTVcGNjgcVwex
lbcI06EZWKg7KHrijFOk1B3teT3uld5ELHv1dU130q9dq9PYu1nSN0o+8PzB
a/LRWWljIKUw0gTHB6xwoqhsUz509STFYlkVnXoptLQPJ8EoShUAVDx/Umte
oX+UEV3+KD70oQrE2GI+qe84cVfmW1g1cGUQ961jDKzrS55jHqYwIBfgWwtP
u1NLUS0uktXpOx4IzCv1OOf1d4a9Sw/JfQbiy56A0ZUW7Fd2nYRro7If0juh
gi9M3mrCB0L9MBlkm8sACFHFV12/rrs6mc1m27t3Lx70q6++YrQ3foZXdZ+C
B0JlV4ScS55B1ZSLI8gkNJVlEgrAS3HH+or0BbJR03MarceOsxtb8ndB5GuD
X9ewuNweuLXHPsn0eFibIfI9d5RiYq6VLo2kqgKLGkYg5tMpfqc/fjW8zPxb
P5mp2tf58lbcuajH/VTanxWpUr92rAhu+cY4PYqaXeqHgc7li+v9agF2IxUt
On7hUD4ENjajYJfeOdeLlakIo/T9/ALSy5pRUiG4sZWXtXojYyLxIQFj3UyN
KHnd47KRBjqlvOL5g1PQW4eu8RoC0INMcIxJ6sOLKEXukPKBz6q431Q3UmhJ
qnyeb+eAotYvYRSlUtIqnj9Yu7i4TbpiRTWwQxmvCsTB6Qrok68aTyCab8Tj
R72uY0Vl/wzGUlTgrA64TkT0RSMfeDpdr9zDK0I2/B1w+Lvbb/hL7g9OszLK
+GISLWnCtrQfFV1O3k3Yn6h9OEWnOPWAyVtN+GCxWDAZPHhQ1nuqtrYWX3Xl
yhW944yLi3vWHyQGRnvjZziWmGgaiJVsv+5y+512LQ4iRZ2fyhkRJ3TJzxWR
A3wvjQMSbgiEZYtqFj1/kFKPuSXWhiQ+SCJMk889bAGLCkquWq8V9UDA5L/x
r5zWLvrXufogoxNsuhFf+hhf3oq3kYvbRPZtxi7dKlP32Ifwq41wy4U3/Wo3
/FNGw9Pu5O6ujl2WAjfz8WH905/nsDc9AjGZ/Bua1N309a5LctULMKIim8i1
kQKfPavg31jsXWuD2b422DuSr0QPnj94N0mRGYpM1PSc0bX/QGDel1rzqh5D
YL9jQpP5do5r809lPcC3cwDORu6fDOrILAoVzx/8zCRDK71cPnDd8cBkifQF
MkAeJth7etU+K32NWmTVvwsD6Z1ySXixotWFRmAxQ416Svg7Qv40Nv2LjvVz
wMEobPkChtD7ZB8D+/olVanZK8OPxAuFso5IQgQmbzXhw8jICCaDx47J2vRu
amrCV50/r6NrPEFFRYWAtO7fv5+9ljZ+hmfWv00f9TLqQQiVo5m0h/I9jiVY
Eo+e/x85I2K6xzE1cWMzfw95no5lsxuPx98Lka8vDcPP3z9VJnqWFwjCKFUv
zNhoGbwKPec1fcpujPV1ixCJI/A4lylnOfc9xtzDUsxnc3/Bl7cSropWSsI0
YLd9nk6hmP+SQzbTyqmDcHSa3xSKyLgXLf+sHO9izTEHPYtanWJRps9iFOtn
LndeopWncXf7zIDwMqOh/5Kcftbn+2ayHgtkrCMx35uvPUCmBLTEmth87TDw
/OlF56F6FFVlN7wP/bcOJnLvPxBYL+u8Pqdj+ORF0X6FHHi9Hpz0smKb4du/
DxGZ99FFeICEOBsqnj+4tiKCnxOxAA5/DSWOKQrYKaxnLEf6ArWIzvsVDKRT
dTYA+xNl1L2p61jWpQHKNFNu057KhWso9EgUEWBgsljvp8qGfymNpOcCL6zY
LHhbRp3e1NLapF8n/KTq9IbJW0340NPTg/lgRISsBNf29nZ81enTypKXFKGx
sXHXrl14uD179hC6zb7q2SBo0A0x2ZRF5lWcl2yfVVgNi/NXj+SSnwxHfwfW
xg11lZI9nM/+F4yYW36Owz3cxLmsv0LP+RWX2I2Ho79Lw66tgJ9/EEHPWxMy
Khg9xOW9BMOllxzmcw9buF5I9X+uFX7AbvzeSRrwtSzh5z8U8wO4zabqvGCd
1NZRfyLy0r9+/TqH27iJiznUpiS7LFLw25aSWIjwxuX75XR4PbsSbvm1sFz8
q9OZVJejuCqR2z00NBRX0erpqIxfBzY4eqkYogq7WKy0/8basqFz/w0fRXvu
IfLDlOL9MGhC/l52D83lST3Ju4bPflvAWMlPepKebqrKEbRPLzkCnV/O3aU0
YAbw/CmpSoZRItMf5jiKD2ez/iD/W88FNXUV+MtSX1/LfYjjqT+GIcprsrn3
fzaLKuLmlkdz77+yllo4HUu9q76+XtHl6p4/4ak0k7CiRjjbuSCvPAY9BH7F
sefEQppOfyX/FY49Y1TVFuGpW1dfrdNAPpAnMAx3Iu2nuo6VVPQJfc4k/4lH
h59Ch2SZpL1DNsgfnT7qC97QaZTa+qpjKVRDvrQ6TaeBMPB6Jirjl6r7uZRL
d/Mu5DzOMUIuCLZ6N3mrCR8GBwfxrDh8WFaZSXd3N77qxAm9JCmampp2794t
mLrl5dLVBMbPcJz1ND0vrYDaNmARqACNX7mHJnkuSRDzDf/zEb4CGrgYkF1A
4XYs0DO+Cz/Av4pOa4MbLKgbDtbDxmaZG5Vn5+u6gh0EJPXq3zxRAgGPTAvt
6nD2qWOadYqBJfuqa4s13gKGf0K1cId/pScBIpwtlHUet2Jzwi0//mmWc51K
M+FDcL5aqViPJbn6pcAG+2OqIKqaDjUqnXNVn6Ks+/u9nvXe8TwYlJEx7nGv
zxa+JHLGevZbs8V7cToBBhaRruY6gRvQeRn2Qzmacit3SQ18rrdsm+LbeTBE
ZT8Eg86vSD/0FAHrb5NvJfd0d4JCVFLB90/vw9A03Qe7UvqY0ssbVOV7+GUm
8z6k9qG84xgMwTfNEhvS6ScvhiX3+aZYiMLjceGTfaXH7ooQV/JPGCi9JEx7
h9jpeDNVmKumdyBw5amo6B8vJFe9CAPV9+mbc0jg8bqxe7uWul1sdBiWcove
lme8YPJWEz4ITk6joqLkXNXZ2YmviozUxVOsoqLiueeeE5DWq1dlfVuNn+G4
2lTOc6CidRwW5xHXmshPplIeRcyoUbIHrGbJ97EZmflT6HnNwTLndc73BSv8
TCqmViaJhSw/BSxwUdCyn889bAFrY0pmCT6NZLJWbUJSYCl4Hu4UDFZEcR6x
/pIqnroH2F4z0HYBm/UsNMpVuXk9nB5u9o7Qv7WKxFqZwJLLhS2fC37rcnue
3p8NIVkX1XjMuZbHR1AawFJ7zNR8BwwazMLVPlE1GvPfgaR1JuvfzrlexnCp
Na9C5xrLwQQQ8A78kLEu3eA4ELajCk+7Sw+KJ4rEimdh3BtTpXw7xxmDCWVP
8e3ch/bhFBhCjxJdXNKe3/yZ0svV8VasmCRTY1Ap4ksfhyF6uDqfrrtsBpS4
YuHikjYjisGxBnvnSLpOo6zYZhCj+b+qWj67FjhVWFdV4bnlIfQcu1NXpd+W
wQQY62q5Lo8XDLxVciL9R1pEnglii+keeHlnOK8gdYXJW0340NfXp+LktKWl
BV+lR31rVlZWYJJAfHy8zMuNn+FK1X2zq25Qh8rszfNZS96zVJh3SLowp7Y3
GkYkr1EO97AFj8eF9+LYNo728QqIeTrj7/hXDHleAfBZWFrNa3xuYwtxJTSV
ml2ChE1hCG8KbDBf+wVS+2F9TfACI6+C21fD7Vn3+7sEuCHM5DxJmfWNDJnd
nkpqhhvPrKRUyF8DiqesKFnmQc91fTGC3w6MLUA8Lx9Rf847V/kRzgRYtlLe
Gmjh6nU7FxuPYar7dXls/H1rQ3mSY2EXeEKQVcccCAHvuF5JXWL5HoRhmcpg
vF4PFLTQ/O3Akm2NqO6Ogs6LWr/k27kP2KHyTM4j3PvHItLNN+S+/gDqeCsW
YRbNiNAIwiawcs6KjbMZsV+JK1dSDEgooyUbvfoMIQAW5s1v3qfTKJiLcdQV
xG4LumqVNw3EwUD6SXz7gNM5jqbeprc7bVLV8zBcgfItLAHwhtuprAe+EYY4
Jm814YNAl+noUVn0R5CCnpAgkYGpCC6XixBhLaR1w/AZ7nI74SEg0001Ib8b
1uepZf3kJ3Pl78GCeblT+oQL+/rlNn2k8RYAq3YLeqDdz2680pdEc1OLXsG/
au6dhhv86hKr9n/c6qfBq/0WAP6H4KzcqtHpJYj2zRMi4pZY7cda9jajK5y/
nVHKbT8Bu/idznk4sAHOM2efD2IU1A3DjR9LoKsUP88drpsJ6bV7oedA1S/C
nSGeE4lNqkdx26yjF34IH8hUyqPHg1jV2CeqJxIfDjxmteTv8rgckgN5vZ7w
NFroxHf1Ilg3YqHvut5zHAfqGs2AntO1OV8oAhackVROU4o0NNPah5P5du4D
We9hCsZdLvViIa2fJc9JpZer4x3YBisq+2cqemBjdLYe+j+Xx99mq7wznK7w
uSbw+ED+6Nj3ypik+pGZGhhRP7khwvVglPq+87x4K7ZR3jSEda1x6TYQWDde
0gpBO/DXU1cRsC2OTHXMZha6NXboctux9KKuwfOCyVtN+DA9PY254YEDB+Rc
VV5ejq9KS0vjFc/q6urBgwcDSWtGhtzzIx8MnuE4u0bmi/5MSiusz4sbNwu7
FhqO0jzPBum6EpwFx3EPE58gkMcyu/FiSyTEPF/jl/M5PLkIN/hOBCsDENe/
ROf9isM93AReUq67WBmnLX0zgnJjAWyjxfRkOfOfjK5w6VZS0Sda7+EmsMNO
YKWbx7lCOVf0d7xup8xu8Z/p+YP58HNsfXu5+O+MHpTCr0rX2iz4bVh8PcST
XzekZaCV7iuYh0an0KWmz8LVae3CSQ70mPXKjx2z7TJHwbvukVL7PEohWDfi
jPrcxo84DuRnpWpg2hg23OSeyhudR7XF9HO9xBl3wzOK5a8ZIPwIp7w6lG+J
qOMdHq8b87JVO+fzUOzoxHca+zA0Q4uC9aB4U/Pt0P+ZnJ9z718UhOsdTblV
vx2SjQAHmbnlQV68leBcHvXs7h2XTmJRAZfbgectiV+PUTDwDkl2w3v6DYQP
rONKWMsP+cDlAAbkOWuHyVtN+LC0tITp4ZtvypJYJ0QVX5WXx+cpZLFYPvjg
AwFj3b17d1WV4sWAwTMcbyfKtMQ6HFcH6/PG7mnyk+Wuy+hE7x3JHsiaHxEZ
btIQWNciseI5dmOcjbnUHo1/tbjigBvc/SVrhjjWV9Bm7F0c7mELducSdBuY
GioAzmqOShbJKF5Hlbzj8SyPTpyqdCX/FUZLRcBml4FWCI6ZJlponChyGhsM
Ho/32S9oYe/E7Ncp7ngrJjJTlqGwTJzKuh96FhxVeL3e3V/lMdSxlMKSS2lp
3NXvw7gtFXun0v4YyFjHYu+Un2LtAz4HiS99XGPAAgjWjcMz1TqNhW0BjTSj
x64rktkdioCfKmTBT9a0HDvHyGuicql8D8HxFuLZ3F+o6EE17yAvFBh6cKpM
XSfBgNPd9ZhsmxTPr8SVp43XxuYTPhY9it/i2zkDeIeEr2GcD33jVLw6Jv93
GxrmTyCweF1WvfTyRgXwfoW674tSjFub8FvS6/XoMQrpFmeOtQ1d59LtHLLW
DeMtmKAHTN5qAvDyyy8DSXzuuefcblY9ow+CPF4VvDIQg4ODe/fuFZDWF198
sbNTWps3EAbP8FFLLdq5kuXV/tGZClif949u7p2uDeVSKZjcZyR7mF8ZhkGj
836t9R5uAmcMSr5fLHnP0ZrcQT9FGo/X+/inWXCPWKs2EHibVKPgAAA7nsfk
/5bd+FoRVZG6ViSiIuVx2f0ONAPKSwH47X8h5wmtt3ETZEkM3Za2C3W/VYgJ
Aw7F0i2UwpvGteRdKf+0Wj5cbjtlE6m3Caqnxy3LEMmuA7kezepAHufyZNKv
fR9L6pX/hqELYr8XSFqt5e96HIqZMq4Iy2n8UGPAAgjWjX5nu1w3E7AcOlmM
ceyZja0s6zthaLtT604FAC8pZe4lqgM2iebrrYnrTFNr1OyAqeYdWJatpoen
zx35yp9Ipz473EWkfcC8m3uJK/Y3NyAZFVDSTpUB9BCDwhUupe1HNrjyVqxh
ezLjHj0KKrG/ufYKUDkgkxnLsOtk44uPEo6n381rgbThb29NPj1e3eoEk7ea
ABw4cABTRYtFOilIkMo7Pq5VRru9vf2FF14QkNY333xzdHRUXYcGz3CsLCSz
OuzVo4WwRJ+e23wQOabpkdlUyu8ke1B0nigfDf0X0aNMQpCHxMnQQMb3OGVl
PWyxhzuvlQzeTJBMQcRp28DdBBiLvQtulmFUhDNsz2RyM2LAK8nGfuFiab76
MyobJVtM2If08gGBtLUP+I9i5ZRzhTdbArfE82qHIJLDcXVcRnTb56fS/kQ+
lvzY71EWcMVPN5g0cMwIM5ZlAstM1fSc5RIzQLBu9Hq9eIeHo6MEphLcz6fY
wFqjHBd+OKc6q/5dXt0GYnKuDQY6l8+zWhMrxld2nVTRg2re0T5MzYL5lrdP
z3dCz1HZD0pfoAq4WIN7ieuZnJ9D51PzcgsKtANXBl0u/hvfzgkFwz4CY7Ob
b3OOvJU8u6Kyfwb9D05X8OoZEJP/W+h/YFJEpEIPkGcLDFrReVyPIXAyDN+t
0Z7xXOg5IvMn+iWlcIHJW00ALl68qOjw1OVyPf/88/hI1OPRlB3R1dW1Z88e
AWndt2/fwoL6VZnBMxxvuct0K3gKmX3YHJuHd67lUZqJGifNQ8mLAJ+IuWSX
NLKBFf5re6PZjcdi76RUbmVC8Nt956gRZ+cgy48AK0CqkB8RRfdYFvQpeQ5y
4GINhNrcOyPaZjr9L3CztvGgJsJ+rpFp3A7F/AxVx/MFv53JegwdfIvoITPQ
PzovKuGLN2OHZvgY4eGs2sDNhGMJDRBJVhW3tCWvZ32xKbwq9gcw9JWr379Z
qvwP24imjLvk6pegW+7KooHrxktFf+HO8rAU28mMe7j0KR8ZfinK3NST8po+
gW51dVd0ue248FBFFWowXEPK5IFfeTlQzTtmFrrp5htXnWRsg8X3eBoD+95e
4Friih/v4Wl3GSnEis2qwlJu4SsBh9URIzLv82XCcOStG/7i4dxF2BZWRqFz
si7ilSAkie6xbBhXDyV2u3MJ6/759hN4gcxeXLbTNZrJsXPuMHmrCUBJSQkm
jDExMez2Auucw4eFKYuK0N/fH3jSevz4cYdD086PwTO8pueMoj03u9MF6/On
PvuaZfhnon5XjoViVPZDMO6ybVrrbWwhp/EDtIxkFR8ROjBy9ls3Y/6WN+AN
fvJaE9xmeQtLzjet5jWNK7RA+B8cS+TAvHG8RLKs0lryBhV87gqaHiY0rGEa
CckHzuScnGsT/BZvIKwvDCjqWWCZCifjeCbwqqnB5zhZ/kIWHo9314FcCGN4
ilvKqA9TlgYY+lz6T1Z6EgJ3WlQgJv930K12mUcBAteNZKkPw/FyQsSSX7HF
/+DSp3xgg4/Sdmk9OpnA8l985ZICgY+MRy0s7XRFiERLSnVZKKp5h346yfhR
33zjCq9uBdCvxBXzFOPVbC4V0ZnG1+8Y71eDxBBf3orL809lPcC3GhTLSlyv
3M2xZzbszkW8bRXoq64RLShvhG86hw+47lgnk2teMHmrCcDi4uJzzz0HnPGl
l15aW2OplBNiizlmcrL6HXIy9GuvvSYgrefPn9d4gLth+AzHuYKELkm2n5lf
g/X5K2HUhxE7d7jt0ksF/Bab4SSYeb1yD/Q5OB30VJGALPuxoE1ggyt5XXCb
KaX9jK4Kmj9DixnFNoWiKG0/An2y9VK8Xu9Tn1HitmYX30JfbDoeTDxZAPJS
5r6fgBexAsdDt81Kdzxivuf1KGbKX12qhdsvqBv2/bCyKwJGrOyS5ewsCdxn
Radfn/jY9/mD+XL2bRQB59Xzkv/yeFx4ec/d3yFw3egn/NuhLCE8GLCjlk6S
KQxgx6XkKmWl2cGwpYhLy2bXHHNcug2G3KaPYCxeZ7tYGO14+t3qFvlaeMfl
4r/rQfzxc2xmUURJgBd0KnEtRF5UOuWFMoBLOH0lqLxwvuBR6Bn0fvnyVrdn
HXuv8D06xA4+gXU0uuJq+VP6bcXgr2FtL+c6lA3/yp0wQ0SYVcPkrSYwDh06
hJljUlJSsJZTU1O7du2CloTwTk+rXJYTcnrkyBEBaY2Li+OyXjV4hmcjd/jO
EWlXoP4xukT/8DQt9Ji4+iAQEOd8n2Q/1yp3wbi8MjkxF2abRzimG9kFubhc
8Vy68IgQA8u8q6vkCgQuPGH/URaQ9PGuA0FXOKsD6dTcM481wdhnoyogkDMS
LGLt45X0D5EsoUAlCuyaGnal3vdDfDbKS+Q/p/FD6FNwhnutqEe0zJYj8Kpp
1c5KXJcJnJwWlf2Q9g4FCFw3diFZaV6Fh/iopao7kkuf8oHF2HnZYFmXBnT9
uwiAz0R4CcwOTpdDn6pdrbXwjvzmffSZ3MnnmYy18k5m3KuT/qoPOpW4Xi76
K3TLXWlZEn0ThTB6bAm31AhsRXcs9XbH+teq8nx564a/9BNHaal1lw0n084t
D/HqWQ5wZtc1KQsGRcDPxrCUW3jtgQuAC4ICJR9DByZvNYFRUVEh4I/5+SK5
moS0vvnmm7hZVFSUaIf19fWlCDMzIgWDgYOGhYVpP2n1weAZjvf65LzLGnum
YYl+KJbqz0xn/A0ICCEjkv1k1b8D43aNKvPvCIao7AehzxWbeKWnD6s3MimP
y98V2KCxm97mV5dZ6XOtg4kwKK/Kl8SKZ6FP9nnBwNgCxPn+qaB/PoelTabX
jF8t6kQho6VM4HVFoJzRUls0FcUtVbNsHp1egk/g6c9z1l2bJ7bsWlR1YNTM
vhdZBjFUtGqVehMF3k/gUhyK7Uf1SBoMXDdOzXfAiLwK91JrXoU+uw0vcXK5
HWRJBgFwKUzDplHJVS9o75ANP2mmPD65fLW9Z7XTLi28o6qL7iXyKnFtG7pu
2N/F38WVjz6eY30Zz1WO8tcyYXPMw+hHU24FgqkRDf2XoFucZMudt/Yj3s3R
qubGVCna++LmrSATePfyaOptHGcFtlhNqnqeV7cCYCWQyMyfhqw6k8lbTWAQ
tvjpp58KWGRaWprTSaV++vv7A3N6R0bEi26wtw5BTk6OoIHb7X733XcFvR05
cuS0EnR3B60mM3iGY2M1OQKDxY3ULfR0Cl0/zxa+BARktV/a2A4/1sirR9M9
bMHr9eD3Mlt0Yqmd0qW5yo8CGwxPUTb01kmWvl//ZBFdz1S/pPEufMCJT7NL
rMPrmo4JetoYXx+smce5TNNxz32PcVjgn/bMIXEIayPHlwm9dWZL9iIX3Rh1
Q7x8hIo/t/Vv5iFjssxr4Yo1inFKkmWBZs4/9mnmio2PyJgA6bWv8yVo2MmR
u9LIhti6EduSHku9nUv1NP6mTM+r8R3TiHP5v4EAuNQ74KItA5I5yUoPV1Ny
Wbim170BHaquLtfCO3C6Bbk71f1g4MQkSdE/jVh32XAOv6C2Qh0Gp8qgw4uF
f9LeoQpcKPwjxMAu5JGPq+VPi76wuPNW8kc5nn433y/7xqbY/ufQZ1HrAS59
KgL+o/A6QSCrL5xUD8nb3OFyO7GUdMiqM5m81YQAAwMDzwZgz549hw8fjoyM
fOONNwJ/m5CQEKw3Sd7a2NgY2KFSBHYLMHiGY1foxVWWAJEPqWX9sEqPz6fs
e756HyUgbdK1DHhPnkux26rdinfe2I3na/ZT75UWkfRCwj7wKR6jq0nkHcNL
GeYkSgpl64qkV1AjmMvZrHX72OXbqX7yctA/dE3Pab5/l86RNOgws/5twW8n
r/+CHtNP1qgbIia9DT6E8xmbey/kdYb39j3BLWtlguEJm1tDU8r3n6/WOFAw
YDpT3S2eK6II2JxID9Fa0XUjtpNYWFHpFAYQlujyMweUj9SaV/iu+rASL3eR
Z1FgnecRHtJM5/Iol1dttqKFd+B68M332hoHETP8opywqnSeko/40sf5rsZx
Rn3hdvCjDf9nDolHe4fkD413XfAfmjtvJUir3Qtj8ZJNwM5EejjsSALLDvAq
3+ibKIA+IzLv42UYIQosBhK4MR4iMHmriUAUFBTI54ynTp1i5PRK8tbExMSd
xFvxFqKchd/FrA5YpWdX01Mnwv6o8k/tF5L94LSr3KaPtNyCD7ie4kLhH9iN
/U6H+8TluQhdhTtlHKJhc4HTOawUXJnABaFkWc4umiY0TfTPEQifE+jXVjhj
QTOK24dTYHQulaGYCAvWKl6XYyT6OxCVx6nSHKGlbwY+hBcPF3i2PjFMkbQv
XJdtU9Dbqaz78a++uFAt80+gBdiviosR3vXK3dBh/6QmPx1RiK4bca61dk1R
rMtxOkf3UlBRVHQe57vPQ5Z5HKm9HOQ1fQwj1vXFaOwNn6ofTbmVPM3U9aOR
d2Btq9bBRC1dbQgdZO7UdR3uA2YTXN6PcSX/hA556d4rRS/y3CTxaO8Ql8wL
nFz04K14uPM8Kh2wZxNZiW1LmiuOITztLi7FDslVL0KfRa1fau+QAZxbFbaZ
n8ZS0ZSJmYWu6u4ojjW5Jm81IYri4uJAK1VR0rq+zsogleStYWFhO4a3kmcU
emTdIeeSE4mNsEqvaqOlfCu914CAzBbvlewHG5FzSa8dnqmCDhOlFAam0v5M
j/kmxM/I3jpJ/WWGJxeDdeV3tLepO6RVm2txdQw6lMxxPRRbB0HWd00xWlrL
3qZWOB1Bz9f8P0YOUzGv6VPosMVfb9kx00SrbhPuD9aDJNZd7me/oDY03UOb
zhHYV3d0NmgGtUyMW5ugNywqsrDieOzmuOTfzDxnVV4A/rsklD2pvUN8fmRd
4mY4CxBdN2IbRO2HvLg0jMtcVQFcYJVS/bLG3hbXJqC3kxn3cBemFgXeEtFu
SzpqqUNUQn0+qkbegbdlanq0apliwmKMgwx5ZMGI2qspneur2PFEb5HqYCDj
4j0N7S6uOCNdcACqB28lAeMED+uSMte2QFQjUce0WulVk06Izv0lhKE9x2PF
ZsGTTVflbR9wjgqXXALfVh65C7I05aJOafJWE8FgsVgiIyN3794tShUPHDjQ
3y+9FSPIKy4qEp5EvP/++9p5a2C3ACNnuIqzwv3n6elSxw2qa2obKwUOMpP1
b8l+JlB6bVzJv9Tfw010jWZAh5KOGOPx91LP0MUh0TbyKWFE5k84LgkmrM3y
PxmZ5JpgqfU0LemtCHpgh+VMY/JFlJaVAgt/DUz6VQovd16kex2FmvYuTiU1
w+cQs5UqnFn/NozbMaLVLRSr5ZDFEvw8p2YQyWvzqdgSxcIqT/nfLUEh2KO+
RY/zI9F1I3Yq1H6K1NB/AXrjKLuqCJbFXohBu6Qw1ly9Wv40lwglgfWytN9C
fd95+idu/Eh1Pxp5B87nSa15RUtXG5vr2E8QP4rQ2JsckK8kPjImX38tvQ1N
U6EnXpJo6oA1//u16f6Rj+hE+o+gN0F5ux68dWPzJPEFGLGq+5TG3rBTjPaX
lGrgVFvtqcJ1veegt8vFf+MSIRt94/l4u0/jkbFzfRVnIXIpxDZ5qwk2bDZb
Y2Njbm5uYmJifHx8fn5+W1ubqCxwaMLIGT690AVfz0tFf5FzyVsnKFEam6H7
pU5rJ3CQyevSSjhYyC4695fq7+Em8HqppJ0lU+/1ekeiv0vTU4M85eSn4F5A
4jCWRWkPIDbwQzi15lV246f3U/NWtiLQ2kgB3PJ0ZtA6XPum7OTXo5Ont8p7
QMAfjmDr1VryBq2Jbj2jZZTmXpoqvOvL3HWXu7wzHMat1rzAqOmh5djYfPD9
qHIYN7OS/6klwONx4U1s1emXPswu8TdwEUB03Tg8Uw3jXlHrkALAbKJpIFZj
b+pAFs/476JxyVTZdULmQ4wjyC3gUyS7k7X9JYmMuregqxYNftYaeQcuG4nK
flBLVxv+6ltcSoDlAJ8iqZa38gE/DAtbWP7deoPMal6RYLul0zkPC5ITdOKt
HcOpvHYA8KlBWMota0whC12B14HhaXc4NJyDk78C/rJw94QVhduzjsuCWoeu
aekNO0ScyXmEi+OVyVtN7GwYOcOx3v61ShE7mEDsOkATMpdWaTmGe80CHGTs
krSEIy6D4sKP8J4hu0rLbZuloV78v2DNsDHoxawORoeJaIGh3YuWPOqhN/Yp
0iIyb332C4n0nvXFIXrXsXcxWuLNRu2pXH69+S+JJ6/9XLsokw8ut+f5g/k0
g719Ar99tJz7+ICznZtvrsaHJhexkvD8siYuKQksaKwxRQ3vjehkUiC6bly2
TaON8Xs1DpFQ9iT93k3z8YBWgZj830EYGjWN8WmOkdqY2GVpeEaTtlh03q+h
Ky0pdhp5h8frxk8ewhFUd7Vis0A/hOBzKQCUA3xupTGJFBdN9Bgi9hUM2H5L
o+8SfiYHUmCdeKvduYQ3ebRsU2NFd15mbaoRk/9bCEbLyS/emSQUWOMmmHzg
evALhX/U0hXWqdO+4+2DyVtN7GwYOcNx2U6g1msgCDuAhfrjn2bhHU6vxz1y
9ltAQ7xMGxofsN229sVAFvIpYD94nbPt6Gg4aOlQbeck3OyRK6wCSflDywFW
emErx/aPzcsxb/XB63H5nTIHF0HCrzCN/Ii8toLtTnjW1/CEUS3KBIjN6aS6
vjFVODVOe8olPvsAQaFzSMcYexnrhGuVuwJjUIeanjPQVXHbQV4RYgRbN57I
+DEMrdHgAzsgcNGMVQesMqrx648dqPUoOg4GTAFqe9VXg+Lv+9HU27TozGjn
HdghpWeMpQnPRvdYNvQTX/q4xqjkAwvmnMy4V7UoumN95WgqTQlYtc9KX6Mb
yIsev/dVK495vZ5TWQ+gzRahy7lOvJUgufolGFeLU9XV8qegHy5WgFpQ2RUB
wVyv3KO6H/ww5KLrKBMrthmsLK16821iroU+wVJu5SXNZPJWEzsbRs7wxoHL
8CWVI/tmXbRh4VbBb8cu30GdVlal97fP5DxCl52r45Lt2cCrevbhy9owzZid
yQ4qnH5jfAFu9t1IFivEHiXarf1yGz+C3tjpYVVt4xDhsQTp1/RE4sNw4w5L
S7BmiRXP0k9S2/HxzGIP3QX1z6qyT9ZSUabEn2kZxYeJ2RX4NMi/9sF2GFq7
sIn/WecmoVixOXGSdmM3N+3BYMDWuuSbq6WrrPp3oSuNWVXBEGzdGFfyLxha
S8qlzTEP/YSn3WWMhJEo8JIP55ArBT7XO55+Nxd/W5nwrwaVqE1gAJ+2XC76
q5aQtPMOnByrRdQ0v3kf4il83E/kgExpvI8xbm1S109j/yX0JORjZq0F+E3d
rDaTfGy2ETqJyLg30K5dP96Kd/tVF1ms2i3Ybn4bt918sC4PYr6mTqZDQB4N
sIvCyEQVCqqTiLLq3+HyJBTA5K0mdjaMnOHkLQxfUjmmkJjKvR8lLFefTPoV
okXSGWKxJf+A0SfnWlXew01cLPwT9Daz0M1oudx5CeK0lgVVcFpeoxauzzAt
XBvQwkC76jsWMmIfq2Ev3bhcaRt0S/5uSfcfguyG9yGA9uGgzeRgYLKEvkoq
/V4lS61R9K9Q8rqWUQBfXKiBD+R4Yi1+EQcubORjs7YUvY59uQFJJX0w1ith
hR6P7rwJV3BrdKjHeiBjs7os8IKtG/G2TNNAnOr+x6104aqRImkEdvfQclSB
5ZHjNRf/KgLeX9Ki+lXbGw395DV9qiUk7bwDf55anLVxvZ7GJGqlwI9i1Yah
8WVPQCcx+b/lG6EKNPRfhHhUWwmQ9yx0Qj4lkVF0463O9dXwtLs0Ll2wQh0W
qN9G4PxYdZXpWB5ZYEtkACbn2mD0MFWGOCs2C04CH5nRVLuEYfJWEzsbRs7w
fHSC0zJ4VbJ9U880IzFyJvtx6hA6Ii0ViE2+BEqzKnAq637obdXOyj9cqD8E
cS40siwX/Sxc14KqHuFEMiw2qw7kgY8IOIuNnklphfDy64Yke16oO0hvvC5o
dqh/orKm+o7mG/HQVX7zPvwrTKKXuzSdHtLhkDrTY59kRmYiC9fVMdXdYmci
36p+zb6+60ta6J1VZURKJzZzT656QXU/Xq8Xl/7pZIoRbN2IRYDJ80d1//iI
UFI/XFfgo4qobPWZA3jVx8XNQT48HheeEss2lnw6A+koS1DjOb523oFP5I+m
3qauFAVXZBtZ3OoDljFXzW6w6G7Btooy+YAl69WZlnq9HvIcRouH4sA2+vHW
DX//HXVf1XhUcUweidwjVIG6vhgISYW7LnmGnM55WNF6kjvwFk1O4wdKLy/r
OAqX85XdNnmriZ0NI2c4LkboHc+TbF/cOAJrdUKaBL/F8rArPQmSveU2yU2I
lYTH68ZZN+xSIGvJ6zLjfCeiFO53cCKowgD22iNPTvW3sQVctceuRcKeRK39
0qWCq/3JcOOW3KDTrGUwAQLQeGiCXwQ1PX6KwTir3DnLkr1ShPdOldGq5Ov0
CF5LSurITI3g75tQ0A2j7P4yz+5UWXqmCNhyRcu5CdaxjMj8Cb8A/RBs3YiF
WbR8WYrbDqKpdVp1P9pBHj7YskS1LmhqzSvQSftwCt8gJZFQRqvt5LwLRIFN
gdl7bpLgwjtwqb66vILOkTTowXjxnDVEvck/m/KpZfPvYWZBdzNNOcDzhDwQ
lF5O/pRw+YmMH4syX115K3afJ+9rpck8/krC6reJ+GIrKrqIml1SJjnVg9JO
TqT/yLm+qlOcDPQjH7Gjqbcpqj6zry+fzLiH17abACZvNbGzYeQMx2sVQr4k
2yej3MirBcI34ELdV8BEFpukk5rKO46hlacma/itapGvuzqVdT+78XTmP+m5
8BgrEfdwHLVwre0MWrE7tzwEo2t0FSFvQPrgTbmVrcH+8pFCCG/KKv2aIPSQ
lpQm/DRYM0Zyr1JgU4zOkXT4+frSMEQyev5/vB5upXwN3VPwmXwQ8zgiAkmq
+8RHe9kN75OP+snPaGVrapnifCR1cLrWIIxjqber1mnBKuL66cwEWzf6sWYN
ksLXK3dDP30Twlp7gxFbTEseVGeXncn5OeUXi0bzC7zFVNp+WEUPa4456CE8
7Q4tmfkbnHhHTuOHEJI6vSmcqavdr1MF8NTqHstSennveB5cHpWl1Q+IFwpb
PoeoVDgvF7Z8gR7I4uI/uvJWMrfx9rLS5w9Op9e+0c0R+KGqtBQFCxdsl9cS
WS+dR757eU2fyL8WW91FZT+oRVMuECZvNbGzYeQMx99xOeUA2NI0r3ZI8Nul
9hggI3MVH0r21tivTBWKAVyfdbHwT+zGE4k/oyd9c6z14cWsDjnunM71VbRg
u1PlPWxhcW0Cujqdwyo0c7rc2ITF5ZZ2GfO6HCPR36YSvutros2wjqVGSXns
v4DPO1Z6r1FprKx/axkiEPtjqnwfy1tRr8LoWgRV8AZLZVfkvnNV8Mm/fKTA
sW6cfg7OjltYVSnFif0X8po+5hshgLFu9JcUVumsjXPSrMsse2UDgFNH1EmD
8iV9KtCHjirUVdfik3QVeYYCcOEdeMdJXWo99oVUrYykBViDQkXqI/Y4Lus4
qkeEKoDF3skzTZGomsfrxkrCwSQgdOWtG/4Ftkp3d/G6q2VQOjPNMGB/tJMZ
9zhd4iuEQGC1AfJvfmVY1zgZwKpZYSm3yMyyIEs4vBFR13uOb1QmbzWxs2Hk
DI/0qwm1SrY/Gt/AOH9cG8yiaah5z0n2hot3MuveUnkPW8DvwWsVEkOPnv8+
5W4Olr9YdvUg3G9MRjujJV6Ka/Esm5hrhX7YBU1jM8sQ22tHi+T2jzi7Y0Zc
7g+nlpGXl+J7QMA8C0sm4pTyxaZwLUMEYmR66fFPszblko5Tdw8tJZD41Ph8
zmmsWlzVbqgOJE6QUO1YinWJ9SutYqwbr5T+GwIINLCQA/v6MvRwLPV241me
AHgrQFQlRhKDU2UcSZ8K4JQV8pGqOG6o7o6CHrQfuHDhHbj0mDzKlEo0zy71
weXkCa86w0ELMCOIyn5QqW42Fu3XUivBF+QLi9+YE3NBxe0Dgd/1okrCPujN
W3HVRpgSQwT8iidfNJtzQdc4FYF8mHijRr7aMzaeTql+Wdcg2SDf8fMFv4dg
zsgT0MbaAicz7nWsr/CNyuStJnY2DJvhXq9Hfk2oDx+frYAVe++IUM7FMd0I
ZGQq5XeSveGywcTyZ1TexhZwFVIW0zXMbZ/DGarsbhuRDtWXl1gvffyoVCFk
B8DaO6k1rzBa4oRYdmwYs4Uv0tre7qBvJVyvp/oZjnOeyUzDE2z8yj0Qhn2S
/2rKJ/a75xAVmIoreUx1b1j4evehk/CxH47T3bNVAHx6olqMF/taavSBZYCx
bsR30divRpJrwtoMPUjmVxgA7MqhLkWhqjuSkj5jRZkA2OxJxdliUhUVQtde
n8uLd2C9vun5TmUxIOVb9tNYP5DHJllIQxiTc9JC/QDMu7cUkIJKCxqPzPq3
ITZFFtLYw4shv6A3b93wz4yVn8+Dc9fTa/fqGqEK4AfRubzfsCuVfCBfK0zh
x62NBsTJQFVXJI5HUiFqxWbBqnRynDWUwuStJnY2nkXQdSB8rCZTnuWVMFpQ
OTMvzCFxLY8DGRmLvUuyN8sifateKPyDilsAYCk8dnGWc7Ydgpy89nN2t/hM
c+8x1pkm9jxVd4TkA5bHZxf+ZFbegNguZMrVNVpsOkFzuSuD5ohiPRPr0oCy
e7iJhZVRuu2ZQz9q1/IoxDAS8z0v10ISHzwe7xcXqp/+nCaiH076Cflrqust
IvM+6Oep/Ve+9i8+lL+0yj9yNvA8V22Fg7PsVCcbS4KxbsQFAopKkACtQ9eg
B7IA1hAmHzjWVyCeoym3utx2pT1g0tc5kqZHkJLIbngPYiAzTdG1Xq83AtGr
Oc2Z27x4B5Z+VZpdgC3JVDuNagc2pizvVJCdgusot/cULBBYQud0zsMyz5HJ
Fw170DCyQA3gre3DKRAJeajK2RawORfwnrAKTSq9sWq3hqfdARH2jLEcAH3A
hrwJZU8aECQbHo8b81Dy3+yEHOzZeirrfu2KUs+KQWOfJkyEMgyb4TiHSo48
KXmzPLEvC7iSM6Csz+tZp3zk7Le8Uge45AkJAURmBpUJkoOS9kPQVX3feUbL
taEcWlmZ+zS7W3KPMmtIs9CSr2MkVeVtCLWqWCqp0WltEFtOjdxV4tpwAdz+
dPpfgjVLrHgOwlCdjzpioQ6qWH1ipTeRxpCpl3Xdis351smiI8m3QgyP70uO
vN7cNmBxuhSkC645lhD5vf3fn2SQD/yp/dn9YyplY7UAFyGqk8yyO+ntkPWJ
nO10dWCsG4dnqiCGuJJ/qeiccHb0NdEk6cYL2OVT0aGYD7i6arvKdVsHEyEG
pceL2NwkIvM+pemsgeDFO7A6uqISV5fbjinGNpbsYZ+18wW/l38hlhfQqNjP
HS63A6cKyzykaxm8CpdE5/6SMc0M4K3rLhveq5HjdY49uKPzfq3f41cLcD7M
hYJH2UHirLkwrp6nWoC/9WGbqhQng7XELs/kH3kG6hGPyVtN7GwYNsNx4Ywc
WdGlVQcQpV0HckXbjF2+HSiJazWoAK8Pisxr2MC5Q1i3VuQu2qLRgeNHkj2/
fKRAjmavv+GL+oU0lq9k59phE5yWPrniNq6VST8h3yCvJJzLpHrBQ97j0AlO
3p4tehUVtx5X17kcLCzbD12j1TrPfnnO93E9sS/rnYjS9yLL3jxR8uHp8s/P
V1/K6iDcv6B+uLhxhPwrrB/OrLwRl9t1OK7+5aP0iPOL+Ic2Setn2fI/cL6Y
XerHyzYVPUzMtUAPulrDM9aNuJTyePrdKhZvieXPQA+i7o3GI6PuTQhJqXch
Ngg+mXGPdtKnDjgBJjLrfkVh+CkgVb+kPRhevANvz0qevGAMTpcjiqFJJV4j
HOvLx1Jvp9saS7LcovG3LGxTAE3aKM1g4Le2wN07GC4V/QUuYXuLG8BbCUrb
j6AtBQmKR+YeLjcOEdvWQCysjB5Nofu9jHUIWbNhu3lJaREjcanor2j+3zIq
Vty9YpvBdQSXi/+u006CyVtN7GwYNsPx2Y2c3fWRqSUgSm+fFC+Lm0z+DZL9
ka6QOuUnDKX+xYrPB9lpunNVn0KES63ShQwy6WHjAE19LGz5Qs09bMHvoHOG
ddD54mFKqKfnFGS24L2F9QXxHODKrpNor1KlEm9lVwR0AuU/ZDGMA3BM61sL
c7WcpjC9EHYISyrJ/Pfi0a+gh48v/vWFQ/mBld2GweV24q0eFfmoOLeNUC09
gvSBvW7EinBkmaS0c7/LdUt1VoS63nNKF+GA7rEsuDZx+9Z+ZM2GSyll8iMf
/B1norUHw5F3YIOhUYvcmnRstqLlkc4FWPdGph1P840rcIm6rAa9gXcGTmbc
s+6ysdtPzrVBe0Ks2FLkxvDWZdvU0dTbIKrecfH9fB86RlLxFooW/Ua9gQXS
T2U9YF8XL7HBx8fk37Q2y2a+sDuXsCxkROZPBMIjjvXly8V/ozMq9TaNltMM
mLzVxM6GYTMc75DLqTIjrA0W8wcuimeDWPKeBUqyNihtNneh8I8Qg2WxV/E9
KO8HR7h6I1OyZ5yOm1szFKxZLzLdTqt5TcUt+OCv7xTU+NvudEFUT+zLcnsU
bBLOZD9OP4F+8a3U9uEkCCOYQZ4k8NkxHNpiD9nRCz/k6NwqCqydu/fkuyp4
6+sRVD/kWNLrxte0ChCd92stX5nS9jC0AI7UI0If2OtGvD+j1P1w1T6Ll3/b
dTopAE5+ji1Wlv2OPTW0GDZpR3LVixCJolPjc3k0TVqm9wQbHHlHXtPHEFt5
xzGZV+GjMcKweAWjDh3DlPLE5EtrHm5sao8/CZewa2e2Cx6vG6vXkntkt8f1
15I77cbw1o3NHZsPICry+g6mWe32rOPviGp1AmNA+DiuI85t/CiwDXn74EpY
0Tbbi60cZrrNG5F5HxQUz6+MXPY7kOWz2xYMJm81sbNh2AzHPsty3ualTaOw
mD+VJG6hMlf5ET3NbJf2wLom+3iRDVwdxjb0mUz6laQRDEZ6xQDc9cWsoPJH
49YmLpvbJ9J/BP0w9mOHJxchqjeOlygaYqH+EHwC89Xi0k/DM9UQxtXyp5Td
w03ghRPp0PdDLAxlyd+jrmf5wBvCiWUfRae17T1WpIi3vneWTlF14rd8gZkF
e3tfFCnVL8Pl3WPZekToA3vdiAvSK7siFPXsXx67DZYxosAyd1s+Mgq0W7Fg
tX4Kz3KAvy8Zsr3JVmwz/veuOA0gEBx5Rw/aVLxc/Dc5l2CJ1C0l3m3erbL7
pwpLHmzhvwj5t7QmUbOzXSjvDKe7PUzfN3JH+BOQVF0wjLfOrwzjrNqWIPpd
WHGR3EjI/kUANT2n8RQSZAuvOebwDipZgK05tkHwQRI4DebmE+DviRXP4rnk
2wbRdf/T5K0mdjYMm+ElbXTp2NB/UbJ9Smk/LOYT8rtF2yy2RFJOVCNt4Se/
LpUBod8K06Rv9OL/QoRu26xk5/VdsuxmFlfHIQasnasIDuRKGZ7GEmSu6ZhQ
7caClammM/4u2oa8iyGSs7m/UNQ/4HTOw9AJ5IJOpTxKjXh6dLdc7xcTMlq1
r98YX7he1BuZ1Ew+vf0xVTEZ7ZezO89ntBNiS/7FpLfF5nallvVXto3HFlOl
6FAopSxtPwzxqFDsx3v+M4s9ekToA3vdiI2rlEoANfRfgGsZRhjGIzr3lxDY
1DzL7hlj3WXDqYbbu/ybmu+ASE7JLnHFwkFYgU0LOPIOm3MBH7us2qUf+xWd
1EIrvfZ1XpFoQWrNqxBSUeuX7MbYwedK6b+NiVAFtt6b9E8zaqkP1rK47SA0
26oklZiZhvHWjc0DfWoUHpFxb2DFE/kJVnDa9rRzOSDLKpzGRp5RXaMZvl9N
zbdFZP4E876+8fztjZYBvNAV/ZdQ9qRkjrpGmLzVxM6GYTMcS+DKcV4gq3rJ
jNnVvmRgJbOF0uoc8nWAGcB7y6eyHmC09DiX/RxYZKzKxi3UCueVsMJgzVxu
B37Cq6vux5qcbIVnnz+p7x9hWIpGcS2P+WXqin0ILrcd3w57K0AUW5sJsCC5
xSeH4l6bQYrT/+Fe010qBEvNnMv/jYoesE4sI3PbMOD0/qz6dxRdS97O+I/C
5VwsGNjrRkKZVW+M4HTB5htXtIXJExnIr0R+YKOz9TK/9QaAfNNxiSv5+si5
Kr95H1zCK8+ZL+8g3A0ibB9OkmyP6zW6x6QLXgwAtvaOyLyPfQR8sfBP0Lhx
YPuzRBhIrXkFQo3K/ploG/KKx9rOcv6CRvJWQkuxNvK1yl34jUkWA9hQ6WTG
PWuObVNIUATLYi82lCH/rpY9jWtCvyk0vK73HD4Tx//S697Qm7RumLzVxE6H
YTMcP0vl1O8cjW8ArlTbKZ7lYp+sAVYylfZHyT7l+64yML3QBZ1cKmJJpDrn
uiG8iasPyunc5fY89inNGnUEuP8AsMsnO1c5GIZmKqGHxArWNDh5rQlCKm4c
UTrQ2KVbqTTTvPjS9EQa3VBVkdQ0vzICl5/JecT3w+Wuy3R6pGpy7JWJLab2
dRjHUm9XSsDJkgMnFDldQs9i4zE2S2XALxeLH5cHAz5N05sisdeNbs86/mBt
Sg4Z8ZqcfBqaI+WGhv5LaEvhXZlX4Xy8UKgRwzxC5l4izhjkZYTBl3fU9JyB
CJOrXmQ3xqrdZJY6gojSGAzylcFyZHD4FYjJuVZodjT1thBnSaPILi1ss6pa
JAkHywSRt4kcUWgjeevGZhpwLL6LgubPfBvC5H9x9Tr51zQQZ2RgGtE3URiM
8d38Nr2gxQnCMEzPd16v3IMjv1DwqK6VMhgmbzWxs2HYDCeLXvgKy8lq+/hM
BXClYJKqrqURICbjcT+S7BOnC8pf6QmAHbjYppZrw/nUvDVb2vrHh9fDi+HG
h6eWgjXDy2l1wnRY65WthvT+qTLJvwUDMzlPomRdcfWVM5mPQjDjVmlpaAFw
ESJUyE5n/pM64LToKAqEgUUFlWrPEsIO17KP8g0DWYVCSEpVifAES6/dq1+Q
GzLWjfj5w9YAx3C5HTirNkQ4hQ/YY4hQOZlX4Rp/SWkaA4CtD+WIG5PvFLQP
T7uD1yE+X96hiIriJGFJkmsksOsKo7I7y0+/6FUjI1QB8gTDqg7H038k2F3E
hn1hsn3ZDOatXq/navnTOE7y3SGh4tOBrVfh06Hp2cpAz3guPuzG/yIy71t3
bXPptyKs2q3DM9WDU2UG2zGbvNXEzoZhM/xs7i/g+bO4Oi7Z/uUjhcCVLPPi
B09etxMlgn7LK7URh08YVZt/4czJ3KaPGC2X2pF5a8UHMvs/HFcHN17TMRGs
GX5DqRNXqe6Ogh7KO8ODNfN4vU/tz4aQltcUKMD4sNh0HD4Ha5l4rumlXPoW
7h6VFl4WoHXoGlye0/jhxmaSsIVMCXrOu2TQi4OwZogE5ARlYtRSB9deKX1M
nwAVA9cWKToKx5U+Mt00VENy3YiTS+VrOeIjY/nc0BgQTo0PkeUkXbg96zgT
LxQ8fbCZLLkdySQ67LfC0cCRO+/Aqb+MuhhCo/CbkXGsaTwWVugWQVgQT59l
27SffpEGtUPD0HLjKr6vso6j8Cu7cyk671fwqwuFf5SZM2Mwb93Y4kRYgzrw
X1T2QyHooisHs0t92DJ7698tWfXvfSNOWkMBJm81sbNh2AzHOueSCZCEKz3+
aRZwJacr6LtjLPYu4Cau5TF2t5bFXvxKUnMbm3TvFHTCrq6aq/oEmbeeltl/
XG4X3HhSSdCCL+y20DqYqOwetoBX8sFkCQlm5tcgnj1f5akYyD5eSfOlE8VL
iq4WvIloxVmlQ5R3HIPLfQbxS+0xMOhksppSU3XAohlKc7Qw+85S6wfEHfFl
T6hj4tcqqZutUvcZpZBcN+LPNr3uDZndkm8WvSo0BHMwcB2lnE8YH9GeznnY
gAjlICb/t/K34LC1aEP/JV4xcOcd2JP6euXuYM22vDPg7O/uUCgNwMBZ3IRK
BDYoaj0ADeToF4UIsIgf4US+nVL7+jIWpQ/bzPyRWxdgPG8lmFsePJ3zEA4Y
/p3KeiAU5BG0YH5luGs0s304qXXw+vLa9HaH802CyVtN7GwYM8PJ6xieqOFp
d0q2X1i2A1fazeRKU6l/AHpin5KQul21WyGMiMz7lN3DTeQjj04G3SOYyX1a
kb2sD8WNI3DvEdeCZsxWdUdCGJVdasRJ8AqQIV3b3DsN8eyPkZtgieFZXxuJ
/g7SVRY5GEotplU55BNWOgTWqPGdbhCuijYNzqgIWx2wtUehQtc8LN5b0yN3
o0Nv4Anf0H9B/oVR2Q/ChXonSkmuG/1PTn8ls1u8O1TXK+20ZTBwJmdx20HJ
9rW90XRjRG2hBHfgiryCFnGrLB9cbjve/7QuD/KKgTvvsC7dwMwoWKJCet0b
0Cy74X2+MWjHBKpd3dy2mirDv11YHcWHrXL0i0IElsU+wuzwrV0tfxo/r2R+
oQDbwls3tiSkrlfuFpDWq+VPhb7xjQn9YPJWEzsbxsxwnAwmR89zcGKBOlpG
ljFaWgpeAHqy2p/CaLmxVRWCq/7l6C0EAltS9k0ElfwlmEh8GGJzzgY1YxWg
e3gO7v39U0HvHacr+zJjleJS0Z+hh+n5zmDNsKXs+Qy5dhsCTKX8jlL4oZzA
Brnl1N43qYpVNSyKuJJ/wuVjs40OSxtNII/+tmvVuN3a/skidM6izDEWT60e
5WapOgFbAcqfaWvIYJRwDRUa0YoguW50uZ24UpXhVoxxsZB+R0YsQX2ptgsD
k8UQ3uWiv0q2x8WtMgv3DMDQNC3fOJ3zEOPMbnC6nG4+5P6SYwx68A78UBJ1
DV62TeM5Kf90z0jggpTovF8511d9Pyd/JsyYyK/UvU+3C+TrjD98wb+EsqcU
3c528VYfxq1N5R3HshveL+s4Ojob1NzHxP8nMHmriZ0NY2Y4lhxk+3370NBN
bUwPxbJOUedr9ivS3sGyOcu2KQX3cBMkfuhhYq41WDPyWh+J+R7E5nEEVVgS
YHnNCff+1P5sT5BVHF7CXavcpeJG/BWJg5oMRl5vhnjy64ZUDLTh/2eaq/ok
sEFJVTIEc77g90r7j8z8Kf6zWsvepopYuU+ri1kdsLuQ0qU1TpicWRD3LDYe
WIFTvqQwToCMLZb+ymuEnHUjYXYQkhxppk2rU7TNFVKiTD7YnUtosX0L+b+M
xi63AwuehEJxqw8utxP7ekxYm4O1zGv6BJrxtcPQg3fgrcVTWQ8EWsng/ArV
dSt6w7LYi78FabV7fXtQWB4hLGTsexShdzwXnxfDv/iyJ5R+2beXt5owgWHy
VhM7G8bM8IHJEngpyJFMJPwIuFJ0WhujJS5jlKN9hO3ApublnoFi4IoSRjaO
a3USAhu7eIuiIZ4/mA+3Pz23KtoGW4WeL3hU2T34W6aSdzfjjOPdSCom3DOs
0uPANlJIS1yv/TywQU1dGTqeu1NRnZRjfQVde4fbPj8a898wHBlaXczqsGWt
i01L5cpYuT3reP/fAJc3mRCcnMoUqGzovwBX5TV9rHeQctaNuKBbTho2IVDQ
Pib/dzzC5I9LRX+BIPuZ6R9Yc5vvYaV2ZNa/DbEVt30l2sbjceHtKV4OOD7o
wTucrjXsTtvsX1SyardijazQOf4OBBZYC9s8i3wS12WEyROCDk1Mz3fGlfwL
buRE+o8qu06qODg2eauJ0IHJW03sbBgzw9uHk+DVIMc08GpBD3Cl5ODaRARr
Q7n0ZC3nKcme/Ys6S+Tfgg+CTGMGK/Hzlk1RdoD4+flquP3GbvEcV3zUQtY/
ym7D3/CUkbntcnue2EcFslbtKjPBPM5lXOLqWhWedJP3PtatXbUrEEKcWejG
FH6xJZK6I8Xfa7wRABYItS7dkHnV/MowXBU6mjk+4FqwueUhOZdgd4zmG1d0
DlDWurF9mJ7py9k9a+y/DO1DRyZLgJJ2yikKWz5ntUTsQ0UJua7A2fVR2Q+K
ZpXjDBNCYPmKi+rEO8o6juL7cqyvwK9w6fTpnIfkb3AZD5fbgXMVBP/I30Jd
5lLogDzTBiaLRy11qncLTd5qInRg8lYTOxvGzPDaXlq9iGXng+FUEs1NLWli
5bM5Z9upbOz1RyR7xpbiKra4V+2zcDlb2WmlJwECmy16RdEoF7M64PZTSvuD
NcPb9ewUwUDg5M/4sieCNptegkheCdN0cDmV9mfq4torFEAm733ssDkx1yK/
577xfLgwqXLP2OXbqSJTi772K6LAZV/sIzAM7AucWBFa7x18Rz1jIuXJgbhQ
+Ae4RIUhr1LIWTfiFG7y5ZU808eHSk0DsZwi5YzB6QoIkq03dS7/N3RaThYZ
FqEcENaGjyZFVYUz6qjkOHferRPvEByq5jfv8/0cO7KFSen7hQKWbdPYIAZv
mRrw7Q59mLzVROjA5K0mdjaMmeHFbQfhTdfQf1GyPT5wbBtgHb25bVYgKaMX
fiDZc2XXCYhEhackPtq7WPgnRsuFuq8gsIWGMEWjFDVQSeETiUHFOrBFoFLR
+86RNHqWVC/uqUpQ2TYus9BYEotN4ZTIFwpPu8h7P732dQipS4mFa11fDFyY
mfkIng/yy4o5AntDyLcKJd8LuIqtqmo88LFReccxyfbrLhtKlv4/0HLRD3LW
jYSo4jN9yaPwMzk/h8ZT8yoVyfQG+ahx1epcEIld6/IgtAlPuyPU/FY2/GWr
k6teEPx2zTGHSxG5cyX9eAc2xAnbSlAfnK7AJP1C4R++EcaUhIPjbCXfG3Bm
sWe74woJmLzVROjA5K0mdjaMmeGEGSFKIm2t/np4MdClcYuEQsLo+e9TjxXH
Artxy2BC4O63fOBcNYYrH4ElfzcSOk5WNEr/6Dzc/lsngyYzY39MEpiiIcjy
Ca5lnIAn5HdDJAkFmpSCHJZWxCh/6PWvISLvfUyOqruj5PeM6xYLL1MtLGvp
21oCVo2WG/EQT06jdM21D9j4tbH/sq4RKkXPWA6a9tIiycZXhspcNyZXvQiB
sdMtltYmEdG7K5S1UpOqqOJrfd950TY1PTTjJZAVhgKmF7owJxKko2PXbBXl
/JLQj3e43Ha8wSj4dzTlVkW5JdsO8mdq6L9Y2xs9PFNtfAlGyMLkrSZCByZv
NbGzYcwMx/4LcpQ8n/osG+iSzSGxFz1x7efy7Wb6Jwrp+q36JQX3sAVcqMv2
BJlEUTksylYm5Jbh9h/7NNPpEvcQyW2kOc+tQ9cUDXGl9DF8BBCs2cHLtRBJ
VfuEoiEE8Hq9Y7F3UrmkMb9UQPLeJ7eggu4RJFY8S+/lwnfpZJjfHuN1nIMd
V/JPmVfFlz0BVw1NV+oaoVIQEgGxncq6X7J900AstGec5nOEzHUjLljIZpas
do9mQsur5dKF89sIvBd3pfTfom2w6VXISgBhhRxsZupcX8WKTHrkbOvKOyyL
vThbGP9TZIhsImRh8lYToQOTt5rY2TBmhmMbRMnMoqVVB3Cl5w5Iu1jO5DxF
vUEHs9mNJ+faIBL5ph4ALP5f3hkerJnX6xk5p8YEB7D3WBF8CIMT4ofIVd2R
EExF5wlF/Udm3Y+uPR6s2QuHqLLxhGUlWDOZmCt/jx6GlvnRGfLeH56phpAY
JbeBwPmcHTHf9vU/nSmXMHLHqt0C8ZxI/5FMbWRsSxRqrvFkPuOF94ptht0e
y8Mac3Ysc904bm2CwMi0YbTEx9+VXSc5hakLyJ8DU6HF1XFBg9mlfnzAt+aY
35Y4JdE7nodu5BYwlcYJFREZ9+qRdq437xibbcBf8Jsbhmd0HdSEYTB5q4nQ
gclbTexsGDPDsR7pik1CKnZwYhG40jsRIgIdAsxVfkR1eNrOshsv26Ygkqjs
nym4hy3gIqzm4GIaruVRaoJz+XaloxAcS2iAD6G4cUS0DdZHVap3eiztDri2
e1Sc7M8v2yGGp4M7ycqHbbwcewPhVGHy3l9cHUN/modk9okNfcKS/3fI13/0
t102lZY9XIDrKOWQ0FW7FdoThqjIBsgYxKMDelHZHIzo3F9CY4bHMUfIXDe6
PevhaXdBbPMrw8FaRuf9GprxtVzRAwllTzLYUGn7EfhtUtXz2xKhHHi9nouF
f4JQLxQ86lhfbh1M9Od60gZGKmAA7yAvvuK2r84XPHo29xfpta8b870wYQxM
3moidGDyVhM7GwbMcIF3jGSlWH3XlCItIMJVqYVr5UfsxmR0vKUvarjAQHL1
S3A5QyrWNlYGIU2n/0XRED6klPbBh3A+Q1wThiynIZiEMmWpjHgpGGz13tw7
DTF8Es0hc9XrcY1duo0ejg/lwa/Ie9/jcakwMMU+tlHXf/h1zzcUyDrpAZz0
OzhdIdkepxbHFv/DgAiVohCJTVV1RzJaYg5+LPV2Yww+5K8br1fugfBaBhNE
2yyuTUCb8LQ7XG47v0h1ASZ30Xm/woWHJHicZNs9lrWNcUpCILR7Oudhwf/V
ydfY5B0mtMCcPyZCByZvNbGzYcAMX3PM0yyvzJ9Its+pHpSkbH79YwvXbOn8
0lMoRVYy41GAy8V/g2sZEqPLHRdQQqwadaCWvhn4ED4+I058ZHqwBsLmWIAL
j6beGqxZUnEvxHAhU6JwWCbw4fhM7jPwc997Pyb/txCYTKVKnFsYd/X7W3JM
b3IJVQtwZmMwqRyM5htXoL2i2l7DgAWo2Wd2A5PF9C9S8i9jwpO/bmzovyC5
RdA2dB3ahJonkSjsziWsKkz+BPArTGkjMu9zuR3bF6Ys5DV9grkq/lfc9pVO
g5q8w4QWmPPHROjA5K0mdjYMmOHYNvF8we8l21/O6QS6lF4xINneae0CKjRx
9UHJ9peK/gLxQAmVTPgnPAflvHOVH2u0EF1YoUW+T32W7faIKDeSJSilnym3
yjdTwG4+F4KLcx6KrYMYyprHVNxFIByWNvhkNrN5V77WevK99/Fxdu+4dGkz
QXkNNdlMv/JfEwn3e5xa63C1A/NQtv6PDzj/XA7PNR5zyEglIvMnjEzm8s5w
RDQOGhOe/HXjhLUFUyGHWLFkas2r0KCu9xzXSPUCVmmLLfmH7w9EHhFnc38B
P5fjYbTtcLntCWVPBZLWxIpnpC9WC5N3mNACc/6YCB2YvNXEzoYBMxznQMpR
5sSlndUyNGwJT6FU6Nx/SorzYxO6gcmgLjOBkJ9jPJP1GMqGlcW/AvHS4QL4
HEamxJWdorJ/BiHJF/PpnyySc3a256s8CGBsRsKNSD4mk34NH858zee+H/re
+yXthyAwOaIlqzcyriX8D1xSEvs/TmsXrzi1YGy2EaK6VPRnyfa4elROXrHx
kG9+Sr7j0KxnLMeY8OSvG7fKFqi3bE23sF6S8CYsQmVZ7OUdrC6YXaIJ8+Rf
+3DShr9ddXjaHZLaAiEC8icoaP4MqkuOpd6mt3ePyTtMaIE5f0yEDkzeamJn
w4AZ3j2WBWunjDrpHM4PosqBLvWPypK+xFWTcIQXDDgPrXUwUdY9bAFbOrKF
g8bjfgzxrC/0yx8CIyy+XlKaCTtHEK4ks+fGgctwVUHLftE2U9YVrOqsXZQJ
sNKTQI1cz/+P2775J/a991sGr0Jgkumyi80nSQ/nE38Al/S3qzna1gN25xJE
dSz1dnZNN6GEJ9J/JOccf3uBT8ODeam43I5wJPm1bJsyJjZF68YLBX+ACAPN
QLFVlqL0+21HWs1riKXehXeBNnd12g9td4DKsGq33JgqHbXUOdZ1z6AweYcJ
LTDnj4nQgclbTexsGDDDG/spSypq/VKy/e4v6THf/LIsRZSp1D8CFbKPSygI
VXadhHgquyJk3cMWJqzNcCHDl9Pv/Df6O14pHapgSC3rh8/hbKq4+GRG3ZsQ
Utdohsyei9u+ommQfTGibcpbxmD0ry7VqrsFUXjdjrHYuwRHrr73/gg6mr9S
+liwHtz2OUvus77Ljyf9L2J8IXScdCbnEXRmx3KSXVgZhZaRmT81LEKl8Dc/
fV+0zdhsA7SJzvuVYbEpWjfW9JyBIE+k/0iwq4BNfEravklcb3FtIphP6Omc
hxzr3FImdh5M3mFCC8z5YyJ0YPJWEzsbBszw8o5jKPlTwqfG7nQBXXpiX5ZM
Q5DZkr3Ag5a7JFzp8aFeXtMncm9jY6NnPBcuTKvdG6yZw9JC620T5fq5BKLj
xix8FG+fFHceKW0Pk//ZAlKqX4argpWRnktvg9GTSli0SwWW2qIRtf/u+kK/
772PXYoiMu8TvXZtMGvs8u2+a3ujv4UJCN8gNQJ/yF2jLH3jvokCaJlY8Zxh
ESqFv/npI6JtKrsioE1u40eGxaZo3ehcXz2ZcQ/EST5/+BUhd9goZ8LarEOw
OgLLZ+ET/1GLtDD7/88weYcJLTDnj4nQgclbTexsPIug0xBYMMRXdcXA2Mwy
0KXXw4tlDrHYdByd34knvgIGJksgHkVuhg39F+UcHK/0XoNgLPl75PcvgM3h
euzmR0H+rdpFzm2bb8RDSPnN+2T2jE0SgylTvRNRCkO3DXA+x/S6HONX7oFP
aSrl9w31mxaZXq8XswabcwFf5bR2TWf9ixLes//RcP470DjU7GMqOmlpYWl7
GKMlTgAI5WROt2cdH+fNr4jkrl9BhbryEwC0Q+m6kXx/0V4BffQ1DcTh8+IQ
NNKVBHkmEKJK93MyfozlhU2IwuQdJrTAnD8mtgvPimG7gzJhQkcYMMOxDtKN
KfFzQwD2f/niQo3MIVYH0ilVzJO4o5mFLojnYqG0Zg6gpI3WizFEX+drv4Bg
FhqOyO8/EO+dKoNPg3wygQ3I5wkhXa+Uy5Ex+xBwQx/W7OtAmcl/rIlRZo1Y
G8zGDLT3+pM+jnCp6M/0tGvu6+zo9aVha8nrI2e/hS8h/8pSHoLGWTJke41E
LzqdZ5+i4i+IkVxPBbD5afONK4Lf2jYdr6jk0arduLRtpetGbPtL/pFnAvmh
x+MiXBUlMEgrg4Um5pYHyzvDyTeC3EJIJc+HLEzeYUILzPljInRg8lYTOxsG
zHB/z1MJG9CC+mFgamdSxIs6A+GcbUepuQ+zG6/arSgZ9ScyhyBIr30dLuwe
ywrWbCbnSQiGEGr5/QfifGY7fBrx+d2BDfDyOyb/t3L6XHPM4bMY0TbNvXT3
4N3IMi23wICl4HlMQmcLX/Q4ltLr3kCn88n28crNZtHfFjDWkXP/udh8sqjl
C2hc2xutU5zqsLBKq1YjMu5lnNxhcyXrkrTx0zYC16oHSrwS0g2/Jd96IwNT
sW5MLH9GcOTaNBALPwlPu4N8U3SI1EQowuQdJrTAnD8mQgcmbzWxs2HADI/K
podikvqihJ2pKKv0OJcRo/ke2wqHMAicR7fusskcJa7kn3DVuLUpWDMsJuyc
02SiUds5CZ/Gx2dE7FGc66sQErkpSQ8ggsm5NrjkUtFfRNtcyeuCcS9mSWw1
qIbHsTiRcD9mo6MX/7cg548QXubVW4V0devfTNZj6wub/I7QDWgcasmQm8Yx
Gfeys2o3/EWqj6ffLecvuI2wIhdXwuycrjX82/TavfBbRYpn2qFi3Tg4XY6P
XHMaP8Q56oWtB/SI00RowuQdJrTAnD8mQgcmbzWxs6H3DN9yS7wVVoNsQxCC
44mNwJjKW8bkDwRaPZtWOMsSF0bn/hIRimGZQ0RlPwhXBTNLJVwMKw6pFhP2
YWnVAZ/GY59m2hyuwDaRWffL3xbY2LQlyob2aTWvibb58DS1IqrrlGsLqwLr
S8PjcXdjTlpx8bsQXtzV7wsY6+T1R2xjNNUcn1QurIzqF6c6XK/cLZkAjNOJ
5bgbbzvO5f0GZR1kw8/tzkW8HTS9YKiRrrp1I057xv9OZty7ardyD9JEyMLk
HSa0wJw/JkIHJm81sbOh9wzHWalyknIxY+odUZCnN5X2J2A3tvFyduOEsqcg
qhGLLJMXl9sJlxAm7vGIUEgC+0Q1JVlJHHxA3j5J9ZFES1z9LVyl357YzURU
BWhlzYn1oJbXnNrvggHX8thk0q/hQ2uL+TaEd+r6D/GHuTqQjo8j8dQKT7sr
BE8qsbhuYcsXom2wyWZZx1GDI1QBEiRKFX4Rfp7fvA9+bqQDjg/q1o1La5MR
mfcF8la2/rOJnQeTd5jQAnP+mAgdmLzVxM6G3jPcstgLq8ELhX+QbL/ry1yl
5q0+WEvfpFY4nRfZjbPq34WoOkZS5fSPTTaDmYAQLLVThxdryRvy4w8GXOJ6
JK4+sAG2m+wYlr6XvKZPoX3zjfjABjUdEzDi+1ESOwBc4HU7OzPf952YD539
j6PJ1JL1xoUfWktet0+KKHSNzNRAs1ATE/YBZ6IGq/fEArz9E4UGR6gCM4s9
eAMHEg+w2Fdc6b8Mjkr1unFyrjUy86eItN7CkFwzsVNh8g4TWmDOHxOhA5O3
mtjZ0HuGD81UwppQ0ptyzb4OjOmpz7IVmVAstZwCwjhX+RG7sb+l7Gk5/Y9a
auGS+LIngjXbkr39Ooyl9nPy4w+GnOpB/JkENqjson4rFZ0nJDvENaGDUyKa
S1HJLTBigpgYlB4g733CXu3jFeTveC79JxDhePATZGxLlNv0kTFxKoLduYgp
nmN9RdDA5bbj3NpV++y2xKkUWGmtuO0g+UnrYCI+rxwx3C1Uy7px1W6t7IpI
qX65oPmzqfl2jlGZ+KbA5B0mtMCcPyZCByZvNbGzofcM7xhJhdWspFPJ0OQi
MKa3TpQoGmhtOB8I43TmP9mNW5TbnvrdSP07wZpNXv8lhCF6SqgU0/Or/0ZZ
uwNj84zAMurekuzwTM4j0H5ueUjwW6/Xi4+8u4cMqvLD7318gkwIUbBLshve
g2ZNA3GGhKkYFwqpzNTgtPDwegRthpzL/822RKgC7cPJKEP7Dstib0z+72h2
d9YDxodkrhtNaIE5f0xogTl/TIQOTN5qYmdD7xmOqykly/ewfO7hOGVHNuuL
g0AYx2LvYjcemCyBqJKqnpfTf3V3FFxS3nFMtI3X7RyJ/i6E4XEsKrqFYHj2
C0okI64LdYzHrY3y02Vdbgc+AQyUySptHoOxnvk8x+0xqGgUv/fxnClo2R/s
EkwJyYdgSJiKUYicekrbDwt+W9F5HH6b1/TJtkSoAusu2+mchyFyfGS8lXye
YHxI5rrRhBaY88eEFpjzx0TowOStJnY29J7hha0HYEHbOHCZ3Ti9fABI06Vs
ZfYrXo975Nz3ZHLGmYVuiEpO1e3GZlnox3BJy+BV0TbO2Q4IYDz+XkXxM/DV
5Vr4WD6JrhT8dtVugcBOZkgMal0agMai4jkfn6mAsV4+UsDrFiSB3/u4LPRK
6b9F27vcdqxTHZiCGyLonyiEIC8W/lnw29jif8Bve8ZytiVCdSDRYq4K/7Ib
3t+WeMx1owktMOePCS0w54+J0IHJW03sbOg9w9OQpWPveC678dnUViBNebVD
SseavP4LmqM7JSJhBLA5FyCqE+k/ktP5tcpdNOFTrCyUYKUnAQKw5O9SGn8w
9I3OwcfyxL6sVZvwkBRL4qw5hInEGP2TRdDyeuWewAaP78tSvXWgBfi9j5l4
eNpdHq87sP3EXOs3IsPWvr6M+fWybRp+taWHfIvMP1wIIqfxAwFpjcn/Hbnf
bQnGXDea0AJz/pjQAnP+mAgdmLzVxM6G3jP8Sum/UTKnMMdVgP0xVWzPFzZm
i14G2rjSfYXdGHM9u1M6oRdX8M0u9Ym2mSt/DwJYbJKWSJIP7IZT3Dgi+O3l
or9CbBPWZkY/9X3noWVh6wHBb7uHrLiWdkGJnrNGCN77UdkPQZyWxd7A9k0D
sdAgs/5to8JUg/iyJ9BJPc2hxVWisSWhqIfMhsfjKm47CKw8sfyZFZtlu4Ix
140mtMCcPya0wJw/JkIHJm81sbOh9ww/m/sLWJwvrI6yG794KB9I0/TcqtKx
CFWkksJVEtWCFwr/AIHNLEio5nq93vC0OySzUieTf0M9ZMfEz2TVIamkDz6Z
/eerBb/NqHsLYmNb4eBs50AtowuZHdQB55QRDjgAwXs/teZVVC8pYtaTVf8O
zT/vl8g/317gvYKr5U/Dz69X7oGfyxS1DkGs2i3DM1XWpYHtDcNcN5rQAnP+
mNACc/6YCB2YvNXEzoauM5zQPazZ4nKzzu9sjnWcDevxKDDB8WFtKI9KCmf8
nd04ueoFCEzSN3PFRjNXIzLvE23jcdlHor8DAbjtPNM+CYvHJ6GW+TX828qu
CAiPLX4VX/o4tCR0A//K6XJjJeH6rimO8UtC8N7HRkXnCx4NbI/3QybmWo0K
Uw0WVqnzL/m3uDaxsTWjcP6wdXlwu8P8ZsNcN5rQAnP+mNACc/6YCB2YvNXE
zoauM3zNMU/pnpRk0I3xBWqCc1KZCY4PrqURKil88RZ248KWz+Uf2E1Ym6Hx
5WJxRmyfqofRJxLuVxE/G59EV8Lnc7WgB/+qezQTwkuteYXRCSHd0HJpbRL/
qqJ1HPp//mC+y22QkrAPgvd+be85iPNY6h2Cxiu2GVQAe2egKnKo4UrpY4KN
BbzVcLn4b9sd4Dce5rrRhBaY88eEFpjz5/+1dydecST5gcf/GY+vXdvPO57x
emY99viYebvrtdd+vna9c3tAgE4kkDTQqCUhiW6EBLoQah00OgAdIC4JAeIQ
CIlb4hS3uARCAnFDUUdvupkOorOqkoLMqkqK7+fx/MZVEZE/1L+qjB+ZGQHz
oG5FYPNqho9PdYrJ+ZrL9sp1U2LGRs4CDodjMPX3RfFonXuj0Vi+e7P05Sfa
I8uFYV7NPpdtpl+miEO/K9u7gfi1lTcOin+f0E+LLNbV1YrefmgX4WksUjS3
+E40O5v3HeWfS3435tLqSsLpRe2Gx69Ndd6flUJVfiZnv/ZIb8fQQ/FW5pOf
+zbSjZAfZT2X9913010X8r/n8qFXbAzzRuhB/kAP8gfmQd2KwObVDO8bqxKT
87tP11hf927pK1E3ZRav8cCpO6O5/ySKx/kBrW1cOoeLRGz3n+3SHvb5q0ui
cUXLaZdt3j76pTj0TLvxT1wuLX/tPt7H9aul3LJ1Qaryvmm1LbkcYXC8xt1C
QG1978TIP9nQw8U6OZ/3z+b9iYi2pvOy/FZR4xHxVlWbketfeYnVtpj84C/k
a8TifycXfF/5z+fvADc95o3Qg/yBHuQPzIO6FYHNqxkuX2Zac2PHs3caROlU
0bTGCk7uTDw9JK3oe1aj5dhkm3Qt+B+1h33UcEi6OuZi81aHwz6Y9ofi0JYJ
F0vg6pdR3CH+ifYkPpZv5b1S9DciQpcL8CqaetNFm8KGGPkteSXn0xlaWwh5
ifN5X162qOTFMfkt+eHWgbfPfRjmxjX1ZshXkMVPffd1f4cWCJg3Qg/yB3qQ
PzAP6lYENq9muHyZsrI1SbtxVPITUTp1DW5wUaOv76AaotFS3sL1bN53tIfN
fPIL0bj/7VPnBpb3bauP1l7/I9UtuEaZnFn8eexD8a9U+Gx1MZ/sZztFhB1D
D1x2L2mKFW3qulLF602dY/KiTz1DH7wRvDbn837/2FMR7ZVH/1O8/n66R/4P
5+7istnYHbbblb9QFa3pFT+x263+Di0QMG+EHuQP9CB/YB7UrQhsXs3wYqlQ
aurV2lBVKfR+cWy1Ipudt2zsiJZ3raJ+HE7/U+3G5/P/VIQ3t/hOo+WlwtXt
RD/MurgWPNOaKtXLa9wRrceNh23iXyk47pHYYlVegLey7YzLvhnS6kB9Y7/e
5saybNt3pkyMefJmrfeC1+B83rfaFs/krt4qLPbMrem8Il5UqnWfR7pxi5Yp
+Q8gyn+O+SUjF53eypg3Qg/yB3qQPzAP6lYENq9muHwRUHuvmfHJeXnRoQ0f
0WGzDFz9ndXNaBbeazS+UfZ/RHgjEy/cNZOfHk3M+ZbLC2TjxaHioNMtVzcc
/5qm55aCTqw+5Zpw69dlprxyVHb1DueODofjXN53RZuZhbGV19MerO7Z+pMj
BYNj094LXoPL8/79Z7tEwE/bz6+8eL30n8WLL/vv+jZMvZT/CgNvnzf23Op/
+9RLF+W3JuaN0IP8gR7kD8yDuhWBzasZfr30X0SJMTrZqtFSvlX12LVqjZZr
Gr3/96KEXBgo1WiZVxshwmsbyHPXbHyqSzS7WuRitV6Hwz6U9s3Vh1vfaf2m
+j163i/f1nu/4j8uRL6b7hZBXir8gXOvD7Oru4gmF3x/5cXq5mF5qOsPvRu5
Bpfn/baBXBHz5Uf/Q/l3HpNWTk68/0fzSxO+DxUmxLwRepA/0IP8gXlQtyKw
eTXDlfpIuhF3XKNlXlWPqJ5S81v0HFRemulD/SmNlpVtZ5wv5znrGi6WLmVu
d26wNP7y6w+3enfnU7vDcfRqtVxvKpWs3W6VV6l1LuheDT8S796tClZeaegY
+9nRB2KQfWfKFi1+e9bS5Xl/aXn2bN53RNidw0UP6g5qX1bG1sS8EXqQP9CD
/IF5ULcisHkvw622Rfn2Wu1q7mJWkyigimv79Rx3rjtbVJFvH/xYo2XL6/si
wvza/e6ayQ9UljV/6txgqvHs6s6tj31RTL2fWgj9tEguXa/kNt8o/Tfp8dUq
VZeKltPiXeV/36/o+smR1e4/j33YN+KH5ZgEd+d9eSXnlId/LS9q1Dta4eMg
YVrMG6EH+QM9yB+YB3UrApv3MnxydkC+yVO7cfTF1cWE2/u1Hkpd0/JUv6gi
Bz//A4fd5q7l8PtGEeGN0n911+xrm+D0Zjg3GM35R3HE2Vcudsnxhs6BiV9I
awsrPx+nhog4n3WkqNrfqfylePejy4lyR+XnWcuIb8J2x915//1MX+L9P5LL
1ZWf66X/zPOhEJg3Qg/yB3qQPzAP6lYENu9l+OB4jagyMp/8XKOlzW6Xt3fZ
8GLCwtCNPxaF5NJ4s7tm80sTIkKNrXDSpWV4X799pg5+4d3A5W+srgQ1/1Zn
8J5r6Rn/5fFC8e+2+8xREeepuz+6ltd8u+RVVnnX3dLO6w9aTmevrs3778dv
yGsxbXi3XANpnPfLm0861a3fHHrHPAGrmDdCD/IHepA/MA/qVgQ272V460CO
KDQe1B3UaDn0dkaUUTsTSvQf+t3jHaur+zZf1mh5If97zkvsarYZVb0725Eu
jjV6/3/rD35dBsamI8+Vr/zT/TLumogz/u53fnw4f3XHnE8/E299eudPxeth
8cVK8evjmF3SOO9bbZY7VcFy3Vrffd2XscH8mDdCD/IHepA/MA/qVgQ272X4
s44UUWhUtiZptJRXtY2/UaP/0DNtaau7qRZp/YLpFT8WQQ68fe7cYG7xnWhw
Lu+7zvemvn34U3GsqaYL+oNfL8uyLau8K+hEoVKoKuWqiDbokyviX3Xv+Wjx
+qHP/0155adHHlzJbZ7RfWnbKNrnfZt9ubHnVvaznQV1BwbGDcgQBBjmjdCD
/IEe5A/Mg7oVgc17GV7UeHj1sdC+TI2W6UXtosLKLOnQf2jLRMfqAr9p39R4
EFJ+dlWpjJwbDEh3O98q/3+qd22LEwNXfksca/lDj/7gN2Z+cbmk7vXJO6u3
NIef/2j10dfP/694PTbtSHZ51/upBX+F6hLnfehB/kAP8gd6kD8wD+pWBLYg
ibEj3326bXV529EnGi3j0p6LCqum7Y3+QyuF6lDaf/FkQ9W6rlQRZHFTrHOD
hp4booFS5KrelS/svrm3xtpTPtDQvRrt5YdBOU+6s8o6s8o6knK+K15/N93l
7zBd4LwPPcgf6EH+QA/yB/4S5Iq/gwK8yHsZfrX4b6VaqVujZcgnq1u6jE3M
GXL08ZKw1dt3XyS7a9Y3VimCzKj4iXMD+aqx82OVo9l/58lRfEb5d5ZXmrLa
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
GGdddauBxwUAAAAABLzx8fHk5OSQkBCXlWNcXFx3d/eag6ju7y0tLfXNcQEA
AAAAW8TCwkJDQ8OjR4/u3LmTkZFRXFzc3NzsblngADguAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAADwkqWlpenpabvd7u9AsClZrVbyB4C/zM3Nzc7O+jsKbEoWi4Xk
gUs2m23qS8oMR884zLEB/SYnJzMzM0+ePBkRERH0pW3btu3fv//ixYsvX75U
Pq3+DhDm5XA46uvrb926lZiYePDgweDgYCV/QkNDDx8+rOTP/fv3X79+7e8Y
sfnU1dVt/8qePXv4FoI7Sm40Nzd//vnnyveP8s2zcgrbtWvXiRMnrl271tTU
5O8AYWpdXV3K/Ec5fx04cEBOntTU1PLycqvV6u8AYQpZWVlBX3nz5s26+jLH
BoyysLBw7969sLCwIPdiYmIGBwf9HSnMqLu7Wzm/aySPQqlkb968OTc35+9g
sWkoZ/ndu3fLWbS8vOzvoGBGylfQ4cOHtb+CTp06NTw87O9IYTrT09NXr17V
Th5l/vPq1St/Rwo/6+/vX/mb/IqhoSEPOzLHBgy0uLgYGxur/aW9IiQkpLa2
1t/xwkTsdvuaZ3xZeHh4Q0ODv6PGJuBwOJRCQ5U/1K1wVlhY6OH3jzLn5PsH
stbWVtUfxzSkpaUp30v+Dhn+MTU1FRUVJeeDh3Urc2zAQDabLSkpycMv7aAv
7/zs7e31d9QwiwcPHniePCKFRkZG/B04zK6oqMg5eahbofLw4cN1ff/s3Llz
bGzM31HDFJRKJDw8fF35U1xc7O+o4QczMzMxMTGqZPCkbmWODRjr7t27qk9N
dHS0MmPs6+tTPpJlZWXOlzwiIyMtFou/A4f/9fT0bNu2TZUe586dq62tHR4e
VqYE3d3dJSUle/fuVbU5cuQIjwtBg/LlIx5RlFG3QqZ8w6gyJDg4+LPPPlNe
n52dVerTmpqajz/+WNXm8OHDJBIcDkdiYqIqN6KiopScUTJHqVM6OzvT0tKc
ywruNt9qJiYmXD6G4EndyhwbMJByZt++fbv8eTlx4oRqGT3lu/3WrVuqj1Vh
YaG/YoZJ2Gw2sX7FivDw8Pr6eueW8/Pz165dU6VQVlaW72PGpqDUFM61xgrK
DQjKV5AqT8LCwtra2lTNlJxxPoVxtzCamppUWaGcp5zrhfb2dtU06ZNPPvFL
wPCLlpaWPXv2uDwfrVm3MscGjJWTkyN/UmJjY939kUdeQk2hfIr5c9AW19vb
q/qmffHihbvGdrs9Pj5ebhwdHe3LaLGJZGZmupwkBFG3QlJaWirnRmhoqFJi
uGt88uRJuXFqaqovQ4UJqWY1GncBlZWVyS1DQkL4ItoKlP/K2dnZ7k5GQR7U
rcyxAQMpHwrVcgQtLS3uGit1h1JoyI0bGxt9GS3MRvVYWXJysnb7iYkJ5XQv
d1lcXPRNqNhE2traNOYJTBchqJY6uX//vkbjvr4+uXFERAQL7GxxqpuEm5ub
3bVUUuWjjz6SG/f39/swUvia8l+8pqbm4MGDGiejoLXqVubYgLG6urrkz8ih
Q4e021dWVsrtP/vsM5+ECZNSLTXQ2tq6ZhfVPLO7u9sHcWITmZubExvbBX25
f+K+ffvknKFuxYqxsTE5Mfbu3av9dzBlIhoZGSnaBwcHq+7Ww1ajWpFpZmZG
o/GVK1fkxhUVFT6LEz6m1JvHjx8P8oB23cocGzCWau+A27dva7efnJyU2ytT
St/ECROy2+07duyQ82FiYmLNXsr3MKd+aEhOTpYz5NmzZ6p9galbsSI/P19O
jIcPH67ZpaOjo7a2tr29fXBwUDmdKV9iPogTprVz5045haampjQaX79+XW7M
44cBbG5uzrlE3b17d0NDg+rPF9p1K3NswFiqKaLGDQyCau8qT0oVBCSbzZaX
l6ecys+dOxcbGxsTE+NJL9UjZtXV1d6OE5vI06dP5fRYufOcuhUuqe73GBgY
8HdE2GSOHDni+RQoLi5OblxXV+ezOOFjznWrcjJa+bPGuupW5tiAseT78YLW
+mPjCtXH0JNbQ4EVdrtd9fdtjUVUsNWMj4/LV/CVb6eV2zipW+HS/v37RVbs
3r2bi6dYr0uXLsnfLZ988om7LOro6FAVMp5sgIJNSq5bExISXr16Jd5aV93K
HBswkNVqlT8doaGhnixSoVrnkw244bmKigo5eYKDg7WfJ8LWoUwXVZczxJ+m
qVvhbGFhQc6KCxcuiLdGRkaysrLOnj378ccfHzhwIDExMTs7u6GhwZNJI7YU
pR5RVaM5OTnOE6GJiQnVjm/Kl5JfAoZvrNStyleH8xIcntetzLEBYyklg/zp
8HBTEuVDJPe6d++et+NEYFDmmXv37pWT59NPP/V3UDAL1bOKN2/eFG9Rt8JZ
T0+PnBUZGRnKi6Ojo8q3SpAbyryxpKSENYQhO336tCpP4uPjlexa2YJkcnJS
yRnVSg7BwcHcKRTw3P1R3fO6lTk2YKzx8XHVd7UnvWpqauRe6enp3o4TgcF5
W20ll/wdFEyhr69v27Zt8vld3reOuhXOXrx4IWdFbm5uVVXV9u3b1cWqk8TE
RC68QlhcXHT3t47Q0FDnF5Wi9dmzZ/6OGn7jed3KHBsw1sDAgPzpSEpK8qRX
Y2Oj3Iut2+EJZUqpOvsfO3aMCx9QLC0tyZvWKdNCpYyVG1C3wtnz58/lrEhI
SHBZeri0d+9edsCBoHwF5eTkqPYWdyk2NpYrrVuc53Urc2zAWKonO+TngzS0
tLTIvS5duuTtOLHZNTQ0yFfTgr78OzaLf2JFWlqanBvKBFLVgLoVzlQPy6tE
RkaeP38+MzNT+b/ynq3C1atX/f0bwCwmJyezs7ODg4M1MmqFUnr09PT4O174
k+d1K3NswFh9fX3ypyMhIcGTXqpV9c6dO+ftOLGpNTY2Ov8du7Ky0t9xwRRU
d3seO3bMZrOp2lC3wtmjR49cVhbbt28vLy9XNX78+LHzPZ/yGqHYspQ0UK1y
v6abN29ys9CW5XndyhwbMJbqrzopKSme9Gpra5N7rWywCLhUVVXl/EfsNbfe
xhYxNTUVHh4uEiMsLGx0dNS5GXUrnOXl5TkXFJGRkWNjYy7bDw8P7969W24c
HR3t/EcSbCkvXrxw/oNGTEyMcpKqrq5uaGjIz88/f/68c6alpqay79LW5Hnd
yhwbMFZXV5f86fDwrzqq6yPcew93Hjx44Hy6X1n2E1CcOXNGzo3S0lKXzahb
4ezhw4fOXy9NTU0aXR4/fqxqPzIy4rOAYTYLCwuqP2UEBwdnZ2dbrVZVy87O
zqioKFXyKOnkl7DhX57XrcyxAWOpnhlPTEz0pFd9fb3cKzMz09txYtNRzvvK
l63zrJKiFYJSpaq+f9zdekfdCmdlZWWqr5c1Hx+z2+0ff/yx3KWurs430cKE
VHtvKRoaGtw1tlgshw8flhtHRETwXbQFbXhdJubYgE5jY2PypyMuLs6TXpWV
lXKv3Nxcb8eJzWVubi4+Pj7IiTJJ8HdoMIs3b96EhYWJ3Ni9e/eHDx/cNaZu
hbNnz56pvmE82VcrJyeH8xdWyA8pBHmwAM7g4KBqrQYWatiCPK9bmWMDxpqe
npY/HZGRkZ70Uj5Ecq+ioiJvx4lNZHx8/KOPPlLNJ5VzfXV1tb9Dg4koU0RV
kpxzTzVXTEpKEm+5u7UYAa+pqUmVQhoTSEG1e87Fixd9ECpMaGZmRpU/yoxo
zV7p6elyl+vXr/sgVJiK53Urc2zAcLt27RKfjuDgYE8WqVDd/0k9AqGvr2/v
3r2qycCOHTva2tr8HRrMxeVSJxvAmhVbVn9/vyoZLBbLmr16enrkLsePH/dB
qDCh3t5eORMOHjzoSa/a2lq516lTp7wdJ8zG87r1C+bYgNHi4uLkD8j4+Pia
XVS3gA4PD/sgTphfS0vL9u3bVTPJyMjIwcFBf4cG06FuhU5Klapaq9yT62Xt
7e1yFw+fOEPgUVWgx44d86SXMuGRe0VFRXk7TpjNuupW5tiAsdLS0uQPyJp/
2LFarfJTaTt27GApeHzx5WzQeTeBo0ePajy0iK2MuhX6RUdHy8nQ1dW1Zpfy
8nK5i3IG9EGcMCHVbiNnzpzxpNfg4KDc6/Dhw96OE2azrrqVOTZgLNVJ/Nq1
a9rtVct6e7iNMgJbd3e385XWs2fPLi0t+Ts0mFR+fn6cx1SpdezYMfFWQUGB
v38V+I3qKWlPFt5U2shd8vLyfBAnTEj1fOv+/fvdrWcuU60GdvXqVR+EClNZ
V93KHBsw1tTUlHyr1c6dO+fn5zXaKx86+TOVnZ3ts1BhTkoKqVZlDGJPdhiK
9YThkmrDiH379mn/rUw5u+3Zs0fu0tnZ6bNoYTYRERFyMnR0dKzZ5fLly3KX
4uJiH8QJU1lX3cocGzDcyZMn5Y9JVlaWu5ajo6Pbtm0TLZUP49jYmC9Dhdko
xempU6dUReutW7c8+cM14CHqVrikZIK87Ini9u3bGu2Vd+XGBw4c4JtqKzt7
9qycD8ePH9deNqelpUV1suPvHlvQuurWL5hjA0arqqpSfRW7/BOi8oGKjIyU
m6WkpPg+WpiKc/KcPn2aK60wFnUr3MnIyJBzQ5npuXuCrLm5WbWhEtcytria
mhrV+evmzZvuzl/j4+OqKdDBgwc9WcIaAWa9dStzbMBYyrf0kSNHVB+r3Nxc
+Qu5u7vb+V7QgYEBP4YNv7PZbL/61a9UWXHq1KlL6+HJrVnY4qhb4c7CwoJq
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
    "], {{0, 384.}, {628., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{628., 384.},
  PlotRange->{{0, 628.}, {0, 384.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->20479822,ExpressionUUID->"19636985-4491-4a91-a4e4-0aea7625605a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Acknowledgment",
  FontWeight->"Bold"],
 ": Some examples here have been contributed by Ha-Eum Kim."
}], "ExampleText",
 CellID->1797647409,ExpressionUUID->"bc263592-7e53-4733-b00f-da2cef2d3251"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "c4d52cf2-abbd-4c4c-9b9a-4f66116cf5bf"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladStationary"]], 
           "paclet:Q3/ref/LindbladStationary", "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "534fbf39-ba06-4973-8320-b35274cca323"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "658cc3b7-0017-4a6b-90ce-ba4d27db4e7d"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LieBasis"]], "paclet:Q3/ref/LieBasis", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "47f28cd5-d7fd-4970-a20f-e2b285dcfb4d"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladSupermap"]], "paclet:Q3/ref/LindbladSupermap", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "74a9434b-e78a-435c-bf66-db25bc71ba06"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["DampingOperator"]], "paclet:Q3/ref/DampingOperator", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "5ecfa19e-dcad-4863-86ea-22d99e1c74bd"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Supermap"]], "paclet:Q3/ref/Supermap", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "6e6edb47-7826-4d6d-a4f4-58f0692675cb"]
       }], "SeeAlso",ExpressionUUID->"106f40d3-932b-47ba-a310-3b428c4b6fc0"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"fe89583b-0c20-4c51-8acb-\
250da092face"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTutorial.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TutorialsSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Noise and Decoherence"]], 
           "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "e38207a3-878d-4e91-a888-2fa4b6af4e83"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems with Q3"]], 
           "paclet:Q3/tutorial/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "da847382-88ed-4fed-bcbf-e4ede46719c0"]}]}
     }]}
  }]], "TutorialsSection",ExpressionUUID->"2af74244-a67b-490d-82d2-\
3742883f19e1"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Dynamical Process of Decoherence"]], 
           "paclet:Q3/guide/DynamicalProcessOfDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "5de2375b-20f2-4ecb-80e1-0dc54574eb31"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems"]], 
           "paclet:Q3/guide/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "b8652715-f8cd-427c-bc6a-8e89240c7460"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"2cd9b87a-f6cc-4f0a-8252-\
e4699c5c7aa1"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "H.-P. Breuer and F. Petruccione (2002)"}]]]], 
             "https://doi.org/10.1093/acprof:oso/9780199213900.001.0001"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "18187fb1-ed0c-4313-aff7-985701a8a97b"]}]],ExpressionUUID->
         "59ef6188-c685-4c70-8b8e-cfc5295b7849"],
        ", The Theory of Open Quantum Systems (Oxford University Press, 2002)."
       }], "RelatedLinks",ExpressionUUID->
        "00e651c6-bd5f-4e3d-bb7e-6229f6c40692"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "C. W. Gardiner and P. Zoller (2000)"}]]]], 
             "https://www.springer.com/gp/book/9783540223016"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "990f7a7f-1708-468e-afa0-9d6a01390f25"]}]],ExpressionUUID->
         "76d8e867-d575-4560-8da1-a88a80713435"],
        ", Quantum Noise (Springer, 2000)."
       }], "RelatedLinks",ExpressionUUID->
        "17d008fb-5c16-45dc-8bea-514d7fd71404"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "Mahn-Soo Choi (2022)"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "c8112834-f964-44ea-9733-95c0818c54be"]}]],ExpressionUUID->
         "f29a773d-b9cc-4fd0-b828-b515835f2334"],
        ", A Quantum Computation Workbook (Springer, 2022)."
       }], "RelatedLinks",ExpressionUUID->
        "9e52626d-97a1-40b9-b438-1f0b967192f8"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"b97cff6c-8549-402c-ba66-\
de06f9b44b08"],

Cell[" ", "FooterCell",ExpressionUUID->"ef670593-8209-4f27-befe-b3604ccb41c8"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2023, 8, 11, 21, 47, 41.864282}", 
    "history" -> {"12", "", "", ""}, "context" -> "Q3`", 
    "keywords" -> {
     "Lindblad equation", "quantum master equation", "decoherence", 
      "quantum noise"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> "Q3 Symbol", 
    "language" -> "en", "paclet" -> "Q3", "status" -> "None", "summary" -> 
    "LindbladSolve[{a, b1, b2, ...}, init, t] returns the solution of the \
Lindblad equation specified by the effective Hamiltonian a and the Lindblad \
operators b1, b2, ... with the initial condition init as a function of time \
t. LindbladSolve[a, {b1, b2, ...}, init, t] is also allowed.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "LindbladSolve", 
    "titlemodifier" -> "", "metadescription" -> "", "windowtitle" -> 
    "LindbladSolve", "type" -> "Symbol", "uri" -> "Q3/ref/LindbladSolve"}},
CellContext->"Global`",
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Mac OS X ARM (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"38061887-bb04-43be-be57-2b5781c10b4d"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[14837, 396, 1389, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"8b8db0cf-8aa1-4d4d-a80f-4e891e92080e",
   CellTags->"PrimaryExamplesSection",
   CellID->302609551]},
 "RasterizedOutput"->{
  Cell[220917, 5587, 192577, 3163, 405, "Output",ExpressionUUID->"19636985-4491-4a91-a4e4-0aea7625605a",
   CellTags->"RasterizedOutput",
   CellID->20479822]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 425229, 9064},
 {"RasterizedOutput", 425429, 9068}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 7498, 183, 57, "AnchorBarGrid",ExpressionUUID->"da87cd65-2055-435c-9c16-d93fbe9fcce8",
 CellID->1],
Cell[8086, 206, 85, 0, 23, "ContextNameCell",ExpressionUUID->"3fcca4fe-8151-4600-9612-bb9a9ef8a89d"],
Cell[CellGroupData[{
Cell[8196, 210, 556, 14, 60, "ObjectNameGrid",ExpressionUUID->"59fc2ee8-1715-4f51-8d6e-64322b2dfbe3"],
Cell[8755, 226, 2598, 70, 208, "Usage",ExpressionUUID->"36d294c7-65ad-4677-b95e-6ff5e6e47ce3",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[11390, 301, 1899, 47, 37, "NotesSection",ExpressionUUID->"54a5e079-c64f-4979-96e0-1d9aaef08bdf",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1584149751],
Cell[13292, 350, 976, 25, 70, "Notes",ExpressionUUID->"f9730bf9-a3df-4498-9028-b1614e86f36a",
 CellID->1067943069],
Cell[14271, 377, 439, 13, 70, "Notes",ExpressionUUID->"251087f2-fd62-4dac-933d-18d6a0a1a408",
 CellID->94066822]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[14837, 396, 1389, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"8b8db0cf-8aa1-4d4d-a80f-4e891e92080e",
 CellTags->"PrimaryExamplesSection",
 CellID->302609551],
Cell[16229, 435, 192, 3, 31, "Input",ExpressionUUID->"f5966dca-a897-4aa4-8bba-5576f9eb69d7",
 CellID->1927565408],
Cell[CellGroupData[{
Cell[16446, 442, 1367, 36, 31, "ExampleSection",ExpressionUUID->"89131435-4bb6-4883-8aa0-4149a421c58b",
 CellID->717447561],
Cell[CellGroupData[{
Cell[17838, 482, 687, 20, 66, "Input",ExpressionUUID->"b62c2195-8339-41f6-865e-365f91973a9c",
 CellID->383286299],
Cell[18528, 504, 1927, 67, 82, "Output",ExpressionUUID->"82f38bd2-e9a8-4fc3-8095-8f85ce0dcc35",
 CellID->1154473629]
}, Open  ]],
Cell[CellGroupData[{
Cell[20492, 576, 315, 8, 48, "Input",ExpressionUUID->"1bafd019-044b-48fe-acdd-7170d5e4c3e6",
 CellID->575047188],
Cell[20810, 586, 646, 18, 66, "Output",ExpressionUUID->"82bf233f-75fb-4459-b081-e98339931a83",
 CellID->2120707895]
}, Open  ]],
Cell[CellGroupData[{
Cell[21493, 609, 713, 19, 66, "Input",ExpressionUUID->"5873a3e0-7ec1-4cc1-9f91-cfc0df3fdee5",
 CellID->1820491489],
Cell[22209, 630, 1894, 58, 57, "Output",ExpressionUUID->"c0b5468d-b5bd-4d82-853d-6884796f9a58",
 CellID->1239799508]
}, Open  ]],
Cell[CellGroupData[{
Cell[24140, 693, 299, 7, 29, "Input",ExpressionUUID->"eb8ee413-e792-495f-9212-8f0a441a15a8",
 CellID->309037009],
Cell[24442, 702, 13661, 405, 100, "Output",ExpressionUUID->"35a1de6b-b58a-4199-bdd7-b854b43f51c6",
 CellID->1765503414]
}, Open  ]],
Cell[CellGroupData[{
Cell[38140, 1112, 345, 10, 70, "Input",ExpressionUUID->"f88c023b-be1c-443d-9bf0-1d5884e4bf07",
 CellID->1017770999],
Cell[38488, 1124, 1927, 67, 82, "Output",ExpressionUUID->"9f7c083f-961c-40b7-ad1d-2dbf9dc3363d",
 CellID->1113541748]
}, Open  ]],
Cell[CellGroupData[{
Cell[40452, 1196, 644, 18, 70, "Input",ExpressionUUID->"a220232c-3e9b-4725-b7ea-cc78e6e6ead7",
 CellID->766568750],
Cell[41099, 1216, 2011, 63, 92, "Output",ExpressionUUID->"a81d6ac3-947e-40a1-ac4a-d64cc8823656",
 CellID->1771841320]
}, Open  ]],
Cell[CellGroupData[{
Cell[43147, 1284, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a85f5556-69b0-459d-80f2-0f19331365f9",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[43415, 1293, 416, 12, 70, "Input",ExpressionUUID->"9d5bb9d6-e9a7-4563-9896-51ed5603c463",
 CellID->435145815],
Cell[43834, 1307, 851, 26, 82, "Output",ExpressionUUID->"2eadf139-ba04-4f5f-b4b4-2ebbca069f9c",
 CellID->834938680]
}, Open  ]],
Cell[CellGroupData[{
Cell[44722, 1338, 295, 7, 70, "Input",ExpressionUUID->"a37b5f97-b656-4d8d-af6c-4a189ed4dcb6",
 CellID->1196829607],
Cell[45020, 1347, 688, 21, 66, "Output",ExpressionUUID->"b5b7c295-d243-4a55-9e4f-48e927247fe9",
 CellID->2044754869]
}, Open  ]],
Cell[CellGroupData[{
Cell[45745, 1373, 1220, 33, 70, "Input",ExpressionUUID->"5941bdf2-d531-4ec5-b935-8d3956389664",
 CellID->1273375212],
Cell[46968, 1408, 2167, 64, 70, "Print",ExpressionUUID->"eee71c58-c910-4e44-9ebe-f444f1dc41e1",
 CellID->1593888076],
Cell[49138, 1474, 2818, 73, 82, "Output",ExpressionUUID->"166eb8b8-d305-41ee-8182-8d940b47ce2a",
 CellID->765880654]
}, Open  ]],
Cell[51971, 1550, 822, 26, 70, "Input",ExpressionUUID->"0b25324e-34e4-4cf0-874a-3dc9976be282",
 CellID->374788519],
Cell[CellGroupData[{
Cell[52818, 1580, 1231, 32, 70, "Input",ExpressionUUID->"860f0568-e42e-4cdf-acd1-745301e76be4",
 CellID->667061092],
Cell[54052, 1614, 8654, 190, 394, "Output",ExpressionUUID->"fc74efe3-2225-4829-918a-a936e18dc78c",
 CellID->1206872817]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62755, 1810, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"d74132c0-0536-41dd-b2a5-3c526818dbe8",
 CellID->1586259128],
Cell[63001, 1817, 133, 1, 70, "ExampleText",ExpressionUUID->"972e2169-e096-45bb-95d9-fdcb5f078ace",
 CellID->692904445],
Cell[CellGroupData[{
Cell[63159, 1822, 368, 10, 70, "Input",ExpressionUUID->"8c95e3e1-b94c-454d-a470-7cd9f2e7d4cd",
 CellID->1425866839],
Cell[63530, 1834, 667, 19, 100, "Output",ExpressionUUID->"6326f8fd-40a1-467c-b615-3cf930669a91",
 CellID->1221683199]
}, Open  ]],
Cell[CellGroupData[{
Cell[64234, 1858, 625, 17, 70, "Input",ExpressionUUID->"881c7ddc-8630-4d22-9ff3-b27a71037425",
 CellID->1104129648],
Cell[64862, 1877, 2124, 65, 100, "Output",ExpressionUUID->"f03e0cb4-cfea-427c-b46e-ca46f9ad606f",
 CellID->499592057]
}, Open  ]],
Cell[CellGroupData[{
Cell[67023, 1947, 1090, 29, 70, "Input",ExpressionUUID->"0d1540c8-7744-441e-8f21-75d4ba78f17b",
 CellID->252233040],
Cell[68116, 1978, 1916, 56, 87, "Output",ExpressionUUID->"370b349f-b6f3-4b06-9b31-6fd48e255f39",
 CellID->1388630669]
}, Open  ]],
Cell[CellGroupData[{
Cell[70069, 2039, 1020, 27, 70, "Input",ExpressionUUID->"975a1b30-91b2-4f18-b660-3c615aa01da5",
 CellID->1792714312],
Cell[71092, 2068, 183, 4, 37, "Output",ExpressionUUID->"97b31409-7c62-4ba8-8db1-8f0c897345cc",
 CellID->1668984482]
}, Open  ]],
Cell[71290, 2075, 370, 11, 70, "Input",ExpressionUUID->"0d223633-c3aa-465e-8995-928b6fa506eb",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[71685, 2090, 673, 18, 70, "Input",ExpressionUUID->"2357a509-eadd-4783-a634-b10d4d1d5ee4",
 CellID->1239593903],
Cell[72361, 2110, 47628, 919, 70, "Output",ExpressionUUID->"1a19f836-b0c5-4a0b-97c4-c8ac60cd3a5a",
 CellID->404809319]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120038, 3035, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a7fad46a-2258-43b4-83d8-882e793c4604",
 CellID->1261705519],
Cell[120284, 3042, 276, 7, 70, "ExampleText",ExpressionUUID->"530bc623-2c99-4925-b4a1-4ccac1385a81",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[120585, 3053, 406, 12, 70, "Input",ExpressionUUID->"29a296f2-4211-4c6e-90d6-7172394df88e",
 CellID->427878852],
Cell[120994, 3067, 346, 11, 65, "Output",ExpressionUUID->"0b50c386-4b5e-435d-9cf0-227b78ee8e6e",
 CellID->1555815591]
}, Open  ]],
Cell[121355, 3081, 228, 6, 70, "Input",ExpressionUUID->"98a6edb7-c4d0-45f4-801d-c22af0e5d1fe",
 CellID->1686455809],
Cell[CellGroupData[{
Cell[121608, 3091, 609, 16, 70, "Input",ExpressionUUID->"84a403e1-3fd2-4b08-8da8-6fa5621346ad",
 CellID->1773608757],
Cell[122220, 3109, 794, 26, 40, "Output",ExpressionUUID->"c75e8e55-266b-4900-9b19-a4962bac3552",
 CellID->1954520658]
}, Open  ]],
Cell[CellGroupData[{
Cell[123051, 3140, 1291, 33, 70, "Input",ExpressionUUID->"4ceccf5c-f279-4e7c-a611-6a5fa547d86d",
 CellID->813112276],
Cell[CellGroupData[{
Cell[124367, 3177, 698, 21, 70, "Print",ExpressionUUID->"f6665212-303f-4afe-8f14-390d942ad0d7",
 CellID->1114083042],
Cell[125068, 3200, 1393, 40, 70, "Print",ExpressionUUID->"426389d3-15ce-4acb-8ac1-e48248c4adc0",
 CellID->483768701]
}, Open  ]],
Cell[126476, 3243, 2030, 60, 71, "Output",ExpressionUUID->"4fc1dfae-2971-4b65-9b16-29b00abd9695",
 CellID->327470165]
}, Open  ]],
Cell[CellGroupData[{
Cell[128543, 3308, 606, 18, 70, "Input",ExpressionUUID->"0ea49ef7-29f5-43f1-91cb-e443bc638694",
 CellID->1408697964],
Cell[129152, 3328, 957, 25, 40, "Output",ExpressionUUID->"69961275-10e6-4a64-9342-139b94be3b55",
 CellID->893971258]
}, Open  ]],
Cell[CellGroupData[{
Cell[130146, 3358, 1231, 32, 70, "Input",ExpressionUUID->"6e604fd2-a166-47bb-86de-025cb0df3401",
 CellID->743762978],
Cell[131380, 3392, 25179, 530, 70, "Output",ExpressionUUID->"7e6e8eda-a30e-4545-9183-e4193c823a1d",
 CellID->406856793]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[156608, 3928, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"5809209a-25da-421f-a114-344dd0294c3b",
 CellID->818700002],
Cell[156853, 3935, 201, 4, 70, "ExampleText",ExpressionUUID->"e9db8f73-e254-4d14-9096-3aebb3a2d021",
 CellID->1536645940],
Cell[157057, 3941, 209, 5, 70, "Input",ExpressionUUID->"3eb8de68-ff12-43ca-92ed-b078bac20d3d",
 CellID->1470681252],
Cell[157269, 3948, 120, 1, 70, "ExampleText",ExpressionUUID->"c2b3c2bc-03fc-4de2-be54-a8036c8aa330",
 CellID->2051494922],
Cell[CellGroupData[{
Cell[157414, 3953, 366, 11, 70, "Input",ExpressionUUID->"8279e005-918c-459a-ae30-4215b4814db2",
 CellID->963207285],
Cell[157783, 3966, 488, 15, 65, "Output",ExpressionUUID->"d4c3f285-addc-45e6-a941-26b8b81c9146",
 CellID->881134970]
}, Open  ]],
Cell[158286, 3984, 128, 1, 70, "ExampleText",ExpressionUUID->"52cb4fb5-2ba8-463c-bfd6-4fb124016409",
 CellID->894984484],
Cell[158417, 3987, 224, 6, 70, "Input",ExpressionUUID->"35623ff6-7f20-4f8d-beba-afdd941ea1f0",
 CellID->1701417680],
Cell[158644, 3995, 207, 4, 70, "ExampleText",ExpressionUUID->"098ba08d-0cd3-4107-8c73-62dd26fe2a34",
 CellID->1957216028],
Cell[CellGroupData[{
Cell[158876, 4003, 605, 16, 70, "Input",ExpressionUUID->"bcabe75c-21a0-4b71-b10a-b55f5b1f94e9",
 CellID->682224499],
Cell[159484, 4021, 976, 30, 40, "Output",ExpressionUUID->"8d3b02d5-fc5b-417d-b8a7-bcc31c62ec15",
 CellID->1865958886]
}, Open  ]],
Cell[160475, 4054, 133, 1, 70, "ExampleText",ExpressionUUID->"35310c28-743a-4853-9bfd-23a72e174b61",
 CellID->1153262109],
Cell[160611, 4057, 938, 25, 70, "Input",ExpressionUUID->"d667fada-5002-4736-9872-927b5f48dcb7",
 CellID->719143774],
Cell[161552, 4084, 149, 1, 70, "ExampleText",ExpressionUUID->"bae39644-7bdf-4c99-8e8e-dbe1033ad290",
 CellID->1738183371],
Cell[CellGroupData[{
Cell[161726, 4089, 181, 4, 70, "Input",ExpressionUUID->"fae3ea3f-de95-4364-b5c8-0636065ea088",
 CellID->711450696],
Cell[161910, 4095, 2154, 61, 58, "Output",ExpressionUUID->"740bbb1d-753b-4bad-82a0-fbb9d74e61c1",
 CellID->2011581048]
}, Open  ]],
Cell[164079, 4159, 214, 4, 70, "ExampleText",ExpressionUUID->"03c21235-d928-43e2-b450-2ec4a8f21878",
 CellID->473288516],
Cell[CellGroupData[{
Cell[164318, 4167, 598, 18, 70, "Input",ExpressionUUID->"a8584dde-b442-4647-8faa-fffcea32b859",
 CellID->1210483635],
Cell[164919, 4187, 957, 25, 40, "Output",ExpressionUUID->"e232567d-5e17-4aef-8d17-af130168002b",
 CellID->830332189]
}, Open  ]],
Cell[165891, 4215, 169, 3, 70, "ExampleText",ExpressionUUID->"e0fd04a3-03d2-4c03-ab87-4bd7e967d4da",
 CellID->1689424838],
Cell[CellGroupData[{
Cell[166085, 4222, 1232, 32, 70, "Input",ExpressionUUID->"0d88fc09-2a88-4c7c-a428-1a8a6b897ae3",
 CellID->1754552550],
Cell[167320, 4256, 25179, 530, 70, "Output",ExpressionUUID->"4a5b54ba-3b37-4511-82f8-2f5b160aa8c5",
 CellID->487174564]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192548, 4792, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a7e8f41d-0645-4649-98a5-bf9e955e9c54",
 CellID->1593892289],
Cell[192794, 4799, 175, 2, 70, "ExampleText",ExpressionUUID->"b4e46964-4fbf-49c1-a4c4-7ce1bb2db082",
 CellID->210970783],
Cell[192972, 4803, 208, 5, 70, "Input",ExpressionUUID->"274168af-2f53-4018-8b3b-a46abde4ca21",
 CellID->290448684],
Cell[193183, 4810, 221, 4, 70, "ExampleText",ExpressionUUID->"88a131b4-35dc-452c-afb6-ef36c9ca0ef2",
 CellID->340702357],
Cell[CellGroupData[{
Cell[193429, 4818, 954, 28, 70, "Input",ExpressionUUID->"36bbd0ad-1534-4d38-9da2-2886a8105f26",
 CellID->993111197],
Cell[194386, 4848, 820, 24, 98, "Output",ExpressionUUID->"dc7e9c9c-02a0-467e-85a9-f5794fb5d7d3",
 CellID->440769274]
}, Open  ]],
Cell[CellGroupData[{
Cell[195243, 4877, 1428, 37, 70, "Input",ExpressionUUID->"2155afbd-7b9d-486b-b9b4-c0009af9a8db",
 CellID->501635503],
Cell[196674, 4916, 2987, 96, 41, "Output",ExpressionUUID->"e03e3e22-5115-4a4c-a80f-8970e9f8f279",
 CellID->585612556],
Cell[199664, 5014, 3699, 108, 75, "Output",ExpressionUUID->"11dfc88a-0a3e-4d2c-ae5e-6aa8b779df88",
 CellID->472674491]
}, Open  ]],
Cell[CellGroupData[{
Cell[203400, 5127, 475, 14, 70, "Input",ExpressionUUID->"429e6d3d-e29d-4982-b7ea-1bcc97bcda03",
 CellID->1865696334],
Cell[203878, 5143, 14579, 370, 225, "Output",ExpressionUUID->"c3f8ecbf-a273-4820-996c-1365ea97dbbe",
 CellID->1782726383]
}, Open  ]],
Cell[CellGroupData[{
Cell[218494, 5518, 1463, 38, 70, "Input",ExpressionUUID->"216c61b8-fd77-4688-9471-2cdc6504194f",
 CellID->260219023],
Cell[219960, 5558, 183, 4, 37, "Output",ExpressionUUID->"c8156d9e-6f5a-4acc-85ac-b98283128008",
 CellID->2119099875]
}, Open  ]],
Cell[CellGroupData[{
Cell[220180, 5567, 734, 18, 70, "Input",ExpressionUUID->"6d04cbac-6c52-4df3-9170-9eb1d4f40354",
 CellID->1542313529],
Cell[220917, 5587, 192577, 3163, 405, "Output",ExpressionUUID->"19636985-4491-4a91-a4e4-0aea7625605a",
 CellTags->"RasterizedOutput",
 CellID->20479822]
}, Open  ]],
Cell[413509, 8753, 222, 5, 70, "ExampleText",ExpressionUUID->"bc263592-7e53-4733-b00f-da2cef2d3251",
 CellID->1797647409]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[413973, 8767, 3908, 106, 70, "SeeAlsoSection",ExpressionUUID->"fe89583b-0c20-4c51-8acb-250da092face"],
Cell[417884, 8875, 1129, 29, 70, "TutorialsSection",ExpressionUUID->"2af74244-a67b-490d-82d2-3742883f19e1"],
Cell[419016, 8906, 1114, 28, 70, "MoreAboutSection",ExpressionUUID->"2cd9b87a-f6cc-4f0a-8252-e4699c5c7aa1"],
Cell[420133, 8936, 2908, 78, 70, "RelatedLinksSection",ExpressionUUID->"b97cff6c-8549-402c-ba66-de06f9b44b08"],
Cell[423044, 9016, 78, 0, 70, "FooterCell",ExpressionUUID->"ef670593-8209-4f27-befe-b3604ccb41c8"]
}
]
*)

(* End of internal cache information *)

