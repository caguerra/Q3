(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    257112,       5929]
NotebookOptionsPosition[    243212,       5627]
NotebookOutlinePosition[    245646,       5687]
CellTagsIndexPosition[    245559,       5682]
WindowTitle->LindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["Q3 SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Tutorials",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Tutorials", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus: Quick Start\"\>":>
       Documentation`HelpLookup["paclet:Q3/tutorial/KrausQuickStart"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"Tutorials"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"LindbladConvert\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladConvert"], "\<\"LindbladBasis\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladBasis"], "\<\"LindbladGenerator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/LindbladGenerator"], "\<\"DampingOperator\"\>":>
       Documentation`HelpLookup[
       "paclet:Q3/ref/DampingOperator"], "\<\"Supermap\"\>":>
       Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Kraus Package Guide\"\>":>
       Documentation`HelpLookup["paclet:Q3/guide/KrausPackageGuide"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Q3/ref/LindbladSolve\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Q3/ref/LindbladSolve"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Q3/ref/LindbladSolve.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$95157], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], 
             "Q3/ref/LindbladSolve", ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["LindbladSolve", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]returns the solution of the Lindblad equation specified \
by the effective Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula"],
     " and the Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula"],
     " with the initial condition ",
     Cell[BoxData[
      StyleBox["init", "TI"]], "InlineFormula"],
     " as a function of time ",
     Cell[BoxData[
      StyleBox["t", "TI"]], "InlineFormula"],
     "."
    }]]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"LindbladSolve", "[", 
       RowBox[{
        StyleBox["a", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        StyleBox["t", "TI"]}], "]"}]], "InlineFormula"],
     "\[LineSeparator]is also allowed."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {None, {None}}}},
 CellID->982511436]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->1650335678],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->292955494],

Cell["Lindblad is still experimental and must be loaded manually.", \
"ExampleText",
 CellID->789443279],

Cell[BoxData[{
 RowBox[{"<<", "Q3`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Q3`Kraus`"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->387884857],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->383286299],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1271497621]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->575047188],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1967772252]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1820491489],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1190485218]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->838964454],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1661903300]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
  RowBox[{"LindbladSolve", "[", 
   RowBox[{"ops", ",", "init", ",", "t"}], "]"}]}]], "Input",
 CellLabel->"In[6]:=",
 CellID->309037009],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]]}], "+", 
      RowBox[{"\[ImaginaryI]", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"t", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"\"-\""},
              "RowDefault"]]}], "2"]}], "-", 
         FractionBox[
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "2"]}]], " ", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]]}]}], ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "t"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"t", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]], "-", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", " ", 
             RowBox[{"(", 
              RowBox[{
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"-\""},
                 "RowDefault"]], "+", 
               SubscriptBox[
                TemplateBox[{"\[CapitalGamma]"},
                 "RowDefault"], 
                TemplateBox[{"\"+\""},
                 "RowDefault"]]}], ")"}]}]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}], "-", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"x"},
             "RowDefault"], 
            TemplateBox[{"3"},
             "RowDefault"]], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"+\""},
            "RowDefault"]]}], ")"}]}]]}]}], "}"}]}], "}"}]], "Output",
 CellLabel->"Out[6]=",
 CellID->2119926037]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "0"}]}], "]"}], "//", "Simplify"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1017770999],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[7]//MatrixForm=",
 CellID->538198124]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"t", "\[Rule]", "Infinity"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ">", "0"}], ",", 
        
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], ">", "0"}]}], 
       "}"}]}]}], "]"}], "//", "Simplify"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->766568750],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]], "0"},
     {"0", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]], 
       RowBox[{
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "+", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}]]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[8]//MatrixForm=",
 CellID->410032828]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->435145815],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->61418893]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->1196829607],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->2036938959]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", "ops"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "init", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1273375212],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "0"},
       {"0", 
        RowBox[{"-", "1"}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0.5477225575051661`"},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]],
    ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {"0.8366600265340756`", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[21]:=",
 CellID->2069422243],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`", " ", "t"}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2.`", " ", "t"}], "]"}]}]}]},
     {
      RowBox[{
       RowBox[{"0.4999999999999999`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2.`", " ", "t"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"0.4999999999999999`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2.`", " ", "t"}], "]"}]}]}], 
      RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.20000000000000007`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1.`"}], "+", 
          RowBox[{"1.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.9999999999999998`", " ", "t"}]]}]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->134491289]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->374788519],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->667061092],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11A0w22ccwHEviZcyL6FoIohYq6atl9XVVJ+fqapRtraGYqc2tK6Gau0Q
r2MrHSmSMbpNqLexldYIuyY6UUV17ZkR9a7H1LTVrC8x0zXLr7+7XO5//+f5
PHffJxdWZPzhKDUVFZWoVx/F9+vZeKmYR6TiG8V0kqLVVV2bkRV87icpEo8o
v6YH5G1nxQyT5d8WdSJ+WcD3UhKXGRE1CnNEqc2QC2FsZ4eH47h+nhRfEZjb
7LxLYqIVs0D2fmLnldkowv1LZNvi4TTZJp546JZi/iJVQsNPmed/FSu9x2Q5
LlcYu+2OWLl+lQTm6XFlXSNipS8jl+x6HycuSHH/3+RkO0PAFkyIlec9I82G
FldfrE6i94KE1sovDK1Moicnru+dKIafJ9D7h/QJnqt6nh5Hb50kf8/yzgsc
RW+DPDmSsWOidBg9FZDWe82c7buN61Ugl1uk1fa0F31VGJdJzqU6dOF+NWhO
G9fk7azG89RBHOxXWrZegf0oYE/hU7febiNKjwIhU1YOqsHd2IsKPPGNQJ5+
L/bUAL9KSYMs9Sb21gSHK4LJM18PoKcFjmVnLd8/NYieFsyxXSLu0wbR04Zm
5p3PG37oR28T2DY9LVgI7UNPB9RWLvuEH5Wgpwvby5Zy5yXd6OlCid29WB9R
J3pvwD2662Wz+lb09KDE4MyBHvca9PTBWzs9MCQxEz0DaPAYXpdt52EfA+CY
24eIjtVhTwO4qMc3SfJuEf+/3dkQPGvXVg66t2FfQ9i4lX/8d9UOvA8a+O9O
aePxhejRYF2jUuBF7USPBmotmfcdTwixvxGMjMpaPaba0TMCSh6tfrqwDT1j
mLM8OTEkaEXPGEriUuTUomb0jKHCJumQT2AtepvBdN9ai2SmEr3N8C5Vrukq
LkDPBLJ3cT66WuCEfUygfjq52+lgPvY0gaXgLKMO/zLsZQp5AeevZatVYV9T
oPM7OGH+NdjPDGYZ5WNdObXomcHkcsJSck0dembAiw340VZch94WkPYV9uWv
1KK3Bdz3DnhVH7qEHh0WXN5M/UO9Gj06tO+6MSWN/w49OsRw+Xs8t5ajx4BU
UfF0K6cYPQYI5SIN7Zw89MzBb2Au+6elBPTMQcb4OItdGI79zKEonyxqGKdj
PyYsNxl77pB8if2YsP/BfuoxWy72s4DjnOGxLN8SvA8LMHUaCVhSf/3/YQFB
gqCHf/bw0LOEaIlJVnQlDz1LeNn9jptNdSl6VqAlD96j86wYf19W4MgXyq+f
5qJvBWkZ/wY8ZxXgfivYPQujel65eJ4VhCeNUdp9OeixoDFo8GK9UQJ6LPBg
jA1UpX+AHgtUImfNfEtDsBcLJAfcviq/Ho99WVDDDCtYvPsZ9rMGWlZX2k2d
DKL0rCEyfu3bl27Z2NMaPhTF9p0qyEHPGvbpp+dfk+egZw0rUkZ/S0UOemw4
sl5XKMrNxvtjwzm2rj2lMRO9V++ftNLfOpqGHhuyufGh8/7J6LEh49FEYs9k
Ano2wKzjucR8EU3+AwP6x2k=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOnirPAqXyKFxaNDObCCgMgZ7fNAYE3SYKKG/GoBGUFYWx
dhswlbcWUCpvg2zCHAEqhI2n5SEiDHms2A0RZSANzCYCU4LAcGP9+c9+yU1z
c8/5nJvvLfXp5z6Rm2g0WuS/18bv/6e4aGOaicXUNCNl932iuu8jMfqSd+mX
5WSP48bIiNxyNjjZ7Ck+HyP1ouNxfr9MEZUySba0+i6mLz/D9dNE9lTZ7c9U
EF7UxiiISEQxhz5Q4P45orZQX/qcP0MeDGyMkjS/EVr9/mQavXmy3+njJM3K
P3D9ArnU59V//tEE+n+RgeODZuLm33D/SxLk5Mi3cxnB85ZIQPvo5SWvHvSW
ial2anyVwW30XpMmTmiobLxYqvJWSVmbn2DlVatU5a2RvTfFNxO1eqUqb53M
HHFQzB4alGI26BKIZ1JGRnA9DQJXM7lGqTKpyn8HxOYdtkMHR3H/JjA4vETX
YY/ieWrwEV8olzvK0FOHwsdmNE/xW08dLH50HsgYGURPA6gbZ2SJ3/ehpwm7
GdnfLCi70dOCkoZ5HzdFK3raIG0rPzfyvA49bYhz1HTR07+C3mbI1m/OEDIL
sdcWECZq1bhW1GLfrcBx+y6w3vxn7KcD/mMnlvX2tWNvHQjn60rn+juwpy5Q
8Z88jGd0oacHLzQ69srTu9DTB4/Zu0quXRd6BlB8VnJMwO7E9Qaw6B0T0EKT
om8AhhLv0uj+FvLfdkdDOJVH//KoohHPM4R5pV1lbIEEPTrcu1A+HOJeiR4d
UgssK3WmrqFHB1vnww/eC4zA9zGCQSeW9LZ9LvYwgolIxnZr+3LsZwyW/sO9
thOV2NsYIl7njLWvVGNPY7jnw0vb+lUd9jcB2cpntAqJBD0T4IcdLYyelKDH
AK7EWTszWIIeA1iesSEZX9eixwC3+M4w9r5q9EzBxXCd4u6qQs8UHrKd5++K
K9BjQgc3IlM9sAQ9JmjcryoKDs1DjwmbW4MaWkRJ6G2DZGbMT64l/thvG+zk
ZN8qP3YB+5nBeWqqqbM2F/uZgeF224X8oLf9zOAKS1F9sqgY+5nDoLcfIzGo
DD1zOEsdMAmpuY6eBXjsdOlvvHEdPQsIL+W+ogLL0LMAYabDZLd6CXqWcCdA
YH9tuAA9S/AJnTjT9fIqeixoPFSVyfTJQY8FUf6lp+SeaeixIMll5kJJjBA9
K5DzRDm7noSjZwWpUW5RvPUg7GcNgmrGnEdRglT1/7KGDxMKrh4YT8Ge1tB5
5E1+9A+p2N8aljhGB3dQmdjXGsJi9LN092ejR8GOF1n6kyaX0KMgFx7d6W3I
Ro+CL5KD2pzcs9CjoNg3tjN/PB09CkKN+Fq/tl9Ezwbyepyd10y+Rc8G/uYk
uD9+X4ieDXRebFsPeRaHng2cnl/knjwRgZ4N/Fkz5DCc5o4eG1LPeQU3cX2x
DxtSFtV4nrY87MkGpetAz60ePvZiw9qeOv7qQDz2ZUNVrSGIShLxe3DgtO50
qZ2DgPwDF+q1tw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlMk3cYB/COAYIgcrRY7h64i2PjmMdg+z0KC2McAs5BFAhDjhmiDB3I
3BAYbhYQy91WXJBMso1hFFQcSqwTkKsyS4G2YUNLEza8gEikXGUyf0//2Dd5
8+aX9/l+njdvXm5yZkyqEYPBSH1xrd3/nzOStbST6EfjZTvzfpS+PPeRsJpH
MX8JW6X+fmtRkDmy71hYyXX6XE2utbDivTW3pC+VB+Tmn5dNPtrcRee1RJSY
8+SeQ480PW0tk8RoOjJj350+2p8itUX6z373kUnvytbymOyyuiN7N3mQejPk
hOJ6VJP3PTo/S4bnukVsppz6z0iOrq68RSun/TmS3tjjVlw/RPc9JykDVqcK
QhXU0xHvkyW7wrQK6i2Qvk/Tjxw5NEy9JeLXcrQw4fEw9ZZJd/9lVnjiCPX0
ZGXdAHt/9wj1GGA5adncxBul8wzoFW0etDk6Sv1XwDHgS+kXnaO0bwQ7S5w8
S82UdN+rYH4ujmsboqSeMegj3BWN+UrqGcN0yC9blK1K6pnADVlT9psaJfVM
YTqp6gM7CxX11kF8g2Bu9R0V9cxgIUh4O2q3inpmUL29oDrhsIp65mBxN1yX
fVpFvfVwaWpoSvMTehaQ1x1WOnETPUs495WXrFWBniWccfJgCCbR2wD+20fT
K+fRswLSS5pXTNXU2whTH49EzjLV1LMGbZfYqoKrpvPWsEXZFrTiqaa+NTxt
SvXdvVUt/a/uZwPzKw/2XAA13WcDTllB5/mh6NmC8MnDgYEo9Gyh7qBJRnss
erbw9OvhHfoEfB87GPN5I6lpP3p2kBjwfaTsc/SYwIpO88s6iB4TLgq1c+ez
0GPC/Oq22MPZ6LHgWUYsW5uLHgve9x4zY3yDnj0ETzfw5MfRs4cVr/d+SChE
zx5000mM5iL0NoHbQof/7e/Q2wRRB4yqGk+ix4ZbxY2ze4vRY8P9CdIyWYIe
Gybie3rCT6HnAEOvXekvL0PPAepS3tZdPY2eI1x6K5lIheg5woz1YsjFcvQc
Yaj+ea6gAj0nEJrI9eGV6DmBQLVBrq9Ezxk0HiHX6qvQcwbJ/RsRPtXoOQNz
LNP8ajV6LsDp+jvAswY9FwjtLLYX16DnCgvLv15YqEHPFfZWxy1F16LnCv9E
DGoaatFzA9OALq+Htei5wWJAjthDhB4HVkX5fWki/L84kJMhiDsrQp8Dudv6
B2Ui7HMgMS/zZ50I93FgeUS+hyNGjwvSUUlgsBg9LrgVdf6WIkaPC4OLxS7f
itHjwoH2wLazYvS44FDK6Lli8HiQ7368rN/g8cDXpWDHuMHjQZumkDVj8Hiw
ut5nK0OCHg+M0yf+sJKgxweP8SVjZwl+Hz7ogj/RvS5Bjw8xG0t6fSXo8aGj
M7oi0ODxIXS+I+NDg+cO8YJjhyJenP8Fqgr6pQ==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.46789376727999854`, 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->502582244]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1425866839],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1004912736]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2]:=",
 CellID->1104129648],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0"},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]]},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]]},
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->427401926]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->252233040],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->815314459]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1792714312],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.559784`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1317161361]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1112511420],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Diagonal", "/@", "data"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellLabel->"In[6]:=",
 CellID->1239593903],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxV1nlYzOseAPBJ+75MNU3bbJayVEfIE3q/ypFoirLk3ripZDuuKLeODkXI
lqVF4ig6HCF5boUcoX3TNs1IpX1GSedKe0ZxOb7vH+d9nnnm+T2/9/2839/8
vt/vOzz/PV5bpzAYjIqvn2/ffx/n8y4nfxu3SYf/6B/+m0+S79ePCffstNrV
Wslknv23UUQyPk3MTDuZhvcrSLB6uqZ5SDr57tQRq1uLjr4MzMT5YvJOZ1g9
1zWLbAv6NhpIZlWqgVPSA1zfRMSR86KWOj8m1VXfRgsRPpGVbtr1FL0OYs0M
yZpuWoDzO8k+YXx4S2sR+lJySZtREKddhutlxPZ3Qd6ZrErcr5ukmvXOKhXV
oPeWPN3pV57xQIReL/llw+372ksk6PURO5Xe7Y8+NqD3JwkoSHW5K21C7z3Z
fCN1g9+HFvQ+kBvrhpSi1Ttw/gdiuG8QglM60R8gzZ6+ha02Ulw/SG7YSNIc
smS43xBx9shTeMzpRm+Y/LLfIDD33z3oDRONocCM4Ytv0Rshr1xWZ7Sf70Vv
lMRovdkhXfcOvTGycFbYjtSOd+iNk4QBj6tmc/rQGyd3dnCU+xf2ofeR2ORm
H/FR7ENPTjIXjAyuiKXeJ2IVkDV7c1MvehOkvznJrLbvLXoTZN3FnOdulT3o
TRJL30H/4ohu9D6ToxWiOhe1N+h9IQfm5xdfCpeix4A44SVDVkMnzmdA3rDH
WreZ9PdkgM1TpSTXyRby13J7BUgTx1iH5DbhfgpgOfWm8/8uNqA3Bd4+l7sW
3hKjNwXObGPMqhirQ28KXGszP3iNX43xKILVxBLtsrFy9BThP86X1/uGl6Cn
BDr7vdz7bxWipwQLNvT5hB/NR08JTD/fnBuh/Qw9ZYgU3fxQ+WMeespQzzsu
2RL3BD0ViM4ptrtT/QQ9FfAdWhzYUJ2Hngqs+PSmpDGIeqogXR9zxXZBPnqq
kL/IZ7RtYwF6ajAy3UPh9SkanxqoBHWxFHOL0FODsJHquf8UF6OnDl/0XY1O
1pegpw5HNvr8MvV+KXoa4KoY2/gqqAw9Dbjd46O/5hOtLw1o9lQuV9xXjp4m
7Nx0cG++mP5+mpBWZeQzbXYFeloA3VzWhxMV6GmBn3zyHw4fK9DTggWPLiQm
nqlETxvS12/sEHq9QE8bLkrlu0N9qtDTgaN2yTmCu9Xo6cCJTaHSUu9a9HRg
YY/dDcioQ08X/ntmY0xLK613XSgedxK8WSJGTw+UDy/P21chwfzSg1vyKddj
IxrQ14NCvSKPlcJGXK8HjnHhjfL5zbifHlhJeq6FzKL9QB94CnHZfvw29PQh
z+CK7VrVDvT0weNIWVLfQAd6+lB0Oy66vLITPX3ISY4OVTjThZ4B/LrbLdLK
Tore1+uQGNdDWbSfGECZavFHS10ZegawMkdyfIaLDD0DWOsYmC1yl6HHhA2t
nn3HZtH+w4Q9ETW2Xe3UY8LnnP2yB7uk6DHhU5fs3qCoCz0mLHtbwIg3pvEZ
gtTzbGCYUyd6hsDKKShb5Emf1xCqbs8x105pQ88QlqeHhv9+ogU9Q3AZFyXu
39WMnhEsG9oYEebdiJ4R/OF4braakL4PI7C8fnTVoQAJekZg43CMW3+tHj0j
SFaVz/fWFqFnDMxpexzbNteiZwycfnLQmEXzxxgWFOWmv3Gl+WYMPzVuL8ka
oPlpDGdDCrZ16dF8ZsGq9XtsrFNo/rPg1LTxxi9ny9FjQVHp+xL7BloPLIgr
VkuJDaQeC+YfDrGOsa5EzwSUmXNq1AxfoGcCQbuZyjOYVeiZQOa/BuwajavR
M4HVg6r3rujVoGcCksiAy5rD9Hxjw73TMpn3I/q8bDh894tuiXUdemxwHylK
3Otfhx4bCn09Dvkfo/3x6/018bbN8XXomcKBCzMnz52n9WQKaSmxvx2LpJ4p
+K898LBmK/VM4WC400l3N+qZgpvm+xNb7KhnBtU7OV6pPOqZQWxzpXyfgHpm
0NZayRQvop4ZLKvmVA3uoZ4ZcBRaAiaLqGcOo1cd8lscReiZQ8HKBz9rN4jQ
M4dA59NzjiTWo2cOXsuvOiaFidEzhzH7qiDWzxL0LGBT+lTHNYkv0bOAnStP
/bC4lOafBRwIzlqRoUT7gQXcfDVQcWFFE3oWYKNk/8r5JM1nS9CXGz5/8fQ1
epYgcVjd79zagp4lPLoTPM+ivRU9SygPLRw79KQNPUvQ8s70iNnVjh4HNJ7p
DFzobUePA8L6zJKHJrTeOPBs98RsZy7tLxxwjk8okmvQ85QDVkO+filZ1ONC
i6SHzWS3f5/P5kJdu/7BGCHtX1yY0S+OSF/X+n29OxeWMVUcty+k8XPBKWZp
6rNJfN4oLjj3LBn0y6TnMxccF3etCflaz39x2Vy4+es5Y4dR+v+KC+OxoUse
p7787nVzocvWdyzah74PHuz/SUO43kqM8fHAzvvWcZlRPcbHA8Mj8hu/TRdh
fDw4zF1aen0zzSceSNmChKaoWoyPB7puX97pXq7B+L7ez26N6lStwfh48IPo
9OPA0mqMjwejC03/1K7FftHNg2iJvYsGm9YbHxKUhxTvJ6PH5kPJ6Lmo8WW1
GB8fPPUsH6mrYv6688Ep0S1yJITGxwerTE3G6y7M5yg+CAu2ZD8T0vOKD0kM
1QOr7oswPj5cmBlwTVWR9js+TMjC4iJ/rMf4+LDiueBeYGg9xicAs8Umpqln
Mf/ZAvB9HjrbK6Ee80cAfjsTQHwcPXcBCNipGfHb0QsSQF6wl/jzYvSiBDBX
pN8lVKP1JIBOzzFr71qsv2wBSKKC15EkfB9VAji2vGnEfyvWY7cAGt32KvU7
0f48FTZc6R99aCUi/wd+sW5y
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd1ns01OkfB/BxSbk0mcEwF2MuKJeWtnZzon0+WylFlBbRbSmXirJOSVqx
xarWrQtFLpFV0UYNUmGYYXJf/XRKWx2KpMuvsFqidn/183l+f/y+58yZM2e+
z+v5zPd53p9nxAG7PQPVGQxG86fX5/f/v7IyP1+XSNzm69aCb7aRqc83CGPz
y90few6TBfM/X0oCYUcC/DvS8ftmsqblxsk0VQGZUjqJ/tyaH5UOl/H+LmKr
X/RxLERGgoM+X/dI+YeO78yYN3D8A/Ihumu5b0ctaW/7fD0iEbeXvdX+WoFe
L5l4NujMuteA9z8hToKWW7q2t9HvIy7P7j76UtSM4/vJEdOj5/l5LTjfAHmS
megVkdWK3iC5sGbWsjjtNvRekLHhqKLIF63ovSJ5tsdn/7i4Fb3XxEJbvCCG
Sb03hLH0cWL9jib0hoihX3mja6AK7x8isQUP1HSMaL3DZE6IzUjPyXocP0J+
fce+ZzVZg/P9SVwybUv8H1ehN0rcV8fVXtAqR2+UhHq5jniuL0XvHdGUW79S
Tl5A7y8yQ8PRImRlAXpj5Iy20GmpRg5642TwtYbHQH4meuPkXPYSs0vZWei9
J/aewsWto3noTZDQfNd5P8sL0ZskDQKDE50RJeh9IOcSz5q+e3kVvQ9kx/2F
ga1tleh9JG+I+7Uo+2r0/iYjdxVnVw3XofcP+UngVxhyT4keA3L811kyL6vw
fga85LCSg33oejIgIuV5v7+8lfx3+Hw1GArymShob8f51EBu8lJ32+7f0VMH
a81iLwPXTvTUIcFw70Fhdid66mC/0No27WIn1qMBBxWqC83hnehpQED1gFPK
W+ppwmSW+5mxhA70NCF6/lt/m/I29DQh4TfZfe/kFvSmwfKMMN/S2U3oTQNf
3kVl0tlG9LQg19I1I1xdiZ4WMGqsBjUi69DTAtvveQ9thdXoTQfzxIngtc3X
0ZsOIdcKvDmccvRmQP+ennVfWV5FbwYwjrWEJFpeQW8GdP+k+iP9YQl62tCb
F/8qZn8JetrQnZliemXiMno60BS98tBKaRl6OjC6RzgelHkNPR3o5yQuTVFU
oKcLTvvHuG+iaZ514cyT7DmJmTXo6cHmvg0r347XoacHl4WVqc+tlejpQd0H
OyuZayN6M2HkS779Jufb6M0ESerr+V0azegxYf3yParf9tI8MiHy2Maqh0k0
r0xQOp6JsyJt6M2Cc7rJqryfad5ngcPSwGsV/m3o6UNuypVwry66v/Qh7Fm7
jewp9T99PyxNGs9qxvH6UFpcHd+k04Tz6QPn2Hj1uaUq9FiQEpPgYObbgB4L
BOLgF/O/V6DHgpzYzuPLd9Whx4LYubwYmX0NeiyY3MH3Ce6/gR4bHNVuWtrw
r6PHhtzs/ET2n+XosYGV43br9GEZemwY+O5od+Ujul5sWL7ec7aPlgw9A8hW
WoxNZ5Tj8zGA7d2NT9j1FegZwJbmLzSfOlShZwDB6UuCKjxuoWcAdv8qLst7
XoueIVzf53m7Z1c9eoYwGqkeeDeB7m9DSCVJC/YVNqJnCJVNMaObK2+jZwi1
2iMnai7Q9TWC/ezXayyDaD82AkmCvceyJ23oGYG+fHBXtG4HekZgcDAnKOiP
DvSMQG3YXrhkBc0vBxZdUzSaefyOHgd6Mrfm/D1C88yBbaFZf11fSD0OdKzq
Smq0aEePA2kv+u/1NdHzwxhMpmf6nbKjeTeG85uKnRM+nQdTnjEIfPqP9/+i
Qs8YHo2tuvlrUQN6xmC8YefB+nZ6vpkAM1u6YZ8BfX4m0FBbF2XPkqNnAk4r
XMYU+6rRMwHzlAzW44ib6JlAmnP6qmRDul+4UOB9v9copAo9LgwpzQNSf6hC
j/upHp+bd+fSvHJBnbm1veoE9bgQlb1dcSi1Gj0eNMS/2VIyU44eD9Jqoy69
+F+eeXC8Xa61J0WBHg8MXcZOVXxNfy8PSHFlbHAv7X98+DjPwi4smp7ffHBe
ySs4NEqfHx929h3w7yUt6PFBIz+7sMOD5psPlhU142Ieza8AFsUKy7JP07wL
YO92vZh5DXS/CGDTUZ8e8zyafwE45Hn769nQ/i2AXxZG/lMSRtfXFHJsHENl
u+n6moLBXJHFZqdm9ExBKrPbNdFL+5MpWM+MJxtD6flvCsmeuW+/fdOAnhCO
hZQOlkUq0RPC+bQH42uMaD8Qgo4fv62tm/YDIfT7r684kC1HTwhWrA7LdWo0
b2ZwJ3FvltUwPR/MAFZPOmzdR89bMxhyKbX0yqT7xQxGQ79J4HnT/mIG8ZH1
ppeKqCeC5u3yOWyC83NFUOrhtfirwHrsNyKI9GN67LypmBrvJgLubJbF6XkN
OJ8IDnckD66vxvWNE0Ffi19/vit9PiJw45qOrO5smvJkIghftndPtWML1iMC
7Yz9nQFxrVPegAhUvK6Lnifo+opBe1pA0ZVgPO+5YqjgB/hov2/H+sSwrfRi
RvG3mH83MeiESseqCM23GBo2+t5xHm3H+sRwqrawxnEr/f8gBtUh8wj7k21Y
nxj4T3l8QTLdb2JYsHCV2/sNeB4MiIF7pCh1rR7tVxK4OJ6x5lYJ/l6uBF7z
poW6u6iwPgkca8n/x3AI8+AmAbLF1+ZgGe2PEnB9esC7Ox37QZwECs/G2ncX
12N9EghfkWY871PepuqTQG5ZWNeSePp/QQILIj2u9nhiHgck4B71nDk3sA7r
k0Lb86S1eTfo+krh7B2jL1hutN9IwU4gYL0zousrhZeZbj/kMml9UhBssBnM
s8H9HCeFeHmWZJE/7edSULEtufcLVFOeTArRzPSUpD7a36Xgtqgs/RwH8zMg
hfDYdfd17FuwPnM4466I/bd5K/kPO89Shw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
P/jPXG50M/kfaVRYpw==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
81mAayxrkdPpavInzYVsuA==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probabilities\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \
\\!\\(\\*StyleBox[\\\"t\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-5.551115123125783*^-17, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1269561051]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1470681252],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->963207285],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"x\""}, "RowDefault"]},
      "Superscript"]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1583862367]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1701417680],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->682224499],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->521772330]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->39881190],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"+\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"-\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1744209206]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", "ops"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"ops", ",", "init", ",", "t"}], "]"}], "//", "Chop"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->719143774],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"0.5477225575051661`", " ", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"+\""}, "RowDefault"]},
      "Superscript"]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"0.8366600265340756`", " ", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"-\""}, "RowDefault"]},
      "Superscript"]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[73]:=",
 CellID->321034140],

Cell[BoxData[
 TagBox[
  RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2.`", " ", "t"}], "]"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"x\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"y\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2.`", " ", "t"}], "]"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1141869716]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "[", "t", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1210483635],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2.`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"2.`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->167371102]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->1754552550],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AdQ01ccwHH2EMoWkLBCqCJFBamcFPH9KCJSVk9FQLCNtIBSMGX22MNg
GWUnYIFeiSIBoQrIEs4EjmgKhS6KDNl4UEqxYuoIpVDT/Pzd5XL/+7/3eXff
lws1hHEyVE5GRib09Ufy/Wa2tiUzSyq/lsxdUri+rm45Oo3PAyRR4BLq1ThJ
3rWXzAhZ/WlZjd7zEN9PkKh0eugY/Eqk2hwpDqbZ2z4ZxPWLpKSVY2y5v4+E
h0lmiRz51NotveEW7l8he5ZPJot2MPnDQ5L5k9R0aV8yyW/lS72nZDWK2RWx
p5cvXb9O/LI1ikTd9/lSX0Rqre8/jV4awP1/k4sdFA6NM8SXnveCNGmb3nm1
PozeKxJ0Q1w8vDaMnpg4fnChBNqH0PuHCDkvZV1jBtHbJAnfUt2z/YTobZFn
p9L2TZX1oycDE1y3uXghD9fLALOoUKXteTv6sjApEuQk2d7E/XLQlDypzNpf
iufJAz/Aq6xiMw/7KYCNAltx94+1ROopQOCMua1sQDP2UgQW/4EfS7MdeyqB
V5WgXpTUhb2VwbaVMx1X3o2eCthVxJt9GNmDngos0Bzoj3V60FOFJpOfL9ff
vIveDrBqfJ63FNSJnhrIrd32OHe6DT112FuxwlwUNKOnDqXWjyI8eA3ovQWP
jBxvG3I56GlAqVbc8X7nMvQ0wV011S8wmoGeFtS7jGyK9jKxjxakGNsE8s6W
Y08tqNZg68e61/D/326vDa43NtZOONdiX23YGso9/5ssF+9DB3wOJbax2PXo
6cCmUhXHTbEBPR2Qa05/bHehHvvrwuiYqMVlpg49XVDI1uHOFtSipwcLZhen
hjkc9PSgNCpRrFhYjZ4eVFrGenv4sdHbCQZHN5oFc/no7YT3FcXKjvwk9PQh
80DKR3fyLLCPPnBnE3oPnkjEnvqwEpCh2+nzJfYygGzf/HuZcsXY1wCM2J0p
wT5l2M8Q5ilXx7uz2OgZwvTq5ysJ18vRMwRWhO93Vvxy9HbBhLBAmLvGRm8X
OB8ZdLvmzULPCJYc3k56KF+KnhF0HHgwM8EoRM8IwovYh11356BHgSReyWxL
SiZ6FOgS85RUs+LRMwavwYXMWyt09IxBRPkkg1bgjf2MoTCXLCvpRWE/E1ht
1HPdJ/gC+5nAsT+OKZ61Ssd+pnA+ZWQ8wzML78MUDA6O+q7Iv/n/MAV/jv+T
3/uZ6JlBmEA/I6yKiZ4ZbPe+52R57TJ65qAiDjis9iITf1/mYMfuEvfFpKNv
Dslp//q+pCbhfnM4NA9jGm5xeJ45nIsdV+jwjESPCg3+P1RzdenoUcGFMj5Y
k+qCHhVkQuYNPcs8sBcVBMedvrra9zH2pcJ1k+C85V/CsZ8F6GR0J3+vdolI
PQsIYWx8s+0UjT0t4AwvQhiZF4OeBRzVTM29J45BzwLWJigDzZUx6NHg1GZd
AY8ZjfdHgxyauo1CAwO91++ftRi9c/oz9GiQWcQIWvQJQ48GaX9NRfdP09Gz
BJM6lkP4lTPkPzwuwRk=
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOnipQyqNU3peCZmaKgMIQ6PlNQ0DAbYCC8mYKBFBWBGQt
ThiM96iPUZDHtLgBU4LWEjZQoFRek/G00gwRR2AQmCQCU4LAcGP9+c9+yU1z
c8/5nJvvLfXZ535RW2g0WtS/1+bv/6e8bHOaienkFDNjXxNR3j8i8XTx+3pF
3WS/w+bIicJsNjTdeBCfjxKJ4FhiwK+PiVKZINseHF/KXXmC66eI/Pf5jkCW
gsREb84MEQgo1uCHCtw/R1QWJZUvuCOkv29z5knzW77Fb8/l6C2QQ46fXFSv
Gcb1i+SbR169mU/70f+L9B0bMBY29+D+VyTE0YFr6yzD85ZJUOuTomWvRvRW
iJFmdnKtbhV6b0iTdXi4fKxAqvTWyHctAbzV13VSpbdODlQLq1M1fpYqvQ0y
fdR+ZvZImxSzwUOecDpjWIbraRC8ls/Rz+6QKv33QGjSbjPo3on7t4Cuz7Ke
FrsTz1OBj7l8hcKhAz1VuPbMmOYpfOepgultp7684Tb01ICqOitP/aEZPXXY
xyz8cnG+AT0NqGhY8HOdqUNPE6QtoqThFzfQ04REB3VnHXomeluhkN6cx2fl
Ya9twE/VqHe5eR37bgdr1++DJSa12E8LAkdPrOgcrMfeWhDJ1ZbO9YqxpzZQ
yZ+OJDMl6OnAS7X2A4pcCXp08JjtnOfYStDThfJzYn8e+x6u14Ul7/ig+7S7
6OsCQ+xdGdd7m/y33YEBsVf0vvCdqcbzGLAwb1uTUCpCTw+6s0RDYW4l6OlB
dqlZjdZkDnp6YOPk0/9BsD++jz4MOJpL79llYA99GI9i7rS0u4z9DMAscKjH
ZrwEexvAqTeXRltXK7CnAXT7xeRsT7uB/Q1BvnqadlMsQs8QuBG+1+ImROgx
gSN20swPFaHHBHPPhLC8C9fRY4JrsiyCfbACPSNwZmxQnL2l6BnBCNtpoVN4
FT0WtHNO5asGF6LHArVfastCw79CjwVbH4Q03BckoLcD0lnxP7lUeGC/HbDb
uvCWyD8J+xlDJjXZJLuTgf2MgbHTZrE45F0/Y7hqPlN3sqwA+5nAgHcAMzWk
CD0TOEcdNgyrF6BnCh67nXsbqwTomUJkJec1FVyEninw8+0nOlQL0TODtiCe
XclQLnpm4Bc+fvbhqyz0zKHxSG0+yy8dPXOIDqyMVXieR88cLjpPZ1XEx6Fn
AYoYwaW9z33Rs4DsaNfomA0f7GcJvDrmnEdZlFT5/7KEj1JKvz08xsWeliA7
+rY47scU7G8Jy9b67rsoHva1hIh4eoH2oTT0KNj1soA+YXgBPQouw9O2noY0
9Cg4nx7S4ujGR4+C8uMJsuKxVPQoCNfnajxuTUbPCq50OTmtGyaiZwV/W6e4
PdsTh54VyL5u2Qj7IxI9KzizsMQ5ecIfPSv4s37QfihnD3psyE7yCm3iuGMf
NmQsqcR42gRiTzbMu/R13eqKwF5sWN9/l7vWdxr7sqH2DgMEFTH4PazhjPZU
pa19LPkHtD6vdw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999927`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->1364018027]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->290448684],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->993111197],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1841969271]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->501635503],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"0"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"1"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"+\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1951584317],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"+\""},
           "RowDefault"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"+\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1759875188]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{"LindbladConvert", "[", 
    RowBox[{"opH", ",", "opL"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1865696334],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         RowBox[{"-", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"-\""},
            "RowDefault"]]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]], "2"], "-", 
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], " ", 
          SqrtBox["3"], " ", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]]}], "+", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          SqrtBox["3"], " ", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]]}]}], "0", "0", "0", "0", 
        SqrtBox["3"], 
        SqrtBox["3"]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], 
           SqrtBox["3"]]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]], 
          RowBox[{"2", " ", 
           SqrtBox["3"]}]], "+", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"-\""},
            "RowDefault"]], 
          SqrtBox["3"]], "+", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], 
          RowBox[{"2", " ", 
           SqrtBox["3"]}]]}], 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], "0", "0", "0", "0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], "0", "0", 
        FractionBox["1", "10"], "1", "1"},
       {"0", "0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]], "2"], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"-\""},
            "RowDefault"]], "2"]}], "0", "1", 
        FractionBox["1", "5"], "0"},
       {"0", "0", "0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"-\""},
            "RowDefault"]], "2"], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], 
        RowBox[{"-", "1"}], "0", 
        FractionBox["1", "10"]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}], "0", "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         FractionBox["1", "5"]}], "0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]], "2"], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"-\""},
            "RowDefault"]], "2"]}], "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], "1", 
        RowBox[{"-", "1"}], "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], "0", "0", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "2"]}], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"-\""},
            "RowDefault"]], "2"], "-", 
         FractionBox[
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]], "2"]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         RowBox[{
          FractionBox[
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], "3"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "3"]}], 
           SqrtBox["6"]], "+", 
          FractionBox[
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], "3"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "3"]}], 
           SqrtBox["6"]], "-", 
          RowBox[{
           SqrtBox[
            FractionBox["2", "3"]], " ", 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"0", "\",\"", "\"+\""},
                "RowDefault"]], "3"], "+", 
             RowBox[{
              FractionBox["1", "3"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SubscriptBox[
                  TemplateBox[{"\[CapitalGamma]"},
                   "RowDefault"], 
                  TemplateBox[{"0", "\",\"", "\"-\""},
                   "RowDefault"]]}], "-", 
                SubscriptBox[
                 TemplateBox[{"\[CapitalGamma]"},
                  "RowDefault"], 
                 TemplateBox[{"1", "\",\"", "\"-\""},
                  "RowDefault"]]}], ")"}]}], "+", 
             FractionBox[
              SubscriptBox[
               TemplateBox[{"\[CapitalGamma]"},
                "RowDefault"], 
               TemplateBox[{"1", "\",\"", "\"+\""},
                "RowDefault"]], "3"]}], ")"}]}]}]},
        {
         RowBox[{
          FractionBox[
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"-\""},
               "RowDefault"]], "3"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"0", "\",\"", "\"+\""},
               "RowDefault"]], "3"]}], 
           SqrtBox["2"]], "-", 
          FractionBox[
           RowBox[{
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"-\""},
               "RowDefault"]], "3"], "-", 
            FractionBox[
             SubscriptBox[
              TemplateBox[{"\[CapitalGamma]"},
               "RowDefault"], 
              TemplateBox[{"1", "\",\"", "\"+\""},
               "RowDefault"]], "3"]}], 
           SqrtBox["2"]]}]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->216857066]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->260219023],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.026036`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1103963343]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1542313529],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
rg1Zp9ra4O3PhfknyhjYWDIp9sqzNhiroatVeo+BIQwYM7WxDaYxPh/qrmBg
85JZg5SHZD83a+6aUM3AszVWk4PL28ALspYvqmUg7hVQVpa2QYG7k256EwMX
v7DjmuW3QbO/ydHmJwy03riZbZvdBn0nxrz9/oyBuW0Ngw2X2kA1pWvN1JcM
PFZwrKf0QhsYXb13x0lI8usrMlJPJf7uJTIixAz0fnf3zZMk4q/ZO6qkg4H7
mwaMh860QWy7zccuGQOH1aIGI+Pb4Np7/Q2acgb2Wb0zDiP7/5NfQ1ULXjOw
YpZHgeRkG7zXeG7g08vA2ANOcy/EtoE6Mz/u/HsGTvuTFlEV0wbTZ4YPNX5k
4MEE2bwlBNuhy9ZvX4i+piu/nkqwz/rZ9bwhBj75FKLhTfApj/Emjj8Y6KlR
zFUj9q4ffH0u/CcD5XzvkyrE35PIB7+K/jDwQyUmu5wi/lNSPWVKTOzaMjp2
bBzxn7+vZbwKE/dwpmWoJbTBjPKVc6zHMbGlxfa7W2Ib2D/mZHipM/Hu0cgy
9XNt4Nvxc3SaJhMPb9F/rUL4ifsg8GnQZmJyZEP0GsJf4e9C/tfJTJT4L01S
XGyDp5rR1lwKE3PD27/UXmmDfub27HU0JooSXx5/l9sGJksm+t9kM3GgyiZS
tYj4c3zf3sljYn7ElIhfJJ++no+WqE9j4qpBzaemJN83owIn7jZlomZq/p/l
j4i9hdsiomYxscLsFWf8Y2JvyPZrzhwm3mH30pRbCR8eOm3dVkxcVhO6O6qT
6ANun9+8nIkmlSl7kr63Qe7IF9ba7UysN7PeWTWb1EuJJNHXg4lMu7Krudak
3rxqRp3eycSnC1t/ptuIIFt0pqdpDxO9dkbuK3AUQeZts/wlh5kYtsrIe8xB
EaT7+ZpZnGXi9WB/cWupCDoM/st0SmbiStOyptgKEVClC7T905hoHTo2y6RO
BOftxg8WXSL2OotcTV+KIGXa9TtG15l4OmNy5quPIhB2nTVccZOJYl79jKoh
EeikBqftLCHxypr3BP4SQZLKquDsu0zc0mMkCVIVQ6K8dyH9ERPrNmeYJrPF
8OJ8603rRibe/7iiwdRQDFrr7jFdHjORbnt22oUZYkiojlZKbWWiRpx4qNtC
DM8D9x4o4zOR/XP81kprMWiablTw25h4pbQi2hPEEJcxtV5LykScH8OnrhTD
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
kx6fk8P/ALkF05E=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$34523#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$34523#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
xxnHxdjX2wqZRlrKzcSpwRhdrrZmrhgEVvMj/xygY19J8YJMqhje7+v/pO5J
R08rVuAaDTHM9Cu1cfCmY3jYlNWAoRi4EVeKY3zp+KX6cOZjSzEYX/LlPPOj
45BSZu7VXWI4kGV6rv8YEb99G0TJXmLIqpl0xBA6nmvu6BNGiKGqU8z3PUXH
z7Y8P6kEMQwM5arfOE3Hmt9l/mZXxSD1O+piYxQdt26zW5p6SwwqC/ZOTp6h
Y8LFjpk/7hP6aGtd1OKIU6n90h2nx4S+FXL1dgl0LDDjvq97Loao9cOroi/S
8al/7JP1ZWLIthZcfXKZjgruzqYlfDHUOF+TeJ9CR6nR8QmjajF89DvmKXeN
julPnWxqasUwO3KraH06HbetC5TeWS8G1cuqej636Dj7P0nZQYLenP0v41oW
Ea9fMUfCCNq98NWchrt01Nu8KYBeJ4aY2seHJ3LoGGXGvMwn5N95da5TNZ+O
nDcRhw4JCP3D+8H2MR0NN2mIGOWE/t+GdyOf0tFqzlRZVxGhX5okW/CciKd+
kWt6gRiW0kcC3hbTMbeoRsk3VwxmmnV9C8vpGFHZ52F+WwyecGuzEZ+Od989
ltJJE8PZbcH53lV0DFh+XrQyUQz3XHaQ0moJ+Qs/vzKMFkOdv8apugY6Vt1c
ZL/3hBiGImd9/NlMxwMZ0Q+TD4lB7c7zZzva6Zjv1Wlnt43Q9zyRHtFJx0zF
Uxv7kdBX5xX9qJvwR7cbk1aJ4f4nZVuZd3Sco3XyyH4ZMTT8GS9dN0DH07dH
T5//3QqfpIUqBwfp6Ng33+3Dx1ZYtjJ8vOYLHS9mP5DULSPq/ejApfDfdIzc
W29U49wKDVFlf/L/0lHt91Wvt6bE/yvJ+3slGOhl/bLMUrMVlheZrTGYw0AF
Z6OglZMiyJvKE39fzMCDByTz8s6I4EH08UUeKxj4vsrKM0epBT4b7omIXsXA
y+HRJwM7hcS8Nf5+ew0De8qC7DKvCCHHVeHlW30Gqr8Q2qGcEO7Bk6tOmxlI
+7T636d/TZA1Ocq02sdAtOAsSGxrgIFHrxIPuTIwfI32ha74BuB68mbEuTFw
k97gvw1mDZDZcaG/1puBnPnfOjPK6iHjiebdDUEMnPn+p35vbh2k+RzS1LnI
wO+jw2ERN2ugW2Vnxo7LDJyU0cjRdq0BSs86Of8UBrKON6WUqNTAVfMFY/k3
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
Hxe3G918f2RxDfwPi0vdqg==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$34523#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probabilities\"", TraditionalForm], None}, {
        FormBox["\"\[CapitalOmega] t / \[Pi]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, Ticks -> {Automatic, Automatic}}, AxesStyle -> Large,
     FrameStyle -> Large, ImageSize -> Large, PlotRangePadding -> 
    Scaled[0.025]], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[6]=",
 CellID->53195721]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladBasis"]], "paclet:Q3/ref/LindbladBasis"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["LindbladGenerator"]], "paclet:Q3/ref/LindbladGenerator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["DampingOperator"]], "paclet:Q3/ref/DampingOperator"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Supermap"]], "paclet:Q3/ref/Supermap"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Tech Notes"
}], "TutorialsSection",
 WholeCellGroupOpener->True,
 CellID->250839057],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus: Quick Start"]], "paclet:Q3/tutorial/KrausQuickStart"},
  "RefLink",
  BaseStyle->"Tutorials"]], "Tutorials",
 CellID->341631938],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Kraus Package Guide"]], "paclet:Q3/guide/KrausPackageGuide"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->1670468734]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"LindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Q3 Application", ButtonData -> "paclet:Q3/guide/Q3", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2021, 4, 27, 9, 1, 8.411208}", 
    "history" -> {"1.8", "", "", ""}, "context" -> "Q3`Kraus`", 
    "keywords" -> {
     "Lindblad equation", "quantum master equation", "decoherence", 
      "quantum noise"}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> "Q3 Symbol", 
    "language" -> "en", "paclet" -> "Q3", "status" -> "None", "summary" -> 
    "LindbladSolve[{a, b1, b2, ...}, init, t] returns the solution of the \
Lindblad equation specified by the effective Hamiltonian a and the Lindblad \
operators b1, b2, ... with the initial condition init as a function of time \
t. LindbladSolve[a, {b1, b2, ...}, init, t] is also allowed.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "LindbladSolve", 
    "titlemodifier" -> "", "windowtitle" -> "LindbladSolve", "type" -> 
    "Symbol", "uri" -> "Q3/ref/LindbladSolve", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[7371, 214, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"0fce5e14-8e4e-44d9-a110-8c6231040216",
   CellTags->"PrimaryExamplesSection",
   CellID->1650335678]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 245360, 5675}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 4621, 116, 70, "AnchorBarGrid",ExpressionUUID->"81365cee-c5ca-47ea-9849-89d616e331c4",
 CellID->1],
Cell[CellGroupData[{
Cell[5231, 141, 170, 6, 70, "ObjectNameGrid",ExpressionUUID->"1a4782a6-3df6-4b5f-a422-5ca0db1001a5"],
Cell[5404, 149, 1930, 60, 70, "Usage",ExpressionUUID->"55390da3-4f95-4e84-af12-62dea34d36a1",
 CellID->982511436]
}, Open  ]],
Cell[CellGroupData[{
Cell[7371, 214, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"0fce5e14-8e4e-44d9-a110-8c6231040216",
 CellTags->"PrimaryExamplesSection",
 CellID->1650335678],
Cell[CellGroupData[{
Cell[7664, 228, 195, 6, 70, "ExampleSection",ExpressionUUID->"303dabe4-e8a9-49c7-b4d5-99d65e78a763",
 CellID->292955494],
Cell[7862, 236, 104, 2, 70, "ExampleText",ExpressionUUID->"209419b8-66ea-4cd9-9048-5d50d0852059",
 CellID->789443279],
Cell[7969, 240, 146, 4, 70, "Input",ExpressionUUID->"1dcdba53-bb44-45f2-9677-d1835b0547b0",
 CellID->387884857],
Cell[CellGroupData[{
Cell[8140, 248, 605, 19, 70, "Input",ExpressionUUID->"c20ce2e5-3e1b-4e5d-8d3f-725d7393e757",
 CellID->383286299],
Cell[8748, 269, 1514, 55, 70, "Output",ExpressionUUID->"8a6d20e7-7d46-44cf-935a-2913c6f6abab",
 CellID->1271497621]
}, Open  ]],
Cell[CellGroupData[{
Cell[10299, 329, 233, 7, 70, "Input",ExpressionUUID->"197489e8-e30f-4f85-a8d7-499b40684b57",
 CellID->575047188],
Cell[10535, 338, 591, 18, 70, "Output",ExpressionUUID->"2ab37992-7910-433f-ba55-3958c742b9d0",
 CellID->1967772252]
}, Open  ]],
Cell[CellGroupData[{
Cell[11163, 361, 631, 18, 70, "Input",ExpressionUUID->"02fd3276-61d8-4ec0-bd4f-fa6b2060a574",
 CellID->1820491489],
Cell[11797, 381, 1681, 54, 70, "Output",ExpressionUUID->"37587ea3-98f7-4f98-9fe6-4113678d0e94",
 CellID->1190485218]
}, Open  ]],
Cell[CellGroupData[{
Cell[13515, 440, 240, 7, 70, "Input",ExpressionUUID->"21336329-7c86-47b2-a970-34f3cd94c2de",
 CellID->838964454],
Cell[13758, 449, 2230, 70, 70, "Output",ExpressionUUID->"ff11d480-1eb0-41fc-9c74-55bd3f7a836a",
 CellID->1661903300]
}, Open  ]],
Cell[CellGroupData[{
Cell[16025, 524, 205, 6, 70, "Input",ExpressionUUID->"c6643511-5264-41c8-87dd-2d73151196d1",
 CellID->309037009],
Cell[16233, 532, 10051, 316, 70, "Output",ExpressionUUID->"b5d9ab16-a811-41b4-bc41-07b44b49a2d8",
 CellID->2119926037]
}, Open  ]],
Cell[CellGroupData[{
Cell[26321, 853, 263, 9, 70, "Input",ExpressionUUID->"698d21ec-712d-46f1-83cc-1b2010b6590e",
 CellID->1017770999],
Cell[26587, 864, 1513, 55, 70, "Output",ExpressionUUID->"c96aae70-21d8-4669-80ed-9026f923c3ca",
 CellID->538198124]
}, Open  ]],
Cell[CellGroupData[{
Cell[28137, 924, 562, 17, 70, "Input",ExpressionUUID->"b9450ce8-404d-46e0-bd01-625a9cc77320",
 CellID->766568750],
Cell[28702, 943, 1497, 51, 70, "Output",ExpressionUUID->"1f74042c-1c0e-4286-8af4-80116d752634",
 CellID->410032828]
}, Open  ]],
Cell[CellGroupData[{
Cell[30236, 999, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"40a21d5b-be88-47dd-bdb7-0c5f6a67f51c",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[30387, 1006, 334, 11, 70, "Input",ExpressionUUID->"9b808157-ac4e-4c0f-85ab-b7b762b7d9df",
 CellID->435145815],
Cell[30724, 1019, 795, 26, 70, "Output",ExpressionUUID->"61033f80-cda0-4204-b04e-48b317228302",
 CellID->61418893]
}, Open  ]],
Cell[CellGroupData[{
Cell[31556, 1050, 347, 10, 70, "Input",ExpressionUUID->"9b2c60ca-5e31-453d-8786-cfabb61dae68",
 CellID->1196829607],
Cell[31906, 1062, 2274, 72, 70, "Output",ExpressionUUID->"05af783f-5fa5-4f21-a370-1a5b08bdff1c",
 CellID->2036938959]
}, Open  ]],
Cell[CellGroupData[{
Cell[34217, 1139, 942, 25, 70, "Input",ExpressionUUID->"1d947b45-5f6f-4227-9fb6-fc27ac0864bd",
 CellID->1273375212],
Cell[35162, 1166, 1913, 58, 70, "Print",ExpressionUUID->"fd3f87a0-ed7b-4dac-862e-d0e3e0632bcb",
 CellID->2069422243],
Cell[37078, 1226, 2693, 71, 70, "Output",ExpressionUUID->"3b9cc44d-fd35-4160-90ef-6d23a1dcf6bb",
 CellID->134491289]
}, Open  ]],
Cell[39786, 1300, 740, 25, 70, "Input",ExpressionUUID->"ae2d567f-3227-4e92-ad2f-459c7a0bf386",
 CellID->374788519],
Cell[CellGroupData[{
Cell[40551, 1329, 1149, 31, 70, "Input",ExpressionUUID->"ae468fec-9cfa-43b8-b837-42990faec4f4",
 CellID->667061092],
Cell[41703, 1362, 6493, 134, 70, "Output",ExpressionUUID->"10514343-4c2d-4d18-b108-8539b89046a8",
 CellID->502582244]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48245, 1502, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"e2f18352-93c2-42e7-b6d8-60f1968ebb1f",
 CellID->1586259128],
Cell[48374, 1507, 78, 1, 70, "ExampleText",ExpressionUUID->"5c91943b-a056-4f8e-9e42-8e8912407ecf",
 CellID->692904445],
Cell[CellGroupData[{
Cell[48477, 1512, 290, 9, 70, "Input",ExpressionUUID->"c8b265d0-80e5-41ee-ade3-b7e0a035c887",
 CellID->1425866839],
Cell[48770, 1523, 612, 19, 70, "Output",ExpressionUUID->"576da92b-d7d2-4c1a-b271-0f5e30fdc1c9",
 CellID->1004912736]
}, Open  ]],
Cell[CellGroupData[{
Cell[49419, 1547, 543, 16, 70, "Input",ExpressionUUID->"1dfb2008-71e6-4762-8a73-e8d921fd7ebf",
 CellID->1104129648],
Cell[49965, 1565, 1821, 65, 70, "Output",ExpressionUUID->"88dee95f-cdb2-4996-a89f-5274d2dad061",
 CellID->427401926]
}, Open  ]],
Cell[CellGroupData[{
Cell[51823, 1635, 1008, 28, 70, "Input",ExpressionUUID->"7d176092-84f2-4813-83dc-8f6e48d10a2d",
 CellID->252233040],
Cell[52834, 1665, 1766, 56, 70, "Output",ExpressionUUID->"d8131003-aec1-40bd-92f5-3d15fee44fd2",
 CellID->815314459]
}, Open  ]],
Cell[CellGroupData[{
Cell[54637, 1726, 940, 26, 70, "Input",ExpressionUUID->"e3204dc8-277d-46a9-ae3f-1a7225f67f86",
 CellID->1792714312],
Cell[55580, 1754, 128, 4, 70, "Output",ExpressionUUID->"905e4ba7-4d98-4627-bd87-94f60851c50c",
 CellID->1317161361]
}, Open  ]],
Cell[55723, 1761, 288, 10, 70, "Input",ExpressionUUID->"df176734-f969-4047-a349-a2bdb5905e67",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[56036, 1775, 558, 15, 70, "Input",ExpressionUUID->"342677e8-f88b-4391-8ef2-53f48ddd2dad",
 CellID->1239593903],
Cell[56597, 1792, 13636, 253, 70, "Output",ExpressionUUID->"78fdb258-218b-4ac2-ace1-e8154d54a0d0",
 CellID->1269561051]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70282, 2051, 125, 3, 70, "ExampleDelimiter",ExpressionUUID->"e0dbb16d-ed3a-4b57-b9ae-e5e94587485f",
 CellID->818700002],
Cell[70410, 2056, 146, 4, 70, "ExampleText",ExpressionUUID->"9fc548d4-47a6-4cf1-984f-7585dd9b9a30",
 CellID->1536645940],
Cell[70559, 2062, 127, 4, 70, "Input",ExpressionUUID->"16f7b8f7-f4e3-4fcb-9829-1f98e0d0e59d",
 CellID->1470681252],
Cell[CellGroupData[{
Cell[70711, 2070, 288, 10, 70, "Input",ExpressionUUID->"36c540b6-3ece-472c-a16e-50dbaeb9b342",
 CellID->963207285],
Cell[71002, 2082, 365, 13, 70, "Output",ExpressionUUID->"7e250043-4a80-4ee0-8590-010e8e91c5a1",
 CellID->1583862367]
}, Open  ]],
Cell[71382, 2098, 142, 5, 70, "Input",ExpressionUUID->"fb430c13-8a2d-4ca8-8c1e-f84f3257ba0d",
 CellID->1701417680],
Cell[CellGroupData[{
Cell[71549, 2107, 523, 15, 70, "Input",ExpressionUUID->"32613252-73c7-4cd0-ace9-0315e3e4e5ef",
 CellID->682224499],
Cell[72075, 2124, 692, 26, 70, "Output",ExpressionUUID->"45d5d71f-a973-4425-933f-456b6cba26ef",
 CellID->521772330]
}, Open  ]],
Cell[CellGroupData[{
Cell[72804, 2155, 239, 7, 70, "Input",ExpressionUUID->"27ee2b6b-3bef-4415-8f1c-6ff0f24d4aaf",
 CellID->39881190],
Cell[73046, 2164, 1050, 39, 70, "Output",ExpressionUUID->"55416f1d-e266-4ca9-a96c-39543177f3a5",
 CellID->1744209206]
}, Open  ]],
Cell[CellGroupData[{
Cell[74133, 2208, 1005, 26, 70, "Input",ExpressionUUID->"e4dfac70-4db4-4b63-a69e-22fdd1f86015",
 CellID->719143774],
Cell[75141, 2236, 808, 27, 70, "Print",ExpressionUUID->"5a01d842-c7f8-474e-a777-b02eeaebccce",
 CellID->321034140],
Cell[75952, 2265, 1308, 38, 70, "Output",ExpressionUUID->"0cfc6093-84cc-473c-afaf-6eb28a9a3049",
 CellID->1141869716]
}, Open  ]],
Cell[CellGroupData[{
Cell[77297, 2308, 483, 16, 70, "Input",ExpressionUUID->"cb4ee0d8-1bb2-46fe-bba5-4b9e1db391d2",
 CellID->1210483635],
Cell[77783, 2326, 781, 23, 70, "Output",ExpressionUUID->"ce0c74c0-921f-456e-900c-0e475e2995de",
 CellID->167371102]
}, Open  ]],
Cell[CellGroupData[{
Cell[78601, 2354, 1150, 31, 70, "Input",ExpressionUUID->"de44b073-bd33-44f4-9f3e-3e0ddb24f206",
 CellID->1754552550],
Cell[79754, 2387, 6486, 134, 70, "Output",ExpressionUUID->"7c2e6829-a2b7-447e-947f-6c98838acd48",
 CellID->1364018027]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[86289, 2527, 126, 3, 70, "ExampleDelimiter",ExpressionUUID->"33ebcba7-1160-4a72-9ea5-4f7c4f4a53da",
 CellID->1593892289],
Cell[86418, 2532, 120, 2, 70, "ExampleText",ExpressionUUID->"11296cdc-d286-43b9-a8bc-9c9d44bace3b",
 CellID->210970783],
Cell[86541, 2536, 126, 4, 70, "Input",ExpressionUUID->"9c2f935a-d694-447f-9211-05d749306b67",
 CellID->290448684],
Cell[86670, 2542, 166, 4, 70, "ExampleText",ExpressionUUID->"7a8384c4-6969-4e65-8edf-2d6db51ad8c3",
 CellID->340702357],
Cell[CellGroupData[{
Cell[86861, 2550, 872, 27, 70, "Input",ExpressionUUID->"984619b3-a648-4634-9d7f-db1836cf5486",
 CellID->993111197],
Cell[87736, 2579, 766, 24, 70, "Output",ExpressionUUID->"bef4353e-15b7-4ebd-b0fd-2d69f8ae230b",
 CellID->1841969271]
}, Open  ]],
Cell[CellGroupData[{
Cell[88539, 2608, 1346, 36, 70, "Input",ExpressionUUID->"cb7512c9-ed1e-453a-a58a-7bdf4094b5d4",
 CellID->501635503],
Cell[89888, 2646, 1481, 64, 70, "Output",ExpressionUUID->"ca768591-f207-42c4-ab1c-44cee244ed38",
 CellID->1951584317],
Cell[91372, 2712, 3481, 108, 70, "Output",ExpressionUUID->"fde47486-42c4-478b-b441-be29dd249397",
 CellID->1759875188]
}, Open  ]],
Cell[CellGroupData[{
Cell[94890, 2825, 349, 11, 70, "Input",ExpressionUUID->"543c9bfd-dc62-4488-91fe-a033298e8d5b",
 CellID->1865696334],
Cell[95242, 2838, 11722, 359, 70, "Output",ExpressionUUID->"591c9de1-5e8b-4144-a2df-2d9180c9aef7",
 CellID->216857066]
}, Open  ]],
Cell[CellGroupData[{
Cell[107001, 3202, 1387, 37, 70, "Input",ExpressionUUID->"520a5e3b-b92f-4b15-98c8-1147950109a6",
 CellID->260219023],
Cell[108391, 3241, 128, 4, 70, "Output",ExpressionUUID->"6b29f27d-82c9-4078-9543-bf00dd351702",
 CellID->1103963343]
}, Open  ]],
Cell[CellGroupData[{
Cell[108556, 3250, 652, 17, 70, "Input",ExpressionUUID->"52751cc8-0470-47eb-b5e6-000ecadf9537",
 CellID->1542313529],
Cell[109211, 3269, 131312, 2240, 70, "Output",ExpressionUUID->"73dd3704-da20-480f-ad82-79b4d1945414",
 CellID->53195721]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[240562, 5514, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"b9ef5383-6ce5-40ac-ab91-d6eb7455c377"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240630, 5519, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"c47b349a-c834-4bb5-bc52-33625eeb897c",
 CellID->1255426704],
Cell[240783, 5528, 1521, 48, 70, "SeeAlso",ExpressionUUID->"b4fdfa24-c6a1-4880-b1b2-ba43ca96a67b",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[242341, 5581, 153, 7, 70, "TutorialsSection",ExpressionUUID->"e44f4612-68f8-4377-bde6-7ccaba7b9723",
 CellID->250839057],
Cell[242497, 5590, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"0a9da69d-771d-47fc-bc9b-4d29357a2428"],
Cell[242531, 5592, 187, 6, 70, "Tutorials",ExpressionUUID->"f469f526-f0ff-4122-9467-1d7c62ff2f5b",
 CellID->341631938],
Cell[242721, 5600, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"03626431-0175-4a86-b5a0-058537d7a52d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242789, 5605, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"de8db370-f352-474f-ad2e-985920953f70",
 CellID->38303248],
Cell[242948, 5614, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"ed76b38c-5bb3-4c32-89db-a9d82e274a0e"],
Cell[242982, 5616, 188, 6, 70, "MoreAbout",ExpressionUUID->"b78e9eba-0214-48c1-9123-19cae1a983c6",
 CellID->1670468734]
}, Open  ]],
Cell[243185, 5625, 23, 0, 70, "FooterCell",ExpressionUUID->"3829bd81-222d-4222-9111-1c570b0ac78d"]
}
]
*)

(* End of internal cache information *)
