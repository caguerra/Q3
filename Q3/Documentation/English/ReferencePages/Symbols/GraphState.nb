(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     54781,       1123]
NotebookOptionsPosition[     50234,       1020]
NotebookOutlinePosition[     52599,       1081]
CellTagsIndexPosition[     52477,       1075]
WindowTitle->GraphState
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {Cell["QUISSO PACKAGE SYMBOL", "PacletNameCell"], Cell[TextData[{
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "See Also",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"See Also", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"BellState\"\>":>Documentation`HelpLookup[
       "paclet:Q3/ref/BellState"], "\<\"ProductState\"\>":>
       Documentation`HelpLookup["paclet:Q3/ref/ProductState"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"SeeAlso"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "Related Guides",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"Related Guides", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Quisso\"\>":>Documentation`HelpLookup[
       "paclet:Q3/guide/Quisso"]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"MoreAbout"]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      ActionMenuBox[
       FrameBox[
        InterpretationBox[Cell[TextData[{
          "URL",
          StyleBox[" \[FilledDownTriangle]", "AnchorBarArrow",
           StripOnInput->False]
         }]],
         TextCell[
          Row[{"URL", 
            Style[" \[FilledDownTriangle]", "AnchorBarArrow"]}]]],
        StripOnInput->False], {"\<\"Q3/ref/GraphState\"\>":>
       None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell["Q3/ref/GraphState"]}, Visible -> False]]; 
        SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; Null], 
       Delimiter, "\<\"Copy web URL\"\>":>
       Module[{DocumentationSearch`Private`nb$}, 
        DocumentationSearch`Private`nb$ = NotebookPut[
           Notebook[{
             Cell[
              BoxData[
               MakeBoxes[
                Hyperlink[
                "http://reference.wolfram.com/language/Q3/ref/GraphState.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
            False]]; SelectionMove[
         DocumentationSearch`Private`nb$, All, Notebook]; 
        FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
        NotebookClose[DocumentationSearch`Private`nb$]; 
        Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
         NotebookLocate[{
           URL[
            StringJoin[
             If[
              TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$97599], 
              "http://reference.wolfram.com/system-modeler/", 
              "http://reference.wolfram.com/language/"], "Q3/ref/GraphState", 
             ".html"]], None}]}]},
       Appearance->None,
       MenuAppearance->Automatic,
       MenuStyle->"URLMenu"]],
      LineSpacing->{1.4, 0}]
    }], "AnchorBar"]}
  }]], "AnchorBarGrid",
 CellID->1],

Cell[CellGroupData[{

Cell[TextData[{
 Cell["GraphState", "ObjectName"],
 Cell[BoxData[
  TemplateBox[{8},
   "Spacer1"]]],
 Cell[BoxData[""], "ObjectNameTranslation"]
}], "ObjectNameGrid"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{"GraphState", "[", 
       StyleBox["g", "TI"], "]"}]], "InlineFormula"],
     "\[LineSeparator]gives the graph state (aka cluster state) corresponding \
to the graph ",
     Cell[BoxData[
      StyleBox["g", "TI"]], "InlineFormula"],
     "."
    }]]}
  }]], "Usage",
 GridBoxOptions->{
 GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{None}}}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CellTags->"PrimaryExamplesSection",
 CellID->2111328617],

Cell[CellGroupData[{

Cell[TextData[{
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CellID->80282891],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1651869782],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], "\[TwoWayRule]", 
      RowBox[{"S", "[", "2", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], "\[TwoWayRule]", 
      RowBox[{"S", "[", "3", "]"}]}], ",", 
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], "\[TwoWayRule]", 
      RowBox[{"S", "[", "4", "]"}]}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"qc", "=", 
  RowBox[{"QuissoCircuit", "[", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"1", ",", "1"}], "]"}], ",", "g"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"qc", "=", 
  RowBox[{"QuissoCircuit", "[", 
   RowBox[{"qc", ",", 
    RowBox[{"SWAP", "[", 
     RowBox[{
      RowBox[{"S", "[", "1", "]"}], ",", 
      RowBox[{"S", "[", "4", "]"}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QuissoExpand", "@", 
   RowBox[{"QuissoExpression", "[", "qc", "]"}]}], "//", 
  "Simplify"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->306837658],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
       $CellContext`S[1], 
       $CellContext`S[2], 
       $CellContext`S[3], 
       $CellContext`S[4]}, {Null, {{1, 2}, {1, 3}, {1, 4}}}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.7745966692414834, 0.7745966692414834}, {0., 
       0.}, {0.7745966692414834, 0.}, {1.5491933384829668`, 0.}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], LineBox[{{1, 2}, {1, 3}, {1, 4}}]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.018845521490452433], DiskBox[2, 0.018845521490452433], 
         DiskBox[3, 0.018845521490452433], 
         DiskBox[4, 0.018845521490452433]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellLabel->"Out[2]=",
 CellID->1441844419],

Cell[BoxData[
 GraphicsBox[{
   {Dashing[{Small, Small}], LineBox[{}]}, 
   LineBox[{{{0, -1}, {6, -1}}, {{0, -2}, {6, -2}}, {{0, -3}, {6, -3}}, {{
    0, -4}, {6, -4}}}], {
    {GrayLevel[1], EdgeForm[GrayLevel[0]], 
     RectangleBox[{0.6, -1.4}, {1.4, -0.6}]}, InsetBox[
     StyleBox["\<\"X\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.07999999999999999],
      FontWeight->"Light",
      FontSlant->Italic,
      Label -> "X"], {1, -1}, ImageScaled[{Rational[1, 2], 0.6}]]}, {{
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -1.4}, {2.4, -0.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07999999999999999],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -1}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -2.4}, {2.4, -1.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07999999999999999],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -2}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -3.4}, {2.4, -2.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07999999999999999],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -3}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -4.4}, {2.4, -3.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.07999999999999999],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -4}, ImageScaled[{Rational[1, 2], 0.6}]]}}, {
    DiskBox[{3, -1}, 0.09], LineBox[{{3, -1}, {3, -2}}], 
    DiskBox[{3, -2}, 0.09]}, {DiskBox[{4, -1}, 0.09], 
    LineBox[{{4, -1}, {4, -3}}], DiskBox[{4, -3}, 0.09]}, {
    DiskBox[{5, -1}, 0.09], LineBox[{{5, -1}, {5, -4}}], 
    DiskBox[{5, -4}, 0.09]}},
  PlotRangePadding->NCache[{
     Rational[1, 2], 0}, {0.5, 0}]]], "Output",
 CellLabel->"Out[2]=",
 CellID->941614717],

Cell[BoxData[
 GraphicsBox[{
   {Dashing[{Small, Small}], LineBox[{}]}, 
   LineBox[{{{0, -1}, {7, -1}}, {{0, -2}, {7, -2}}, {{0, -3}, {7, -3}}, {{
    0, -4}, {7, -4}}}], {
    {GrayLevel[1], EdgeForm[GrayLevel[0]], 
     RectangleBox[{0.6, -1.4}, {1.4, -0.6}]}, InsetBox[
     StyleBox["\<\"X\"\>",
      StripOnInput->False,
      FontSize->Scaled[0.06857142857142856],
      FontWeight->"Light",
      FontSlant->Italic,
      Label -> "X"], {1, -1}, ImageScaled[{Rational[1, 2], 0.6}]]}, {{
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -1.4}, {2.4, -0.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06857142857142856],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -1}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -2.4}, {2.4, -1.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06857142857142856],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -2}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -3.4}, {2.4, -2.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06857142857142856],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -3}, ImageScaled[{Rational[1, 2], 0.6}]]}, {
     {GrayLevel[1], EdgeForm[GrayLevel[0]], 
      RectangleBox[{1.6, -4.4}, {2.4, -3.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.06857142857142856],
       FontWeight->"Light",
       FontSlant->Italic,
       Label -> "H"], {2, -4}, ImageScaled[{Rational[1, 2], 0.6}]]}}, {
    DiskBox[{3, -1}, 0.09], LineBox[{{3, -1}, {3, -2}}], 
    DiskBox[{3, -2}, 0.09]}, {DiskBox[{4, -1}, 0.09], 
    LineBox[{{4, -1}, {4, -3}}], DiskBox[{4, -3}, 0.09]}, {
    DiskBox[{5, -1}, 0.09], LineBox[{{5, -1}, {5, -4}}], 
    DiskBox[{5, -4}, 0.09]}, {
    LineBox[{{{5.91, -1.09}, {6.09, -0.91}}, {{5.91, -0.91}, {6.09, -1.09}}}],
     LineBox[{{6, -1}, {6, -4}}], 
    LineBox[{{{5.91, -4.09}, {6.09, -3.91}}, {{5.91, -3.91}, {
     6.09, -4.09}}}]}},
  PlotRangePadding->NCache[{
     Rational[1, 2], 0}, {0.5, 0}]]], "Output",
 CellLabel->"Out[2]=",
 CellID->911553876],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
7vrSFf/7v//bze8d0I2zsvKwdOnS+vp65mfnrW+ExsbG5OTkMQFMnjxZ5bGC
+G358uUffvgh/a2qqmLeB6v6BtvFtN2EfOHtN0tAndEH/KZw//79jv/gYLxv
ujEz12C7+v3tZLtWcG3ShyC2W1InefBv//ZvZCz1pNOtr169SkpKUhwSGRlJ
9t69e5fh2XnrG6GlpeXHH38sLy+f+ZYdO3bQnbXKY53sN9juTNuRL/qA3/QB
vykUFxdPmjRJnL7BdtiOWqEekf1mJ9u15gsPzpw5Q5a+fv26qx3q6uoWLFjg
crkUnwQHB8+aNYvhl0/y1jdOwVuoS+oz1Odsv8F2Z9qugHzRB/ymD4f7Tccs
ArbDdqlt143Da4UObGO7CHdbJ06cCA0N7XG3O3fuLFu2rE+fPkFtrFixguHX
ofDWN4K+DFUQx29NTU2LFi3Kycl5/vw5q7Mb7xvlGo3A3Nzc/fv3M9e/fv06
BS4lJSUpKYlOUVFRwcAqRn3zcbb9xo0beXl56enpiYmJmZmZJSUlDKxSB+98
4eo3C5G6zliYa1L7zXie6p5FWG67cWC7gH1zbI01WANF9ps4tuuex4pwt/Xt
t98OGjRI5c40z9myZcs777yjOGT37t1sO8Ncv7W1taVrVIoYyVAFEfyWn5+v
bP3ll196FGTitx77tnnz5uDgYKWdMkiTbI/6lFyhoaFRUVFz585VftMhJCSE
5jY9CtrA9gMHDrjd7oEDB1JR+uijj8LDw2nrN99806Og+PnC1W+6Ed9vTBAz
1+T1G5M83b9/f0ZGBo8axQSuuQbbnWm7gLVCdw1Uqa8bE+YzZtquex5rMF+Y
sHXr1oSEBE2H1NbWjho1iuwdOXJkYLuRNWc1+gqa7m2VX7LrCjXx8rHIUAUL
/Xb8+HFqj4uLC+r6f/QCYeK3HvtGLiWTld9c0D1z7kp/7dq1U6dO/e2335S3
ZWVltPWTTz7pUcoGtldWVn766af+nz68d++ey+Wi6PcoJX6+cPVbIKgz6vWt
zTV5/WZtnnbfNwW7XtN77BvDZ7Wd6ut7pgnbha0VumugSv1ARMsX02w3bR47
RDWaTNu7d2/fvn01HeJ7ezNLvXW73f47RCZrzt3o+9F0b1tTU1PZNSpvb1ll
qM8iv3m93vDw8HHjxhUVFZnpNzV9I54+fcrJ9t9//92/lRqjo6Mpi3vUsYft
7Rg7diyN3kCHdIr4+aJggt9QZzTpW5hrUvutHTrydP369cnJyTxqlPjXdE62
s1qr70pf9zNN2C5yrdBXA9Xr+zH/2tRj30yw3eA8llW+GEG5W/zf//3fTrfu
2LGjtLS0Y/uGDRvoqHfffdffom/NWb1+YG/V39syQUeGiuO3+vr6xMREKm5V
VVXK923qWM3QhNaYap05a9VXePPmTZ8+fbKyslSeRR9i2v799997PJ5ly5ap
PItBuOaLAm+/oc5o1Q/EnFzzYxu/6ctTrf+PIJrtRnKNk+261+pV6lfqfaYZ
iJNt140J1yYF9TVQ5GuTOLYbn8eK8H9byncSdvq9iyUlJcod9GeffUb3lcqd
IN0tHj58WFmRWLx4cbtDNM2CtOrruLdlgtYMFcdvra2tH3/8MV3BL1y44Gv7
dQOufhPH9nbs27ePtlLGGbOPcd+42v7DDz9QxUtISKABUFhYWFdXx8jQHpA3
XxRQZ3TrK5iQa4HI7jeDeappFiGa7QZzjZ/tOtbqdeeLT/UzzUCcbLtuTKgV
CiproMjXJnFsZzKPFeFu6/r169Tzn376qeOm2traefPmBbURGRlJd5f+t/T6
xYsX7Q7RVJk16Zv/jIbOWPOWhW85ffp07969a9pgZZcCJ79t3ryZWvbs2aO8
NcFv4tgeSEVFBcVO+R9JBkay6xtX28vKyqi8xMfH09apU6fy/po4G+SLD3XG
mL7PrFzz2chvBvNU0yxCKNtNXq/WN559qtfqdeub8EzTZrZrxcxa4dNSA0W+
NoljO5N5rAh3W42NjW63++TJk13tcOrUqcmTJ0dERPj9EBYW9tVXX/mfNQei
4/8p1Oib/4yGmDlzZlDXkKXG7fLDw29XrlyhyPbv3//rNj744AParbCwcPv2
7epPpAPLbQ/k1q1b0dHRNJl58OCBfpP49I237Qo0Esj8qKioX3/9VY9J6pA9
X3yoM4b1zcw1O/lNQV+eXr9+/fDhw+r319o3kXONt+0Kmp7Vqtc3+EzTybZr
xcxaoaMGCnttUtk3PzxsZzWP1ZEvPBg5cuTOnTu734duVH/++WcynOLbzU2r
7v9e717f/Gc0rLDQb6WlpQl/jvJzBoMHD05NTdVjDLu+BcJpzChUVFQMGjQo
Jibmzp07WvWNIILtgVCdoRMdO3ZM64lMBnVGHyKMN6tyzQgi+C0QM/PUybmm
Pi76ntWq0Tf5swea+qZgP9uNwLsGyp4vnGy3fB7Lltzc3L/5m79hIsXqu8IC
sfAZjWnw8FtHxJw98rP93Llzffv2HTJkiLDTP062nz59+tatW4Etq1atohNR
O9sTWQXqjD6cnGtGcHKeOjnXzHlWa85nD7TiZNv1wa8Gip8vZtZ/MeexKqH7
5aSkJCZSPCqzze5tO8WBd1uVlZW730Klg3o1ceJE5e3FixeZ6H/33XehoaGk
/OWXX5LhRW10+i+KJsPV9qamJip6ZPuSJUuOHTt25syZ/Px8l8v13nvvNTQ0
GNe3EK5+Q53Rjci5xgQefpMlTx17TTfzWa1onz1wsu364FoDBc8Xk+u/UPNY
rdy7d486X11dbVzKgXcNTDDHb8rDaEH8RgWk0w9Rf/HFF0z0x48f36n+unXr
mOgbgbftNJw+//xzulYqssHBwbNmzTLtm8z5wdtv7UCdUYnIucYETn6TIk+d
eU3nulYv+DNNJ9uuG5NroFD5YrLtZs5jvV4vzS4mTpyYmJg4Y8aMNWvWdPNP
jioZMWLEP/3TP+k+nPdzinYINdKMYLLfgNOorq6mciHUUrlEoM44HNP8JmCe
OvmaznWtXvBnmk62XSKEyhe7smfPHhqcyp2jx+NRXgwcOPD27dtGZCmzcnJy
dB9u8pqzUM9ojGCy3wAA6kGdcThO9puTr+m81+pFfqbpZNslQqh8sSX/9V//
pdxh/elPf/rv//7v169fnzp1Kj09nVoMfnrzP/7jP0JDQ58/f86qqwAAAAAA
oFMEfKZpGk62HYjPnj176MYqPj6+ubnZ3/hv//ZvyipBbW2tEfGUlJRvv/3W
cB8BAAAAAAAAQD42bdpEd1UdP/IXHR1N7QY/THjw4MH09HQjCgAAAAAAAAAg
Kf/5n/9Jd1V9+/YN/FKX+/fvU+PQoUMNijc0NAwbNuzZs2cGdQAAAAAAAABA
Rv74xz/SvVX//v23b9/+8uXLFy9eKP/V+Pd///dWdw0AAAAAAAAAJObNmzcz
ZsxQ/lErLCwsNjaWXvzt3/6t1f0CAAAAAAAAAIlpaWlZtWpVSEhI3759MzIy
goODlduu7Ozshw8fWt07AAAAAAAAAJCVv/7rv6Z7q5SUFOXnCR49erRmzZoB
AwZQ41/8xV/QW6s7CAAAAAAAAADyce3aNbqrcrlcDx48CGy/d+/ekCFDaNPi
xYut6hsAAAAAAAAAyMvevXvplmry5MkdNym/Kz1mzBjzewUAAAAAAAAAsnPg
wAG6pZowYULHTbt376ZNycnJ5vcKAAAAAAAAAGTn9u3bytdibNu2rbW11d/+
6NGjv/zLv6T2/Px8C7sHAAAAAAAAAPKyfv165UsI/+qv/orurf7u7/5uwYIF
4eHh1JKQkIAfJgYAAAAAAAAAfbS2tv7zP/9zUlJSUAChoaFLlizBN8ADAAAA
AAAAgHGeP3/+7//+71euXLl3715TU5PV3QEAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgPXU1NSM
Hz9+9erV7drz8vIyMzMt6ZJp8Lbdyb4FwGkg3/mBWg0AAEBqsrKyevXq9fjx
Y3/LgwcPXC5XQUGBhb0yB962O9m3ADgN5Ds/UKsBAOJQVVWV3hlHjx5lor93
715SO3nypL9l165d1HLp0iUm+kbgbTtvfau4fPlyUFBQ4LLemjVrqOX27dtM
9EUeM7xt561vBN5xkV3fCLLbbtdax9tvTq6lsvvWybXayfNGAPRRW1u7JIDZ
s2dTuejVqxdVEib6DQ0NI0aMiIyMrKyspLfXrl3zeDzZ2dlMxA3C23be+hYy
ZcqUqKioV69e0evm5ubY2Nhp06axEhd5zPg4226Cvm54x0V2fSPIbrtda50J
Y8axtVR235qgrxvZ813kcQuAcWiEp6WluVyusrIyhrJerzcsLCw1NfXly5eU
QXFxcZSqDPWZwMl20/RNpry8nKrrvn376DVZRK9LS0sZ6os8ZnjbzlvfCLzj
Iru+EWxju81qHW+/ObmWyu5bJ9dqP06eNwKgg6amphkzZlC5KC4uZi5+8OBB
Uk5ISKCUFPBZMFfbTdC3hLFjxw4bNqylpSUrKys2Nra5uZmtvshjhrftvPWN
wDsususbwQa227LW8fabk2up7L51cq32OXveCEA7Xr9+7fV6z549e/fu3dbW
1k73ofb58+fTwC4qKuKhT7UoPj6e9OfOnatV3wgi2G5E3yCNjY0vX77UcaAa
u0pKSpQa63a7161bx1xf5DHD23Yj+kbgHRfZ9Y0gu+1OrnW8/ebkWiq7b51c
q+06bwRAK7W1tQUFBaGhoUFt9OvXj8ZtTU1Nuz0LCwtpa35+Pif99evX09bE
xMSQkJCrV68asop133jbrk+fCcqiU3V1tfpD1NtFlXD48OF0ifF4PI8ePWKu
L/KY4W27Pn0j8I6L7PpGkN121DrefnNyLZXdt06u1fabNwKgg8bGxpSUFGUw
01gdM2bMgAEDlLf04ty5c/49t2zZQo25ublUN3joX7hwweVyLVy48MmTJ7Gx
sfHx8c+ePWNpqoG+8bZdnz4rpk+fTmdXfwlQb5fCoUOHaFNOTg5zfZHHjAI/
2/XpG4F3XGTXN4LstqPW8fabgjNrqey+1advBHF8a795IwD62LZtGw3g0NDQ
48ePNzQ0KI0VFRUZGRkxMTEPHz5UWo4cOUK7hYWF7dy589sAysvLmegrmTJ0
6FDlYx4XL150u910ZeR6RRbEdt36rCgsLJwwYYL6/y1VaZefrVu30v7nz59n
qy/ymPHDyXbd+kbgHRfZ9Y0gu+0Or3W8/ebHgbVUdt/q1jeCIL615bwRAH1k
Z2fTqJ43b167dhqugU9sR48eHdQZc+bMYaKflZXl8XgCnwJv2rSJDty4caNO
w1QgiO269a1CpV0KN2/eDA8PT01NZa4v8phR4Ge7bn0j8I6L7PpGkN12h9c6
3n5TcGYtld23uvWNIIhvbTlvBEAfmZmZNDjff/99SfWN4GTbjaDSrpUrV6al
pdGeERERXq+Xub4lCGK7bn0jyJ4vNhhXjtW3CkH85uRaylsftdqB+gCYz8aN
G5XVhqVLl9bX10unH8j9+/c7fli6G+xku1YaGxuTk5PHBDB58mSVx6q0a/ny
5R9++CH9raqq0tQ3kf0miO269QNxWr6gFsmrH4hW35pQ63QjSD1hgqRjHrVa
B7LrB6LVtwDo49WrV0lJScrAjoyMpJpw9+5difQDKS4unjRpkjh9M9N2rbS0
tPz444/l5eUz37Jjx46IiAiVxzrZb3ay3Wn5At/Kqx+IVt86udaJHBfZbYdv
5dUPRKtvAdBNXV3dggULXC6XMraDg4NnzZrF8Is0eev70ZE1trFdNwVvoS6p
n4H4nO0329juwHyBb+XV96N7duTMWidyXGS3Hb6VV98P7raAydy5c2fZsmV9
+vQJamPFihUMv9qFt77PQNbYwHbd6JuBKPRo140bN/Ly8tLT0xMTEzMzM0tK
StjqW4g4tjc1NS1atCgnJ+f58+eaTuHYfEEtklffZ/rdloLlfrt+/Tp1PiUl
JSkpKTc3t6KiQqj++2Qe86b5FrVaNH0f7raARdTV1W3ZsuWdd95RBvbu3bsF
129tbW1pY//+/RkZGS0BWNs33vqBtndEpYiRGYhCV3YdOHDA7XYPHDiQLi4f
ffRReHg4bf3mm29Y6euGid+675uZtufn5ytbf/nllx4FnZwvvPXhW376THzL
r9axoit9mhCGhoZGRUXNnTtX+R2ikJCQGzduWN5/G4x5M32LWi2IPkPfAmCE
2traUaNG0ageOXKkv9Hg+k+P+vqeBSi/VtkVamqamr7Z2HbjMxCFjnZVVlZ+
+umn/p8avHfvnsvliouLY6UfiKY1QxPGjGm2Hz9+nNpJmf7ev3+/Rylz8sX3
9vp44sQJSha6lmnV7FHfxvnYY9988K14tU6BX1zWrl07derU3377TXlbVlZG
Wz/55BO2/VcQrZYq2MC3qNU2qycAMKG4uJhGndvtVu70Wa3/dKWv+1lATU1N
ZRvr169PTk6uDEDfMoWMtndEpe2sZiAd7erI2LFj6Sy///47c31Na4ZM/Ka+
bwo8bPd6vTRaxo0bV1RUpMN2TvlCbN68OTg4WIkIzdx0aHajL0U+wred6lvr
W661jmtciMDSQY3R0dE082So70d3LZV0zPtM8S1qtf3qCQCa2LFjR2lpacf2
DRs20Lh99913lbe6139U6leyeBag9fO3drJdNzpmICrtasf333/v8XiWLVvG
XF/rmqERxLG9vr4+MTGRLjRVVVXK9+VqXZHjlC8EDaf9+/dv27ZN0xXcTvkI
33aqb4lv/XCtdVzj0o43b9706dMnKyuLub6RWirpmG8HD9+iVitvbVZPAFBP
SUmJsqbx2Wefeb1e5Y6e7voPHz6srBIsXrzYv7OO9R9N+u3Q8SxAU9bYzHbd
aJ2BaLXrhx9+oCtXQkIC3W4UFhbW1dWx1dexZqgbcWxvbW39+OOPSfbChQu+
tl8n4XoF1zGenz59qv4KbrN8hG8F8W0gvGudj2dcAtm3bx9tJT+w1TdYS+Ud
84Ew9y1qtf+1zeoJAOqpra2dN29eUBuRkZGJiYn+t/T6xYsXnR6ocv1Ht776
ZwGBaMoam9mulfr6+pq3LHzL6dOne/fuXdNGNwdqtausrIyCEh8fT1unTp3a
48e2NekbXzPUhDi2b968mVr27NmjvDXhCq5jPGu6gtssH+FbQXzrM7HW+UyJ
C5UR6r/yf/0M9U1+/uIc36JW+7FHPQFAN6dOnZo8eXJERIR/PIeFhX311Vf+
578dUbn+o1Vf67OAdly/fv3w4cOaDrGN7VqZOXNmUNdQ7e3+cB1+u3LlCt13
REVF/frrrz12T40+kzVDHVhuO6m53e7+/ft/3cYHH3xAu9Gw2b59u3pDeOeL
piu4Dn0FMfMRvhXHt2bWOt5xuXXrVnR0NBWTBw8eMNRnUktlH/M8fItaHYg9
6gkABmlpafn555+pOFCN7X5hR/36j1Z9rc8CWOFk242g3m8KVNPIumPHjjHR
Z7JmqBsLbS8tLU34c5SfIxk8eHBqaqoeYzSi0nYdV3BN+j475iN8KyYixIUc
NWjQoJiYmDt37rDVl6KWyuhb1Go/qCcAaELH+o8OND0LMA0n266D06dPk8cC
W1atWkX1kNqNi7NaM+QEV9s7YvLsSCW6r+AqcXI+wrdiwi8u586d69u375Ah
Q3TcDnSP4LXUj4y+7QhqNadT+OxYT4BjMbL+oxWtzwJ442TbddDU1EQXr9DQ
0CVLlpAhZ86cyc/Pd7lc7733XkNDg3F9y9cMu4G37R1x4BXc4fkI34oJp7h8
9913VE9I+csvv6RkL2rjp59+Mi4uci0NREbfdgS1mis2qyfAmXBd/zH5WYBW
nGy7bqiAf/7551RjlQ9dBwcHz5o1i983tAt1FTPZduWDQILY7kfStWgp8hG+
FRNOcRk/fnxQZ6xbt47tiRSEqqV+7OFb1GqG2L6eAAfCdf3H/GcBmnCy7Uyo
rq72er28zRFzhmCO7UJRWVm5+y1ff/01RWTixInK24sXLzLRd3I+wrdiwjsu
JiNULbWZb4UC9QQA0eC9/mPyswBNONl2iRBzzdCBlJaWdpovX3zxBRN9J+cj
fCsmvONiMkLVUpv5VihQTwBwLA58FuDHybYDIBrIR37AtwAAVqCeAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AOSipqZm/Pjxq1evbteel5eXmZlpSZdsA2/f2jV2svtN5Lg42XbewLfygtiJ
CfwGALANWVlZvXr1evz4sb/lwYMHLperoKDAwl7ZA96+tWvsZPebyHFxsu28
gW/lBbETE/gN2I+9e/emp6efPHnS37Jr1y5quXTpEhP9qqqq9M44evSoFPpW
wTsuly9fDgoKClw+WrNmDbXcvn2biT7v/htBdt/y1rcK2f0mclxkt13kOg/f
8oN332SPnVXIHheRxzywKw0NDSNGjIiMjKysrKS3165d83g82dnZrPRra2uX
BDB79mxKmV69elE2SaFvFbzjQkyZMiUqKurVq1f0urm5OTY2dtq0aazETei/
bmT3rQn6ViG730SOi9S2C17n4VtOmNA3qWNnFbLHReQxD2yM1+sNCwtLTU19
+fIlzULj4uJoKPI4Ec1y09LSXC5XWVmZjPomwzsu5eXlVGH27dtHr8lj9Lq0
tJShvmnjSgey+5a3vlXI7jeR42Ib2wWs8/CtCXDqm21iZxWSxsWPyGMe2I+D
Bw/SYE5ISKAhx+mzXk1NTTNmzKCzFBcXy6hvCbzjMnbs2GHDhrW0tGRlZcXG
xjY3N7PVN2Fc6UZ23/LWtwrZ/SZyXGxgu7B1Hr7lCte+2SB2ViF1XHxij3kg
Ha9fv/Z6vWfPnr17925ra2un+9B4jo+PpyE3d+5cHvrUPn/+fNIvKioSTd8g
jY2NL1++1HGgCHEpKSlR6ozb7V63bp1Q/TeCE3xrRN8gXMe8yH4TOS6y2y5y
nRfBdif7lvf8QeTYGYRrrZY9LhbOG4HNqK2tLSgoCA0NDWqjX79+NLesqalp
t+f69etpa2JiYkhIyNWrV5nrFxYW0tb8/HxO/denzwRlYaS6ulr9IeLEhe44
hg8fTqXM4/E8evRIkP4bwTm+1afPBK5jXky/iRwX2W0Xuc6LY7uTfct7/iBm
7JjAtVbLHhcL543ATjQ2NqakpCiDjeaTY8aMGTBggPKWXpw7d86/54ULF1wu
18KFC588eRIbGxsfH//s2TOG+lu2bKHG3Nxcyh0e/denz4rp06fT2dWXAnHi
onDo0CHalJOTI0j/jeAc3+rTZwW/Ma8gmt9Ejovstotc58Wxnbe+yL7lPX9Q
EC12rOBXq2WPi7XzRmAntm3bRmOJbvCPHz/e0NCgNFZUVGRkZMTExDx8+FBp
UWabQ4cOVR43X7x40e12U4b2OAJV6h85coR2CwsL27lz57cBlJeXW6vPisLC
wgkTJqj/jgVB4uJn69attP/58+cF6b8RHOJb3fqs4DTm/YjmN5HjIrvtItd5
QWznrS+yb3nPH/yIFjtWcKrVssfF8nkjsBPZ2dk0nObNm9eunaaUgU9Us7Ky
PB5P4CepNm3aRAdu3LiRif7o0aODOmPOnDnW6luFIHFRuHnzZnh4eGpqqjj9
N4JDfKtb3ypk95vIcZHddpHrvCC289YX2be85w8KAsbOKhwSF+nmjUBkMjMz
afC8//770BcKQfy2cuXKtLQ02jMiIsLr9TLXtwSH+Fa3vlXI7jeR4yK77Tao
J/CtDlCrxcQhcQGAIRs3blTu1pcuXVpfXw/9brh//37HDwx3Q2NjY3Jy8pgA
Jk+erPJYQfy2fPnyDz/8kP5WVVXx0GeC1rg4xLe69Y1gwpgX1m9mxoXTmBfW
dhvUE/jWh1rNWj8QzE+Y6zNBa1yAXXn16lVSUpIy8CIjI2nc3r17F/qdUlxc
PGnSJPX7t7S0/Pjjj+Xl5TPfsmPHjoiICJXHyu43keMiu+1m+lYrGPMY8zLq
BwLfwrey6AeC+Yk4+oFojQuwMXV1dQsWLHC5XMrYCw4OnjVrFsMv4pZd34/u
rCl4C3VJfTXzye83keMiu+2m+VY3GPMY83Lp+4Fv4VuJ9P1gfiKUvh/cbYF2
3LlzZ9myZX369AlqY8WKFQy/Gk52fZ/p1UzBcr/duHEjLy8vPT09MTExMzOz
pKREqP77DMTFOb5tampatGhRTk7O8+fPjVqlDt5jnq6VJ06cyM3N3b9/P3P9
69evU+dTUlKSkpLoFBUVFWz1Dcbdx3nMS+1b48jrW9Rq3Vg+bi2sCVLPT2xc
T4C9oWvBli1b3nnnHWXg7d692+H6ra2tLW3Q9TEjI6MlAJUiRqqZglV+O3Dg
gNvtHjhwIE3UP/roo/DwcNr6zTffWN5/JnHh1DeV+mb6Nj8/X9n6yy+/9CgY
6NuOqOwV1zG/efPm4OBgpZ3uItnq08UxNDQ0Kipq7ty5ym+yhISE0FyIlb7u
uJsz5qX2rW5s4FvUauM4sybIOz9xQj0B9qa2tnbUqFE06kaOHBnYbmRdrkd9
g2sUPerrWztSfvWvK9TMXX0sqpmC+XGprKz89NNP/T/pe+/ePZfLFRcXx7b/
CpqevzCJi5q+2cC3x48fp3ZSpr/379/vUUr8MU+yFA7lN1N0z1q70l+7du3U
qVN/++035W1ZWRlt/eSTT1jp6467OWNeat8GImA94epb1Gp+tdreNUHe+Ylz
6gmwMcXFxTQq3G63/06cybpcV/qs1ii60te9dlRTU1PZxvr165OTkysDULlM
waqadbTLxzkuHRk7dixZ8fvvvzPX1/T8hUlceuybDXzr9XpptI8bN66oqEiH
bzsiwphXePr0Kae4BIaAGqOjo+kqzFC/HSrjbs6YV7CBbwWsJwr8fNsO1Grd
OKomSD0/cU49AbKzY8eO0tLSju0bNmygcfXuu+/6W/Sty6nU171GoVK/ksW6
n5mfixYkLu34/vvvPR7PsmXLmOtrff4SiNa4OMe39fX1iYmJAwcOrKqqUr7z
1rRVNa5jXkHrrFVfXN68edOnT5+srCxO+urjHgi/Ma8gu2/FrCcK5vgWtZqt
fiD2qAl+bDM/sUc9AbakpKREuVv/7LPPvF6vcsdNd+WHDx9Wnv4sXry43SGa
rhSa9HWsUejovx8d636mVTOh4kL88MMPVMESEhLoElBYWFhXV8dWX8fzl0A0
xcU5vm1tbf34449J9sKFC762XxgR9m5LtLj42bdvH22lMcZWX2vc2yH1mPfD
ybeoJ6jVnPQVbFATAkGt7l7fzDEP7Eptbe28efOC2oiMjExMTPS/pdcvXrxo
d4imrNGhr6ByjUK3vjlrR/X19TVvWfiW06dP9+7du6YNtnZxjUtZWRkZHh8f
T1unTp3a47/UadI3/vxFU1yc49vNmzdTy549e5S35txt2WbMK1A4qP/K/ziz
1dca93ZIPeYVOPkW9QS1WsZx6zO3JvhQq4Uc88DenDp1avLkyREREf7xFhYW
9tVXX/k/1xeIjs+ca9JXULlGoVXf4NrR9evXDx8+rH7/mTNnBnUNeZKVXT6z
4nLlyhW6FkRFRf36669M9Jk8f9EaF5V98yOjb0nN7Xb379//6zY++OAD2o2G
/fbt29UbohU7jflbt25FR0dTUB48eMBDX0FT3P3IPuY5+Rb1xA9qNQ99O9UE
1GphxzywNy0tLT///DOlOY2lbhYHdP+Hr0p9n5Y1Cq36BteOLEGcuChQ3aAT
HTt2jIm+Jc9fVPbNj4y+LS0tTfhzlJ8UGTx4cGpqqlZDTEaEuFBxGDRoUExM
zJ07d3joB6I17kawt29RTwJBrWarb9eaYAR7x8XaMQ8cDqvvU+oKHWsUOtC3
diQynOJy+vRpikhgy6pVq+hE1G5c3KrnL1qR0bcdsd+Vgl8tOnfuXN++fYcM
GaLj8t0jJsddHzL6FvUEtVrGceuTpCYYQca4yDLmgV3herdlZI1CK7KsHamE
R1yampqoiIWGhi5ZsoQcdebMmfz8fJfL9d577zU0NBjXl+X5i4y+7Yht7rYq
Kyt3v4Uuf2TRxIkTlbcXL15kov/dd99RXEj5yy+/JKcVtfHTTz8ZFzc/7pqQ
2reC1xOuvkWtVuA0P3FyTWCCjHGRZcwDuyLjGoUPa0cGZD///HO6/1U+2Bwc
HDxr1iyt34CqHjHvCOzhW+VDEaL5Vgd0Eez0Hw2++OILJvrjx4/vVH/dunVM
9E2OuyZk9207hKonvH2LWu3jVqudXBOYIGlc2iHmmAc2Q+o1TxuvHfGOi5/q
6mqv18vbXUJVM5v5FogG4s4boeqJaaBW86vVvLFZTbBNXBSEGvPArsi+5mnX
tSPecTEZoZ6/2My3ADgNoeqJzRDKt6jVYmKzuAg15gEQHJutHQEAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAABDampqxo8fv3r16nbteXl5mZmZlnQJANANvHMWNUEfsscFcQcAAAA4
kZWV1atXr8ePH/tbHjx44HK5CgoKLOwVAKAreOcsaoI+ZI8L4g4AAMCZVFVV
pXfG0aNHmehfvnw5KCgocElzzZo11HL79m0m+rz7b4S9e/dST06ePOlv2bVr
F7VcunRJCn0n+5a37SL7lnfO8tbnPTasQva48NY3Au98lL1eidw32fWNIPsc
w8l5AZxGbW3tkgBmz55Nl79evXrRlZHVKaZMmRIVFfXq1St63dzcHBsbO23a
NFbiJvRfNw0NDSNGjIiMjKysrKS3165d83g82dnZsug72be8bRfZtz7OOctb
n/fYsBCp42KCvm5456Ps9UrkvsmubwTZ5xhOzgvgZGjkp6WluVyusrIyhrLl
5eU0wvft20evSZlel5aWMtT3w6n/RvB6vWFhYampqS9fvqSqEhcXR+kvkb4f
B/rWD2/bBfQt75zlrW/a2DAZ2eNi2rXACJzy0Tb1ygiy11IBfSv7HAN5AZxG
U1PTjBkz6PJXXFzMXHzs2LHDhg1raWnJysqKjY1tbm5mfgqu/TfCwYMHqVcJ
CQmU5jw+y8Rb3+dg3/r42y6sb3nnLG99E8aGJcgeFxOuBUbgmo82qFdGkL2W
Cutb2ecYDs8LIBqNjY1076/jwNevX3u93rNnz969e7e1tbXTfah9/vz5NBSL
iop46JeUlCjj3O12r1u3Tqj+G0FN32heER8fT32bO3eujPpO9i3vvBDZt7xz
lre+kbFhEK61Wva4GNE3ggj5LnK9MoIIvhVZ3wgijCvZ9a2KHZAU5ca8urpa
/SG1tbUFBQWhoaFBbfTr14/Gc01NTbs9CwsLaWt+fr6mLqnXp2waPnw4XV49
Hs+jR48E6b8R1Pdt/fr1tDUxMTEkJOTq1avS6TvZt7zzQmTf8s5Z3vr6xgYT
uNZq2eOiT98I4uS7mPXKCOL4Vkx9I4gzrmTXNz92QGqmT59OA0b95amxsTEl
JUUZhDSGx4wZM2DAAOUtvTh37px/zy1btlBjbm4uXQfV90e9vsKhQ4doU05O
jiD9N4L6vl24cMHlci1cuPDJkyexsbHx8fHPnj2TSN/JvuWdFyL7VoFfzvLW
1zc2WMGvVivIGxd9+kYQJ9/FrFdGEMe3YuobQZxxJbu++bEDskO35xMmTFD/
/4Pbtm2jMUY3/sePH29oaFAaKyoqMjIyYmJiHj58qLQcOXKEdgsLC9u5c+e3
AZSXlzPR97N161ba//z584L03wgq+6ZUj6FDhyofK7p48aLb7aaZWI9ZL4i+
k33LOy9E9q0fTjnLW1/32GAFp1rtR9K46NY3giD5Lmy9MoIgvhVW3wiCjCvZ
9S2JHXAa2dnZNMzmzZvXrp2GceCT1tGjRwd1xpw5c5joK9y8eTM8PDw1NVWc
/htBZd+ysrI8Hk/gk/FNmzbRgRs3bpRC38m+5Z0XIvtWgV/O8tbXPTasQhC/
CatvBEHyXdh6ZQRBfCusvhEEGVey61sSO+A0MjMzaVC9//771uqvXLkyLS2N
9oyIiPB6vcz1LUEQ3wqrbwTZbbeBb3nnrC1rghEE8Zuw+kaQPd9FHvOy2w7f
Qh8AhcbGxuTk5DEBTJ48WeWxGzduVO7ily5dWl9fz7xvKvWXL1/+4Ycf0t+q
qioe+ky4f/9+x38u6AZBfCusfiDwLT84+ZZ3zkpRE7RiQq2WPS669QNBPeEH
fMsP+FYu/UC0xg7ISEtLy48//lheXj7zLTt27IiIiFB57KtXr5KSkpQBGRkZ
Sde4u3fvMuyb7PqBFBcXT5o0SZy+ya4fCHwL38qibwTUaox5GfUDgW/hW+h3
RGvsgNQUvOXq1avqr+BEXV3dggULXC6XMiaDg4NnzZrF8MuQZdf3oyObZLcd
vpVX3w98y8+3ukGtxpiXS98PfAvfQr8juNtyFPqu4Ap37txZtmxZnz59gtpY
sWIFw6/n6lH/xo0beXl56enpiYmJmZmZJSUlQvXfZyCbLPet4Po++FZO316/
fp0KTkpKSlJSUm5ubkVFBVt98WuCbrjWatvEpampadGiRTk5Oc+fP9d0CtQT
GeuJQWTX98G30ur7cLflMIxcwRXq6uq2bNnyzjvvKANy9+7dbHvYlf6BAwfc
bvfAgQPpwvrRRx+Fh4fT1m+++cby/re2tra0sX///oyMjJYArO2b7PrwLT99
E3xLF5fQ0NCoqKi5c+cqv2kSEhJC83CtXZW6JnREpQi/Wm2nuOTn5ytbf/nl
lx4FUU/46cO3/PThW3n1GcYOyIXxK7hCbW3tqFGjaDSOHDkysJ3G6okTJ3Jz
c2lcsdWvrKz89NNP/T9Xd+/ePZfLFRcXx7b/CprWS5VfIO0KNXMANX0zuBbd
o77Btege9f3At87x7dq1a6dOnfrbb78pb8vKymjrJ598olW5K3171wR+tdo2
cTl+/Di1kzL9vX//fo9SqCdq9P2IVk988C1P3/p4zt98iB2j2AFZYHUF971d
IKXR4na7/XfomzdvDg4OVkYRjUbm+u0YO3YsWfH7778z19e0XlpTU1PZxvr1
65OTkysD0Ld80a5vrNaiu9JntRbdlX4g8K1zfEsEpic1RkdH01VMh3JX+u0Q
sCZ0RKVvudZqG8TF6/VSNo0bN66oqEicMY96At92pR+IaL71cZ6/IXYMYwek
QMcVfMeOHaWlpR3bN2zYQOPt3Xff9beQ7P79+5Xf5lafrer1A/n+++89Hs+y
ZcuY62tdLw1E6+dyVfZN91q0Sv1KvWvR8G2P+k72bTvevHnTp0+frKwsTvpi
1gTdcK3VgcgYl/r6+sTERJpcVVVVKd/hrHWVGPWkU30/AtYT+NbHs1Zznb8h
dj7835bD0HoFLykpUe7iP/vsM6/Xq9yJ09364cOHldWDxYsXtzvk6dOn6rNV
q/4PP/xAs4KEhAS6fBcWFtbV1bHV17FeGoimbNLUNx1r0Tpi50fNWjR8C99q
sn3fvn20lc7FVl/wmqAbE2q1gnRxaW1t/fjjj0n2woULvrZfzBFnzKOewLcy
+laB3/wNscPdlhOor6+vecvCt5w+fbp37941bXRzYG1t7bx584LaiIyMTExM
9L+l1y9evGh3iKZs1apfVlZGwzU+Pp62Tp06tceP/mrSN3m9VIdvFVSuRevW
V7kWDd/Ct+ptp1SlmqP8jzBbfcFrglbMrNU+OeOyefNmatmzZ4/yVtgx70M9
UQF8271+O3j7luv8zQ9iB+zKzJkzg7qG8qv7w0+dOjV58uSIiAj/IWFhYV99
9ZX/uXAgmrJVh77ClStX6DoeFRX166+/MtFnsl56/fr1w4cPazpEh+0q16K1
6mtdi1avD9863Le3bt2Kjo6mhH3w4AEPfQUxa4JWzKzVMsaF1Nxud//+/b9u
44MPPqDdKK22b9+u0gof6onM9UQBvlWJgPM3xA6Abmhpafn555/pYkdjrJuF
UB3ZqknfD41bOtGxY8eY6DNZL9WNetvVr0Vr1de6Fq1eH751sm/J2EGDBsXE
xNy5c4eHfiB2qglGsHFcSktLE/4c5SdyBg8enJqaqtUQHaCe8AO+5Yc48zfE
DgAm6M7W7jl9+vStW7cCW1atWkUnonbj4qzWS3mjYy1aB5rWotWowbd+nObb
c+fO9e3bd8iQITqm9D2CmqAbeePSETFnPqgn/IBv+cFp/uYHsQOAFTyytamp
iSYGoaGhS5YsOXbs2JkzZ/Lz810u13vvvdfQ0GBc3/L1UjUYWYvWita16G6A
b9vhHN9+9913lLPUny+//JKmxEVt/PTTT8bFURN0I3VcOiLg3RbqCT/gW65w
vdtC7ABgCKdsJdnPP/+c8lT5YG1wcPCsWbP4fRuzaFdwrEXzA77lxPjx44M6
Y926dUz0HV4TdGOzuCgf8hEnLqgn/IBvecPvbguxA4AJlZWVu9/y9ddf0zic
OHGi8vbixYtsT1RdXe31ejktk/oRKpuwFs0P+NYGOLAmSIE5cREK1BN+wLf8
4D1/Q+wAYEVpaWmn66VffPGF1V3Tg1DrpViL5gd8C1QC34IeQT3hB3zLD97z
N8QOAAD8OHAt2jTgWwAAK1BP+AHfygtiBwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJCLmpqa8ePHr169ul17
Xl5eZmam+PpAH7LHHeMKAMAK1BMAAABcycrK6tWr1+PHj/0tDx48cLlcBQUF
UugDfcged4wrAAArUE8AAMbZu3dvenr6yZMn/S27du2ilkuXLkmhX1VVld4Z
R48elULfCLx9e/ny5aCgoMBlvTVr1lDL7du3pdDn7R+rQNyt1TeC7PVQ9v4b
QXbbZde3CtmvU7LrA2APGhoaRowYERkZWVlZSW+vXbvm8Xiys7Nl0a+trV0S
wOzZs6kM9urViyqkFPpG4O1bYsqUKVFRUa9evaLXzc3NsbGx06ZNk0XfBP9Y
AuJuub5uZK+HsvffCLLbLru+hUh9nZJdHwDb4PV6w8LCUlNTX758SVkTFxdH
ZVMifT+U9WlpaS6Xq6ysTEZ9HfD2bXl5OV0x9+3bR6/JanpdWloqkb5pY89k
EHdr9Y0gez2Uvf9GsI3tsuubjOzXKdn1AbANBw8epAKSkJBA5ZHH81/e+kRT
U9OMGTPoLMXFxTLq64a3b8eOHTts2LCWlpasrKzY2Njm5ma59E0Ye5aAuFur
bwTZ66Hs/TeCDWyXXd8SZL9Oya4PgPi8fv3a6/WePXv27t27ra2tne5DNSQ+
Pp6SZe7cuTLqU/v8+fNJv6ioSDR9I4jg25KSEuW66Xa7161bJ52+Ef8YpLGx
8eXLlzoORNyt1TeCCLHjXQ9F7r8RZLdddn2DcK23Il+nZNcHQHZqa2sLCgpC
Q0OD2ujXrx/lQk1NTbs9169fT1sTExNDQkKuXr0qnX5hYSFtzc/PV6lsjr4R
xPEtVdHhw4fTJcbj8Tx69Eg6fX3+YYKywFtdXa3+EMTdWn0jiBM73vVQzP4b
QXbbZddnAtd6K+Z1SnZ9AGxAY2NjSkqKkiA0/seMGTNgwADlLb04d+6cf88L
Fy64XK6FCxc+efIkNjY2Pj7+2bNnEulv2bKFGnNzc6ke8vCPPn0jiONbhUOH
DtGmnJwc5v3nra/PP6yYPn06dUn9pRlxt1bfCOLEjnc9FLP/RpDddtn1WcGv
3iqIdp2SXR8Ae7Bt2zZKitDQ0OPHjzc0NCiNFRUVGRkZMTExDx8+VFqU7Bg6
dKjyCP7ixYtut5uqVo/VUhD9I0eO0G5hYWE7d+78NoDy8nJr9Y0giG/9bN26
lfY/f/482/7z1tftH1YUFhZOmDBB/f8LI+7W6htBkNjxrofC9t8Istsuuz4r
ONVbP6Jdp2TXB8AeZGdnU6bMmzevXTulQOBT4KysLI/HE/jkd9OmTXTgxo0b
pdAfPXp0UGfMmTPHWn0jCOJbhZs3b4aHh6empjLvP2993f6xCsTdWn0jCBI7
3vVQ2P4bQXbbZde3CkHqlexzMOmuswCwJTMzkwb8+++/D31L9I0giO0rV65M
S0ujPSMiIrxer3T60oG4W6tvBEFi51h9I8huu+z6ViFIvdKN7PoA2IONGzcq
K0tLly6tr6+Hvsn6RhDE9uXLl3/44Yf0t6qqSkZ9Jty/f7/jB/i7obGxMTk5
eUwAkydPVnks4m6tfiBa4y5I7ByrHwhiJ5d+IALWW2GvU7LrA2APXr16lZSU
pCRLZGQk1Yq7d+9C3zR9I8huu+z6gRQXF0+aNEn9/i0tLT/++GN5efnMt+zY
sSMiIkLlsbL7TXb9QLTGXXbbZdcPBLGTSz8Q1Fvn6ANgG+rq6hYsWOByuZR8
CQ4OnjVrFsMv54Q+P2S3XXZ9P1qv/n4K3kJdUn/198nvN9n1/eiIu+y2y67v
B7GTTt8P6q2j9AGwE3fu3Fm2bFmfPn2C2lixYgXDr4uBPj8st/369et0CUtJ
SUlKSsrNza2oqGCrf+PGjby8vPT09MTExMzMzJKSErb6xjH56q+AuBvU99PU
1LRo0aKcnJznz59rOoXuuFseO4fr+xA7afV9Atdbuu84ceIEFcP9+/fz0DeC
7PoA2AmqFVu2bHnnnXeUZNm9ezf0ueq3tra2dI21fVOpTxe+0NDQqKiouXPn
Kr+7ERISQvNkVvoHDhxwu90DBw6kyfBHH30UHh5OW7/55htW+roJjB1dWzMy
MnTEzsjVXwFx16cfSH5+vrL1l19+6VGQSdzV980I0G8HYievvvj1dvPmzcHB
wUr7okWLmOszQTp9hnMkAESjtrZ21KhRlCkjR44MbDeybtOjvsF18h71Da6T
96jvR9M6ufJLi12hZu6nsm/8Yrd27dqpU6f+9ttvytuysjLa+sknn7DSr6ys
/PTTT/0/g3jv3j2XyxUXF8dKPxDzY2f86q+AuGvV93P8+HFqJ2X6e//+/R6l
bJCzPtRbxK5rfRvHjmu9JVkKt/L7U7rvtrrRR9yZ5CwAQlFcXEwj2e12+1cP
mKzbdKXPap28K31W6+Rd6QeiaZ28pqamsmv0Ld2YHDvi999/92+lxujoaKq0
DPXbMXbsWLpWBp6Ulb7u2K1fvz45OVlH7Fhd/X2Iuy59r9dL1WDcuHFFRUVm
xr3HvqHedqMfiPk522PfELtu9AOxWb1VePr0KeLeUT8Qy+dIAJjPjh07SktL
O7Zv2LCBcuHdd9/1t+hbt1Gpr3udXKW+7nVy9f5R0LpObgRBYteON2/e9OnT
Jysri5P+999/7/F4li1bxlzfSOzM/D8CxJ2Vfn19fWJiIk0wqqqqlO8x1rpS
qjXugsQO9daH2HWhb8vY+eFabxW03m0h7gDYnpKSEmWF4bPPPvN6vcoqQU1N
zeHDh5WVjcWLF7c7RFMl0aSvY51cR//9qFkn16qvY51cN0LFLpB9+/bRVroa
stX/4YcfaCafkJBAU+7CwsK6ujq2+gZjZ9rVH3Fnpd/a2vrxxx+T7IULF3xt
vxrDNe5CxQ71FrFzSOwCkbreIu4ASEptbe28efOC2oiMjExMTPS/pdcvXrxo
d4imSqJDX0HlOrlufZXr5Jr0ja+Ta0LM2FVUVPTu3Vv5/2W2+mVlZXR5jY+P
p61Tp07t8SPrJsdO69WfzljzloVvOX36NPmtpg1Wdikg7p3qb968mVr27Nmj
vDUh7mLGzufUeovYOSR2PtvVW59T4w6A1Jw6dWry5MkRERH+HAkLC/vqq6/8
z6wD0fGZZE36CirXybXqa10nV6/PZJ1cB0LF7tatW9HR0TQxfvDgAQ99hStX
rtApoqKifv31Vyb6TGJ3/fr1w4cPq99/5syZQV1DkTJulx/EvaM+qbnd7v79
+3/dxgcffEC7UVnYvn27Sit82uOupm+BoN6Kk7Mq++YHsRMndnaqtwrOjDsA
NqClpeXnn3+mSQiN/24WqHX/B6hKfZ+WdXKt+lrXydXrM1kn140IsSNnDho0
KCYm5s6dOzz0A6HrLBly7NgxJvrWxs4IiLtu/dLS0oQ/R/mZmMGDB6empmo1
RAcixE4B9VYriJ0RfdRbg/o+xB0AB8Dq+3a6Qsc6uQ40rZOrUWOyTs4bfrE7
d+5c3759hwwZomPK3SOnT5+mURHYsmrVKjKE2o2LyxI7IyDuahDz6o9626ma
FDmL2HWqJkXsjIC4d6pm+7gDwBaulcTIOrlWtK6Td4Pl6+Qq4RS77777LjQ0
lJS//PJLmrIWtfHTTz8ZF29qaqLJPOkvWbKEgnXmzJn8/HyXy/Xee+81NDQY
15cldkZA3NXgwLst1FuuIHYdkSV2OqisrNz9FrqVIIsmTpyovL148SLDsyDu
ADgErJOrwVEzt/Hjx3f6Yfh169Yx0aduf/7553R9UWSDg4NnzZrF75tjxYyd
ERB3NSgfdBEt7qi3ahAzZxE7NYgZOx3QDUWn9fCLL75gdQrEHQDbw3vdBuvk
/DBnzc0EqqurvV4vp5D5ESp2RkDc5QX1VhNC5SxipwmhYicyiDsAToD3ug3W
yflhwpqbnRAqdkZA3OUF9VYTQuUsYqcJoWInMog7AEAiHLhODgAAloB6Ky+I
nTNB3AEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAADCTmpqa8ePHr169ul17Xl5eZmamJV0SCrv6x652OQHErnvs
6h/edsmub1fgN3lB7LoH/gGOIisrq1evXo8fP/a3PHjwwOVyFRQUWNgrcbCr
f+xqlxNA7LrHrv7hbZfs+nYFfpMXxK574B/gHC5fvhwUFBS4vLBmzRpquX37
NhP9vXv3pqennzx50t+ya9cuarl06ZIU+rz9YxWyx72qqiq9M44ePcpEn3f/
jYDYdQ9y1pn6vMeVVcjuN9nnAEZA7LrHrrUagE6ZMmVKVFTUq1ev6HVzc3Ns
bOy0adNYiTc0NIwYMSIyMrKyspLeXrt2zePxZGdny6Lv4+wfC5E67rW1tUsC
mD17NpXoXr16UfVmom/CuDICYtc9yFkH6pswrqxCar/ZYA5gBMSue+xaqwHo
SHl5OWXovn376HVZWRm9Li0tZajv9XrDwsJSU1NfvnxJmRsXF0clQiJ93v6x
Ctnj7oeuCGlpaS6Xi6xgKGta/3WA2HUPctaZ+n44jSurkN1vss8BjIDYdY9d
azUAnTJ27Nhhw4a1tLRkZWXFxsY2Nzez1T948CAlUUJCApUCHs/3eevz9o9V
yB53oqmpacaMGXSW4uJi5uIm9F83iF33IGedqe/jPK6sQna/yT4HMAJi1z12
rdXAabx+/drr9Z49e/bu3butra2d7lNSUqLkqdvtXrduHXN9yqP4+Hg6xdy5
c3n0n7e+Ef8YpLGx8eXLlzoOdELcqX3+/PmkX1RUxEPfSP+NgNgZ10fOOlPf
yLgyiNRxF7mWolbbO3YW1moAmFBbW1tQUBAaGhrURr9+/Shfampq2u1J2TR8
+HAa6h6P59GjR8z1169fT1sTExNDQkKuXr0qnb4+/zBBWbCqrq5Wf4hz4l5Y
WEhb8/PzVSqb038jIHas9JGzztTXN66YIHXcxaylqNVOiJ2FtRoA4zQ2Nqak
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
cin5EhwcPGvWLIZfygp9fshuu+z6frRe/U3oG/RVoiN2Cqi3Mur7Qc5Kp+8H
OesofQBEQ18lUbhz586yZcv69OkT1MaKFSvafd0N5dSJEydyc3P379/PQ98I
susbAbFjpd/U1LRo0aKcnJznz59rOoXuq784tjtT32f6zE1Bdr+Jo4+cdZq+
Dzkrub7unAVAEIxUEgWak2/ZsuWdd95RkmX37t3+TZs3bw4ODlbaKVOY6zNB
Ov3W1taWrmHVN8ROpX5+fr6y9ZdffulRMDB2dA+bkZHBI3ZMgH47mMSOa71l
ghP0kbMO0UfO2kZfd84anCMBwArjlUShtrZ21KhRlAsjR470N5IslTjltxV0
z9i70b9+/Tp1PiUlJSkpKTc3t6Kigq3+jRs38vLy0tPTExMTMzMzS0pK2Or7
0bRuo/zSYleoqUVq+obYda+vcPz4cWqPi4ujv/fv3+9RypzY+Yw9l+xR3x6x
81mRd1zrrQ9x71ZfATkrb+x8yFmN+vaIu+U5C4BxWFUS39sn9TSS3W53u9WD
p0+fBhmesXfUp7ehoaFRUVFz585Vfpc8JCSEcp+V/oEDB+j1wIEDqbB/9NFH
4eHhtPWbb75hpR+IpnWbmpqayq7Rt3SD2GnSV/B6vaQ8bty4oqIiHbFbv359
cnIyj9gxeS7Zlb49YqegO+90x45rvUXcu9FXQM7KGzsF5Kx6fXvE3WDOspoj
AWAQHZVkx44dpaWlHds3bNhAufDuu++2a9c6Y1epv3bt2qlTp/7222/K27Ky
Mtr6ySefsNKnrPz000+fPXumvL13757L5YqLi2Ol70fruo0REDsm+kR9fX1i
YiJdaKqqqpTvs9W6Yqb1/wjU903fc0nnxE7BSN6Z+T8giDsTfR9yVubYKSBn
NenbIO7GcxYAQdBaSUpKSpR1mM8++8zr9SqrBDU1NYcPH1ZWNhYvXtzuEE0z
dk36v//+u/817RkdHT1q1Cjm/fczduxY8lLgSY3r61i30Q1ixyp2ra2tH3/8
scfjuXDhgq/t10O4ztwQO6HyzrSZG+KOnGWiL3XsFJCzOvSljjuTnAXAWurr
62vesvAtp0+f7t27d00b3RxYW1s7b968oDYiIyMTExP9b+n1ixcv2h2iqZLo
0Fd48+ZNnz59srKyOOl///33lPXLli1jqG/yug1ix0p/8+bN1LJnzx7lrQkz
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
qe/HzJwNhFPc/dipFpnQN7vWAT8qx8OaNWvS09O1dh6YTHZ2NkVz3rx57dpp
uAY+2Rw9enRQZ8yZM4eJvsLNmzfDw8NTU1OZ95+3vm7/GEGQ2PHWz8rK8ng8
gZ8Q2LRpEx24ceNGa/WtQpC4yB53BR01wQiC+FZ2feSsM/UVTM5ZI4hslw3m
NnatAwrqx4PygE/5unggLJmZmRT9999/31r9lStXpqWl0Z4RERFer1c6fUsQ
JHaO1bcK2f0miL7ummAEQWx3rL5VyO43QfQtyVkjiGyXyLkmct+MwGk8VFdX
084m/88a0MrGjRuVlYqlS5fW19dbpb98+f/X3tmFRLGGcbzdNanMCCuDLCpC
CLs45kZRiRcVQgX2IX1BSRd9YHiij6surE5SFglhCBV4JRmk4YUUdRFFN0EX
huiNbtnHRUZhWURFou558MU5c1x136+ZeWf2/7uQdnb3P8/s/3menfd9p53j
mzZtor+iNw4wRF8LPT09iRfuToIh3qWsvh1R737//p2fn/+XjcLCQs73+v1z
M0RfuifYQc36S98OatZ3+p7UrAu+azkuUdysNVFSvA+I5sPg4GAkEjHtl/nB
GH7+/JmXl8cSIDMzk/x99eoV9F3Tt0PFsn79enNigz4/ot4NDQ09evTo4cOH
W0eoqamZOXMm53v9/rn5Xd8OatZf+nZQs6mjbydIvquA2BjByIecnJxjx45p
kQLO0d/fv3///nA4zHIgFAqVlJRoXJSEPieiVe9CbNDnRMI7xt8jUEj8HTvu
/8/N7/oWqFnf6VugZlNK3yJgvquA2OJByYfVq1fv3LlTUQS4Q3d3Nw2NMzIy
poxy6tQpjT/tklS/ra2NUjcajdLYf8+ePaK3D0iq//Lly/LycsrJ3NzczZs3
NzU16dVXR7rqPfcuxfXjrndsht8/N3P0BwYGDh8+XFpa+uXLF6FdoGZ9qh9H
zfpc3/2addp3Og9vbGykk58bN25IhCeNC7UmDfoAZ57v2LFjw4YNomEAD6F6
v3z58ty5c1kC1NbWuqNPCZ+enp6VlbV79252P4KpU6fS+EiX/s2bNyORyJw5
cyhpt23bNmPGDHr24sWLuvSlGR4eHhqFeuy6deuGbHgbG/QnR4t3Kh2b4bvP
zUD9iooK9uybN2+SCqJm/auPmg2Mvvs166jv1dXVoVCIbaeza05B+3Elois2
OfwSm5n5YMGZ5/SygoICuTCAh/T19a1YsYL8Xb58uX27rrmXRP2zZ88WFRV9
/fqVPWxpaaFnd+3apUs/Fovt27fPuu3d69evw+FwTk6OLn07QnNu7O54E8Hz
PcIZm3PexZXXJZPqK65LJtW3cN879Y7NgO8S+ozbt2/TduoG9LenpyepFGqW
Rx81mxT4LqHP8KRmHfWdZMludj8m/tGWyb3ItdgYwesDcZE8r6qqoopWCQN4
xa1bt8jfSCRijfTl5l749QcHB61naWN2djZloEb9MaxcuZJqxL5TXfpCc269
vb2xUc6fP5+fnx+zIToFNFFsjnqna11yIn1d65IT6dtx3ztdHTsO3wX1GR0d
HaRcUFBA31aoWV36qFlO4LuQPsOrmnXUd8bnz5+FfLcfVyLe9iJ3YrMIWB+I
C+Z5ZWUlHYViGMBRampqmpubE7dfuHCB/F2yZIm1RW7uhV/fzp8/fzIyMrZs
2eKQ/t27d9PS0nh+wkVUX3TOzY7o9cOGeCe9LsmpH5NdlzTZOwuJjg3ftegT
3759y83NpZPDt2/fst/mFZ1xRc2Oq4+aHQN816If96JmLRz1nSE62lLB6Zx0
JzZG8PqAaJ4fP34c/2/LZJqamthswIEDB2gczYbVNOqvr69ns1JHjhwZ8xah
biChz6irq6Nnk94+QFT/wYMHNIJbunQpDbVOnDjR39+vV19izs2OUNUb5Z3E
uqR0bsT51iVN9s6OaMeG77p8Hx4e3r59O7WCJ0+exEfvhIKa1Ru/BWoWvqvr
u1+zdkzzXYUgxRa8PiCR5wcPHiwtLZU4CuAOfX19e/funTJKZmYmjaath/Tv
79+/j3mLUMVJ6BPt7e3Tpk1j/29Rr35LSwuV1aJFi+jZoqKipJesC+m7POdm
pndx7nVJaX3OdUmTvWN77B3h4Aitra2U872j6DouBnwfV7+6upq2XL9+nT1E
zfrIuzhqVk2f4Tvf3a/ZuMG+qxCY2ALZByTyvLi4uLy8nP8ogCfcu3evsLCQ
hueW79OnTz99+rR1vYEdiYoT0u/s7MzOzqYB0fv3753QZzx//px2kZWV9fHj
Ry36Wubc2tra6uvrhd5ilHcMznVJUX3RdUl+fU+827p165SJIafUj8sCvifq
UweIRCKzZ8/+Z5SNGzfSy2gXV69e5dkFAzWLmkXNjnllwGrWcN9V8HtsgewD
cnm+YMECl28cAKQZGhrq6uoioylXJ1lUkq44Hv329vZ58+bNnz+/u7vbCX07
VF90IA0NDVr0tcy5SWOCdwz+dUlRfdF1SX59b71TAb5L6zc3Ny/9P+zWJwsX
Lly1ahX/LqSBdyr6qFlF/bgPffe8ZlVw2vfUjC2QfUAiz2mkRi948eKFK7ED
l3Cu4h4/fjxr1qzFixdLDLWS0tra2tnZad9y5swZOhDari6ua87NaZzulhLr
khIIrUvyqPnCOxXgOw9mflPDu3HVULOK+NH3RMysWRU8GdFwYlpsqdAHGEnz
/NmzZ/RR/Pr1y82ogNM4VHF37txJT08n5ZMnT1JqVY1CWaQuPjAwQIM40j96
9GhDQ8P9+/crKirC4fCyZct+/Pihru+XOTdHu6XKuqQoouuSk+AX71SA7zyY
eeYG7xJBzSriU98TMbNmJYjFYrUj0JCBjmjt2rXs4dOnT70O7T9MG22lQh9g
JM3zysrKaDTqZkjABRyquDVr1ox7Eey5c+e06FPYZWVl9P3CZEOhUElJiegv
hfJj5rcA1iV5MNM7FeA7D+yiFNN8h3c8oGb5CZLvZtasBDRwGPf859ChQ16H
9h+mjbYSCV4fYCTN87y8vCtXrrgZEnAOX8y98PDhw4eOjg4tS1qTYFTVO+2d
r9clEzHKOxXgu3+Bd0KgZjkJmO/ABXx07heYPiBEV1dXKBRy9JJg4Ca+mHsx
B6Pm3Jz2LmDrkkZ5pwJ89y/wTgjULCcB8x24gI/O/QLTB4S4dOmS3P3CAABg
XNxZlwSmAd/9C7xLTeA7AO4QjUbr6uq8jgIAAAAAAAAAAsW7d+/S0tI+ffrk
dSAAAAAAAAAAECiuXbtWXFzsdRQAAAAAAAAAEDTKysoaGxu9jgIAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBK8C8bYJyS
    "], {{0, 159.}, {573., 0}}, {
    0, 255},
    ColorFunction->RGBColor,
    ImageResolution->144],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{573., 159.},
  PlotRange->{{0, 573.}, {0, 159.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->861824680]
}, Open  ]]
}, Open  ]],

Cell["", "SectionFooterSpacer"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "See Also"
}], "SeeAlsoSection",
 WholeCellGroupOpener->True,
 CellID->1255426704],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["BellState"]], "paclet:Q3/ref/BellState"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"],
 "\[NonBreakingSpace]",
 StyleBox["\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
  "InlineSeparator"],
 " ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["ProductState"]], "paclet:Q3/ref/ProductState"},
   "RefLink",
   BaseStyle->{"InlineFormula", FontFamily -> "Verdana"}]], "InlineFormula"]
}], "SeeAlso",
 CellID->929782353]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{6},
   "Spacer1"]]],
 "Related Guides"
}], "MoreAboutSection",
 WholeCellGroupOpener->True,
 CellID->38303248],

Cell["", "SectionHeaderSpacer"],

Cell[BoxData[
 TemplateBox[{
   Cell[
    TextData["Quisso"]], "paclet:Q3/guide/Quisso"},
  "RefLink",
  BaseStyle->"MoreAbout"]], "MoreAbout",
 CellID->694818721]
}, Open  ]],

Cell[" ", "FooterCell"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{725, 750},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"GraphState",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "SymbolColor", "LinkTrails" -> 
  GridBox[{{
      RowBox[{
        ButtonBox[
        "Q3 Application", ButtonData -> "paclet:Q3/guide/Q3", 
         BaseStyle -> {"Link", "DockedLinkTrail"}]}]}}, ColumnAlignments -> 
    Left], "HasOptions" -> False, "ExampleCounter" -> 1, "NeedPlatMsgIn" -> 
  None, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2020, 11, 2, 15, 58, 24.546995}", 
    "history" -> {"XX", "", "", ""}, "context" -> "Q3`Quisso`", 
    "keywords" -> {}, "specialkeywords" -> {}, 
    "tutorialcollectionlinks" -> {}, "index" -> True, "label" -> 
    "Quisso Package Symbol", "language" -> "en", "paclet" -> "Quisso Package",
     "status" -> "None", "summary" -> 
    "GraphState[g] gives the graph state (aka cluster state) corresponding to \
the graph g.", "synonyms" -> {}, "tabletags" -> {}, "title" -> "GraphState", 
    "titlemodifier" -> "", "windowtitle" -> "GraphState", "type" -> "Symbol", 
    "uri" -> "Q3/ref/GraphState", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> "", "NewStyles" -> False},
CellContext->"Global`",
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "12.1 for Mac OS X x86 (64-bit) (June 19, 2020)", 
  StyleDefinitions -> "Default.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[4835, 141, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"f3a28388-cd75-4f85-8896-6fc09edab4d8",
   CellTags->"PrimaryExamplesSection",
   CellID->2111328617]},
 "RasterizedOutput"->{
  Cell[12180, 346, 36817, 611, 70, "Output",ExpressionUUID->"38104b21-f348-4216-b732-fab22af81673",
   CellTags->"RasterizedOutput",
   CellID->861824680]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 52098, 1064},
 {"RasterizedOutput", 52297, 1068}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[582, 21, 3588, 90, 70, "AnchorBarGrid",ExpressionUUID->"446a295b-cf8c-4b8d-94a3-b155924e711f",
 CellID->1],
Cell[CellGroupData[{
Cell[4195, 115, 167, 6, 70, "ObjectNameGrid",ExpressionUUID->"7e2cfde8-e716-48a3-9521-b7b5bbba00c1"],
Cell[4365, 123, 433, 13, 70, "Usage",ExpressionUUID->"54d13825-bb34-4b1e-bb41-752f4ddee6f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4835, 141, 268, 10, 70, "PrimaryExamplesSection",ExpressionUUID->"f3a28388-cd75-4f85-8896-6fc09edab4d8",
 CellTags->"PrimaryExamplesSection",
 CellID->2111328617],
Cell[CellGroupData[{
Cell[5128, 155, 194, 6, 70, "ExampleSection",ExpressionUUID->"fb05d82b-4a8e-4acf-846c-e3cfdddc73ec",
 CellID->80282891],
Cell[5325, 163, 127, 4, 70, "Input",ExpressionUUID->"e6735b8e-43d6-4cb1-8bac-a193d1ca3375",
 CellID->1651869782],
Cell[CellGroupData[{
Cell[5477, 171, 1045, 32, 70, "Input",ExpressionUUID->"987c08f5-898f-4af3-bf9b-ffaf14fc1a85",
 CellID->306837658],
Cell[6525, 205, 1058, 25, 70, "Output",ExpressionUUID->"044e52e3-72e1-43e2-b441-f68abd3276fe",
 CellID->1441844419],
Cell[7586, 232, 2193, 53, 70, "Output",ExpressionUUID->"de7720f9-e183-4c36-8356-3ca7dd0fb313",
 CellID->941614717],
Cell[9782, 287, 2395, 57, 70, "Output",ExpressionUUID->"518c0e94-6747-4487-9e5a-ea24ce5ab6ef",
 CellID->911553876],
Cell[12180, 346, 36817, 611, 70, "Output",ExpressionUUID->"38104b21-f348-4216-b732-fab22af81673",
 CellTags->"RasterizedOutput",
 CellID->861824680]
}, Open  ]]
}, Open  ]],
Cell[49024, 961, 31, 0, 70, "SectionFooterSpacer",ExpressionUUID->"aa3fe06a-d878-4a4e-9a6c-ccb8f9e35220"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49092, 966, 150, 7, 70, "SeeAlsoSection",ExpressionUUID->"6bba92ae-b3f8-4068-bc7f-486a4fb45d06",
 CellID->1255426704],
Cell[49245, 975, 554, 18, 70, "SeeAlso",ExpressionUUID->"fc1507e0-26ac-4ec8-abb0-84ba896d2559",
 CellID->929782353]
}, Open  ]],
Cell[CellGroupData[{
Cell[49836, 998, 156, 7, 70, "MoreAboutSection",ExpressionUUID->"f569a51b-727e-40d8-9445-1ad027958e3c",
 CellID->38303248],
Cell[49995, 1007, 31, 0, 70, "SectionHeaderSpacer",ExpressionUUID->"475597d6-8b30-4cbe-9ee5-c8f941e21979"],
Cell[50029, 1009, 163, 6, 70, "MoreAbout",ExpressionUUID->"90b8752c-e812-45f9-b71d-551ab43e62c2",
 CellID->694818721]
}, Open  ]],
Cell[50207, 1018, 23, 0, 70, "FooterCell",ExpressionUUID->"c183ae2f-b09b-483b-8b99-7796ef352269"]
}
]
*)

(* End of internal cache information *)
