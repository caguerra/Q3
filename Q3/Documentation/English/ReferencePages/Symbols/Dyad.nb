(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    701022,      14546]
NotebookOptionsPosition[    658896,      13674]
NotebookOutlinePosition[    666388,      13826]
CellTagsIndexPosition[    666262,      13820]
WindowTitle->Dyad
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["Q3 SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "10d25875-7365-461f-b655-cfa22d0c1253"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "c514894a-d8d5-411d-85b2-37c6a50f022b"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "392467b8-e22c-4c27-ad5e-e596af073dbf"]
         }],ExpressionUUID->"95c62ee3-50cd-47ba-9c9c-3b02d7a00e34"],
         StripOnInput->False],{
        "\"Projector\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/Projector"], "\"Elaborate\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/Elaborate"], "\"Matrix\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/Matrix"], "\"DyadForm\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/DyadForm"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "67afec2b-34aa-4d71-bd3f-ec611f2d3db8"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "79f66c63-7fca-484a-ba9a-bff9f6445e5d"]
         }],ExpressionUUID->"37d96ffe-10c0-4555-8232-9c9e91762faa"],
         StripOnInput->False],{
        "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/QuantumInformationSystems"], "\"Q3\"" :> 
         Documentation`HelpLookup["paclet:Q3/guide/Q3"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "dab02dac-5cd4-46ad-9de7-566152d82d5f"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "8d23a958-3ca2-4aef-874e-f63960db9fa3"]
         }],ExpressionUUID->"bfbe9e02-8cd0-415a-a753-2af804066a72"],
         StripOnInput->False],{
        "\"Quantum States\"" :> 
         Documentation`HelpLookup["paclet:Q3/tutorial/QuantumStates"], 
         "\"Quantum Information Systems with Q3\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumInformationSystems"], 
         "\"Q3: Quick Start\"" :> 
         Documentation`HelpLookup["paclet:Q3/tutorial/Q3QuickStart"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7efbb2b2-c07f-434f-a367-fdf3817258a1"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "8272913e-ce55-4994-a06d-13fbc45bc968"]
         }],ExpressionUUID->"d4294fc4-b6a8-4bb7-a4d5-a1e493260580"],
         StripOnInput->False],{
        "\"Q3/ref/Dyad\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[Notebook[{Cell["Q3/ref/Dyad"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/Q3/ref/Dyad.html"], 
                   StandardForm]], "Input", TextClipboardType -> 
                 "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[False], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> "Q3/ref/Dyad" <> 
               ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "5cfda672-bc3a-4f47-a85f-cd6eaacadc15"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "0d4165a9-bbfd-4cf3-bbca-a514e6124ed5"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"c7c9b44c-0884-4420-b7c6-acdf46e08b89"],

Cell["Q3`", "ContextNameCell",ExpressionUUID->"0704c5ac-90cc-41a0-b31e-a22d37a6332e"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "Dyad", "ObjectName",ExpressionUUID->
      "9806258e-cda0-4ea8-a9a2-8f67c6cfb437"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"9b0f0bc1-bcbb-4f48-8aea-29e6f825521b"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "ae7e994f-b03d-499c-95d3-9052583ef5ad"]
    }],ExpressionUUID->"7c3784df-3661-406e-9a52-ccba24198fe7"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"ab46ad79-4245-467c-8fab-\
9dccc9cb31c1"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["u", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["u", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["v", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "9209538e-14d2-4f96-bcbd-a56293a26d99"],
     "\[LineSeparator]returns the dyadic product of two vectors ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["u", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["u", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e616e7c6-0a72-40aa-927c-99b264448ea7"],
     " and ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["v", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["v", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "6cbe0a81-914e-434d-8df3-adca6b44abf8"],
     "; in other words, it is equivalent to ",
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["KroneckerProduct"]], "paclet:ref/KroneckerProduct"},
        "RefLink",
        BaseStyle->{"InlineFormula"}], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["u", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["u", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["Conjugate"]], "paclet:ref/Conjugate"},
          "RefLink",
          BaseStyle->{"InlineFormula"}], "[", 
         RowBox[{"{", 
          RowBox[{
           SubscriptBox[
            StyleBox["v", "TI"], 
            StyleBox["1", "TR"]], ",", 
           SubscriptBox[
            StyleBox["v", "TI"], 
            StyleBox["2", "TR"]], ",", 
           StyleBox["\[Ellipsis]", "TR"]}], "}"}], "]"}]}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "caeb75e8-f75b-43af-bdd1-8e9f010116b8"],
     "."
    }],ExpressionUUID->"65c7d9e2-9d8a-4f03-94b6-a0384ae75743"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       RowBox[{
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"], "[", 
         RowBox[{
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              StyleBox["a", "TI"], 
              StyleBox["1", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["u", "TI"], 
              StyleBox["1", "TR"]]}], ",", 
            RowBox[{
             SubscriptBox[
              StyleBox["a", "TI"], 
              StyleBox["2", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["u", "TI"], 
              StyleBox["2", "TR"]]}], ",", 
            StyleBox["\[Ellipsis]", "TR"]}], "\[RightAssociation]"}], ",", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["1", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["v", "TI"], 
              StyleBox["1", "TR"]]}], ",", 
            RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["2", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["v", "TI"], 
              StyleBox["2", "TR"]]}], ",", 
            StyleBox["\[Ellipsis]", "TR"]}]}]}]}], "|>"}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "78566203-b729-4975-b538-e976e834f54f"],
     "\[LineSeparator]represents the dyadic product of two vectors ",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["Ket"]], "paclet:ref/Ket"},
          "RefLink",
          BaseStyle->{"InlineFormula"}], "[", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            SubscriptBox[
             StyleBox["a", "TI"], 
             StyleBox["1", "TR"]], "\[Rule]", 
            SubscriptBox[
             StyleBox["u", "TI"], 
             StyleBox["1", "TR"]]}], ",", 
           RowBox[{
            SubscriptBox[
             StyleBox["a", "TI"], 
             StyleBox["2", "TR"]], "\[Rule]", 
            SubscriptBox[
             StyleBox["u", "TI"], 
             StyleBox["2", "TR"]]}], ",", 
           StyleBox["\[Ellipsis]", "TR"]}]}]}], "|>"}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "79528b28-ef2e-4f26-8efb-7f24ae0e153f"],
     " and ",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        RowBox[{
         TemplateBox[{
           Cell[
            TextData["Ket"]], "paclet:ref/Ket"},
          "RefLink",
          BaseStyle->{"InlineFormula"}], "[", 
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{
            SubscriptBox[
             StyleBox["b", "TI"], 
             StyleBox["1", "TR"]], "\[Rule]", 
            SubscriptBox[
             StyleBox["v", "TI"], 
             StyleBox["1", "TR"]]}], ",", 
           RowBox[{
            SubscriptBox[
             StyleBox["b", "TI"], 
             StyleBox["2", "TR"]], "\[Rule]", 
            SubscriptBox[
             StyleBox["v", "TI"], 
             StyleBox["2", "TR"]]}], ",", 
           StyleBox["\[Ellipsis]", "TR"]}]}]}], "|>"}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "4d004b59-e796-4828-9836-d548cb04121b"],
     "; that is, ",
     Cell[BoxData[
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            TemplateBox[{
              Cell[
               TextData["Ket"]], "paclet:ref/Ket"},
             "RefLink",
             BaseStyle->{"InlineFormula"}], "[", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
               SubscriptBox[
                StyleBox["a", "TI"], 
                StyleBox["1", "TR"]], "\[Rule]", 
               SubscriptBox[
                StyleBox["u", "TI"], 
                StyleBox["1", "TR"]]}], ",", 
              RowBox[{
               SubscriptBox[
                StyleBox["a", "TI"], 
                StyleBox["2", "TR"]], "\[Rule]", 
               SubscriptBox[
                StyleBox["u", "TI"], 
                StyleBox["2", "TR"]]}], ",", 
              StyleBox["\[Ellipsis]", "TR"]}]}]}], "|>"}], "]"}], "**", 
         RowBox[{
          TemplateBox[{
            Cell[
             TextData["Bra"]], "paclet:ref/Bra"},
           "RefLink",
           BaseStyle->{"InlineFormula"}], "[", 
          RowBox[{"\[LeftAssociation]", 
           RowBox[{
            RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["1", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["v", "TI"], 
              StyleBox["1", "TR"]]}], ",", 
            RowBox[{
             SubscriptBox[
              StyleBox["b", "TI"], 
              StyleBox["2", "TR"]], "\[Rule]", 
             SubscriptBox[
              StyleBox["v", "TI"], 
              StyleBox["2", "TR"]]}], ",", 
            StyleBox["\[Ellipsis]", "TR"]}]}]}]}], "|>"}], "]"}]], 
      "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "3e3987fe-4374-4edb-aff0-2aaa458239e4"],
     " acting on system ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["a", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["a", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "73ae0d0a-35df-4afd-ad79-ca1e6ffe41a2"],
     " from the right and on system ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["b", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["b", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "7a1bbf08-dfbf-428b-937e-991545d5d8e0"],
     " from the left."
    }],ExpressionUUID->"1076e54c-290d-4203-b10f-ffb413233b22"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        SubscriptBox[
         StyleBox["expr", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["expr", "TI"], 
         StyleBox["2", "TR"]], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["s", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["s", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "d3db2676-7e3d-4060-a5cc-744538fd6069"],
     "\[LineSeparator]returns the dyadic product of two vectors expressed by ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["expr", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "178ae219-4f98-4d05-a7bf-8134f434b64d"],
     " and ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["expr", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a257b0f5-3365-4234-a891-8577be18e4f7"],
     ", respectively, that acts on system ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["s", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["s", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "c6947f19-72eb-415d-92df-58025576d6e3"],
     " from both the left and right."
    }],ExpressionUUID->"e8c45e29-35c1-489b-abf6-223dcda9e82e"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        SubscriptBox[
         StyleBox["expr", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["expr", "TI"], 
         StyleBox["2", "TR"]], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["a", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["a", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "58846544-4fa4-4f97-a476-b393d4980995"],
     "\[LineSeparator]returns the dyadic product of two vectors expressed by ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["expr", "TI"], 
       StyleBox["1", "TR"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "707304ae-ba5f-4a94-b924-ce08182ea9c3"],
     " and ",
     Cell[BoxData[
      SubscriptBox[
       StyleBox["expre", "TI"], 
       StyleBox["2", "TR"]]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "b2e3ffc1-7d4d-4e33-b435-4f885ba26684"],
     ", respectively, that acts on system ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["a", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["a", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "d4b46bca-d21d-4ed2-b6fc-c25488dd2c4b"],
     " from the right and system ",
     Cell[BoxData[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox[
         StyleBox["b", "TI"], 
         StyleBox["1", "TR"]], ",", 
        SubscriptBox[
         StyleBox["b", "TI"], 
         StyleBox["2", "TR"]], ",", 
        StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "04431462-defd-4ba5-98d4-741f675241f3"],
     " from the left."
    }],ExpressionUUID->"f4c91c1c-75c7-4d10-9f45-d9cbfefb682f"]}
  }]], "Usage",ExpressionUUID->"52fbda19-a586-4bc7-9907-b9812a75ca26"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"b1cb6beb-4be5-4e69-9b4c-3c5448973488"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"12f95474-939a-4f3c-b414-01fcfa5e21df"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"0485cb8d-082f-4198-853a-d047f01e124e"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"5c16c7cf-9cf2-48f3-853a-e4dd97a47e0d"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->483471475,ExpressionUUID->"655c5105-1de6-4f24-96a7-25ed5c74a93d"],

Cell[TextData[{
 "The multiplication of form ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:Q3/ref/Ket", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"<|", 
     StyleBox["\[Ellipsis]", "TR"], "|>"}], "**", 
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["Bra"]], "paclet:Q3/ref/Bra", "Q3 Package Symbol"},
      "PackageLink",
      BaseStyle->"InlineFormula"], "[", 
     RowBox[{"<|", "**", "|>"}], "]"}]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e7747827-c332-4d5c-b700-afa064407fa1"],
 " is automatically converted to ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"<|", "\[Ellipsis]", "|>"}], ",", 
    RowBox[{"<|", "\[Ellipsis]", "|>"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c8a1807e-7bbd-470b-9428-02dd2dea219d"],
 ". The systems on which the resulting dyadic product operates depend on the \
species specified in the expression ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:Q3/ref/Ket", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"<|", 
     StyleBox["\[Ellipsis]", "TR"], "|>"}], "**", 
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["Bra"]], "paclet:Q3/ref/Bra", "Q3 Package Symbol"},
      "PackageLink",
      BaseStyle->"InlineFormula"], "[", 
     RowBox[{"<|", "**", "|>"}], "]"}]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "25662b4f-7acb-4241-a8a1-2a19e102e0b3"],
 "."
}], "Notes",
 CellID->1025582183,ExpressionUUID->"642d9c18-4b19-435b-92db-c716b0015382"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "c4cee875-a29b-49bc-ad9e-66a7fe8b0590"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"3d09bb56-4d14-42e4-b694-bab867dbc84e"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(17)", "ExampleCount",ExpressionUUID->
  "87f18e27-7ca1-46e5-b121-c1d8cb500b5b"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1774443724,ExpressionUUID->"ef5cfdea-4344-49c2-bb79-9ee026ba5c3a"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Q3`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1927565408,ExpressionUUID->"afc63199-f5c9-4063-a957-afb56722ceb5"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "40dddc8f-caa5-482c-9955-a7e332f08ab9"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"88de0cc7-9a33-464e-bdc0-b8fb50ca8bf8"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount",ExpressionUUID->
  "2a255404-8228-4fe2-97d0-727a06ac92d2"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->970263379,ExpressionUUID->"8b0826fa-42ed-46ad-943e-4cd0f2ce4a24"],

Cell[TextData[{
 "The simplest usage of ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "320527e0-f6f5-429f-b5f3-2866f56ea3b8"],
 " is to take the dyadic product of two vectors."
}], "ExampleText",
 CellID->711353346,ExpressionUUID->"df027f6c-d7bd-40f4-98c2-5a1aa1ad8459"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", 
    RowBox[{"-", "I"}], ",", "3"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{"{", 
   RowBox[{"2", ",", "5", ",", "I"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Dyad", "[", 
    RowBox[{"v1", ",", "v2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->683624071,ExpressionUUID->"941f13c5-b4c0-4a6d-98c4-9789a3834307"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "\[ImaginaryI]"}], ",", "3"}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1401126832,ExpressionUUID->"8f0b6374-0eb4-41d6-8cef-acf8b4656185"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "5", ",", "\[ImaginaryI]"}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1580476069,ExpressionUUID->"83422560-3902-4fee-a7eb-540a8b8bb279"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "5", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{"-", "5"}], " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}]},
     {"6", "15", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->836061940,ExpressionUUID->"ab3757f8-03a9-426e-a9ee-681692c70446"]
}, Open  ]],

Cell[TextData[{
 "This simple task can be achieved by means of the built-in function ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["KroneckerProduct"]], "paclet:ref/KroneckerProduct"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6f1809da-7bca-4090-9905-c39d678aa3fd"],
 " as well."
}], "ExampleText",
 CellID->132858231,ExpressionUUID->"c8d3a1bd-46cc-4371-b463-130c9c7a9e8b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"new", "=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{"v1", ",", 
     RowBox[{"Conjugate", "[", "v2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"new", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "-", "new"}], "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1940702456,ExpressionUUID->"10eb068c-d0c7-479e-bc46-8ff0c6cb4dbc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "5", 
      RowBox[{"-", "\[ImaginaryI]"}]},
     {
      RowBox[{
       RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
      RowBox[{
       RowBox[{"-", "5"}], " ", "\[ImaginaryI]"}], 
      RowBox[{"-", "1"}]},
     {"6", "15", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1930126730,ExpressionUUID->"5fbda443-7046-487e-9dbf-739210908fac"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0"},
     {"0", "0", "0"},
     {"0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1899463175,ExpressionUUID->"447b308a-95cb-42c1-9173-75c4666e76c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "58150bd0-4362-4093-a37b-049047457e13"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697,ExpressionUUID->"fb5f7c67-a610-472a-bbba-16e398397544"],

Cell[TextData[{
 Cell[BoxData["Dyad"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "3bf3ed5e-f543-4343-b347-feaa29bb553c"],
 " can handle state vectors expressed in terms of ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:Q3/ref/Ket", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "64bd9d75-d01b-4061-8aa9-78140fe8dcfc"],
 " for ",
 StyleBox["unlabeled",
  FontSlant->"Italic"],
 " qubits."
}], "ExampleText",
 CellID->217886903,ExpressionUUID->"ebcfacdb-f93c-4163-b037-aef713baf074"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{
   RowBox[{"Ket", "[", "0", "]"}], "+", 
   RowBox[{"2", " ", "I", " ", 
    RowBox[{"Ket", "[", "1", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{
   RowBox[{"4", 
    RowBox[{"Ket", "[", "0", "]"}]}], "+", 
   RowBox[{"3", " ", "I", " ", 
    RowBox[{"Ket", "[", "1", "]"}]}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1701922151,ExpressionUUID->"abb9c8b7-e3cf-4e8f-ad7c-c4c14af2f1e2"],

Cell[BoxData[
 RowBox[{
  TemplateBox[{"0"},
   "Ket"], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   TemplateBox[{"1"},
    "Ket"]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1670077482,ExpressionUUID->"a2ab1ec1-c56b-4fe4-a974-4fda0e1bdfef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"4", " ", 
   TemplateBox[{"0"},
    "Ket"]}], "+", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", 
   TemplateBox[{"1"},
    "Ket"]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1380973684,ExpressionUUID->"85e74e37-c7a6-43b6-a7e1-a48a2fa3ed72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v1", ",", "v2"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->552373578,ExpressionUUID->"c42e932e-7802-40a5-b29e-54ca76ace508"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "3"}], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{"\"X\"", "\"+\""},
     "Superscript"],
    Q3`Pauli[{4}]]}], "+", 
  RowBox[{"8", " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{"\"X\"", "\"-\""},
     "Superscript"],
    Q3`Pauli[{5}]]}], "+", 
  RowBox[{"4", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"0"}, "Ket"], 
      TemplateBox[{"0"}, "Bra"]},
     "RowDefault"],
    Q3`Pauli[{10}]]}], "+", 
  RowBox[{"6", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"1"}, "Ket"], 
      TemplateBox[{"1"}, "Bra"]},
     "RowDefault"],
    Q3`Pauli[{11}]]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1210291622,ExpressionUUID->"fc943841-c33b-42e1-b794-08676e0b5d53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Matrix", "[", "\[Rho]", "]"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->587658316,ExpressionUUID->"2a0061c0-75c8-4c44-81a6-6363b94ec2e6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4", 
      RowBox[{
       RowBox[{"-", "3"}], " ", "\[ImaginaryI]"}]},
     {
      RowBox[{"8", " ", "\[ImaginaryI]"}], "6"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {1}, {2}}}, {
      4, Complex[0, -3], Complex[0, 8], 6}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1967166679,ExpressionUUID->"1378b2b6-21d4-497b-a508-f9c2dc22d810"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Elaborate", "[", "\[Rho]", "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->2042304589,ExpressionUUID->"ec2606c7-af22-4d39-a8c6-5a0c03aa2143"],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", 
   InterpretationBox["\<\"I\"\>",
    Q3`Pauli[{0}]]}], "+", 
  FractionBox[
   RowBox[{"5", " ", "\[ImaginaryI]", " ", 
    InterpretationBox["\<\"X\"\>",
     Q3`Pauli[{1}]]}], "2"], "+", 
  FractionBox[
   RowBox[{"11", " ", 
    InterpretationBox["\<\"Y\"\>",
     Q3`Pauli[{2}]]}], "2"], "-", 
  InterpretationBox["\<\"Z\"\>",
   Q3`Pauli[{3}]]}]], "Output",
 CellLabel->"Out[4]=",
 CellID->214966291,ExpressionUUID->"ce50b9d0-0d89-4810-9f28-dd83b2535893"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Rho]3", "=", 
  RowBox[{"Elaborate", "@", 
   RowBox[{"ExpressionFor", "@", 
    RowBox[{"KroneckerProduct", "[", 
     RowBox[{
      RowBox[{"Matrix", "@", "v1"}], ",", 
      RowBox[{"Conjugate", "@", 
       RowBox[{"Matrix", "@", "v2"}]}]}], "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->366221925,ExpressionUUID->"6fe26931-3730-4781-864e-42b3e091baac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"5", " ", 
   InterpretationBox["\<\"I\"\>",
    Q3`Pauli[{0}]]}], "+", 
  FractionBox[
   RowBox[{"5", " ", "\[ImaginaryI]", " ", 
    InterpretationBox["\<\"X\"\>",
     Q3`Pauli[{1}]]}], "2"], "+", 
  FractionBox[
   RowBox[{"11", " ", 
    InterpretationBox["\<\"Y\"\>",
     Q3`Pauli[{2}]]}], "2"], "-", 
  InterpretationBox["\<\"Z\"\>",
   Q3`Pauli[{3}]]}]], "Output",
 CellLabel->"Out[5]=",
 CellID->2132044218,ExpressionUUID->"42af87ed-654a-43ae-a438-1f2a2006c401"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "-", "\[Rho]3"}], "//", "Elaborate"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->2113193738,ExpressionUUID->"76cc2f33-91ec-4c39-9b1b-0e8b3caab568"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[6]=",
 CellID->138402464,ExpressionUUID->"8a482bb2-b49a-4e5a-84fe-1752ee613abf"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1bf51a4f-a802-464e-b2a1-38e6fd510786"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->2126852329,ExpressionUUID->"c8792721-5011-4415-a1af-e7a05b124215"],

Cell["Now, consider a system of (labelled) qubits.", "ExampleText",
 CellID->1975086875,ExpressionUUID->"74f9f26f-f88d-48eb-8efd-9370c1a1358e"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1321988934,ExpressionUUID->"4ed49eb2-3f4f-45e7-b836-420ba304f42f"],

Cell["Construct a dyadic tensor operator from a quantum state.", "ExampleText",
 CellID->1945755543,ExpressionUUID->"5bf7f68a-cb80-42ea-8dba-81ede048abdd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ket", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "-", 
   RowBox[{"I", " ", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1858232418,ExpressionUUID->"68b0a3e7-ef7e-443e-8c68-122ba1d4c774"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 1|>]]}], 
  "+", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
     0|>]]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1181978303,ExpressionUUID->"d0e47779-f402-4ad4-9f07-777826201848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"ket", ",", "ket", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->40233771,ExpressionUUID->"1ce125ea-e29b-43b6-a2ff-60551d76cf5f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AD//AzmLVQA=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->1373279182,ExpressionUUID->"d7bb26b9-a7c9-4182-8ae9-fe5affc40d4a"]
}, Open  ]],

Cell["Observe the data structure of the dyadic tensor operator.", \
"ExampleText",
 CellID->173157041,ExpressionUUID->"bbb595ca-a2b2-4b2f-ab7a-679836477d5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputForm", "[", "op", "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->273380634,ExpressionUUID->"96ca909b-3b60-4154-953b-c7b7cb5526ed"],

Cell["\<\
Dyad[<|S[1, $] -> 0, S[2, $] -> 1|>, <|S[1, $] -> 0, S[2, $] -> 1|>] - 
 I*Dyad[<|S[1, $] -> 0, S[2, $] -> 1|>, <|S[1, $] -> 1, S[2, $] -> 0|>] + 
 I*Dyad[<|S[1, $] -> 1, S[2, $] -> 0|>, <|S[1, $] -> 0, S[2, $] -> 1|>] + 
 Dyad[<|S[1, $] -> 1, S[2, $] -> 0|>, <|S[1, $] -> 1, S[2, $] -> 0|>]\
\>", "Output",
 CellLabel->"Out[4]//InputForm=",
 CellID->1143271578,ExpressionUUID->"f8226ef4-e8a9-4da6-887f-9eff93523f57"]
}, Open  ]],

Cell[TextData[{
 "You can construct a dyadic tensor operator that acts on different system \
from the left and right. For example, the following dyadic tensor acts on \
system ",
 StyleBox["S[{1,2,3},$]", "Input"],
 " from the right but on system ",
 StyleBox["S[{1,2},$]", "Input"],
 " from the left."
}], "ExampleText",
 CellID->131285690,ExpressionUUID->"307ba477-8e98-4529-a117-8c0544431510"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"ket", ",", "ket", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->929583880,ExpressionUUID->"df499ccd-18f7-4215-9e61-51209ec4dd50"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnX1sFNUaxpd+QNNivUUtBCVICkIgpFWIVtDqNYLSqsQ2tUEUKSlgtddW
23hpIqJeP2Jj0BsR5EMTq9Ug0YQGBE0TMVXAP7ANRROKYNS2cq2lRAQq0J37
3p4wmTvbHWd3zszOvOf5JZDuzNnznvc855kz73Z3O2lZdfGKpFAoVJtG/xWX
//PvTzxRXl/yN3pQ+lht5crHllcseKxu+crlT+QvS6aD0+hfQ0oo9L+fNQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/c8UVVyR6CKpTXV392muvOe+nq6tr
5syZfX19zrviAY+1zSOLQAOHugSPtc0ji0ADh7pEotY2PJVw4CmXsL+24YKE
8+qrr+bm5jrvZ/369dOmTXPeDxt4rG0eWQQaONQleKxtHlkEGjjUJVCdKQs8
5RKozgLEsWPHQqEQ/e+wn3nz5q1atUrKkHjAY23zyCLQwKEuwWNt88gi0MCh
LoHqTFngKZdAdRYscnNz165d66SH/v7+1NTU/fv3yxoSA3isbR5ZBB041A14
rG0eWQQdONQNUJ2pDDzlBqjOgsWaNWsKCgqc9NDU1DR+/PhwOCxrSAxIyNo+
e/bs77//LrFDONQPwKFuAIcCWcChboDqTGXgKTeQWJ11dHQ8+eSTpNGMGTOW
Ll367rvvOh6dXWgbbWxsrKyslPLhRJskJN/29vbk5OTe3t64eygtLaWJsmig
mo5agq7w8+fPD4VC3d3dsjqEQ01wdaim0nwKFHGoppiyXB2q2pVW83d1Bk+5
DXY9N5BVnX3yySejR48O/T/l5eXnzp2TMcyovP322/PmzcvMzBQRr7vuOlfD
6SQqX+Lqq69+66234nvuwMAADfvTTz+N1kA1HQUJ2VkoX8q0q6tLVodwqBGu
DlVwPjU1HKqaslwdqtqVVuDP6gye4uEp1XQUSKnOjhw5QoUzDfvuu+9ua2vr
7u5et25dSkoKHamvr5c00uEpLCw0zps3qiUwX6KmpobixvfcHTt2XHrppdGW
lmo66iRkZyEd8/Pzf/vtN1kdwqE6XB2qKTmfmgIO1RRTlqtDVbvS6vizOoOn
GHhKU0xHHSnVWVVVFQ345ptvNk4vVbt0MCsr648//nA6yuicPHnyP0M89dRT
nqmWwHyJPXv2pKWlxReloqJi0aJF0c6qpqMOj/euw6E6XB2qKTmfmgIO1RRT
lqtDVbvS6vizOoOnGHhKU0xHHefV2enTpzMyMmjAH330kfH4+fPnx40bR8c3
b97sdJQ2WLt2rTeqJTzfCxcuXH755abodhgcHMzOzv7www+HPZvwvASe6WiE
972fasomPF+XHGpCnfnUuDvUBHtlE76isIdKx5/VmQ48FVBPmWCvoxHn1dm3
335LQ01PT4/8veSjjz5Kp6qrqx0N0R6eqeaHfMvLyx944IFYn9Xa2jpq1KhT
p04Ne9YPeWncd5azZ8/m5eXlGrjppptkdQ6HCvyQrxsONaHUfMbt0KNHj7a0
tNhvnxCHmmCvrB9WFPZQuXjm0PjiwlMB9ZQJ9joacV6dffbZZzTUyZMna0Pl
8+rVq++///5Dhw7Rw4aGBjpVUlIia7QWeKaaH/Ldvn17VlYWVfExPau2traw
sDDaWT/kpQVtZ4mVwcHB3bt379q1q2iIV155ZfTo0bI6h0MFfsjXDYeaUGo+
43boxo0b586da799Qhxqgr2yflhR2EPl4plD44sLTwXUUybY62jEeXUm3ocp
XmDcuXNnaIiFCxfSw8bGRvo5Pz/f9JT+/v62trYTJ044GLgZO6pJieuHfM+c
OZORkRHrK045OTmbNm2KdtYPeWke6mjE+3dl/GOI/fv3e3Dvp5qyfsjXDYea
UGo+vb/389KhJtgr64cVhT006A6NKS48FVBPmWCvoxHn1dmGDRtoqLfddps2
9P2TIou77rqLHm7dupV+zsvL0xsfOXJEfE2xgCpTauM4if9hrZrEuD7Jt7i4
uKqqyn77jo6OpKSk48ePR2vgk7w809EI7+pMNWV9kq90h5pQaj5RnekwUNYP
K0rDHhpwh8YUF54KqKdMsNfRiPPqbPv27TSemTNnahd/A/jQQw+J3wC+/vrr
dKqoqEi0HBgYmDJlyogRIxYvXkyWfO6556655hpqsG/fPueJWKgmN65P8qX6
/aqrrrLfnqJbXwN9kpdnOhqJaWcJh8OD0bHZiZf3fqop65N8pTvUhFLzGbdD
aZOdM2eOzx1qgr2yflhRGvbQgDs0prjwVEA9ZYK9jkacV2cHDhygkQx7Vnz7
5YoVK8TDvXv3GpPShr4X5YMPPohxyMNjoZrcuD7J94cffqDOjx07ZrM9lfar
Vq2yaOCTvDzT0UhMO4vxRZJIbCri5b2fasr6JF/pDjWh1HzydqgJ9sr6YUVp
2EOlxvXeoTHFhacC6ikT7HU04rw66+3tpbKRhtfe3m46df3119PxF198UTwU
vx+M6fee9rFQTW5cn+RL6o8bNy4cDttsT7X/rbfeatHAJ3l5pqORmHaWnp6e
zujYfOnPy3s/1ZT1Sb7SHWpCqfmM26HPPPNMXl6ezx1qgr2yflhRGvZQqXjv
0JjiwlMB9ZQJ9joakfLXqO+8887I4R08eJAOJiUl6XX0iRMnLrvsMkq5pqbm
p59+Grar/v7+pqamsrKyDRs22ByYwEK1v4xLZTJtxLNmzZo+fTqFjpTDhKx8
v/nmm8rKStJ6ypQpCxYssPkXHwQ0Tr14twPlmJyc3NfXZ9FGNR11eH/uTFNP
Wa4ONeJkPrUYdZQ1n947lNnnztgoy9Whql1pdYL7uTN4yoTfPGVEBR11pFRn
u3btogHTJL/33nviSE9Pz9SpU+ngvffea2z51VdfTZw4UTQuKSn58ssvjWdf
euklUa4Sy5cvtzkwgfWnBS3i0sVh5MiRY8aMue+++2gCqU1qaiqtT4tYUvJ9
88036SDJSscXLlyYnp5OzV544QU7yf7555+ZmZlUs9tprDNhwoR33nnH7by0
4Oiow746U01Zrg41Evd8arHrKGU+E+JQZtWZxkVZrg5V7UqrE9zqTIOn/O0p
IyroqCOlOguHw0uWLKG4lDsNoLCwkDSihzTthw8fNjUmBUmL2bNni1miWpKO
iFO0FVJJK/6agJ3ZKy4uzr4I7aGiQ/3IHXfcYSfu008/XVBQoH8N5scff0xn
S0tLLeJKybezs3PRokW9vb2i2ffff0/1+JVXXvmXWRO7d+++5JJLBgYG7DTW
qaqqMi0qN/LSgqOjjmfV2cmTJ3uGWDpEc3NzWlpaz0Ucdg6Hys3Xhw6VMp9a
7DpKmc+EODTWe79EOVQ1Zbk6VLUrrY4PqzN4ioenVNNRR0p1JhJZvXo1VYhi
bCkpKbfccktXV5fFU1pbW6+99tqQ4Q2cgl9//dXm7In3f0bD+I2X1nEvXLig
nx0cHCTFZ8yYYR1aYr46dJbWnnEw0Xj44Ydt6mukpaUlPT39zJkzFm1U01Hg
WXVWVFRkkSnNmJPO4VCX8tVJuENlzafAvo6apPn03qEHDhzYsmWL/faJcqiC
yrJ0qKbelVbgmUPtx4WneHhKQR0FsqozAeXy3Xff7du37/Tp03b6pDQpi/nz
5xsPxjR78TFsXAEVvBkZGTb/drmUfAVbt24l6R955BE7QcePH9/U1GQnopHz
589nZWU1NzfbCaGUjt6/s9EN4NBIuDo0VmTpKHE+4VApBF1Zrg5V7UqbKIfC
U67G9ZWnYiXoOsqtzqzZs2dPXV2dsUYWv+Z78MEHjc2kX5FsxhWsW7eOTm3c
uNGbuDt37iSlJk2aRBaoqanp7+//y26//vrr1NRUOy0jWbx48bJly+J4ohF+
OuLeT8BPWedx4VDpcQVwaBzwU9Z5XDhUelxBIBwKT7kRF56SHlfgkqecu6Cs
rIwGlpOTU1tb+8Ybb9D8UJ+kfmtrq7GZ9NmzGZdob29PS0sTfxvRm7ik49y5
cydMmEAtCwoK7HydS319/e233x7fkLZt20ZjcJgdPx1x7yfgp6zzuHCo9Lga
HBov/JR1HhcOlR5XC45D4Sk34sJT0uNqbnrKuQvC4fD69eunTp2alJQk3sZJ
P1ORbmomffZsxu3o6MjOzqYF+eOPP3oZV7B3714KPWbMmF9++cW62+nTp1MB
Ht+QTp06NWrUqMhlExP8dMS9n4CfslLiCuBQWXHh0Ljhp6yUuAI4VFbcADkU
nnIprgCekhXXVU9JdB9p0dbWpn8tjAn33mttEZeqWkpw7NixkV/G4mpcI1u2
bKHEGxsbLdp0dnZSm59//jnuwRQVFVGNH/fTjbDREfd+Jtgo6zyuETjUeVw4
VApslHUe1wgc6jxusBwKT7kR1wg85Tyu257yzH0efBLWREtLS2Zm5sSJE92w
QDSam5upmjYeqa+vp8StPx3Z0NAwa9YsJ3E3bdo0efJkJz3YJEA64t4vJgKk
rBPgUOnAod4ECpCyToBDpRM4h8JTcoGnpOOBp9x2AVXf/x7i2Wefpdm78cYb
xcPPP//c1bjvv//+yJEjKeLjjz/+/PPP/+siX3zxhXtBz507R2JR3JUrVzY2
Nu7YsaOqqiopKSknJ4cKcIsnzpkzh8bmJPTx48cp0KFDh5x0YkEQdcS9nx2C
qGzcwKHSgUPhUInAodIJokPhKYnAU9LxxlNuu2Dbtm2h4aioqHA17g033DBs
3DVr1rgal0r4JUuWjB07VoQbMWLEPffcc/ToUYuniAVsemUjDshKtE4cdhKN
IOqIez87BFFZJ8ChcoFD4VC5wKFyCaJD4Sm5wFNy8cZTPPZHH9Ld3X3w4EHr
lyYEmzdvzsnJcR7x5Zdfnj17tvN+2MBjbfPIwofAoQmHx9rmkYUPgUMTDtfq
TFngqYSD6ixAlJWV1dXVOe/n8OHDqampfX19zrviAY+1zSOLQAOHugSPtc0j
i0ADh7oEqjNlgadcAtUZADzWNo8sAIiEx9rmkQUAkaA6A0AuqM4A4LG2eWQB
QCQ81jaPLACIBNUZAHJBdQYAj7XNIwsAIuGxtnlkAUAkqM4AkAvWNgAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAHzOfwGPc/xT
    "], {{0, 20.}, {581., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{581., 20.},
  PlotRange->{{0, 581.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->1696457565,ExpressionUUID->"59c7bdd2-3070-452b-876d-16f896dccc50"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "d38adf56-500e-4141-97ac-d0520d9233f2"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1119508851,ExpressionUUID->"a8e13562-ebba-4573-9a31-e07397fbc220"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1458297143,ExpressionUUID->"fcfa702f-11c8-4ae9-bef4-d37df14fe933"],

Cell[TextData[{
 "The multiplication of form ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Ket"]], "paclet:Q3/ref/Ket", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"<|", 
     StyleBox["\[Ellipsis]", "TR"], "|>"}], "**", 
    RowBox[{
     TemplateBox[{
       Cell[
        TextData["Bra"]], "paclet:Q3/ref/Bra", "Q3 Package Symbol"},
      "PackageLink",
      BaseStyle->"InlineFormula"], "[", 
     RowBox[{"<|", "**", "|>"}], "]"}]}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c1a5acce-5288-48da-a79d-6b9f65a74d9b"],
 " is automatically converted to ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"<|", "\[Ellipsis]", "|>"}], ",", 
    RowBox[{"<|", "\[Ellipsis]", "|>"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "01f76964-5594-40b1-9186-c981ffa58de5"],
 ". For example, consider again the following state of a two-qubit system."
}], "ExampleText",
 CellID->2007253971,ExpressionUUID->"1cda63e6-7e1e-4aeb-ab97-99abc79d15df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ket", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "-", 
   RowBox[{"I", " ", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->2111775373,ExpressionUUID->"40b29b9d-7ce1-439d-a821-18541968a46f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 1|>]]}], 
  "+", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
     0|>]]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1420174807,ExpressionUUID->"afdee30e-8f83-4020-a0ce-0c98655048c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"ket", "**", 
   RowBox[{"Dagger", "[", "ket", "]"}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1859960351,ExpressionUUID->"699ca0e2-ea61-44a3-97be-e6265ef5729b"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXtMFNcex3F5SITSi1UkRGNvsNVojChGkfrobYptwaYRQom1VTFoNXJF
hfRK4rO3aVPT2N7USlDbRFvaqNFEo9U2JLWh9fGHQkRNlKhRwXhFxPgAWpC5
v3LCZu6wO8zsnDMze+b7SdqwO2fP7/we3zm/4+7C3xeX5C71RURElMbS/3IL
//WPNWsKy/P+Rg/yV5Yuf3/lkqI3VpYteX/JmozFkfTkGPrvLv3w188KAAAA
AAAAAAAAAAAAAAAAAAAAAAAAoJehQ4c6vQS3UFJS8sUXX1ifp7Gxcfz48S0t
LdankgM5akwOL7gApQhCjhqTwwsuQCmCcKrGUNt+UNuCMF5jqEY/n3/++YQJ
E6zPs3379jFjxlifRxrkqDE5vOAClCIIOWpMDi+4AKUIAt2746C2BYHuPQSu
XbsWERFB/7c4T1ZW1tq1a7ksSQ7kqDE5vOAClCIIOWpMDi+4AKUIAt2746C2
BYHuPTToLLl161YrM7S2tkZHR58+fZrXkiRAjhqTwwteQCkikKPG5PCCF1CK
CNC9uwHUtgjQvYfGxo0bZ86caWWGqqqqlJSU7u5uXkuSAEdqrL29/eHDhxwn
hFLUQCkigFLkA0oRAbp3N4DaFgHH7r2+vv6DDz6gHI0bN27RokXffvut5dUZ
hbaVPXv2LF++nMuXI4xQV1cXGRnZ3Nwc8gz5+fm0YJ0Bnoonw5E73uzZsyMi
IpqamnhNCKWosUEpikMV62AePaIUxUuZxZ4iAjd376ht42AX6Auv7v3HH3+M
j4+P+H8KCwv//PNPHssMyjfffJOVlZWQkMAsTpo0Sag5Nc8///zXX38d2ms7
OjooXD/99FOwAR6Mp+LQnZb8JU8bGxt5TQilaBCqFKf8ciqPDC8oxYOZxZ7C
HXd276htU2AXCAiX7r2hoYEOVrTsN998s7a2tqmpadu2bVFRUfRMeXk5p5UG
Jjs7Wx03O+8Mq1atIn9De+2RI0eeffbZYCn2ZjwVh+60lMeMjIx79+7xmhBK
0SBOKYpDfjmYR4b0SlE8mVnsKdxxZ/eO2jYFdoGAcOnei4uLacEzZsxQh5dO
Q/RkYmLi48ePra4yOA8ePPhvD+vWrbP5znDixInY2NjQvCsqKpo3b16wq96M
pyLLZwWhFA3ilKI45JeDeWRIrxTFk5nFnsIdd3bvqG1TYBcIiPXu/cmTJ3Fx
cbTgAwcOqJ/v7OxMTk6m53fu3Gl1lQbYunWrzXeGrq6uIUOGaLw2wtOnT5OS
kvbt2xfwqmfjqcjek3g2s4KUosE2v9yQR7mVosE7mcWewh13du9+UNv9gl0g
GNa794sXL9JSBw0a1Pd9jRUrVtClkpISS0s0hiN3hsLCwnfffdfsq2pqagYO
HPjo0aOAV70cT9vutO3t7WlpaRNUTJ8+ndfkUEpfRChFg21+uSGPISvl6tWr
1dXVxsc7ohQNnsos9hS+2KaU0OyitvsFu0AwrHfvP//8My111KhRSs/xav36
9e+8886FCxfo4ZYtW+hSXl4er9Xq4Mid4dChQ4mJiXTaMvWq0tLS7OzsYFe9
HE/bunc6zh8/fvzYsWM5PXz22Wfx8fG8JodS+iJCKRps88sNeQxZKZWVlS+9
9JLx8Y4oRYOnMos9hS+2KSU0u6jtfsEuEAzr3Tv7nA/7B5mjR4+ybw289dZb
9HDPnj30c0ZGhuYlra2ttbW19+/ft7BwLUayxt1uW1tbXFyc2RN6amrqjh07
gl31cjztf5fznz2cPn3ahp7Ey5kVoRQNtvnlhjza35PYqRQNnsos9pRwV4op
u6jtfsEuEAzr3XtFRQUt9ZVXXlF6fn8O82LOnDn0cO/evfRzWlqaf3BDQwP7
tWMMOrnQGMtO/IV+1sTZzc3NLS4uNj6+vr7e5/PduXMn2AAvx1Pu7t3LmVUE
KEWDbX65IY/o3v1IllkFe0qYK8WUXdS2PtgFdLDevR86dIjWM378eKX3HYSF
CxeydxC+/PJLupSTk8NGdnR0vPDCCwMGDJg/fz5J48MPP3zxxRdpwKlTp6w7
opM1oXbpnDV8+HDj48m6/j3By/E0daft7u5+GhyDk9jZk3g5s4oApWiwzS83
5DFkpdCmk5mZ6XKlaPBUZhXsKWGuFFN2Udv6YBfQwXr3fvbsWVpJwKvst/cs
XbqUPTx58qTaKaXne7s//PCDySUHRidrQu1ev36dJr927ZrB8XQEW7t2rc4A
L8fT1J1WfZjti8GM2NmTeDmzigClaLDNLzfkUW6laPBUZhXsKVzt2q8UU3ZR
2/pgF9DBevfe3NxMxwpaXl1dnebSlClT6PmPP/6YPWTvL5h638Q4OlkTapey
kJycTGd2g+PpjPbyyy/rDPByPE3daW/fvn0lOAb/qcTOnsTLmVUEKEWDbX65
IY8hK2XTpk1paWkuV4oGT2VWwZ7CFfuVYsoualsf7AI6cPlrTa+//nrf5Z0/
f56e9Pl8/nPW/fv3n3vuOXJ51apVN2/eDDhVa2trVVVVQUFBRUWFwYUxdLLW
r106RtHGlJ6ePnbsWDLdNx060Hj/IcsIZCsyMrKlpUVnjGfjKffn3hUPZ1YR
oxQ1VvxSTMaTVx7tV4pkn3uXL7MK9pQwV4opu6htfbAL6MClez927BgtmIL8
3XffsWfoDDt69Gh6cu7cueqRv//++8iRI9ngvLy83377TX31k08+YccZYsmS
JQYXxtD/toKOXRJpTEzM4MGD3377bQogjYmOjj537pwRo3/88UdCQgKdrUwt
dcSIEbt379YZ4Nl4St+9ezazgpSiJmS/FPPx5JJHR5QiWfeuSJdZ7CnhrhRT
dlHb/YJdIBhcuvfu7u4FCxaQXfKdFpCdnU05oocU9suXL2sGUwYpF5MnT2ZR
orMGPcMu0dZARx722zKNRC83NzepF9pT2IT+Z1577TUjdjds2DBz5kz/r/E5
ePAgXc3PzzcSk+PHjz/zzDMdHR1GBvuhw5omuRo8G0/buvcHDx7c7mFRD4cP
H46Njb3di8XJoZS+CFIKF78U8/HkkkdHlGK2J3FKKZ7NLPaUMFWKcbuobSOD
/WAXCAaX7p05sn79ejpBsLVFRUXNmjWrsbFR5yU1NTUTJ06MUH1AiHH37l2D
0WOfLwqG+jf26Nvt6uryX2V/lnfcuHH9WieWLVtmMM5qqqurBw0a1NbWpjPG
m/G0rXvPycnR8ZQiZmVyKKUvgpTCyy+G8XgqnPJov1LOnj27a9cu4+OdUopn
M4s9JaBd9yvFuF3UtimwCwSDV/fOIF8uXbp06tSpJ0+eGJmT3CQvZs+erX7S
VPRCI6BdBh2I4uLijPxtL3I2JSWlqqrKrPXOzs7ExMTDhw8bMeGdeCpOfHJG
BFCKBhuUYhZe8eSSRwaUwoWwziz2FH27jLBQCmq7r1HsAjp2GYJq23o1njhx
oqysTH2GYm8TvPfee+ph3O8MBu0ytm3bRpcqKyv7nfbMmTPR0dGtra0hLGn+
/PmLFy8O4YVqJIungp6kF8kyC6Xo22VAKSEgWWahFH27jLBQCmpbA2pb3y5D
UG1br8aCggJaWGpqamlp6VdffUXxoTmjoqJqamrUw7hHz6Bdoq6uLjY2lv2N
hn6nLS8vf/XVV0Nb0v79+2kNZv8AhAbJ4qmgJ+lFssxCKVBKQKAUDVCKNEpB
bWtAbTtY29arsbu7e/v27aNHj/b5fOxjQvTz0aNHNcO4R8+g3fr6+qSkpBEj
Rty4ccPItGPHjqWDUmhLevTo0cCBA/umzxSSxVNBT9KLZJmFUqCUgEApGqAU
aZSC2taA2nawtjmqgHJRW1vb3Nwc8Kq4z9Tp2KVTDzk4bNiwvl8WDsiVK1do
kbdu3Qp5MTk5OXQWC/nlaiSIJwM9iQYJMgul6NuFUrggQWahFH274aUU1LYa
1La+XdG1bZsKbPhGjIbq6uqEhISRI0caD92WLVvS09OtGN2xY8eoUaOszGCQ
sIgnAz2JKcIis1CKDlCKPYbCIrNQig5hpxTUthrUtg421LboaqTT2X962Lx5
M0Vv2rRp7OEvv/wi1O73338fExNDFlevXv3RRx/9u5dff/1V51WZmZk0xord
O3fu+Hy+CxcuWJlEh/CKJwM9iRHCK7NQSjCgFChFDZQSjHBUCmpbDWo7GPbU
tuhq3L9/f0QgioqKhNqdOnVqQLsbN24M9hJWSPX19RZNU0lTvixOEowwiqcf
9CRGCKPMQik6QClQih8oRYdwVApq2w9qWwd7aluO/YILO3fuTE1NtT7Pp59+
OnnyZOvzSIMcNSaHF1yAUgQhR43J4QUXoBRByNq9hxGobUGgew+BgoKCsrIy
6/Ncvnw5Ojq6paXF+lRyIEeNyeEFF6AUQchRY3J4wQUoRRDo3h0HtS0IdO/A
PchRY3J4AdyMHDUmhxfAzaB7B7KC7h24BzlqTA4vgJuRo8bk8AK4GXTvQFbQ
vQP3IEeNyeEFcDNy1JgcXgA3g+4dyApqDAAAAAAAAAAAAAAAAAAAAAAAAAAA
AD//AzmLVQA=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->221913736,ExpressionUUID->"57e04c86-c9d1-4efe-b5a9-4bfd8a5be719"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "//", "InputForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->798866213,ExpressionUUID->"1500a6a2-c781-48cd-8148-a6c02cefdc5f"],

Cell["\<\
Dyad[<|S[1, $] -> 0, S[2, $] -> 1|>, <|S[1, $] -> 0, S[2, $] -> 1|>] - 
 I*Dyad[<|S[1, $] -> 0, S[2, $] -> 1|>, <|S[1, $] -> 1, S[2, $] -> 0|>] + 
 I*Dyad[<|S[1, $] -> 1, S[2, $] -> 0|>, <|S[1, $] -> 0, S[2, $] -> 1|>] + 
 Dyad[<|S[1, $] -> 1, S[2, $] -> 0|>, <|S[1, $] -> 1, S[2, $] -> 0|>]\
\>", "Output",
 CellLabel->"Out[4]//InputForm=",
 CellID->208383122,ExpressionUUID->"7bcff49c-6152-4840-b2cc-6b495b46e29b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "7ebb457e-15a7-4a54-be17-aa5cb15874c8"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->609585336,ExpressionUUID->"70cd8873-4336-49bc-8484-2906064746c7"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1601217490,ExpressionUUID->"178699b7-1b0d-4ebd-9a35-c1727b1347cd"],

Cell[TextData[{
 "There is an important difference between ",
 Cell[BoxData[
  RowBox[{"Dyad", "[", 
   RowBox[{
    StyleBox["a", "TI"], ",", 
    StyleBox["b", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["q", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["q", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "51b30cc6-bc44-4f5e-8661-1118f362fad5"],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    TemplateBox[{
      Cell[
       TextData["Ket"]], "paclet:ref/Ket"},
     "RefLink",
     BaseStyle->{"InlineFormula"}], "[", 
    StyleBox["a", "TI"], "]"}], "**", 
   RowBox[{
    TemplateBox[{
      Cell[
       TextData["Bra"]], "paclet:ref/Bra"},
     "RefLink",
     BaseStyle->{"InlineFormula"}], "[", 
    StyleBox["b", "TI"], "]"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f698fdd8-d2aa-40e3-b369-0289ccb73230"],
 ": While ",
 Cell[BoxData[
  RowBox[{"Dyad", "[", 
   RowBox[{
    StyleBox["a", "TI"], ",", 
    StyleBox["b", "TI"], ",", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["q", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["q", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "296d18ff-54a4-489f-9db2-ae1052f841d6"],
 " operates only on ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox[
     StyleBox["q", "TI"], 
     StyleBox["1", "TR"]], ",", 
    SubscriptBox[
     StyleBox["q", "TI"], 
     StyleBox["2", "TR"]], ",", 
    StyleBox["\[Ellipsis]", "TR"]}], "}"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "e8327518-d009-4025-b800-3f428e80bfac"],
 ", ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    TemplateBox[{
      Cell[
       TextData["Ket"]], "paclet:ref/Ket"},
     "RefLink",
     BaseStyle->{"InlineFormula"}], "[", 
    StyleBox["a", "TI"], "]"}], "**", 
   RowBox[{
    TemplateBox[{
      Cell[
       TextData["Bra"]], "paclet:ref/Bra"},
     "RefLink",
     BaseStyle->{"InlineFormula"}], "[", 
    StyleBox["b", "TI"], "]"}]}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "99345a7f-73fa-4ef6-9cce-8924a637bb30"],
 " acts on any systems."
}], "ExampleText",
 CellID->1792993793,ExpressionUUID->"52256074-b402-4552-adf1-2c014f23deea"],

Cell["\<\
For example, consider again the following state of a two-qubit system.\
\>", "ExampleText",
 CellID->550720435,ExpressionUUID->"e276eb7e-f250-4840-a7c8-bc1eac243e27"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ket", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "-", 
   RowBox[{"I", " ", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1055833258,ExpressionUUID->"8780a9ab-91d9-4804-85bd-3fe5a5140cbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "\[ImaginaryI]"}], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 1|>]]}], 
  "+", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
     0|>]]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1339138721,ExpressionUUID->"12ef0b9a-24fb-4531-b8c4-fb434d42dd58"]
}, Open  ]],

Cell[TextData[{
 "This is a dyadic tensor operator. It operates only on the specified two \
qubits, ",
 StyleBox["S[1,$]", "Input"],
 " and ",
 StyleBox["S[2,$]", "Input"],
 "."
}], "ExampleText",
 CellID->188970509,ExpressionUUID->"217d5c5b-a499-448d-9915-1fc0786d0716"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"ket", ",", "ket", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1612816608,ExpressionUUID->"e266a191-0373-4cb0-a47e-5292a8ab32aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AD//AzmLVQA=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->1672549760,ExpressionUUID->"5b009915-62f7-46ca-8a81-8cd5f2960c66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dyad", "[", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "[", 
  RowBox[{"ket", ",", "ket"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->259061264,ExpressionUUID->"afe0157f-d01e-42c8-8f16-1508a3f0e8e5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AD//AzmLVQA=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->2130360737,ExpressionUUID->"58838388-f4cd-4f50-aedf-a74f8a6025c5"]
}, Open  ]],

Cell[TextData[{
 "Here is a similar dyadic tensor operator, but acting on the three qubits, \
",
 StyleBox["S[1,$]", "Input"],
 ", ",
 StyleBox["S[2,$]", "Input"],
 ", and ",
 StyleBox["S[3,$]", "Input"],
 ". "
}], "ExampleText",
 CellID->99245921,ExpressionUUID->"ec96e0dc-4da3-4bfd-b404-a74e4157f0d8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"ket", ",", "ket", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->536040056,ExpressionUUID->"f4f076ea-b227-4707-9233-8b5c228ab4d0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAEAH/A2dlo7U=
    "], {{0, 20.}, {661., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{661., 20.},
  PlotRange->{{0, 661.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->2125543975,ExpressionUUID->"f039646d-29b6-408b-8aae-f1467a82230b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Dyad", "[", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}], "[", 
  RowBox[{"ket", ",", "ket"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->2100320132,ExpressionUUID->"875cc6e7-8aec-4c4c-81e9-8a1954a16163"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
AAAAAAAAEAH/A2dlo7U=
    "], {{0, 20.}, {661., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{661., 20.},
  PlotRange->{{0, 661.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->627119980,ExpressionUUID->"d7847dc4-fdb1-42fb-b38e-d3c3cb5e2d8e"]
}, Open  ]],

Cell["To see the difference, consider another state vector.", "ExampleText",
 CellID->290895411,ExpressionUUID->"43170d46-fd58-4f32-8ef1-fa6f4525b39c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"in", "=", 
  RowBox[{"Ket", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "[", "2", "]"}], "\[Rule]", "1"}], ",", 
    RowBox[{
     RowBox[{"S", "[", "3", "]"}], "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->782459243,ExpressionUUID->"96a25780-08c9-43a7-b2f0-816dc9ec9282"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
      SubscriptBox["1", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
          $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
      SubscriptBox["1", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
          $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
     "RowWithSeparators"]},
   "Ket"],
  Ket[<|$CellContext`S[2, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
    1|>]]], "Output",
 CellLabel->"Out[7]=",
 CellID->1409172965,ExpressionUUID->"27ed56e0-0334-42fa-9779-4fa221a7e7e1"]
}, Open  ]],

Cell[TextData[{
 "The first operator does not care about the third qubit ",
 StyleBox["S[3,$]", "Input"],
 "."
}], "ExampleText",
 CellID->1344322737,ExpressionUUID->"fa006379-9bb1-4ed4-aca8-9fe9d66548a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "**", "in"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[8]:=",
 CellID->1044640710,ExpressionUUID->"220c597c-b170-43c7-8023-0efa674cf425"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
     1, $CellContext`S[3, Q3`$] -> 1|>]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      0, $CellContext`S[3, Q3`$] -> 1|>]]}]}]], "Output",
 CellLabel->"Out[8]=",
 CellID->701415585,ExpressionUUID->"bbc0a84b-3bac-424b-9626-e015c886b6f9"]
}, Open  ]],

Cell[TextData[{
 "On the other hand, the second operator ",
 Cell[BoxData["new"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "87bb9542-1ea9-4270-9e88-8e0da39ea2ba"],
 " projects the state of ",
 Cell[BoxData[
  RowBox[{"S", "[", 
   RowBox[{"3", ",", "$"}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b62fb684-f522-46df-a47c-e0678b7cfa1b"],
 " into the one-dimenional subspace spanned by ",
 Cell[BoxData[
  FormBox[
   TemplateBox[{"0"},
    "Ket"], TraditionalForm]],ExpressionUUID->
  "f4d34085-bf4b-41ae-a7ee-860a29abe948"],
 "."
}], "ExampleText",
 CellID->1996260642,ExpressionUUID->"8685ff6f-cd68-40ef-a297-e8aee44fcebe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "**", "in"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[9]:=",
 CellID->810190654,ExpressionUUID->"f3b5924f-257b-4bfd-b5b3-4a8652b45aad"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[9]=",
 CellID->67141302,ExpressionUUID->"d429b251-3065-40c7-8662-7169e17e406c"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "20bb21fa-43cb-49b6-9530-d1e9c089e77a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"637153ea-31ba-43ff-99f6-7b8546eac038"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(5)", "ExampleCount",ExpressionUUID->
  "79ead429-5dbf-449e-8d03-4a5869aa0ff4"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->933922142,ExpressionUUID->"d53aec1a-8cd4-4339-9786-9b9f0b314238"],

Cell[TextData[{
 "Consider a system of ",
 StyleBox["labeled",
  FontSlant->"Italic"],
 " qubits."
}], "ExampleText",
 CellID->1509904446,ExpressionUUID->"d8aff9d4-0f41-4fe3-ba33-2fca2bdb01e6"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1450531086,ExpressionUUID->"067b2169-413d-4c2b-85ba-36119245ec4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"Ket", "[", 
   RowBox[{
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"I", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->841601658,ExpressionUUID->"25da8194-493d-49e0-bad5-f144355b3d23"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
      SubscriptBox["0", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
          $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
      SubscriptBox["1", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
          $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
     "RowWithSeparators"]},
   "Ket"],
  Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
    1|>]]], "Output",
 CellLabel->"Out[2]=",
 CellID->283018031,ExpressionUUID->"c914d94f-a83d-49c3-b759-78e2657a15ea"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]], "-", 
  
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
      0|>]]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->7768912,ExpressionUUID->"167e34f9-87d5-4045-bb92-ab878eb913f5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v1", ",", "v2", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dagger", "[", "v1", "]"}], "**", "op1"}], "-", 
   RowBox[{"Dagger", "@", "v2"}]}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op1", "**", "v2"}], "//", "Simplify"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->2046474957,ExpressionUUID->"e7edb8f7-3790-464c-8a3a-8778fec6dcc2"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     InterpretationBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["0", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["S", 
               TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
              $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
          SubscriptBox["1", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["S", 
               TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
              $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]}, "Ket"], 
      Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]], 
     InterpretationBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["0", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["S", 
               TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
              $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
          SubscriptBox["1", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["S", 
               TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
              $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]}, "Bra"], 
      Bra[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]]},
    "RowDefault"],
   Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
     1|>, <|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]], 
  "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox[
       TemplateBox[{
         TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
           SubscriptBox["0", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["S", 
                TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
               $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
           SubscriptBox["1", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["S", 
                TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
               $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
          "RowWithSeparators"]}, "Ket"], 
       Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]], 
      InterpretationBox[
       TemplateBox[{
         TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
           SubscriptBox["1", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["S", 
                TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
               $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
           SubscriptBox["0", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["S", 
                TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
               $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
          "RowWithSeparators"]}, "Bra"], 
       Bra[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 0|>]]},
     "RowDefault"],
    Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
      1|>, <|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
      0|>]]}]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1683494573,ExpressionUUID->"36e7c823-6cff-44bf-89aa-6ef5709daa5e"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[3]=",
 CellID->1396239186,ExpressionUUID->"951dd131-7350-41bf-a674-c86ab09dd7d5"],

Cell[BoxData[
 RowBox[{"2", " ", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["S", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
     1|>]]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1038188333,ExpressionUUID->"4f851eaf-daae-4a8a-8f65-809fdd07c357"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op1", "//", "Elaborate"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->207478467,ExpressionUUID->"2188eccd-8dd0-4130-a951-6f2d689ca222"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 1]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[3, 1]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 1], 
     $CellContext`S[3, 1]]]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 1]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[3, 2]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 1], 
     $CellContext`S[3, 2]]]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 2]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[3, 1]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 2], 
     $CellContext`S[3, 1]]]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", "\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 2]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[3, 2]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 2], 
     $CellContext`S[3, 2]]]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 3]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[3, 3]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 3], 
     $CellContext`S[3, 3]]]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[1, 3]]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[3, 3]]}]}]], "Output",
 CellLabel->"Out[4]=",
 CellID->307917139,ExpressionUUID->"f27a1253-9d85-4838-85b5-725694ff4862"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Matrix", "[", "op1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"new", "=", 
   RowBox[{"Dyad", "[", 
    RowBox[{
     RowBox[{"Matrix", "[", 
      RowBox[{"v1", ",", 
       RowBox[{"S", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}]}], "]"}], ",", " ", 
     RowBox[{"Matrix", "[", 
      RowBox[{"v2", ",", 
       RowBox[{"S", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"new", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->13067883,ExpressionUUID->"950f3eae-3db2-4f7d-909b-12769b9fb635"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "1", "\[ImaginaryI]", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 0, 2, 2, 2}, {{2}, {3}}}, {1, Complex[0, 1]}}]]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->1067060809,ExpressionUUID->"f5bc02d0-b293-4ad4-aabb-76fe1b370694"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "1", "\[ImaginaryI]", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 0, 2, 2, 2}, {{2}, {3}}}, {1, Complex[0, 1]}}]]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->455080766,ExpressionUUID->"3e744f28-fa47-41c8-b1fe-962cd7c271e9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op2", "=", 
  RowBox[{
   RowBox[{"S", "[", 
    RowBox[{"1", ",", "6"}], "]"}], "**", "op1"}]}], "\[IndentingNewLine]", 
 RowBox[{"op3", "=", 
  RowBox[{"op1", "**", 
   RowBox[{"S", "[", 
    RowBox[{"1", ",", "6"}], "]"}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1985854257,ExpressionUUID->"77e19433-de6e-4f6f-897b-65d5e31b4eda"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3QlsVFXfx/FSKBBAeIugBEQew+rCJoSwCPgai9oqaGstu5aAiPICAfSl
RtyXSLDyylJWF5AYJJBQQZCQiKkCmmArBaRlMcqqSEtkq0DnvufpjZN5bju3
dzr3zj1zzveTPKYzc+fes/x/9/Q8nZbbJkxPfzoxISFhVmPxn/Ts//3vmTOz
czL+SzzInDZryuRpkyY+NG32pMmTZvafUP/fR4j/tWyQkPDvrw0AAAAAAAAA
AAAAAAAA8Fvr1q39boIspk+fvmDBgujPc+LEie7du587dy76U6lBhxrToY8O
kSOPyFljcrbKF1S+R3SoMR366BA58ohbNUatBr3//vs9e/aM/jxLlizp1q1b
9OdRhg41pkMfHSJHHpGzxuRslS+ofI/oUGM69NEhcuQRdg2uO3bsWEJCgvhv
lOdJSUmZM2eOK01Sgw41pkMfHSJHHpGzxuRslS+ofI/oUGM69NEhcuQRdg1e
EDvc3NzcaM5QXl6elJS0Z88et5qkAB1qTIc+OkeOvCBnjcnZKr9Q+V7QocZ0
6KNz5MgL7Bq88MorrwwZMiSaM6xdu7Zt27aBQMCtJilAwhq7cuXKX3/95eIJ
Jeyjj8iRF+SsMTlb5Rcq3wsS1hgriKfIkRditmsoLi5+4YUXxAzeeeedTz31
1Jo1a1y5rhMimKtXr54yZYorvxrjRFFRUf369c+ePVvnM2RmZooG2xyg1Xia
JLwfDhs2LCEh4eTJk26dkByFikGODJ/q2cd5lDBHhrNW+XXnUbLytbqTmCSs
/NivIAY5igQrSHWx2TV8+eWXzZo1S/hP2dnZV69edeXq4Xz44YcpKSnNmzc3
r3j33Xd7erlQ//rXv1atWlW391ZUVIjh+uqrr8IdoOF4GlLe88VoiHE4ceKE
WyckRxae5sivfvk1jyYJc2TU1iq/ZkrVytfwTmJIWfkxXkHIUURYQWoUg13D
4cOHxXZPdOqRRx4pLCwU2+pFixY1aNBAPJOTk+PK1cNJTU0NHdVY1uqMGTNE
f+v23s2bN7do0SJcAeg5noaU93wxy/379//zzz/dOiE5svAuR4ZP/fJxHk0S
5siorVV+VaCSla/nncSQsvJjuYIY5ChCrCA1isGuYerUqaI7gwcPDh18sUcT
TyYnJ1+8eNGVBtTo/Pnzv1d56aWXYlyrO3fubNy4cd16N3HixFGjRoV7Vc/x
NKS857uOHFl4lyPDp375OI8mOXNk3yq/KlDJytfzTmLIWvnuIkcWrCCu83rX
cOnSpaZNm4rubNiwIfT5a9eutWnTRjy/YsUKVxpgLzc3N8a1ev369VatWll6
7URlZeVNN930+eef1/iqtuNp6H3P13bePcqRRcz6JcM8ypkjh63y5c7jy3VZ
QVwnZ+W7ixxZsIK4zutdw4EDB0RHmjRpUv2nPM8995x4afr06a40wJ4vGcnO
zh47dmyk7yooKGjUqNGFCxdqfFXn8ZTknn/lypVevXr1DHHPPfe4dXJyVJ0X
ObKIWb9kmEdJcmTBdzvVsYK4S5LK92UFsSBHtWIFCcfrXcP27dtFRzp16mRU
bfrmzp07evTo/fv3i4fz5s0TL2VkZLjSAHu+1OqmTZuSk5PFHjCid82aNSs1
NTXcqzqPpyT3/MrKym3btm3dujWtyvz585s1a+bWyclRdV7kyCJm/ZJhHiXJ
kQXf7VTHCuIuSSrflxXEghzVihUkHK93Deanrcyt9JYtW8zfGRkxYoR4uHr1
avF1//79LW8pLy8vLCwsKytzpWEmJ3Pq+nUvX77ctGnTHTt2RPSujh07Ll++
PNyrOo+nJPf8oP+psmfPnhjc83Wedy9yZBGzfskwj7LlyOTidztUPitIjWSr
/FiuIBbkqFasIOF4vWvIy8sTHbnvvvuMqr8WZfbx4YcfFg/XrVsnvu7Vq1fw
4MOHD5t/iMwk9lPiGFeaZz+n3l03PT196tSpzo8vLi5OTEw8c+ZMuAN0Hk+d
7/k6z7vhQY4sYtYvGeZRthyZXPluh8pnBbEhW+VLu2tQbN4NVhApcxTuPJs2
bRKt7d69u/HPz1OefPJJ8+cpCxcuFC+lpaWZR1ZUVHTu3LlevXpjxoxZtmzZ
66+/3qVLF3HA7t27o2+ezZx6el2x+7vlllucHy+uPmjQIJsDdB5Pne/5Os+7
4UGOLGLWLxnmUbYcmaL/bofKN1hBbMlW+XLuGtSbd4MVRMochTvP3r17RTtr
fNX8W1VPP/20+XDXrl2hXTaqflv8s88+c6V5NnPq6XV/+eUXcfJjx445PF5s
DOfMmWNzgM7jqfM9X+d5NzzIkUXM+iXDPMqWI1P03+1Q+QYriC3ZKl/OXYN6
826wgkR93VBe7xrOnj0rNjui8UVFRZaX+vXrJ55/++23zYfmT1si+imSczZz
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
    "], {{0, 41.}, {521., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{521., 41.},
  PlotRange->{{0, 521.}, {0, 41.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->155764384,ExpressionUUID->"499c141d-fb9b-4344-b664-088ec0d50d65"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
q1atAoGAw+Pnz59/77332hwgaz5VWEd/3fNVmLEgyXeblPlULfnsIGb+6qMw
cbsuFdZRtT4ykPyItEm+CuP666lBePDBB6tPxf79+8WLycnJoWfJ0tLSG2+8
UbTJzJkzf/vtt4inKisrW7duXWZmZk5OTq3Ks1mpGsf98ccfp02bJvq0Y8eO
Dz30kMPfBmwQpYb+g4AT+/btq1u37vnz522OkTWfbo0b9Xz6654fJPm6JN9M
ynyqlnx2EDPf9ZFZLNcVZAdxA8mPSKfkuzWuxOTH+Z6/bds2MUtiQT/99FPj
ldOnT3fu3Fm8+Nhjj5mP/O6779q1a2ccPHLkyG+//db87jvvvGM8egtTpkyp
VXn2P4FiM+7y5cvFi2IpxesjRoxo1KiROOytt95yMujff//dtGlT8fxYq1Lb
tm37ySef2Bwgaz5dGTeW+fTdPZ/k16pUZZNvJmU+VUs+O0gYf/WRWdTXFWQH
cQnJr06z5LsyrpTkX7hw4XSVp6rk5eU1bNjw9D+iO6eTqgKBwIQJE8QFinnu
1atXWlqayIP4UixxcXFx2MEiLWLde/fubayIeJQTrxhviU1KPNYZv6nYyUql
p6ff9A+xuxknDL3ywAMPOBn3yJEjo0ePPnfunHHYsWPHxDN+mzZtnMzJ9u3b
b7jhhvLycicHh2RlZYXdEMLImk9Xxo1lPn13zyf5Tg4OUTb50udTkeSzg+jR
R65cV5AdxCUkvzrNki99PqNO/rBhw5Ks/fHHH9Gd1klVIvzz589v3ry5MVa9
evUGDx586tQpm4/k5+f37NkzyfTNewZRp8OVMr73z4r5t5Y5GTdEvCvW/fr1
6zUW8Mwzz2RkZNR4WJidO3eKp8grV67YHCNlPt0dN8T5fPrunh8k+bWhbPKl
z6ciyWcH0aOP3L0udpAYkfzqNEu+9Pn0Y/INIv+HDh3as2fP5cuXnZxTtIaY
saFDh5pfrNU9KjoRxzWsX79etO2zzz5b40nExbZu3XrdunW1Hb2ioiI1NTUv
L8/JEFLm05VxDc7nM0jySb5piMSZz6CqyXcXfRQmDn1UW+wgXiD5YTROvivj
GhIk+fZ27do1Z84c83Pipk2bxIyNHz/efJjrK+Vk3K1bt6alpd12221imWbO
nFlWVlbjab///vuUlBQnR1Y3duzYSZMmRfFBM83mM0jyfbJSJN9mXJ2S7y76
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
D7JhvVU=
    "], {{0, 41.}, {521., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{521., 41.},
  PlotRange->{{0, 521.}, {0, 41.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->149436195,ExpressionUUID->"252c1fef-4857-44ae-b721-48d24c0fbbf4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"expr", "=", 
  RowBox[{"op1", "**", 
   RowBox[{"S", "[", 
    RowBox[{"2", ",", "6"}], "]"}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->1487912646,ExpressionUUID->"b8cd3308-b6af-4f12-a35f-99e2d3fb7480"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       InterpretationBox[
        TemplateBox[{
          InterpretationBox[
           TemplateBox[{
             TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
               SubscriptBox["0", 
                TemplateBox[{",", "\",\"", 
                  InterpretationBox[
                   SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
                   $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
               SubscriptBox["1", 
                TemplateBox[{",", "\",\"", 
                  InterpretationBox[
                   SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
                   $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
              "RowWithSeparators"]}, "Ket"], 
           
           Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
             1|>]], 
          InterpretationBox[
           TemplateBox[{
             TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
               SubscriptBox["0", 
                TemplateBox[{",", "\",\"", 
                  InterpretationBox[
                   SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
                   $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
               SubscriptBox["1", 
                TemplateBox[{",", "\",\"", 
                  InterpretationBox[
                   SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
                   $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
              "RowWithSeparators"]}, "Bra"], 
           
           Bra[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
             1|>]]}, "RowDefault"], 
        Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
          1|>, <|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
          1|>]], 
       InterpretationBox[
        TemplateBox[{"S", 
          TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
          TemplateBox[{",", "\",\"", "\"H\""}, "RowWithSeparators"]}, 
         "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
        $CellContext`S[2, 6]]}, "RowWithSeparators"]},
    "RowDefault"],
   Q3`Multiply[
    Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
      1|>, <|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>], 
    $CellContext`S[2, 6]]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{
           InterpretationBox[
            TemplateBox[{
              TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
                SubscriptBox["0", 
                 TemplateBox[{",", "\",\"", 
                   InterpretationBox[
                    SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
                    $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
                SubscriptBox["1", 
                 TemplateBox[{",", "\",\"", 
                   InterpretationBox[
                    SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
                    $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
               "RowWithSeparators"]}, "Ket"], 
            
            Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
              1|>]], 
           InterpretationBox[
            TemplateBox[{
              TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
                SubscriptBox["1", 
                 TemplateBox[{",", "\",\"", 
                   InterpretationBox[
                    SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
                    $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
                SubscriptBox["0", 
                 TemplateBox[{",", "\",\"", 
                   InterpretationBox[
                    SubscriptBox["S", 
                    TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
                    $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
               "RowWithSeparators"]}, "Bra"], 
            
            Bra[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
              0|>]]}, "RowDefault"], 
         Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
           1|>, <|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
           0|>]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"H\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 6]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 
       1|>, <|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 0|>], 
     $CellContext`S[2, 6]]]}]}]], "Output",
 CellLabel->"Out[7]=",
 CellID->400884947,ExpressionUUID->"26ae0749-7fca-4f7c-aab3-fef080546fef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op2", "**", "v2"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[8]:=",
 CellID->449388957,ExpressionUUID->"6d10e783-c79b-46c9-aea0-3e204aa32ef5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SqrtBox["2"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]]}], 
  "+", 
  RowBox[{
   SqrtBox["2"], " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 
      1|>]]}]}]], "Output",
 CellLabel->"Out[8]=",
 CellID->1574779555,ExpressionUUID->"ac0dd5b1-3758-4821-8243-31728bd9df9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dagger", "[", "v1", "]"}], "**", "op2"}], "//", 
  "Simplify"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[9]:=",
 CellID->812754911,ExpressionUUID->"b1c58316-00fe-4ba6-8767-f3aef2d8301d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Bra"],
    Bra[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[3, Q3`$] -> 1|>]], "+", 
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["1", 
          TemplateBox[{",", "\",\"", 
            InterpretationBox[
             SubscriptBox["S", 
              TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
             $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
         SubscriptBox["0", 
          TemplateBox[{",", "\",\"", 
            InterpretationBox[
             SubscriptBox["S", 
              TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
             $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Bra"],
     Bra[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 0|>]]}]}], 
  SqrtBox["2"]]], "Output",
 CellLabel->"Out[9]=",
 CellID->108480559,ExpressionUUID->"22622d43-f8ab-4d28-9834-4e43857a4280"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b3465fa9-3962-41fb-9f09-11bf7611534c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1883465645,ExpressionUUID->"72ea7927-7150-453b-a498-442e8092c089"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v3", "=", 
  RowBox[{"DickeState", "[", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", "1"}], 
   "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->2140438801,ExpressionUUID->"abcde123-c8b7-4a16-bb8d-b6378325f053"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      0, $CellContext`S[3, Q3`$] -> 1|>]], "+", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]], "+", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      0, $CellContext`S[3, Q3`$] -> 0|>]]}], 
  SqrtBox["3"]]], "Output",
 CellLabel->"Out[1]=",
 CellID->1786376866,ExpressionUUID->"6c718933-6fa0-4d9b-aeef-08935135cdc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v3", ",", "v3", ",", 
    RowBox[{"S", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op2", "=", 
  RowBox[{
   RowBox[{"op1", "**", 
    RowBox[{"S", "[", 
     RowBox[{"1", ",", "6"}], "]"}]}], "//", "Garner"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1158246954,ExpressionUUID->"48d59f98-da0f-4f2d-a9e1-abbc4cb41b97"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
N7TTMgPUo19//bW2trajo0PLOal91J0HHnhA/qCu1ciwrohueGNiYrT/zVld
VOru3buXlvQLL7ww4ElosGPGjCkrK9Nb/cqVK/Hx8ZWVlVpKoI/h1dXeR8FA
qjgIcsM45AZbrPrIcP0gNxSQG8Y5JTf0cnofkRt2MT4DBw4cWL16tfzeXPw2
3NNPPy0/jPl/xTTWFW3ZsoWe2r59uzV1q6qqaOXffPPNtBTz8/NbW1sHPO1P
P/3k9/u1HNnfwoULly5dGsYL5dBHJn0UvJEqyA0z6iI3mNcV8d9HAbmhDdYb
csOCuiL++yh4IzfUGZ+B7Oxs6kVSUtKqVaveffddWm90TupCTU2N/DDmq1Fj
XdLY2Dh06FDx7/tYU5fW56xZs8aOHUtHpqamanm7ksLCwvvvvz+8SyovL6dr
MDg69JFJHwVvpApyw4y6yA3mdQWH9FFAbmiD9YbcsKCu4JA+Ct7IDXXGZ6C3
t3fr1q0TJ070+XzijwXSx3RTqTiM+WrUWLepqSkxMZEWxp9//mllXdHBgwep
9IgRI/7++2/1006ePJlu/MO7pPb29iFDhvTfhrqgj0z6KHgjVZAbJtUVITdY
1XVKHwXkhjZYb8gNC+o6pY8C37lB17958+ZFixYlJycHAoHMzMwPPvigu7ub
bRWGM0Bru6GhQXqbBQXzfi5apS7dzNIAR40a1f/NIkytK7dr1y4aeGlpqcox
x44do2P++uuvsC9m7ty5dI8f9svl0MegtPRRZG+qIDeM13XKekNuqNd1Sh9F
yA1dsN6CQm4Yr+uUPor4vIuhu7YdO3YMHz48op/bbrtNehc4JiybAQt+u1Oh
uro6Li5u3LhxZizFUCorK+kuXv5IYWEhDVz9t+E2bdqUkpJipC4tmPHjxxs5
g0bo44CvtStVkBtMOGi9ITdUOKiPIuQGQ1hvKq9CbqhwUB9FfN7FUOPowmgI
jz32WEVFxalTp7799lu68/X7/fTgk08+ybCW2TNAd/3/6/Pqq6/Sxd91113i
p999952pdT/++OPBgwdTxZdeeum1117beM33339vXtHu7m5a/FR3xYoVdBO9
f//+3Nxcn8+XlJREN+AqL5w5cyZdm5HS586do0JHjhwxchIV6KOWPorsShXk
hnHOWm/IjVCc1UcRcsM4rDfkhhHO6qOIz7sYoe8v/nz66aeKB9etW0fTO3Lk
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
DXUqM/DFF19QI2jR7t69W3yE7uMmTpxIDz7++OPyI3/88cdx48aJB8+fP/+H
H36QP/vmm2+Kt6tk+fLlui5P/bfDVOpSgwYPHjxixIgnnniCFiQd4/f7aZ2o
1GIy3vfee48epOVKj8+bNy86OpoOe/3117UMtqurKy4uju7ZtRwsGTt27Icf
fmj2uAT9fWRSN4w+yoW9foz00QupgtxgO17kRlCe6iNyA+vNBbkhF/Z8Cs75
94btffRCbqhTmYHe3t7FixfTZNJaooZmZGTQmqdPaRkfPXpUcTDtCFrb06ZN
E1cd3cPSI+JTdXV1dCstvnu2ltWYmZmZeE1sbKx4QumR9PR0LXXXrVuXmpoq
vZ3dZ599Rs9mZWWp1GUy3mPHji1YsKC5uVk87Pfff6f78RtuuGHAUZMvv/xy
2LBhnZ2dWg6W5ObmKjaLGeMS9PeRSd0w+shk/RjpoxdSBbnBdrzIDYln+4jc
wHpzQW4wmU/BOf/esL2PXsgNdeozQA1au3Yt3ZmKcx4VFXXvvfeePn1a5SU1
NTW33357hOwHAkUXLlzQuBrFnycMRf7Odep1r169Kj3b09NDOyg5OVm9NMPx
SuhZ2svyiwnl+eefV98vQVVXV9Od+6VLl1SOsaWPrOrq7SOr9aOgvY9hp8qh
Q4d27doV3msthtwwabwSz+aGZ/uI3MB6c0FusP3vL///3mBVVwG5oZ2WGaAe
/frrr7W1tR0dHVrOSe2j7jzwwAPyB3WtxvAErSuiG96YmBiNf3OWyXhFe/fu
pSX9wgsvaCk6ZsyYsrIyLRXlrly5Eh8fX1lZqaWELX1kOJ+6+qgXkz4KBlLF
QZAb/SE3ROijBLmhgNzoz625oZfT/72B3LCL8Rk4cODA6tWr5ffm4rfhnn76
aflhzFNFY13Rli1b6Knt27dbU7eqqopW/s0330xLMT8/v7W1dcDT/vTTT36/
X8uR/S1cuHDp0qVhvFAOfWTSR8EbqYLcMKMucoN5XRH/fRSQG9pgvSE3LKgr
4r+PgjdyQ53xGcjOzqZeJCUlrVq16t1336X1RuekLtTU1MgPY74aNdYljY2N
Q4cOFf++jzV1aX3OmjVr7NixdGRqaqqWt9UqLCy8//77w7uk8vJyugaDo0Mf
mfRR8EaqIDfMqIvcYF5XcEgfBeSGNlhvyA0L6goO6aPgjdxQZ3wGent7t27d
OnHiRJ/PJ/5YIH3c/+9kMV+NGus2NTUlJibSwvjzzz+trCs6ePAglR4xYsTf
f/+tftrJkyfTjX94l9Te3j5kyJD+21AX9JFJHwVvpApyw6S6IuQGq7pO6aOA
3NAG6w25YUFdp/RR4DU36Mo3b968aNGi5OTkQCCQmZn5wQcfdHd3m1GL4QzQ
2m5oaJDeZkHBvJ9TValLN7M0wFGjRvV/swhT68rt2rWLBl5aWqpyzLFjx+iY
v/76K+yLmTt3Lt3jh/1yOfQxKC19FNmVKsgNVnWdst6QG+p1ndJHEXJDF6y3
oJAbxus6pY8i3u5i6H5tx44dw4cPj+jntttuk97/jSHLZsCC37ZTqK6ujouL
GzdunBlLMZTKykq6i5c/UlhYSANX/224TZs2paSkGKlLy2b8+PFGzqAR+jjg
a61PFeQGQw5ab8gNFQ7qowi5wRDWm8qrkBsqHNRHEW93MdQyuiS6+Mcee6yi
ouLUqVPffvst3fP6/X568Mknn2Re0ewZoLv+//V59dVXaQh33XWX+Ol3331n
at2PP/548ODBVPGll1567bXXNl7z/fffm1e0u7ubFj/VXbFiBd1E79+/Pzc3
1+fzJSUl0Q24ygtnzpxJ12ak9Llz56jQkSNHjJxEBfqopY8i61MFucGKs9Yb
ciMUZ/VRhNwwDusNuWGEs/oo4u0uRuj7Wz+ffvqp4sF169bRxI4cOZJ5ObNn
oLy8vP/XeciyZctMrXvnnXcGrbt+/XpT69J/FxYvXjxq1Cix3KBBgx599NET
J06ovEQMBMWdeBgommjfGTxJKOjjgH2U2JIqyA0mHLTekBsqHNRHCXLDOKw3
5IYRDuqjhMO7mKB2794d0ffHdJj/tKpTZsBxzpw5c/jwYS230jt37qSbbuMV
33rrrWnTphk/D8hp76OEnz2F3HAc5IY7IDeC4meMLoPccAdH54aKrq6uOXPm
UKrMmDGD+ckdMQPulp2dvXr1auPnOXr0qN/vb2lpMX4qMIKTPYXccDfkhstw
sqeQG+6G3HAZnvdUW1vbb7/9VlJSkpKSIn57t76+nnkVnmcAwIns3VPIDQAn
Qm4AgF7c7qlvvvlG/lN5K1eupJAxoxC3MwDgUDbuKeQGgEMhNwBAL273VF1d
3S233DJs2DAxVaKjo/Py8jo6OpgX4nYGABzKxj2F3ABwKOQGAOjF/546e/bs
22+/nZCQQNkye/bsnp4eu68IAHiH3AAAvZAbAGCGxsbGqKgoCpZ9+/bZfS0A
4AzIDQDQC7kBAMwFAgFKlYKCArsvBAAcA7kBAHohNwAgDD09PeXl5f2/jdvV
1SX+jd3i4mJbLgwAuIXcAAC9kBsAwNaGDRsoOlJTU+V/WbWlpSUrK0v8tbuf
f/7ZxssDAA4hNwBAL+QGALBVWVkpfg2EJCQkpKen33fffbGxseIjGzdutPsC
AYA7yA0A0Au5AQDMnT9/fvny5ZMmTfL5fNL7tycnJ+/Zs8fuSwMATiE3AEAv
5AYAmKS9vb2+vr62tvbChQt2XwsAOANyAwD0Qm4AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAA4y+XLl0tLS3NycvD3cwFAI+QGAOiF3AAAVkpK
StLS0uLi4sQ3b7/jjjvsviIA4B1yAwD0Qm4AAFsZGRkRMkgVABgQcgMA9EJu
AABbbW1t5/usWbMGqQIAWiA3AEAv5AYAmKSoqAipAgC6IDcAQC/kBgCwhVQB
AL2QGwCgF3IDANhCqgCAXsgNANALuQEAbCFVAEAv5AYA6IXcAAC2kCoAoBdy
AwD0Qm4AAFtIFQDQC7kBAHohNwCALaQKAOiF3AAAvZAbAMAWUgUA9EJuAIBe
yA0AYAupAgB6ITcAQC/kBgCwhVQBAL2QGwCgF3IDAIzLzMxMvCY2Njaij/RI
enq63RcIANxBbgCAXsgNAGBr+vTpEaEFAgG7LxAAuIPcAAC9kBsAAAAAAAAA
AJa5/vrr7b4Er8vLyysuLjZ+ntOnT0+ZMqWlpcX4qcAIL+wpL4yRc8gNl/HC
nvLCGDmH3HAZ7CnMgO02b948depU4+fZunXrpEmTjJ8HDPLCnvLCGDmH3HAZ
L+wpL4yRc8gNl8GewgzY7uTJkxEREfT/Bs+TlpZWUFDA5JLACC/sKS+MkXPI
DZfxwp7ywhg5h9xwGewpzAAPpk6dWlRUZOQMra2tfr+/rq6O1SVB2Lywp7ww
Rv4hN9zEC3vKC2PkH3LDTbCnMAM8WL9+fWpqqpEzlJWVjRkzpre3l9UlQdi8
sKe8MEb+ITfcxAt7ygtj5B9yw02wp7TMwOXLl0tLS3Nycpj8UphGTU1NL7/8
Mu215OTkZ5999qOPPnJx3cbGxsjIyObm5rDPkJWVRQ1SOcBT8ymyZd0K3kgV
5AYPdV2cG4LH1o+A3LjGU313a24I6KNVvJAb6tRnoKSkJC0tLS4uTnz3eMv+
qu/nn38u/QUuyZIlS7q7u11Zl9x0003vv/9+eK/t7Oyky/7qq69CHeC1+bRr
3Yq8kCrIDR7qCi7NDa+tHxFyw2t9d2tuoI/IDSupz0BGRoa8L9asxuPHj0dG
RlK5Rx55pKGh4cyZM1u2bImKiqJHCgsL3VdXlJ+fT3XDe+3+/fuvu+66UFvG
g/Npy7qVeCFVkBu21xW5LzcEj60fCXLDU313a24I6CNyw1rqM9DW1na+z5o1
ayxbjbm5uVTrnnvukW8TurunB+Pj4//991+X1RUdOHBg6NCh4VVZtmzZggUL
Qj3rwfm0Zd1KvJAqyA3b64rclxuCx9aPBLnhqb67NTcE9BG5YS2NM1BUVGTN
auzo6IiJiaFa+/btkz9+5cqV0aNH0+M7d+50U13J1atXR44cqaiuRU9PT2Ji
4ieffBL0Wc/Op8iydSvnhVRBbthbV+Ky3FBw/fqRQ25IXN9329ebSbmhgD4i
NyzAW6r88ssvVCg6Orr/9ytXrlxJT+Xl5bmprtySJUsWLVqk91U1NTVDhgxp
b28P+qyX51Nw2l3MiRMnqqur2V6MSZAb9taVc1NuKLh+/cghNySu7zsP682M
3FBAH3nODdfgLVW+/vprKjR+/Hih78sFa9eufeqpp44cOUKfbtq0iZ6aP3++
m+rKVVRUxMfH0128rletWrUqIyMj1LNenk/BaXcx27dvnzVrFtuLMQlyw966
cm7KDQXXrx855IbE9X3nYb2ZkRsK6CPPueEaDFOltbW1oaHh4sWLRq5H/HnC
u+++mz6uqqqK6DNv3jz6tLS0lD6eMWOGm+rKXbp0KSYmRu9X1ZKSknbs2BHq
WS/Pp2DhupXDv0YkyA3khhGuXz9yyA2J6/vOw3ozIzcU0Eeec8M1mKTK8ePH
09LSIq6hO9O9e/eGdz3btm2jM8yZM0foe/868YQPP/wwfUrnpI8DgYCb6ipk
Zmbm5uZqP76pqcnn8507dy7UAR6fT8vWrRz+NSJBbiA3jHD9+pFDbkhc33ce
1ptgQm4ooI8854ZrGE+Vzs7OCRMmDBo0aOHChRSnGzZsuPXWW+ng2traMK6n
oqKCXjtlyhTh2nfonnnmGfE7dO+88w49NXfuXDfVVaD79xtvvFH78VRd/b9f
Hp9Py9atnK5U6e3t7bmGInHmzJk9MgavxDzIDXvrKrgmNxRcv37kkBsS1/ed
h/UmmJAbCugjb7lhtuLi4jRtqqqqWBU1nioHDx6UN0voe9+GPXv2hHc9hw4d
orMFvSrxXfuee+45N9VV+OOPP+jkJ0+e1Hg8LYaCggKVAzw+n5atWzldqSL/
4kx/WlYCckPw/Dp3TW4ouH79yCE3JK7vOw/rTTAhNxTQR95yw2znz58/ps0/
//zDqqjxVBG/j6br+5Iqmpub6XaVTtjY2Kh4avr06fT4G2+84aa6CrSqR48e
3dvbq/F4uvefPXu2ygEen0/L1q2crlQ5e/astK9feeWVQCAg3+lavqyK3BA8
v85dkxsKrl8/csgNiev7zsN6E0zIDQX0kbfccCXjqXLx4sWEhARqZX5+/qlT
p4K+vLW1taysLDs7e9u2bQPWevDBB/u3+/Dhw/Sgz+eTvm4wYF26TX7xxRdT
UlImT55MpfsvM5Pq1tfX5+Tk0BqeMGHCQw89pPGd1UV0ndLNuxY0xsjIyJaW
FpVjWI1LcEgf5Yys27D7iJ9vlyA3kBuCzj7KGVk/jusjckOC3HBubsihjzzn
hmsw+W27H3/8cdy4cXQArfD58+f/8MMP8mfffPNN8XaVLF++fMBaX3zxhXiq
3bt3i4+cPXt24sSJ9ODjjz+usS4F++DBg0eMGPHEE0/QgqRj/H4/rROz6773
3nv0IC1XenzevHnR0dF02Ouvvz7gqElXV1dcXBzds2s5WDJ27NgPP/zQ7HEJ
zumjXNjr1kgf8a8RCXJDY13kRlBhrx8n9hG5IUFuaKzLYW7IoY8a69qSG66h
MgOZmZmJ18TGxorLSXokPT1dfjDtCFrb06ZNEw+je1h6RHyqrq6ObqXFd8/W
shp7e3sXL15MB9MapoWUkZFBe40+pe1z9OhRxcGh6q5bty41NVV6O7vPPvuM
ns3KyjK77rFjxxYsWNDc3Cwe9vvvv9P9+A033DDgqMmXX345bNiwzs5OLQdL
cnNzFZvFjHEJzukjk3VrpI8e/9cIcgO5YaSPTNaPE/uI3EBuuCA30Een5IZr
qMyA+HN9ocjfQU6upqbm9ttvj5D9QKDowoULGlej0Lcw1q5dS3fEYq2oqKh7
77339OnTKi/pX/fq1avSsz09PbSDkpOTLairQM/SXpZfTCjPP/+8+n4Jqrq6
mu7cL126pHIMw3Hx30e261aivY9hp8qhQ4d27doV3msthtxgXlfBs7nBav04
ro/IDeSGC3IDfXRKbriGGTNA7aPuPPDAA/IHda1GEa2NX3/9tba2tqOjI+y6
IrrhjYmJ0fg3ZxnW3bt3Ly3pF154QUvRMWPGlJWVaakod+XKlfj4+MrKSi0l
jI/LQX3Ui0kfBW+kCnLD1LrIjTA4uo8CciNcyA0JV7mhF/ooQW7oYnwGDhw4
sHr1avm9ufhtuKefflp+GPP/immsK9qyZQs9tX37dmvqVlVV0cq/+eabaSnm
5+e3trYOeNqffvrJ7/drObK/hQsXLl26NIwXyqGPTPooeCNVkBtm1EVuMK8r
4r+PAnJDG6w35IYFdUX891HwRm6oMz4D2dnZ1IukpKRVq1a9++67tN7onNSF
mpoa+WHMV6PGuqSxsXHo0KHi3wWzpi6tz1mzZo0dO5aOTE1N1fK2WoWFhfff
f394l1ReXk7XYHB06COTPgreSBXkhhl1kRvM6woO6aOA3NAG6w25YUFdwSF9
FLyRG+qMz0Bvb+/WrVsnTpzo8/nEHwukj/v/nSzmq1Fj3aampsTERFoYf/75
p5V1RQcPHqTSI0aM+Pvvv9VPO3nyZLrxD++S2tvbhwwZ0n8b6oI+Mumj4I1U
QW6YVFeE3GBV1yl9FJAb2mC9ITcsqOuUPgq85gZd+ebNmxctWpScnBwIBDIz
Mz/44IPu7m4zajGcAVrbDQ0N0tssKJj3c9EqdelmlgY4atSo/m8WYWpduV27
dtHAS0tLVY45duwYHfPXX3+FfTFz586le/ywXy6HPgalpY8iu1IFucGqrlPW
G3JDva5T+ihCbuiC9RYUcsN4Xaf0UcTbXQzdr+3YsWP48OER/dx2223S+78x
ZNkMWPDbnQrV1dVxcXHjxo0zYymGUllZSXfx8kcKCwtp4Oq/Dbdp06aUlBQj
dWnZjB8/3sgZNEIfB3yt9amC3GDIQesNuaHCQX0UITcYwnpTeRVyQ4WD+iji
7S6GWkaXRBf/2GOPVVRUnDp16ttvv6V7Xr/fTw8++eSTzCuaPQN01/+/Pq++
+ioN4a677hI//e6770yt+/HHHw8ePJgqvvTSS6+99trGa77//nvzinZ3d9Pi
p7orVqygm+j9+/fn5ub6fL6kpCS6AVd54cyZM+najJQ+d+4cFTpy5IiRk6hA
H7X0UWR9qiA3WHHWekNuhOKsPoqQG8ZhvSE3jHBWH0W83cUIfX/r59NPP1U8
uG7dOprYkSNHMi9n9gyUl5f3/zoPWbZsmal177zzzqB1169fb2pd+u/C4sWL
R40aJZYbNGjQo48+euLECZWXiIGguBMPA0UT7TuDJwkFfRywjxJbUgW5wYSD
1htyQ4WD+ihBbhiH9YbcMMJBfZRweBcT1O7duyP6/pgO859WdcoMOM6ZM2cO
Hz6s5VZ6586ddNNtvOJbb701bdo04+cBOe19lPCzp5AbjoPccAfkRlD8jNFl
kBvu4OjcUNHV1TVnzhxKlRkzZjA/uSNmwN2ys7NXr15t/DxHjx71+/0tLS3G
TwVGcLKnkBvuhtxwGU72FHLD3ZAbLsPznmpra/vtt99KSkpSUlLEb+/W19cz
r8LzDAA4kb17CrkB4ETIDQDQi9s99c0338h/Km/lypUUMmYU4nYGABzKxj2F
3ABwKOQGAOjF7Z6qq6u75ZZbhg0bJqZKdHR0Xl5eR0cH80LczgCAQ9m4p5Ab
AA6F3AAAvfjfU2fPnn377bcTEhIoW2bPnt3T02P3FQEA75AbAKAXcgMAzNDY
2BgVFUXBsm/fPruvBQCcAbkBAHohNwCAuUAgQKlSUFBg94UAgGMgNwBAL+QG
AIShp6envLy8/7dxu7q6xL+xW1xcbMuFAQC3kBsAoBdyAwDY2rBhA0VHamqq
/C+rtrS0ZGVlib929/PPP9t4eQDAIeQGAOiF3AAAtiorK8WvgZCEhIT09PT7
7rsvNjZWfGTjxo12XyAAcAe5AQB6ITcAgLnz588vX7580qRJPp9Pev/25OTk
PXv22H1pAMAp5AYA6IXcAACTtLe319fX19bWXrhwwe5rAQBnQG4AgF7IDQAA
AAAAAAAAAAAAAAAAAAAAAAAAkPw/mu3rWA==
    "], {{0, 95.}, {545., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{545., 95.},
  PlotRange->{{0, 545.}, {0, 95.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->1165746022,ExpressionUUID->"b48b9159-1720-4cdd-a23f-ec9749d1f4e4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
PnR2qLDWzcvLu/HGG40fL6oPHDjQ+PENdl2Kzx+3rDs+SfdB0hnHEJF0fYrP
EMck3aq6kswft6xJBwD/1WnPnj1i9at11dL+wsizzz6rffnzzz97L6Tuq58p
um7duuA6saquD50dKqx1//77b3HyI0eOGDw+OTl51qxZxs/fYNel+Pxxy7rj
k3QfJN3NOIaGpOtTfIY4JulW1ZVk/rhlTToA+K9O586di4yMFEtiUVGRz1N9
+/YVj7/77rval9rvOAX0O2M6rKrrQ2eHCmtdseO0a9fO5XIZPH7OnDn333+/
8fM32HUpPn/csu74JN0HSQ+R4uPoJun1UXyGOCbpVtWVZP64ZU06ANS6Oj30
0EP+S+K+ffvEg1FRUZ6fLZeVlbVu3VosszNmzDh27Fit5y8vL1+7dm16enpO
Tk69zZhVd8+ePS+88EKfPn3uuOMOUdp/C9Chs0PVW3fv3r1Tp04V+0uXLl0e
fvhhg3/1VSP69Pxg2QhxjY0aNSotLTV4fCjX5bbJOJpVN5RxdMu645N0HyS9
1pczjsaR9HqbUXmGOCnpZtVlTwcAE9W6On399ddikRQbypo1a7RHTp482bVr
V/HgY4895n3kTz/91LFjR+3gUaNG/fjjj97Pvvfee9qPUoXJkyfX24wpdXNz
cxs3btyqVavRo0eLzUIcExMTI9ZwY/ejnk9u0am7dOlS8aDYSsTjI0aMiI2N
FYe98847Ropevny5RYsW27ZtM9ikpkOHDp9++qnBg4O+Lrd9xtGUuqGMo0bO
HZ+k+yDpjCNJJ+kk3cg4mlKXPR0AzFXr6uRyuZ566imx0Il1Xiy2KSkpYj8S
X4ot5uDBgz4Hi91K7Dt33323tiOkp6eLR7SnCgoKcnJytL/saWSnMKXu3Llz
k5KSPH9qZOPGjeLZtLQ0nbqpqaltr2nWrJl2Qs8jQ4cONVK3pKRkzJgx586d
0w7766+/oqKibrjhhnqvWvjmm2+aN29eWVlp5GCPjIwMn40sHNflts84mlI3
lHHUyLnjk3Q3Sde9LjfjSNKvYoaQ9HDUZU8HAHPVtTqJxXPOnDmtWrXS1sPo
6Oj77rvv+PHjOqfKz8/v3bt3hNeblTRnz541uFOYVffKlSueZ2tqasQuk5iY
qHMG7T1WdfH+ayZGrtdDPCv2O+9m6vLcc8/p72W12rFjR2xs7L///lvXAeZe
l/zjaFZdH8bHUSPnjk/S3ST9fzGOPki6D2aID2WTblZd9nQAMJH+6iTWz99/
/3337t0XL140cjaxtIqVc8iQId4PBrTjm1hXc/ny5bi4uJSUFOPVjdOp+/nn
n4vt5vnnn6/3JOJi27dvv3bt2kCrV1dXx8fHb968OdAX1svu42hiXePj6CHn
jk/SQ0HS9Sk1jh4k3XhXSs0QByfdlLoa9nQACFEoq9POnTtnzpzp/XNj7Vek
nnzySe/DTN8pDNbVZGdni6dyc3Mbpu7WrVvFrnTLLbeIbWLGjBnl5eX1nvaX
X36JiYkxcqS/cePGTZw4MYgXemMcTRlHDzl3fJJubl2Sbnpdjfzj6EHSg+8y
qLoa+WcISdevq5F/HD3kTDoAhLI6paeni3WyU6dOmZmZixcvFnuBOJtYIfPz
870PM32nMFhXKCoqatq06YABA2pqahqmrtg7Bg4c2KFDB3FkUlKSkY/SnT17
9oMPPhhcS+vXrxc9hHh1jKMp4+gh545P0s2tS9JNr+u2yTh6kPSQmw2srtsm
M4SkO2McPeRMOgCEsjq5XK4lS5Z07do1KipKe8uS+PfWrVt9DjN9pzBYt7i4
uG3btmLRPnr0aEPW1fz888+idKtWrU6dOqV/2jvuuCM7Ozu4lioqKpo0aeK/
RQaEcTRlHD3k3PFJuul1NSTdrLp2GUcPkh5apwHXtcsMIenOGEcPOZMOAKas
TmLfKSws9HwEqI/wvfdKp25RUZG4tOuvv97/g0zDWtfbxx9/LC48Ly9P55iS
khJxzD///BN0M8OGDcvMzAz65d4Yx1oZGUdvcu74JN3cut5Ieuh17TKO3kh6
6IWM17XLDCHp+nXtMo7e5Ew6ADTA6tQAn6DiY8eOHS1atOjYsWM4tom6bN68
ubi42PuR2bNniwvX/6Sa+fPn9+nTJ5S6y5Yt69y5cyhnMIhxNHgGOXd8km4W
km46G42jN5Ie7kIeNpohJF2HjcbRm5xJB4DwrU4lJSX/d9Wbb74pFsz+/ftr
X/7www9hqqj57LPPGjduLCq+9NJL//nPf96+ZteuXeErWlVVJTYmUXfKlCl5
eXlbtmzJyMiIiorq1KlTRUWFzgsHDBggegul9OnTp0Wh/fv3h3ISHYyjkXH0
JueOT9JNQdJNZ69x9EbSmSH+SHpd7DWO3uRMOgCEb3Vav359RG0mTZoUpoqa
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
lVdeycrKsroLAOFF0gEVkHQAAFRQVlb2559/Wt0FgPAi6YAKSDoAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQwBIS
EqxuQV3Tp09fuHBh6Oc5fvx49+7dS0tLQz8VQidnpuTsShEk3ZHkzJScXSmC
pDuSnJmSsytFkHRHsmOm7NizYyxYsKBnz56hn2fJkiXdunUL/TwwhZyZkrMr
RZB0R5IzU3J2pQiS7khyZkrOrhRB0h3JjpmyY8+OceTIkYiICPHfEM+TnJw8
a9YsU1pC6OTMlJxdKYKkO5KcmZKzK0WQdEeSM1NydqUIku5IdsyUHXt2kp49
e2ZlZYVyhvLy8piYmIKCArNaQojkzJScXamDpDuPnJmSsyt1kHTnkTNTcnal
DpLuPHbMlB17dpJ58+YlJSWFcoa1a9e2b9/e5XKZ1RJCJGem5OxKHSTdeeTM
lJxdqYOkO4+cmZKzK3WQdOexY6Z0ei4uLn711VfFLE1MTHzmmWdWr17dYF1d
unQpLy9v6tSppnx8hEGWXG9RUVGjRo3OnTsX9BnS0tLEjdI5wKpxVK2uh5zr
AEn3IOnmUm3+eJB040i6cdIm3a3SOHoj6capM0MaIOlule6nhXU95Ey6vrp6
3rZtW7NmzSL+14QJE6qqqsLaz8qVK5OTk1u0aKFVvOuuu8JazsOq6xVuvvnm
FStWBPfayspK0fa3335b1wFWXZdqdb3JuQ6QdA1JN5dq88cbSTeCpAdE2qQr
OI4eJN0IBWdIWJOu2v0k6cGptedDhw41atRI3MBHH320sLDwxIkT2dnZ0dHR
4pHZs2eHtZ+UlBTvEWyYeWvh9QozZswQdYN77ZYtW1q2bFnXJLfqulSr60PO
dYCku62eISTdRJbMHx8k3QiSHhA5k+5Wchw9SLoRCs6Q8CXdrdj9JOlBq7Xn
jIwMcesGDRrkPcFWrlwpHoyPj79w4UL4+jl//vyZq15//fUGm7cWXq+wc+fO
pk2bBldl0qRJY8aMqetZq65Ltbo+5FwHSLrb6hlC0k1kyfzxQdKNIOkBkTPp
biXH0YOkG6HgDAlf0t2K3U+SHjT/ni9evBgXFydu3YYNG7wfr66ubteunXh8
+fLlDdBYVlZWw8xby6/3ypUrbdq08aluRE1NTdu2bb/44otan7XqulSr60/O
dYCkW369JD0cGmz++CPpASHp9ZIz6T7UGUcPkh4QdWZImJLuw/H30/Jx9JAz
6fr8ez5w4IC4abGxsf6/6TFt2jTx1PTp0xugsQabtzJc74QJE8aPHx/oq/Lz
85s0aVJRUVHrs1Zdl2p1/cm5DpB0Ga6XpJuO/xXvg6TLcL1OSroPpcZRQ9ID
otQMCUfSfTj+fsowjho5k67Pv+ft27eLm9a5c2f31R80zZkzZ+zYsfv37xdf
zp8/Xzw1atSoBmisweatDNe7adOm+Pj46urqgF6VmZmZkpJS17NWXZdqdf3J
uQ6QdBmul6Sbjv8V74Oky3C9Tkq6D6XGUUPSA6LUDAlH0n04/n7KMI4aOZOu
z79n7Z0I9957r/j31q1bI64aMWKE+DIvL0/8u1+/fj4vKS8vLywsLCsrM7Ex
I/PWlLoyXO+///4bFxe3Y8eOgF7VqVOnZcuW1fWsVdelWl1/cq4DJF2G6yXp
9p0//kh6QEh6veRMug+lxlFD0gOi1AwJR9J9OP5+yjCOGjmTrs+/55ycHHHT
Bg8e7L76yf/a/XzkkUfEl59//rn4d69evTwHHzp0KDk5OeKazp07i2NMaUx/
3ppYV5LrTU1NzcjIMH58cXFxVFTU6dOn6zrAqutSra4/OdcBki7J9ZJ0m84f
fyQ9ICRdn7RJ96HaOLpJeoBUmyGmJ92H4++nJOPoljXp+vx73rRpk7gz3bt3
d1/73Yann35a+92GRYsWiaeGDRumHVlZWdmlS5fIyMhx48bl5ua+9dZbt912
mzhg9+7doTemM2/NrSvJ9ebl5d14443GjxfVBw4cqHOAVdelWl1/cq4DJF2S
6yXpNp0//kh6QEi6PmmT7kO1cXST9ACpNkNMT7oPx99PScbRLWvS9fn3vGfP
HnFPar0W7e8dPPvss9qXP//8s/ftdV/9pMF169aZ0pjOvDW3riTX+/fff4uT
HzlyxODxycnJs2bN0jnAqutSra4/OdcBki7J9ZL0EOv6aLD544+kB4Sk65M2
6T5UG0c3SQ+QajPE9KT7cPz9lGQc3bImXZ9/z+fOnYuMjBQ3qqioyOepvn37
isffffdd7UvtNx8C+k0S43Tmrbl1JbleMQ/btWvncrkMHj9nzpz7779f5wCr
rku1uv7kXAdIuiTXS9LN1WDzxx9JDwhJ1ydt0n2oNo5ukh4g1WaI6Un34fj7
Kck4umVNur5ae37ooYf8b9S+ffvEg1FRUZ6fOJWVlbVu3Vrc/BkzZhw7dqzW
85eXl69duzY9PT0nJyegxnTmbb119+zZ88ILL/Tp0+eOO+4Qpf0nhg+zrnfv
3r1Tp04Vs65Lly4PP/ywwb8FqRF9en7cZIS4xkaNGpWWluocY9U4mlXXjuPo
lnUdIOluOWYISa/1GgMaR2+hzB+STtJJOuNYL5IeUGOqzZBwJN1bKPfTbZM9
XYZxdMuadH219vz111+LWyem2Zo1a7RHTp482bVrV/HgY4895n3kTz/91LFj
R+3gUaNG/fjjj97Pvvfee9oPWITJkycH1Jj+5zno1M3NzW3cuHGrVq1Gjx4t
ppA4JiYmRoysTi1Trnfp0qXiQTHBxOMjRoyIjY0Vh73zzjtGLvby5cstWrTY
tm2bkYM9OnTo8Omnn4b7utyBj6Mpde04jho51wGSbtb1knRz6wYxjt6Cnj8k
naTr1yXptVJqHDUkPaDGlJohYUq6t6Dvp9s+e7rl46iRM+n6au3Z5XI99dRT
4vLF6IshSElJEbNUfCkm3sGDB30OFnNYzMa7775bmyfp6eniEe2pgoKCnJwc
7e/9GZk/qampba9p1qyZdkLPI0OHDjVSd+7cuUlJSZ4/QLBx40bxbFpamk5d
U663pKRkzJgx586d0w7766+/oqKibrjhhnqvWvjmm2+aN29eWVlp5GCPjIwM
n+kdjutyBz6OptS14zhq5FwHSLpZ10vSza0bxDiaMn9IOknXr0vSPZQdRw1J
r7cZZWdImJJuyv1022dPt3wcNXImXV9dPYtbOmfOnFatWml3KTo6+r777jt+
/LjOqfLz83v37h3h9RYGzdmzZw3OH+0dEHXx/lsD+nWvXLniebampkbM+cTE
RP3SJl6vh3hWpM+7mbo899xz+jO8Vjt27IiNjf333391jrFkHM2qa7tx1Mi5
DpB006/Xg6Q3cNLNmj8+SLoPku5D2aQrO44akl5vM8rOkDAl3dw9Tv493ay6
PpyRdH36PYu7+vvvv+/evfvixYtGziZuuLifQ4YM8X4woPkTnFrrai5fvhwX
F5eSkmLkPKZcr+bzzz8Xk/D55583UrR9+/Zr1641UtFbdXV1fHz85s2bjZSw
ZBxNvJ/yj6OHnOsASfdG0jV2T3qgSDpJD7ouSQ+CrcfRg6SH1GjgdTXyz5AG
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
Ayog6QCOHj3asmXL4cOHW90IgDAi6YAKSDqgApIOQHjllVeysrKs7gJAeJF0
QAUkHVABSQdQVlb2559/Wt0FgPAi6YAKSDqgApIOAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBUEhISrG5BXdOnT1+4
cGHo5zl+/Hj37t1LS0tDPxVCJ2em5OxKESTdkeTMlJxdKYKkO5KcmZKzK0WQ
dEeyY6bs2LNjLFiwoGfPnqGfZ8mSJd26dQv9PDCFnJmSsytFkHRHkjNTcnal
CJLuSHJmSs6uFEHSHcmOmbJjz45x5MiRiIgI8d8Qz5OcnDxr1ixTWkLo5MyU
nF0pgqQ7kpyZkrMrRZB0R5IzU3J2pQiS7kh2zJQde3aSnj17ZmVlhXKG8vLy
mJiYgoICs1pCiOTMlJxdqYOkO4+cmZKzK3WQdOeRM1NydqUOku48dsyUHXt2
knnz5iUlJYVyhrVr17Zv397lcpnVEkIkZ6bk7EodJN155MyUnF2pg6Q7j5yZ
krMrdZB057FjpnR6Li4ufvXVV8UsTUxMfOaZZ1avXt1gXV26dCkvL2/q1Kmm
fHyEQZZcb1FRUaNGjc6dOxf0GdLS0sSN0j9GnfupseR6PeRcB0i6B0k3nTrj
6M12SXcrNlJOTbpS99PCuh4k3SClZghJDwe+ew9UXT1v27atWbNmEf9rwoQJ
VVVVYe1n5cqVycnJLVq00CreddddYS3nYdX1CjfffPOKFSuCe21lZaVo+9tv
v63rANXup1XX603OdYCka0i6uRQcRw97JV21kXJq0lW7nyS9LiTd2rpukm4q
vnsPTq09Hzp0qFGjRuI2Pvroo4WFhSdOnMjOzo6OjhaPzJ49O6z9pKSkeM+c
hhlHC69XmDFjhqgb3Gu3bNnSsmVLnXCpdj8tuV4fcq4DJN1N0sNAwXH0sFHS
3YqNlFOTrtr9JOk6SLqFdTUk3UR89x6cWnvOyMgQ93DQoEHeE2zlypXiwfj4
+AsXLoSvn/Pnz5+56vXXX2+wcbTweoWdO3c2bdo0uCqTJk0aM2aMzgGq3U9L
rteHnOsASXeT9DBQcBw9bJR0t2Ij5dSkq3Y/SboOkm5hXQ1JNxHfvQfHv+eL
Fy/GxcWJe7hhwwbvx6urq9u1ayceX758eQM0lpWV1TDjaPn1XrlypU2bNj7V
jaipqWnbtu0XX3xh5GB17qemwa7Xn5zrAEm3/HodlnSr6lo+jh52SboPx4+U
5TMkTElX7X5aPo4eJF2fsjOEpIcD370HxL/nAwcOiBsYGxvr/5se06ZNE09N
nz69ARprsHGU4XonTJgwfvz4QF+Vn5/fpEmTiooKIwcrdT/drAN+SLoM1+uk
pFtVV4Zx1Ngl6T4cP1IyzJBwJF21+ynDOGpIuj6VZwhJNx3fvQfEv+ft27eL
G9i5c2f31R80zZkzZ+zYsfv37xdfzp8/Xzw1atSoBmiswcZRhuvdtGlTfHx8
dXV1QK/KzMxMSUkxeLBS99PNOuCHpMtwvU5KulV1ZRhHjV2S7sPxIyXDDAlH
0lW7nzKMo4ak61N5hpB00/Hde0D8e9beAXHvvfeKf2/dujXiqhEjRogv8/Ly
xL/79evn85Ly8vLCwsKysjITGzMyjqbUleF6//3337i4uB07dgT0qk6dOi1b
tszgwUrdT3cDXq8/OdcBki7D9Top6VbVlWEcNXZJug/Hj5QMMyQcSVftfsow
jhqSrk/lGULS7fu9hD85k67Pv+ecnBxxAwcPHuy++hcHtHF85JFHxJeff/65
+HevXr08Bx86dCg5OTnims6dO4tjTGlMfxxNrCvJ9aampmZkZBg/vri4OCoq
6vTp0waPV+1+Ntj1+pNzHSDpklyvY5JuVV1JxtFtn6T7cPxISTJDTE+6avdT
knF0k/T6KD5DSLq595Pv3gPi3/OmTZvEnenevbv72u9UPP3009rvVCxatEg8
NWzYMO3IysrKLl26REZGjhs3Ljc396233rrtttvEAbt37w69MZ1xNLeuJNeb
l5d34403Gj9eVB84cKDx41W7nw12vf7kXAdIuiTX65ikW1VXknF02yfpPhw/
UpLMENOTrtr9lGQc3SS9PorPEJJu0+8l/MmZdH3+Pe/Zs0fck1qvRfv8/2ef
fVb78ueff/YeVvfVTzhct26dKY3pjKO5dSW53r///luc/MiRIwaPT05OnjVr
lvHzq3Y/G+x6/cm5DpB0Sa7XMUm3qq4k4+i2T9J9OH6kJJkhpiddtfspyTi6
SXp9FJ8hJD3Euj747j0g/j2fO3cuMjJS3KiioiKfp/r27Ssef/fdd7Uvtd+4
COg3SYzTGUdz60pyvWIetmvXzuVyGTx+zpw5999/v/Hzq3Y/G+x6/cm5DpB0
Sa7XMUm3qq4k4+i2T9J9OH6kJJkhpiddtfspyTi6SXp9FJ8hJN1cfPcekFp7
fuihh/xv1L59+8SDUVFRnp84lZWVtW7dWgz6jBkzjh07Vuv5y8vL165dm56e
npOTE1BjOuNYb909e/a88MILffr0ueOOO0Rp/wnpw6zr3bt379SpU8Vs79Kl
y8MPP2zw7ztrRJ+eH3MZIa6xUaNGpaWlBo8P5X66AxxHs+5noOPoLZTrDWUc
3bKuAyTdTdIZx/+lTtK9qbAXyDBDwpF0q1ZslcfRTdKZIbpIeq3XyHfvDaPW
nr/++mtxD8U0W7NmjfbIyZMnu3btKh587LHHvI/86aefOnbsqB08atSoH3/8
0fvZ9957T/vBjjB58uSAGtP/fAOdurm5uY0bN27VqtXo0aPFFBLHxMTEiJHV
qWXK9S5dulQ8KCaYeHzEiBGxsbHisHfeecfIxV6+fLlFixbbtm0zcrBHhw4d
Pv30U4MHB30/3YGPoyn3M4hxNOV6QxlHjZzrAEk363pJurl17TiOGhsl3ZsK
e4HlMyRMSbdqxVZ2HDUkvd5mlJ0hJJ3v3q1Va88ul+upp54Sly9GXwxBSkqK
mKXiSzHxDh486HOwmMNiNt59993aPElPTxePaE8VFBTk5ORof2fQyPxJTU1t
e02zZs20E3oeGTp0qJG6c+fOTUpK8vwBgo0bN4pn09LSdOqacr0lJSVjxow5
d+6cdthff/0VFRV1ww031HvVwjfffNO8efPKykojB3tkZGT4xMqHKffTHfg4
mnI/gxhHU643lHHUyLkOkHSzrpekm1vXjuOosVHSVdsLLJ8hYUq6VSu2suOo
Ien1NqPsDCHpfPdurbp6FkM5Z86cVq1aaXcpOjr6vvvuO378uM6p8vPze/fu
HeH11gnN2bNnDc4f7Z0XdfH+Gwf6da9cueJ5tqamRsyBxMRE/dImXq+HeFbM
Ru9m6vLcc8/pz/Ba7dixIzY29t9//63rALPup8b4OLpNup+BjqO51+thfBw1
cq4DJN306/VQNunKjqPGRklXbS8wq64Py5PutmjFNquu7cZRQ9KN9KPmDCHp
tdblu/cGo9+zGM3ff/999+7dFy9eNHI2MdDifg4ZMsT7wYDmT3Bqrau5fPly
XFxcSkqKkfOYcr2azz//XEz+559/3kjR9u3br1271khFb9XV1fHx8Zs3bw70
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
U05YVFTUrl07cdonn3yysLDQlHMCCBFJB1RA0gEVkHQA4SBWgLlz5/bs2dPg
X64EYEckHVABSQdUQNIBHD16tGXLlsOHD7e6EQBhRNIBFZB0QAUkHYDwyiuv
ZGVlWd0FgPAi6YAKSDqgApIOoKys7M8//7S6CwDhRdIBFZB0QAUkHQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqSQk
JFjdgrqmT5++cOHC0M9z/Pjx7t27l5aWhn4qhE7OTMnZlSJIuiPJmSk5u1IE
SXckOTMlZ1eKIOmOZMdM2bFnx1iwYEHPnj1DP8+SJUu6desW+nlgCjkzJWdX
iiDpjiRnpuTsShEk3ZHkzJScXSmCpDuSHTNlx54d48iRIxEREeK/IZ4nOTl5
1qxZprSE0MmZKTm7UgRJdyQ5MyVnV4og6Y4kZ6bk7EoRJN2R7JgpO/bsJD17
9szKygrlDOXl5TExMQUFBWa1hBDJmSk5u1IHSXceOTMlZ1fqIOnOI2em5OxK
HSTdeeyYKTv27CTz5s1LSkoK5Qxr165t3769y+UyqyWESM5MydmVOki688iZ
KTm7UgdJdx45MyVnV+og6c5jx0zp93zp0qW8vLypU6ea8jEOBhUXF7/66qsi
HYmJic8888zq1asdXLeoqKhRo0bnzp0L+gxpaWligHQOsOp+uhWbPx5yrgMk
3dq6DZB0N+PYsEi6QUrNEJIeDpZcrwdJN4ikB0TapFtVlz09CHX1vHLlyuTk
5BYtWkRcdddddzVMP9u2bWvWrFnE/5owYUJVVZUj6wo333zzihUrgnttZWWl
aPvbb7+t6wCrrku1+eNNznWApFtb1x3mpDOOJF1D0q2t6ybpprLqer2RdCNI
ekCkTbpq88ebnEnXV1fPKSkp3neyYcbx0KFDjRo1EuUeffTRwsLCEydOZGdn
R0dHi0dmz57tvLqaGTNmiLrBvXbLli0tW7asa5JbeF1KzR8fcq4DJN3Cuprw
Jd3NOJL0a0i6hXU1JN1EllyvD5JeL5IeKDmTblVd9vSg1dXz+fPnz1z1+uuv
N9g4ZmRkiFqDBg3yntgrV64UD8bHx1+4cMFhdTU7d+5s2rRpcFUmTZo0ZsyY
up618LqUmj8+5FwHSLqFdTXhS7qbcSTp15B0C+tqSLqJLLleHyS9XiQ9UHIm
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
D0+bNs3rxh07dojIi3LiLnFBOHfuXHl5uSitXQ127dplbQ+Agkg6oAKSDqiA
pAMQSktLP//8c68bly5dKjLYrVs3a2vl5uauW7fO68bLly/PnDnT9+M2o0eP
Fj3MnTvX2h4ANZF0QAUkHVABSQfQos2bN4sMRkVFWfv5mszMzN9++83k4lWr
Vokehg8fbmEDAPRIOqACkg6ogKQDimtqaho7dqzI4IgRI6w9sl9/a/Lll18W
PUyePNnaHgBoSDqgApIOqICkA8r666+/jh49+tFHHyUnJ2tvyDlw4ICFxxcH
f/TRR00udrlcd955p2hjxYoVFvYAgKQDKiDpgApIOqC4b7/9Vv8Nk88995y4
LPh1hObm5k2bNonw1tTUtLggLy8vJyfH5NFWrlwp2ujateuZM2f8agOAAZIO
qICkAyog6QBKS0vvuOOOzp07a9eBDh06vPjiixcvXjT58C+//HLIkCH33Xdf
Zmbm/PnzW1wzY8aMiooKM0crKytr3769aENcOsyeAAATSDqgApIOqICkA/Co
rq5euXJlXFyciOGYMWOam5vNPOqFF14QlwLxQ319fffu3Y8cOeK7ZujQoS6X
67qHqqqq6tWrl/aZGjPrAQSApAMqIOmACkg6AE15eXlUVJQI4xdffOHvY1es
WOH7pRYi3enp6dd97LFjx3r37i3qpqam/vvvv/6WBuAXkg6ogKQDKiDpAITE
xESRx0WLFvn7wMbGxj59+uzZs0d/44YNGz744APjB1ZWVsbHx4uiSUlJ/n6u
B0BgSDqgApIOqICkA4pobm7evn277xtvmpqaunfvLiK5evXqAA776aefpqSk
6G+ZNWvWr7/+avCQX375pVu3bqKieGBDQ0MARQG0hqQDKiDpgApIOoBly5Zp
b4DRf3NFXV1dRkaG9kUZxuFtjcvlSkpK0r+fx/hjNTt37uzYsaMol5aW9s8/
/wRQEYABkg6ogKQDKiDpAIqKirTf2glxcXHjx4+///77O3XqpN3y5ptvBnzk
Xbt29e/f/8qVK+6rn5eZMmVKayt3794dHR2tVYyJiREXBPHPKJ3p06cH3AYA
N0kH1EDSARWQdADCuXPn5s2bN3DgwMjIyHbXDB48eOvWrUEeedy4cWvXrhU/
fPjhhwbv7fn444/bGcrIyAiyEwAkHVABSQdUQNIBeFy4cOHAgQP79u2rra21
5IDl5eU9e/YUh509e3ZZWZklxwQQJJIOqICkAyog6QBCQVwBli5devfdd5v8
y5UA7IikAyog6YAKSDqAkydPdu3addKkSeFuBEAIkXRABSQdUAFJByC88sor
q1atCncXAEKLpAMqIOmACkg6gPr6+qNHj4a7CwChRdIBFZB0QAUkHQAAAAAA
wC7+D0+1Aho=
    "], {{0, 213.}, {673., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{673., 213.},
  PlotRange->{{0, 673.}, {0, 213.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->1200080173,ExpressionUUID->"00a100f5-ea7f-48a3-8fe4-02a725ad7d33"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "980544ee-063a-4d40-a0bc-716928f9f74b"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->30565064,ExpressionUUID->"747d02ff-fea9-4e33-abd3-a9de026af949"],

Cell[TextData[{
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Matrix"]], "paclet:Q3/ref/Matrix", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5b65d2a6-10f3-4769-b734-8a5eb1a30ce2"],
 " can construct the matrix representation of ",
 Cell[BoxData["Dyad"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "0fa8a1db-c8aa-48e5-a6ee-a53f8d7bf714"],
 "."
}], "ExampleText",
 CellID->1843799028,ExpressionUUID->"25b8644b-2872-42a6-a765-070e107083b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"DickeState", "[", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", "1"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v1", ",", "v1", ",", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->541237386,ExpressionUUID->"3ce90f24-3ed5-40c3-a28b-d3c816cbecfe"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      0, $CellContext`S[3, Q3`$] -> 1|>]], "+", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 
      1, $CellContext`S[3, Q3`$] -> 0|>]], "+", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`S[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 
      0, $CellContext`S[3, Q3`$] -> 0|>]]}], 
  SqrtBox["3"]]], "Output",
 CellLabel->"Out[1]=",
 CellID->1225954784,ExpressionUUID->"845fce03-ec11-49d9-82b9-349307852f1d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
N7TTMgPUo19//bW2trajo0PLOal91J0HHnhA/qCu1ciwrohueGNiYrT/zVld
VOru3buXlvQLL7ww4ElosGPGjCkrK9Nb/cqVK/Hx8ZWVlVpKoI/h1dXeR8FA
qjgIcsM45AZbrPrIcP0gNxSQG8Y5JTf0cnofkRt2MT4DBw4cWL16tfzeXPw2
3NNPPy0/jPl/xTTWFW3ZsoWe2r59uzV1q6qqaOXffPPNtBTz8/NbW1sHPO1P
P/3k9/u1HNnfwoULly5dGsYL5dBHJn0UvJEqyA0z6iI3mNcV8d9HAbmhDdYb
csOCuiL++yh4IzfUGZ+B7Oxs6kVSUtKqVaveffddWm90TupCTU2N/DDmq1Fj
XdLY2Dh06FDx7/tYU5fW56xZs8aOHUtHpqamanm7ksLCwvvvvz+8SyovL6dr
MDg69JFJHwVvpApyw4y6yA3mdQWH9FFAbmiD9YbcsKCu4JA+Ct7IDXXGZ6C3
t3fr1q0TJ070+XzijwXSx3RTqTiM+WrUWLepqSkxMZEWxp9//mllXdHBgwep
9IgRI/7++2/1006ePJlu/MO7pPb29iFDhvTfhrqgj0z6KHgjVZAbJtUVITdY
1XVKHwXkhjZYb8gNC+o6pY8C37lB17958+ZFixYlJycHAoHMzMwPPvigu7ub
bRWGM0Bru6GhQXqbBQXzfi5apS7dzNIAR40a1f/NIkytK7dr1y4aeGlpqcox
x44do2P++uuvsC9m7ty5dI8f9svl0MegtPRRZG+qIDeM13XKekNuqNd1Sh9F
yA1dsN6CQm4Yr+uUPor4vIuhu7YdO3YMHz48op/bbrtNehc4JiybAQt+u1Oh
uro6Li5u3LhxZizFUCorK+kuXv5IYWEhDVz9t+E2bdqUkpJipC4tmPHjxxs5
g0bo44CvtStVkBtMOGi9ITdUOKiPIuQGQ1hvKq9CbqhwUB9FfN7FUOPowmgI
jz32WEVFxalTp7799lu68/X7/fTgk08+ybCW2TNAd/3/6/Pqq6/Sxd91113i
p999952pdT/++OPBgwdTxZdeeum1117beM33339vXtHu7m5a/FR3xYoVdBO9
f//+3Nxcn8+XlJREN+AqL5w5cyZdm5HS586do0JHjhwxchIV6KOWPorsShXk
hnHOWm/IjVCc1UcRcsM4rDfkhhHO6qOIz7sYoe8v/nz66aeKB9etW0fTO3Lk
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
DXUqM/DFF19QI2jR7t69W3yE7uMmTpxIDz7++OPyI3/88cdx48aJB8+fP/+H
H36QP/vmm2+Kt6tk+fLlui5P/bfDVOpSgwYPHjxixIgnnniCFiQd4/f7aZ2o
1GIy3vfee48epOVKj8+bNy86OpoOe/3117UMtqurKy4uju7ZtRwsGTt27Icf
fmj2uAT9fWRSN4w+yoW9foz00QupgtxgO17kRlCe6iNyA+vNBbkhF/Z8Cs75
94btffRCbqhTmYHe3t7FixfTZNJaooZmZGTQmqdPaRkfPXpUcTDtCFrb06ZN
E1cd3cPSI+JTdXV1dCstvnu2ltWYmZmZeE1sbKx4QumR9PR0LXXXrVuXmpoq
vZ3dZ599Rs9mZWWp1GUy3mPHji1YsKC5uVk87Pfff6f78RtuuGHAUZMvv/xy
2LBhnZ2dWg6W5ObmKjaLGeMS9PeRSd0w+shk/RjpoxdSBbnBdrzIDYln+4jc
wHpzQW4wmU/BOf/esL2PXsgNdeozQA1au3Yt3ZmKcx4VFXXvvfeePn1a5SU1
NTW33357hOwHAkUXLlzQuBrFnycMRf7Odep1r169Kj3b09NDOyg5OVm9NMPx
SuhZ2svyiwnl+eefV98vQVVXV9Od+6VLl1SOsaWPrOrq7SOr9aOgvY9hp8qh
Q4d27doV3msthtwwabwSz+aGZ/uI3MB6c0FusP3vL///3mBVVwG5oZ2WGaAe
/frrr7W1tR0dHVrOSe2j7jzwwAPyB3WtxvAErSuiG96YmBiNf3OWyXhFe/fu
pSX9wgsvaCk6ZsyYsrIyLRXlrly5Eh8fX1lZqaWELX1kOJ+6+qgXkz4KBlLF
QZAb/SE3ROijBLmhgNzoz625oZfT/72B3LCL8Rk4cODA6tWr5ffm4rfhnn76
aflhzFNFY13Rli1b6Knt27dbU7eqqopW/s0330xLMT8/v7W1dcDT/vTTT36/
X8uR/S1cuHDp0qVhvFAOfWTSR8EbqYLcMKMucoN5XRH/fRSQG9pgvSE3LKgr
4r+PgjdyQ53xGcjOzqZeJCUlrVq16t1336X1RuekLtTU1MgPY74aNdYljY2N
Q4cOFf++jzV1aX3OmjVr7NixdGRqaqqWt9UqLCy8//77w7uk8vJyugaDo0Mf
mfRR8EaqIDfMqIvcYF5XcEgfBeSGNlhvyA0L6goO6aPgjdxQZ3wGent7t27d
OnHiRJ/PJ/5YIH3c/+9kMV+NGus2NTUlJibSwvjzzz+trCs6ePAglR4xYsTf
f/+tftrJkyfTjX94l9Te3j5kyJD+21AX9JFJHwVvpApyw6S6IuQGq7pO6aOA
3NAG6w25YUFdp/RR4DU36Mo3b968aNGi5OTkQCCQmZn5wQcfdHd3m1GL4QzQ
2m5oaJDeZkHBvJ9TValLN7M0wFGjRvV/swhT68rt2rWLBl5aWqpyzLFjx+iY
v/76K+yLmTt3Lt3jh/1yOfQxKC19FNmVKsgNVnWdst6QG+p1ndJHEXJDF6y3
oJAbxus6pY8i3u5i6H5tx44dw4cPj+jntttuk97/jSHLZsCC37ZTqK6ujouL
GzdunBlLMZTKykq6i5c/UlhYSANX/224TZs2paSkGKlLy2b8+PFGzqAR+jjg
a61PFeQGQw5ab8gNFQ7qowi5wRDWm8qrkBsqHNRHEW93MdQyuiS6+Mcee6yi
ouLUqVPffvst3fP6/X568Mknn2Re0ewZoLv+//V59dVXaQh33XWX+Ol3331n
at2PP/548ODBVPGll1567bXXNl7z/fffm1e0u7ubFj/VXbFiBd1E79+/Pzc3
1+fzJSUl0Q24ygtnzpxJ12ak9Llz56jQkSNHjJxEBfqopY8i61MFucGKs9Yb
ciMUZ/VRhNwwDusNuWGEs/oo4u0uRuj7Wz+ffvqp4sF169bRxI4cOZJ5ObNn
oLy8vP/XeciyZctMrXvnnXcGrbt+/XpT69J/FxYvXjxq1Cix3KBBgx599NET
J06ovEQMBMWdeBgommjfGTxJKOjjgH2U2JIqyA0mHLTekBsqHNRHCXLDOKw3
5IYRDuqjhMO7mKB2794d0ffHdJj/tKpTZsBxzpw5c/jwYS230jt37qSbbuMV
33rrrWnTphk/D8hp76OEnz2F3HAc5IY7IDeC4meMLoPccAdH54aKrq6uOXPm
UKrMmDGD+ckdMQPulp2dvXr1auPnOXr0qN/vb2lpMX4qMIKTPYXccDfkhstw
sqeQG+6G3HAZnvdUW1vbb7/9VlJSkpKSIn57t76+nnkVnmcAwIns3VPIDQAn
Qm4AgF7c7qlvvvlG/lN5K1eupJAxoxC3MwDgUDbuKeQGgEMhNwBAL273VF1d
3S233DJs2DAxVaKjo/Py8jo6OpgX4nYGABzKxj2F3ABwKOQGAOjF/546e/bs
22+/nZCQQNkye/bsnp4eu68IAHiH3AAAvZAbAGCGxsbGqKgoCpZ9+/bZfS0A
4AzIDQDQC7kBAMwFAgFKlYKCArsvBAAcA7kBAHohNwAgDD09PeXl5f2/jdvV
1SX+jd3i4mJbLgwAuIXcAAC9kBsAwNaGDRsoOlJTU+V/WbWlpSUrK0v8tbuf
f/7ZxssDAA4hNwBAL+QGALBVWVkpfg2EJCQkpKen33fffbGxseIjGzdutPsC
AYA7yA0A0Au5AQDMnT9/fvny5ZMmTfL5fNL7tycnJ+/Zs8fuSwMATiE3AEAv
5AYAmKS9vb2+vr62tvbChQt2XwsAOANyAwD0Qm4AAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAA4y+XLl0tLS3NycvD3cwFAI+QGAOiF3AAAVkpK
StLS0uLi4sQ3b7/jjjvsviIA4B1yAwD0Qm4AAFsZGRkRMkgVABgQcgMA9EJu
AABbbW1t5/usWbMGqQIAWiA3AEAv5AYAmKSoqAipAgC6IDcAQC/kBgCwhVQB
AL2QGwCgF3IDANhCqgCAXsgNANALuQEAbCFVAEAv5AYA6IXcAAC2kCoAoBdy
AwD0Qm4AAFtIFQDQC7kBAHohNwCALaQKAOiF3AAAvZAbAMAWUgUA9EJuAIBe
yA0AYAupAgB6ITcAQC/kBgCwhVQBAL2QGwCgF3IDAIzLzMxMvCY2Njaij/RI
enq63RcIANxBbgCAXsgNAGBr+vTpEaEFAgG7LxAAuIPcAAC9kBsAAAAAAAAA
AJa5/vrr7b4Er8vLyysuLjZ+ntOnT0+ZMqWlpcX4qcAIL+wpL4yRc8gNl/HC
nvLCGDmH3HAZ7CnMgO02b948depU4+fZunXrpEmTjJ8HDPLCnvLCGDmH3HAZ
L+wpL4yRc8gNl8GewgzY7uTJkxEREfT/Bs+TlpZWUFDA5JLACC/sKS+MkXPI
DZfxwp7ywhg5h9xwGewpzAAPpk6dWlRUZOQMra2tfr+/rq6O1SVB2Lywp7ww
Rv4hN9zEC3vKC2PkH3LDTbCnMAM8WL9+fWpqqpEzlJWVjRkzpre3l9UlQdi8
sKe8MEb+ITfcxAt7ygtj5B9yw02wp7TMwOXLl0tLS3Nycpj8UphGTU1NL7/8
Mu215OTkZ5999qOPPnJx3cbGxsjIyObm5rDPkJWVRQ1SOcBT8ymyZd0K3kgV
5AYPdV2cG4LH1o+A3LjGU313a24I6KNVvJAb6tRnoKSkJC0tLS4uTnz3eMv+
qu/nn38u/QUuyZIlS7q7u11Zl9x0003vv/9+eK/t7Oyky/7qq69CHeC1+bRr
3Yq8kCrIDR7qCi7NDa+tHxFyw2t9d2tuoI/IDSupz0BGRoa8L9asxuPHj0dG
RlK5Rx55pKGh4cyZM1u2bImKiqJHCgsL3VdXlJ+fT3XDe+3+/fuvu+66UFvG
g/Npy7qVeCFVkBu21xW5LzcEj60fCXLDU313a24I6CNyw1rqM9DW1na+z5o1
ayxbjbm5uVTrnnvukW8TurunB+Pj4//991+X1RUdOHBg6NCh4VVZtmzZggUL
Qj3rwfm0Zd1KvJAqyA3b64rclxuCx9aPBLnhqb67NTcE9BG5YS2NM1BUVGTN
auzo6IiJiaFa+/btkz9+5cqV0aNH0+M7d+50U13J1atXR44cqaiuRU9PT2Ji
4ieffBL0Wc/Op8iydSvnhVRBbthbV+Ky3FBw/fqRQ25IXN9329ebSbmhgD4i
NyzAW6r88ssvVCg6Orr/9ytXrlxJT+Xl5bmprtySJUsWLVqk91U1NTVDhgxp
b28P+qyX51Nw2l3MiRMnqqur2V6MSZAb9taVc1NuKLh+/cghNySu7zsP682M
3FBAH3nODdfgLVW+/vprKjR+/Hih78sFa9eufeqpp44cOUKfbtq0iZ6aP3++
m+rKVVRUxMfH0128rletWrUqIyMj1LNenk/BaXcx27dvnzVrFtuLMQlyw966
cm7KDQXXrx855IbE9X3nYb2ZkRsK6CPPueEaDFOltbW1oaHh4sWLRq5H/HnC
u+++mz6uqqqK6DNv3jz6tLS0lD6eMWOGm+rKXbp0KSYmRu9X1ZKSknbs2BHq
WS/Pp2DhupXDv0YkyA3khhGuXz9yyA2J6/vOw3ozIzcU0Eeec8M1mKTK8ePH
09LSIq6hO9O9e/eGdz3btm2jM8yZM0foe/868YQPP/wwfUrnpI8DgYCb6ipk
Zmbm5uZqP76pqcnn8507dy7UAR6fT8vWrRz+NSJBbiA3jHD9+pFDbkhc33ce
1ptgQm4ooI8854ZrGE+Vzs7OCRMmDBo0aOHChRSnGzZsuPXWW+ng2traMK6n
oqKCXjtlyhTh2nfonnnmGfE7dO+88w49NXfuXDfVVaD79xtvvFH78VRd/b9f
Hp9Py9atnK5U6e3t7bmGInHmzJk9MgavxDzIDXvrKrgmNxRcv37kkBsS1/ed
h/UmmJAbCugjb7lhtuLi4jRtqqqqWBU1nioHDx6UN0voe9+GPXv2hHc9hw4d
orMFvSrxXfuee+45N9VV+OOPP+jkJ0+e1Hg8LYaCggKVAzw+n5atWzldqSL/
4kx/WlYCckPw/Dp3TW4ouH79yCE3JK7vOw/rTTAhNxTQR95yw2znz58/ps0/
//zDqqjxVBG/j6br+5Iqmpub6XaVTtjY2Kh4avr06fT4G2+84aa6CrSqR48e
3dvbq/F4uvefPXu2ygEen0/L1q2crlQ5e/astK9feeWVQCAg3+lavqyK3BA8
v85dkxsKrl8/csgNiev7zsN6E0zIDQX0kbfccCXjqXLx4sWEhARqZX5+/qlT
p4K+vLW1taysLDs7e9u2bQPWevDBB/u3+/Dhw/Sgz+eTvm4wYF26TX7xxRdT
UlImT55MpfsvM5Pq1tfX5+Tk0BqeMGHCQw89pPGd1UV0ndLNuxY0xsjIyJaW
FpVjWI1LcEgf5Yys27D7iJ9vlyA3kBuCzj7KGVk/jusjckOC3HBubsihjzzn
hmsw+W27H3/8cdy4cXQArfD58+f/8MMP8mfffPNN8XaVLF++fMBaX3zxhXiq
3bt3i4+cPXt24sSJ9ODjjz+usS4F++DBg0eMGPHEE0/QgqRj/H4/rROz6773
3nv0IC1XenzevHnR0dF02Ouvvz7gqElXV1dcXBzds2s5WDJ27NgPP/zQ7HEJ
zumjXNjr1kgf8a8RCXJDY13kRlBhrx8n9hG5IUFuaKzLYW7IoY8a69qSG66h
MgOZmZmJ18TGxorLSXokPT1dfjDtCFrb06ZNEw+je1h6RHyqrq6ObqXFd8/W
shp7e3sXL15MB9MapoWUkZFBe40+pe1z9OhRxcGh6q5bty41NVV6O7vPPvuM
ns3KyjK77rFjxxYsWNDc3Cwe9vvvv9P9+A033DDgqMmXX345bNiwzs5OLQdL
cnNzFZvFjHEJzukjk3VrpI8e/9cIcgO5YaSPTNaPE/uI3EBuuCA30Een5IZr
qMyA+HN9ocjfQU6upqbm9ttvj5D9QKDowoULGlej0Lcw1q5dS3fEYq2oqKh7
77339OnTKi/pX/fq1avSsz09PbSDkpOTLairQM/SXpZfTCjPP/+8+n4Jqrq6
mu7cL126pHIMw3Hx30e261aivY9hp8qhQ4d27doV3msthtxgXlfBs7nBav04
ro/IDeSGC3IDfXRKbriGGTNA7aPuPPDAA/IHda1GEa2NX3/9tba2tqOjI+y6
IrrhjYmJ0fg3ZxnW3bt3Ly3pF154QUvRMWPGlJWVaakod+XKlfj4+MrKSi0l
jI/LQX3Ui0kfBW+kCnLD1LrIjTA4uo8CciNcyA0JV7mhF/ooQW7oYnwGDhw4
sHr1avm9ufhtuKefflp+GPP/immsK9qyZQs9tX37dmvqVlVV0cq/+eabaSnm
5+e3trYOeNqffvrJ7/drObK/hQsXLl26NIwXyqGPTPooeCNVkBtm1EVuMK8r
4r+PAnJDG6w35IYFdUX891HwRm6oMz4D2dnZ1IukpKRVq1a9++67tN7onNSF
mpoa+WHMV6PGuqSxsXHo0KHi3wWzpi6tz1mzZo0dO5aOTE1N1fK2WoWFhfff
f394l1ReXk7XYHB06COTPgreSBXkhhl1kRvM6woO6aOA3NAG6w25YUFdwSF9
FLyRG+qMz0Bvb+/WrVsnTpzo8/nEHwukj/v/nSzmq1Fj3aampsTERFoYf/75
p5V1RQcPHqTSI0aM+Pvvv9VPO3nyZLrxD++S2tvbhwwZ0n8b6oI+Mumj4I1U
QW6YVFeE3GBV1yl9FJAb2mC9ITcsqOuUPgq85gZd+ebNmxctWpScnBwIBDIz
Mz/44IPu7m4zajGcAVrbDQ0N0tssKJj3c9EqdelmlgY4atSo/m8WYWpduV27
dtHAS0tLVY45duwYHfPXX3+FfTFz586le/ywXy6HPgalpY8iu1IFucGqrlPW
G3JDva5T+ihCbuiC9RYUcsN4Xaf0UcTbXQzdr+3YsWP48OER/dx2223S+78x
ZNkMWPDbnQrV1dVxcXHjxo0zYymGUllZSXfx8kcKCwtp4Oq/Dbdp06aUlBQj
dWnZjB8/3sgZNEIfB3yt9amC3GDIQesNuaHCQX0UITcYwnpTeRVyQ4WD+iji
7S6GWkaXRBf/2GOPVVRUnDp16ttvv6V7Xr/fTw8++eSTzCuaPQN01/+/Pq++
+ioN4a677hI//e6770yt+/HHHw8ePJgqvvTSS6+99trGa77//nvzinZ3d9Pi
p7orVqygm+j9+/fn5ub6fL6kpCS6AVd54cyZM+najJQ+d+4cFTpy5IiRk6hA
H7X0UWR9qiA3WHHWekNuhOKsPoqQG8ZhvSE3jHBWH0W83cUIfX/r59NPP1U8
uG7dOprYkSNHMi9n9gyUl5f3/zoPWbZsmal177zzzqB1169fb2pd+u/C4sWL
R40aJZYbNGjQo48+euLECZWXiIGguBMPA0UT7TuDJwkFfRywjxJbUgW5wYSD
1htyQ4WD+ihBbhiH9YbcMMJBfZRweBcT1O7duyP6/pgO859WdcoMOM6ZM2cO
Hz6s5VZ6586ddNNtvOJbb701bdo04+cBOe19lPCzp5AbjoPccAfkRlD8jNFl
kBvu4OjcUNHV1TVnzhxKlRkzZjA/uSNmwN2ys7NXr15t/DxHjx71+/0tLS3G
TwVGcLKnkBvuhtxwGU72FHLD3ZAbLsPznmpra/vtt99KSkpSUlLEb+/W19cz
r8LzDAA4kb17CrkB4ETIDQDQi9s99c0338h/Km/lypUUMmYU4nYGABzKxj2F
3ABwKOQGAOjF7Z6qq6u75ZZbhg0bJqZKdHR0Xl5eR0cH80LczgCAQ9m4p5Ab
AA6F3AAAvfjfU2fPnn377bcTEhIoW2bPnt3T02P3FQEA75AbAKAXcgMAzNDY
2BgVFUXBsm/fPruvBQCcAbkBAHohNwCAuUAgQKlSUFBg94UAgGMgNwBAL+QG
AIShp6envLy8/7dxu7q6xL+xW1xcbMuFAQC3kBsAoBdyAwDY2rBhA0VHamqq
/C+rtrS0ZGVlib929/PPP9t4eQDAIeQGAOiF3AAAtiorK8WvgZCEhIT09PT7
7rsvNjZWfGTjxo12XyAAcAe5AQB6ITcAgLnz588vX7580qRJPp9Pev/25OTk
PXv22H1pAMAp5AYA6IXcAACTtLe319fX19bWXrhwwe5rAQBnQG4AgF7IDQAA
AAAAAAAAAAAAAAAAAAAAAAAAkPw/mu3rWA==
    "], {{0, 95.}, {545., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{545., 95.},
  PlotRange->{{0, 545.}, {0, 95.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[1]=",
 CellID->581054987,ExpressionUUID->"80e30244-d9a0-44fb-a30a-b0f8e4764a38"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Matrix", "[", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"1", ",", "6"}], "]"}], "**", 
    RowBox[{"S", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->928845875,ExpressionUUID->"aafe1eb1-20db-4f44-a7b3-808ff1395aa4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]]},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      FractionBox["1", 
       SqrtBox["2"]], "0"},
     {"0", 
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]},
     {
      FractionBox["1", 
       SqrtBox["2"]], "0", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {4}, {1}, {3}, {2}, {4}, {1}, {3}}}, {
      2^Rational[-1, 2], 2^Rational[-1, 2], 2^Rational[-1, 2], 2^
       Rational[-1, 2], 2^Rational[-1, 2], -2^Rational[-1, 2], 2^
       Rational[-1, 2], -2^Rational[-1, 2]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->2103824781,ExpressionUUID->"089cc36e-fd3f-4d76-92e6-816741dd9cef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"Matrix", "[", "op1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat1", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1982994718,ExpressionUUID->"49249029-f4dd-4ae6-b16f-d6372d5addf9"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 8}, 0, {
     1, {{0, 0, 3, 6, 6, 9, 9, 9, 9}, {{2}, {3}, {5}, {2}, {3}, {5}, {2}, {
       3}, {5}}}, {
      Rational[1, 3], Rational[1, 3], Rational[1, 3], Rational[1, 3], 
       Rational[1, 3], Rational[1, 3], Rational[1, 3], Rational[1, 3], 
       Rational[1, 3]}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1229717678,ExpressionUUID->"66a9e643-1557-4ebb-a89f-e9f7ff23ff65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat2", "=", 
   RowBox[{"Matrix", "[", 
    RowBox[{"Dyad", "[", 
     RowBox[{"v1", ",", "v1", ",", 
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat2", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->226133649,ExpressionUUID->"40307efd-5532-4f86-b092-105744d74eef"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", 
      FractionBox["1", "3"], 
      FractionBox["1", "3"], "0", 
      FractionBox["1", "3"], "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 8}, 0, {
     1, {{0, 0, 3, 6, 6, 9, 9, 9, 9}, {{2}, {3}, {5}, {2}, {3}, {5}, {2}, {
       3}, {5}}}, {
      Rational[1, 3], Rational[1, 3], Rational[1, 3], Rational[1, 3], 
       Rational[1, 3], Rational[1, 3], Rational[1, 3], Rational[1, 3], 
       Rational[1, 3]}}]]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->225415910,ExpressionUUID->"f0e0d715-6100-4872-829e-4a6ec0856371"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat1", "-", "mat2"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->30500961,ExpressionUUID->"9308f68b-b19f-47e0-9704-f70669f92d2f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 8}, 0, {
     1, {{0, 0, 3, 6, 6, 9, 9, 9, 9}, {{2}, {3}, {5}, {2}, {3}, {5}, {2}, {
       3}, {5}}}, {0, 0, 0, 0, 0, 0, 0, 0, 0}}]]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->1373208783,ExpressionUUID->"ee4d44d8-c10a-4642-b4b1-454a08e3e9c1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "6835ca29-eb0d-4069-833a-60d9019b6d7c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1380442354,ExpressionUUID->"e59287a0-84ed-4c80-a9ec-1c3bb4120a2e"],

Cell[TextData[{
 Cell[BoxData["Dyad"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ef344f6b-5562-4d2e-8461-b2a9afc0f1fd"],
 " is also related to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Projector"]], "paclet:Q3/ref/Projector", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "1877b06d-7d22-423e-8a02-eeb45346df02"],
 "."
}], "ExampleText",
 CellID->1902391335,ExpressionUUID->"b4758486-f268-4e98-9447-2f051f1711bc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Ket", "[", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "0"}], "]"}], "+", 
     
     RowBox[{"Ket", "[", 
      RowBox[{
       RowBox[{"S", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", "1"}], "]"}]}], 
    ")"}], "/", 
   RowBox[{"Sqrt", "[", "2", "]"}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->995709017,ExpressionUUID->"1825413e-8df6-4085-9d3d-8ce22ea4ad93"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 0|>]], "+", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`S[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["S", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`S[2, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 1|>]]}], 
  SqrtBox["2"]]], "Output",
 CellLabel->"Out[1]=",
 CellID->1396154819,ExpressionUUID->"6dd8b125-ed09-469f-a3f7-1d66107357c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qc", "=", 
  RowBox[{"QuantumCircuit", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"S", "[", 
     RowBox[{"2", ",", "6"}], "]"}], ",", 
    RowBox[{"CNOT", "[", 
     RowBox[{
      RowBox[{"S", "[", "2", "]"}], ",", 
      RowBox[{"S", "[", "1", "]"}]}], "]"}], ",", "\"\<Separator\>\"", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Projector", "[", "v", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1568492666,ExpressionUUID->"ce77c113-a848-473e-95e1-7c9be301a443"],

Cell[BoxData[
 InterpretationBox[
  GraphicsBox[{
    {Dashing[{Small, Small}], LineBox[{}]}, 
    LineBox[{{{0, -1}, {5, -1}}, {{0, -2}, {5, -2}}}], {
     {GrayLevel[1], EdgeForm[Opacity[1]], 
      RectangleBox[{0.6, -2.4}, {1.4, -1.6}]}, InsetBox[
      StyleBox["\<\"H\"\>",
       StripOnInput->False,
       FontSize->Scaled[0.08000000000000002],
       FontWeight->"Light",
       FontSlant->Italic], {1, -2}, NCache[
      ImageScaled[{Rational[1, 2], Rational[1, 2]}], 
       ImageScaled[{0.5, 0.5}]]]}, {LineBox[{{2, -2}, {2, -1}}], 
     DiskBox[{2, -2}, 0.09], {CircleBox[{2, -1}, 0.26666666666666666], 
      LineBox[{{{1.7333333333333334`, -1}, {2.2666666666666666`, -1}}, {{
         2, -1.2666666666666666`}, {2, -0.7333333333333334}}}]}}, 
    {Dashing[{0, Small}], 
     LineBox[NCache[{{3, Rational[-5, 2]}, {3, Rational[-1, 2]}}, {{
        3, -2.5}, {3, -0.5}}]]}, {
     {GrayLevel[1], EdgeForm[None], 
      PolygonBox[{{4.4, -0.6}, {3.6, -0.6}, {3.6, -2.4}, {4.4, -2.4}}]}, 
     {GrayLevel[1], EdgeForm[Opacity[1]], 
      PolygonBox[{{4.4, -0.6}, {3.6, -2.4}, {3.6, -0.6}, {4.4, -2.4}}]}}},
   AxesStyle->Large,
   FrameStyle->Large,
   ImagePadding->{{23.400000000000002`, 23.400000000000002`}, {1, 1}},
   ImageSize->226.79999999999998`,
   PlotRange->NCache[{Full, {
       Rational[-5, 2], 
       Rational[-1, 2]}}, {Full, {-2.5, -0.5}}],
   PlotRangePadding->Scaled[0.025]],
  Q3`QuantumCircuit[
   $CellContext`S[2, 6], 
   Q3`CNOT[{$CellContext`S[2, Q3`$] -> 1}, {
     $CellContext`S[1, Q3`$]}], "Separator", 
   Q3`Projector[
   2^Rational[-1, 2] (
     Ket[<|$CellContext`S[1, Q3`$] -> 0, $CellContext`S[2, Q3`$] -> 0|>] + 
     Ket[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[2, Q3`$] -> 1|>]), {
     $CellContext`S[1, Q3`$], 
     $CellContext`S[2, Q3`$]}]]]], "Output",
 CellLabel->"Out[2]=",
 CellID->1155702287,ExpressionUUID->"b332665c-1ce4-409b-8bb5-5c34b3c9131b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qc", "//", "ExpressionFor"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->9487602,ExpressionUUID->"834234c2-7e80-4bea-9484-6b744bf34a03"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 1]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 1]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 1], 
     $CellContext`S[2, 1]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[1, 1]], 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[2, 2]]}, "RowWithSeparators"]},
      "RowDefault"],
     Q3`Multiply[
      $CellContext`S[1, 1], 
      $CellContext`S[2, 2]]]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[1, 2]], 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[2, 1]]}, "RowWithSeparators"]},
      "RowDefault"],
     Q3`Multiply[
      $CellContext`S[1, 2], 
      $CellContext`S[2, 1]]]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 2]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 2]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 2], 
     $CellContext`S[2, 2]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 3]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 3]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 3], 
     $CellContext`S[2, 3]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[1, 3]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[2, 3]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1537417752,ExpressionUUID->"472c5898-dc62-4899-8806-a33afaf3a98f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpressionFor", "[", 
   RowBox[{
    RowBox[{"Matrix", "[", "qc", "]"}], ",", 
    RowBox[{"S", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], "]"}]}], "]"}], "//", 
  "Elaborate"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->390547132,ExpressionUUID->"39f79974-edaa-444d-9857-a58e740b1a6a"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 1]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 1]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 1], 
     $CellContext`S[2, 1]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[1, 1]], 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[2, 2]]}, "RowWithSeparators"]},
      "RowDefault"],
     Q3`Multiply[
      $CellContext`S[1, 1], 
      $CellContext`S[2, 2]]]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[1, 2]], 
         InterpretationBox[
          TemplateBox[{"S", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
            TemplateBox[{",", "\",\"", "\"X\""}, "RowWithSeparators"]}, 
           "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
          $CellContext`S[2, 1]]}, "RowWithSeparators"]},
      "RowDefault"],
     Q3`Multiply[
      $CellContext`S[1, 2], 
      $CellContext`S[2, 1]]]}], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "-", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 2]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Y\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 2]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 2], 
     $CellContext`S[2, 2]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[1, 3]], 
        InterpretationBox[
         TemplateBox[{"S", 
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
           TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]}, 
          "Subsuperscript", SyntaxForm -> SubsuperscriptBox], 
         $CellContext`S[2, 3]]}, "RowWithSeparators"]},
     "RowDefault"],
    Q3`Multiply[
     $CellContext`S[1, 3], 
     $CellContext`S[2, 3]]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[1, 3]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]], "+", 
  FractionBox[
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"], 
      TemplateBox[{",", "\",\"", "\"Z\""}, "RowWithSeparators"]},
     "Subsuperscript"],
    $CellContext`S[2, 3]], 
   RowBox[{"4", " ", 
    SqrtBox["2"]}]]}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1033943584,ExpressionUUID->"7c5a932e-f425-48ae-9164-761caf453b82"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "0eb34fa1-7d21-4990-861d-1df7ddb2e87a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->960582794,ExpressionUUID->"3d828226-7263-4b8c-927d-6d95744194c7"],

Cell[TextData[{
 "Now consider ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Qudits"]], "paclet:Q3/ref/Qudits", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ceac1fb3-8072-4ce3-b631-44ae3ef76245"],
 "."
}], "ExampleText",
 CellID->403448163,ExpressionUUID->"cb96b2f8-631f-438f-940b-be8012dea049"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->445557620,ExpressionUUID->"f49cb4f4-083a-482a-bcad-743ba39f62e3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v1", "=", 
  RowBox[{"Ket", "[", 
   RowBox[{
    RowBox[{"A", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"v2", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"A", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}], "-", 
   RowBox[{"I", "*", " ", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"A", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->211442251,ExpressionUUID->"26978093-1469-4ddf-a347-a724b777a9b0"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
      SubscriptBox["0", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["A", 
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
          $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
      SubscriptBox["1", 
       TemplateBox[{",", "\",\"", 
         InterpretationBox[
          SubscriptBox["A", 
           TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
          $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
     "RowWithSeparators"]},
   "Ket"],
  Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 
    1|>]]], "Output",
 CellLabel->"Out[2]=",
 CellID->1228825415,ExpressionUUID->"225e01c7-d4a6-4432-bdc4-d6fd6f6cb93e"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["A", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["A", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 1|>]], "-", 
  
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["A", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
        SubscriptBox["0", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["A", 
             TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
            $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`A[1, Q3`$] -> 1, $CellContext`A[3, Q3`$] -> 
      0|>]]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->518516706,ExpressionUUID->"b9e0f869-345e-4a1a-b623-4df198e4d072"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v1", ",", "v2", ",", 
    RowBox[{"A", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dagger", "[", "v1", "]"}], "**", "op1"}], "-", 
   RowBox[{"Dagger", "@", "v2"}]}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"op1", "**", "v2"}], "//", "Simplify"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->413386493,ExpressionUUID->"18dcec95-1dc4-481c-9838-04fffaebda9c"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     InterpretationBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["0", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["A", 
               TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
              $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
          SubscriptBox["1", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["A", 
               TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
              $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]}, "Ket"], 
      Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 1|>]], 
     InterpretationBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["0", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["A", 
               TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
              $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
          SubscriptBox["1", 
           TemplateBox[{",", "\",\"", 
             InterpretationBox[
              SubscriptBox["A", 
               TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
              $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]}, "Bra"], 
      Bra[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 1|>]]},
    "RowDefault"],
   Q3`Dyad[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 
     1|>, <|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 1|>]], 
  "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      InterpretationBox[
       TemplateBox[{
         TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
           SubscriptBox["0", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["A", 
                TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
               $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
           SubscriptBox["1", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["A", 
                TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
               $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
          "RowWithSeparators"]}, "Ket"], 
       Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 1|>]], 
      InterpretationBox[
       TemplateBox[{
         TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
           SubscriptBox["1", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["A", 
                TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
               $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
           SubscriptBox["0", 
            TemplateBox[{",", "\",\"", 
              InterpretationBox[
               SubscriptBox["A", 
                TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
               $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
          "RowWithSeparators"]}, "Bra"], 
       Bra[<|$CellContext`A[1, Q3`$] -> 1, $CellContext`A[3, Q3`$] -> 0|>]]},
     "RowDefault"],
    Q3`Dyad[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 
      1|>, <|$CellContext`A[1, Q3`$] -> 1, $CellContext`A[3, Q3`$] -> 
      0|>]]}]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->16488269,ExpressionUUID->"8ce6c367-3211-46f3-98d8-3b678892ad4d"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[3]=",
 CellID->92946620,ExpressionUUID->"2f3e10c9-7d2c-41a2-bc25-dc11e1a77473"],

Cell[BoxData[
 RowBox[{"2", " ", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["A", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`A[1, Q3`$]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["A", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`A[3, Q3`$]]}, "RowWithSeparators"]]}, 
      "RowWithSeparators"]},
    "Ket"],
   Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[3, Q3`$] -> 
     1|>]]}]], "Output",
 CellLabel->"Out[3]=",
 CellID->933230971,ExpressionUUID->"ea226082-06b3-4983-9d36-55f04573525a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat1", "=", 
   RowBox[{"Matrix", "[", "op1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat1", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1180733851,ExpressionUUID->"b55d8a50-3ca0-49c8-b847-e8cf661b1442"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "1", "0", "\[ImaginaryI]", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {9, 9}, 0, {
     1, {{0, 0, 2, 2, 2, 2, 2, 2, 2, 2}, {{2}, {4}}}, {
      1, Complex[0, 1]}}]]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->616641788,ExpressionUUID->"99633a56-feae-4b20-bd2d-75dd69ebd55b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"bs", "=", 
   RowBox[{"Basis", "[", "op1", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"diff", "=", 
   RowBox[{"mat1", "-", 
    RowBox[{"Outer", "[", 
     RowBox[{"Multiply", ",", 
      RowBox[{"Dagger", "[", "bs", "]"}], ",", 
      RowBox[{"op1", "**", "bs"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"diff", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->314182906,ExpressionUUID->"456caf00-df38-46b0-96d5-5ca0c7c8b931"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->1858991813,ExpressionUUID->"7c69ddf1-c4bc-409c-b4b1-bb93759f8597"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "30d852d6-4ae4-45d9-bf79-c52dda89eed5"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"fcbb5495-788b-421f-8707-6655e88bd95f"],
 "Generalizations & Extensions",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "27b3252c-ee43-4cec-bcc4-91647bc5c84d"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1020263627,ExpressionUUID->"5d8f4513-4d81-4e35-b1f2-aa9ca10d05bf"],

Cell[TextData[{
 "Let us consider multiplications of two ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d68d3efc-202c-41bc-93aa-64bb3be30e56"],
 "s of different kinds."
}], "ExampleText",
 CellID->643028171,ExpressionUUID->"9757989d-3616-4120-a76b-ab71ce1ba0dd"],

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Boson", ",", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Let", "[", 
  RowBox[{"Fermion", ",", "c"}], "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1615025532,ExpressionUUID->"de88288a-7921-4deb-823d-1345439a84f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"vec", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", "0"}], ",", 
     RowBox[{
      RowBox[{"c", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", "0"}]}], "]"}], "+", 
   RowBox[{"I", " ", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "1"}], "}"}]}], ",", 
      RowBox[{
       RowBox[{"c", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "->", "1"}]}], 
     "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1618552189,ExpressionUUID->"996ce1be-7c69-4c4c-a364-db9cf9d964d9"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`a[1]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`a[2]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["c", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`c[1]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["c", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`c[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[1] -> 0, $CellContext`a[2] -> 0, $CellContext`c[1] -> 
     0, $CellContext`c[2] -> 0|>]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["2", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`a[1]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`a[2]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["c", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`c[1]]}, "RowWithSeparators"]], 
        SubscriptBox["1", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["c", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`c[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`a[1] -> 2, $CellContext`a[2] -> 1, $CellContext`c[1] -> 
      1, $CellContext`c[2] -> 1|>]]}]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->643355981,ExpressionUUID->"342df1c5-c63c-45c7-b779-622cd2fec3be"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ac", "=", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], ",", 
    RowBox[{"c", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->144765629,ExpressionUUID->"6e6e22ce-cb62-4c37-b47f-5cf97ab6f8b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    SubscriptBox["a", 
     TemplateBox[{",", "\",\"", "1"},
      "RowWithSeparators"]],
    $CellContext`a[1]], ",", 
   InterpretationBox[
    SubscriptBox["a", 
     TemplateBox[{",", "\",\"", "2"},
      "RowWithSeparators"]],
    $CellContext`a[2]], ",", 
   InterpretationBox[
    SubscriptBox["c", 
     TemplateBox[{",", "\",\"", "1"},
      "RowWithSeparators"]],
    $CellContext`c[1]], ",", 
   InterpretationBox[
    SubscriptBox["c", 
     TemplateBox[{",", "\",\"", "2"},
      "RowWithSeparators"]],
    $CellContext`c[2]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1438741094,ExpressionUUID->"74219b15-7d69-4f70-bcde-3f8f81362ca4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"vec", ",", "vec", ",", "ac"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->863221295,ExpressionUUID->"00a5f0fd-0339-4470-880c-83161f74f5e5"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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

    "], {{0, 40.}, {480., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{480., 40.},
  PlotRange->{{0, 480.}, {0, 40.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1183023600,ExpressionUUID->"0e96c4fd-47f9-4bb2-91be-77288490e098"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "**", "op"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->2132482861,ExpressionUUID->"131d7537-67da-41db-ac93-54eb26f2db7c"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQtsVFW3x8fSVyi2dwwWUm30So0IIVRQBNTCNVa9rY9LSSlWorQBPon9
RCnxUmOtiqIQRb+IoiA+KmiU0EijgKSJNiUBTWqLgyYtiA9K0wqVRh6lFnru
ut1hcr6Zzpkzc/Y6z/8v0TBn9tlr7//891r7dB7nP8uXFS1J8Pl8lan0v6Ky
//2v5cvLqub+Bz0ofqxy6T8eW7zovx9bsfgfi5dPLx9BB/+H/jtN//j/fysA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAp3H55ZdbPQS7sGzZstdff914Px0dHZMm
Terp6THelTsw7jG4NAhcygQ8Fg40CYJ1xwSqg0TgUiac6DEnjpmJ1157bfLk
ycb7eeutt8aPH2+8H9eA7C0RuJQJeCwcaBIE644JVAeJwKVMONFjThwzE0eO
HPH5fPR/g/3k5+evXLlSypDcAbK3ROBSJuCxcKBJEKw7JlAdJAKXMuFEjzlx
zHzQNe+6deuM9HDy5MmkpKT9+/fLGpILQPaWC1zKATwWDjRRg3XHAaqDXOBS
DpzoMSeOmY+ampq8vDwjPWzdujUrK2twcFDWkFwAsrdc4FIOXOCxvr6+v/76
S2KHLtBEIlh3HKA6yAUu5YDPY0ePHn3zzTcXLFgwfvz4GTNmlJWVybqqijrm
QCDw5JNPklsmTpy4cOHCjz76SErcqFgSt7W1dcSIEcePH4+7h+Li4qVLl2o0
8JSeAhOyt6dUhUs5MHOHwJTP77zzTp/Pd+zYMeNdCbDu1HCvO74qrwe6MKyt
raXhSfkypn5QHeRiQnVQrHOLc106LPX19X6/3/fvXHLJJU899ZTxzrXHvHPn
zlGjRoWEppzz999/Gw9tw7jE1VdfvXnz5vjOPXfuHA37q6++itTAg3oq/Nnb
g6rCpdIxbW/Pl8/z8/Opq46ODinjVLDuwuBbd6xVXpv33nuPnJOeni6CTpky
hTuiGlQH6bBWB6vc4nSXhlNXV0cLnOYyb948Wv7d3d10XTZ//nwxwT179hjs
X2PMhw4dogtAinLvvfe2tLQcO3Zs/fr1iYmJdKSqqspgXA2siit4/PHHKW58
537xxRcZGRmRFq839VSYs7c3VYVLpWPO3p41n5Mrpk+ffuLECVmjxboLgWnd
cVd5bQoKCtT7T8ftmuDSEPiqg2KdW5zu0nBI5NLS0rfffjvk+KxZs2iC5eXl
BvvXGHNFRQWFuO2229QvNF090UG/33/69GmDoe0WV/DNN9+kpqbGF2XRokUP
PPBApGe9qafCnL29qSpcKh1z9vbc+VwuWHchMK07a13R29vbPcTTTz/txF0T
XBoCX3VQrHOL012qn3Xr1tEEp02bZrCfSGM+c+ZMWloahdi+fbv6+MDAwNix
Y+n4pk2bDIa2Vdwg58+fHz16dEh0PVy4cCEzM/Ozzz4b9lnP6qlwZm/PqgqX
Ssfab+TJyudywboLgWndRcJkV4hwjts1waUhmONSS9xiVVwzq8Py5ctpgvff
f7/BfiKN+ccff6T+R44cGf7uzKOPPkpPLVu2zGBoW8VVU1ZWtmDBgljPampq
SklJOXXq1LDPellPvuztZVXhUrlYu7ePO5/39fXl5uZOVnHrrbfKGhXWXTgc
6y4Ssqq8Thy6a4JLwzHBpdjb6+Hnn39uaGjQ335wcPD666+nCb7yyivxRQwS
acx79uyh/nNycpShy8Dq6urS0tKDBw/Sw7Vr19JTc+fONRjaVnHV7Nixw+/3
01V2TGdVVlYWFBREetbLevJlby+rCpfKxcK9vZF8fuHChd27d+/atatwCOph
1KhRsgaGdRcOx7obFolVXifO2jVF7QEuZXUp9vZ6eOedd2655Rb97V999VWa
XUZGhvGfO4s0ZvHZMPEnoC+//FJ8f0H8AaG2tpb+PX36dIOhbRVXzdmzZ9PS
0mK62iLGjRu3cePGSM96WU++7O1lVeFSuVi4t5eSz/85xP79+03Y23vZJxzr
blgkVnmdOGvXFLUHuJTVpdjb6yGmvX1LS0tycjLNjs6KL5yaSGPesGEDhbj9
9tuVoV9zEv6855576OGnn35K/87NzTUe3T5xQygqKqqoqNDfPhAIJCQkdHV1
RWrgZT35sreXVVXgUqlYtbeXlc/N3Nt72ScKw7oLR26V14mzdk1Re4BLWV2K
vb0e9O/t29vbs7KyxGWglBuHRRrzjh07KMqkSZOUi+8rPfzww+J9pTfeeIOe
KiwsNB7dPnFDoOvrK6+8Un/7559/XvsV9LKefNnby6oqcKlUYnIp5d4LkdHf
j8R8bube3ss+URjWXQjSq7xOnLVritoDXMrqUuztI6GuDnShN3PmzKjV4fDh
w1dccQXNKy8vr6+vj3XMzc3NFGjYZ8VvEC1ZsiT8KeOJyKq4Ifzyyy8U68iR
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
IWu0kRRgnUVUCgoK1AnTTFeQwvfee298537xxRcZGRmRtiKHDh2iy3OaDvXf
0tJy7Nix9evXJyYm0pGqqioDQ46CVXGDcNcCq9wCl0rEBS7VA3deRT4PgWml
eFZPBfmcAb58rnhST4Unn5PIpaWlb7/9dsjxWbNm0QTLy8ulRzRCJAWsnUVv
b2/3EE8//bTJrvjmm29SU1NPnz4dx7mLFi164IEHIj1bUVFBc7ntttvUy5Cu
bemg3++PL6IerIobhLsWWOUWuFQiLnCpHrjzKvJ5CEwrxbN6KsjnDPDlc8WT
eirmfsZy3bp1NMFp06aZFlEPsSpg8ixEODNdcf78+dGjR2/fvj3WEy9cuJCZ
mfnZZ58N++yZM2fS0tJoLiE9DwwMjB07lo5v2rQpzhFrYlVcNaZ998p8t1gV
Fy6VjrXf75OVV5HPQ2BaKZFwvZ4K8jkD5rjUO3oq5ubz5cuX0wTvv//+WE/s
6+vLzc2drOLWW2+VNapYFYh7FvFhiSvKysoWLFgQ61lNTU0pKSmnTp0a9tkf
f/yRJjJy5Mjw984effRRemrZsmXxjDUaVsVVg1rAAVwql7hd+vPPPzc0NBiM
LiuvIp+Hw7FSIuEFPZHPOTDBpZ7S07S9/eDg4PXXX08TfOWVV2I9ly7Ndu/e
vWvXrsIhqIdRo0bJGlhMChiZRXxY4oodO3b4/f6BgYGYzqqsrCwoKIj07J49
e2giOTk5ytBFenV1dWlp6cGDB+nh2rVr6am5c+caHLat4qpBLeAALpVL3C59
5513brnlFiOhJeZV5PNwOFbKsHhET+RzDkxwqaf0NG1v/+qrr9LsMjIyjPx8
5T+H2L9/v1V7eymziAlLXHH27Nm0tLRY/xY3bty4jRs3RnpWfHJYvOHy5Zdf
im+XiD/v1NbW0r+nT59ucNi2iqsGtYADuFQuFu7tJeZV5PNwOFbKsHhET+Rz
Dkxwqaf0NGdv39LSkpycTLOjKmCkH2v39rJmERNWubGoqKiiokJ/+0AgkJCQ
0NXVFanBhg0baCK33367MvRbf2L3cs8999DDTz/9lP6dm5trfNj2iasGtYAJ
uFQiVu3t5eZV5PNhkb5SwvGOnsjnTHC71FN6mrC3b29vz8rKEn+GMnjjMAv3
9hJnERNWubG2tvbKK6/U3/7555/Xru87duygiUyaNEm5+KmDhx9+WHzq4I03
3qCnCgsLDY7ZVnHVoBYwAZdKJNZPs1y4CF2YzJw584IK/f1Iz6vI58MifaWE
4Ck9kc+Z4Happ/Tk3tsfPnz4iiuuoHnl5eX19fUZ7M2qvb3+WUhPazpdIT3u
L7/8QnGPHDmis31+fv7KlSs1GjQ3N1OHw6otfiFqyZIl4U8Zn5dVcdXYsBbI
naBVcW3iUsXwvKyKqyYml4p7CEZC5ysitzoIkM+HRfpKUeM1PZHPmeKyulTx
mJ6se/u2trbs7Gya1A033NDb22u8Q0v29npm0dLSQsX3mmuuGTFixJgxY0pK
SmR94FDbFXxxP/nkk7Fjx+p3WnV19ezZszUaHD9+XNzrpLW1NeSpadOm0fHV
q1cHj0icl1Vx1dinFuzdu7ewsJAKcUpKyk033fTyyy/H+t0lW8W11qWKvHlZ
FVdNTC7t7Oxsv8izzz6bm5vbrkLPn+6lVwcB8vmwSF8pQTyoJ/K5U/J5CJ7S
k29v/913340ePZpmNGPGjJMnT0rp0/y9vZ5ZHD58OCEhgTxZXl5OL0pxcbFI
dOoCR+du3bqVcsuGDRtiGp6GK6LGbW5uJrmmTp06YcIECh2+bdCA2kf6U+Gw
UCzKnz09PRpt7r77bhphyAfqfvjhBzpIEwlerUvXU1bcuPW0SS0Q33S77LLL
aBYvvvgiJRN6SKcEG3C4NGpch7o06rwUHpdGjWu+S+P4vD1HdRAgnw8Lx0pR
vKon8rmD8rkaT+nJtLffvXu3uBVLfn6+xDsqmry31z+LnTt3qt+LJH/SWfv2
7RMPX3rpJfFHOWLx4sUxDU/bFRpxqeAmJyeTYebNm0fGoONJSUnff/+9nqD9
/f3p6enUeUxDzc7O/vDDDzUa7Nq1i4ZBi3HLli3iSGdn53XXXUcH58yZo3Ne
Sux6SolrRE871IIDBw4kJibm5OR0d3cHDzY1NQV/UJ3JpdpxnetS6XpKiWuJ
S2Pd2zNVBwHyeThMK8WzeiKfOyifq/GUnhx7+8bGRhqAEMHv99Pyp4eJKubP
nx9Th729vZ1DLByivr4+NTW18yIGRxtJgThmEQgE3n///aqqKqp0dBZd4onj
dDFCF3rid6r1uKKoqCjzInQVI8YQPHLXXXfpifvMM8/k5eX9+eefok1dXR09
VVxcrEcTStqXXnrpuXPn9DQOUlFREbJVDmFwcPChhx6iYdAaIaMWFBTQWqaH
tDzb2trC28vSU0pcI3qy1gKdbhFyady/j8ml2nGd61LpekqJa4lLY9rbS68O
ISCfh8OxUrysJ/K5g/K5Z/Xk2NvTOvJponNsQcSbFJH4448/jIw2kgIxzYKu
HK+99lo6OHHiRHpNxRfNPvjgA3WHNE6drhCfsI2E+tfwtOOeP38+2FLcmpma
6dHkkUceifU1IhoaGkaOHHn27FmNNrSBqa6uputQMRcqAbNmzero6AhpJldP
WXHj1pO1Fuh0S1lZGT08dOiQdiDpLo0a16Eula6nrLjmu7S5ufndd9/V2Vh6
dQgB+TwcjpXiZT2Rzx2Uzz2rp2n3rrItxhXYvn27b+h9819//VUc+fzzz33G
9qIS4wr6+/vT0tL03MGNNhhZWVnBP6roZ2BgwO/319fX6wnx008/7du378yZ
M+HP8ukpJa5Av56Kie/haiB+biXqnUGku1RnXIGDXMqnp5S4ApNdageQz0Mw
YaVo4zI9FeRzZ+ZzbVymp+KWfG4E4wosXbqUXh31n9dWr15tQu7SGVewfv16
n767inz77bdJSUnxfcHtwQcfLC8vj+NENS7TU7FHLRAf5549e7b67wDd3d0n
TpxQN5Ouqs64Age51GV6Km6pBcjnIVi+Ulymp4J8jnxuez0Vt+RzIxhXYM2a
NSR4aWlpY2Pjli1b6KpKvO3Cnbt0xiVaW1tTU1PF/WWidltVVXXHHXfEN6Rt
27aRnjHdvCYcl+mp2KMWEOKXIqZMmbJ58+a6urqamhq/30/zVbeRrqrOuIrT
XKq4S0/FLbUA+TwEy1eKy/RUkM+Rz22vp+KWfG4E4wr09fXNmTNH5I2UlJT7
7rtv79699O/a2lp1M+mu0Bk3EAhkZmZmZ2f/9ttverqdMGECXR7GN6RTp07R
SJqamuI7XeAyPRXb1AKa4KpVqzIyMoJzLCkpCfk2Okfu0hPXcS5V3KWn4pZa
gHweguUrxWV6KsjnyOe211NxSz43giwFurq6Dhw40N/fH6kBhyuixqVrPZrg
mDFjhv1BmHDa29tpkEePHo17PIWFhZWVlXGfHsQdegpsUgsEg4ODv//++8GD
B4O/7qWGSVXtuM51qeIKPQXuqAXI52rss1LcoacA+Vw7rnNdqrhCT4E78rkR
TFOAzxWRaGhoSE9Pv+qqq/RbYu3atVOnTjUSdOPGjTk5OUZ60Ikj9BTYqhZo
4whV4VINLHSpHcBKUYOVogHyOQdwqVw8ns+NwK0AXZP+a4jnnnvON3T/PvHw
66+/Zo378ccfJycnU8QnnnjihRdeWHWRxsZGjbNmzpxJbYzE7erqSkhIoMtP
I51o4Cw9BfavBc5SFS6NhLUutQNYKWqwUiKBfM4BXCoX5HMjcCuwbds233As
WrSINe7NN988bNyamppIp4gFEggEDIampUo+NNhJJBykZxD71wIHqQqXamCt
S+0AVkoQrBQNkM85gEvlgnxuBCgQZNOmTePGjTPez5o1a2688Ubj/bgG+9cC
BwGXMuEOj7ljFlLASmEC+VwicCkT8BgUCFJSUrJixQrj/bS1tSUlJfX09Bjv
yh2gFkgELmXCHR5zxyykgJXCBPK5ROBSJuAxKAC4QS0A9scdHnPHLICdQT4H
9gcegwKAG9QCYH/c4TF3zALYGeRzYH/gMSgAuEEtAPbHHR5zxyyAnUE+B/YH
HgMAAAAAAAAAAAAAAAAAAAAAAAAAAMBk/g/0wjvY
    "], {{0, 40.}, {506., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{506., 40.},
  PlotRange->{{0, 506.}, {0, 40.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->1674041274,ExpressionUUID->"5533c9cf-205b-4b60-b316-4f04ab52fc99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "**", "op"}], "/", 
    RowBox[{
     RowBox[{"KetNorm", "[", "vec", "]"}], "^", "2"}]}], "-", "op"}], "//", 
  "Garner"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1980240024,ExpressionUUID->"73b76c20-1630-4908-b757-0bd73fb92f86"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[6]=",
 CellID->624893981,ExpressionUUID->"75d8cfcf-2b8a-42c3-a1ef-6d84a78947d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "18f1c89d-0c1a-491b-b680-64a6215f9c8d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1134327929,ExpressionUUID->"1bdc1e98-1f90-4647-a759-c5a25981379f"],

Cell[TextData[{
 "Let us consider multiplications of two ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f359d171-4c5a-48bd-9035-281030bfe0c1"],
 "s of the same kind."
}], "ExampleText",
 CellID->789695703,ExpressionUUID->"b15db1c0-715e-4b37-9301-28ef69a5e971"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"a", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}], "->", "0"}], "]"}], "+", 
   RowBox[{"I", "*", 
    RowBox[{"Ket", "[", 
     RowBox[{
      RowBox[{"a", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "->", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"w", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"a", "@", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "->", "1"}], "]"}], "-", 
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"a", "@", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "->", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->21571257,ExpressionUUID->"e883eb18-161d-4fa2-a676-9725f2746d53"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`a[1]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`a[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[1] -> 0, $CellContext`a[2] -> 0|>]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["2", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`a[1]]}, "RowWithSeparators"]], 
        SubscriptBox["3", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`a[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`a[1] -> 2, $CellContext`a[2] -> 3|>]]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->440661431,ExpressionUUID->"3ceaeed9-269c-47d7-b6f4-5efc274897ae"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`a[2]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`a[3]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[2] -> 1, $CellContext`a[3] -> 1|>]], "-", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["3", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`a[2]]}, "RowWithSeparators"]], 
       SubscriptBox["2", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`a[3]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[2] -> 3, $CellContext`a[3] -> 2|>]]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1673055961,ExpressionUUID->"87f68010-b814-40a2-bea6-3b7feddd397d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v", ",", "v", ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op2", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"w", ",", "w", ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"2", ",", "3"}], "}"}]}]}], "]"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->329168220,ExpressionUUID->"87dd871b-e657-4576-993f-2bad5d8dd4ad"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yCpYU7hiv1LCsovc1gergA7Wq/fa2loabcizzz33HJ1asGBB8Cnrjo2U3QB+
/vlnsnX06FGD7dPT05csWaLTwM3+DOtOy747RguDEbGzJnFzZBUBSlHz448/
XnPNNdT/5MmT29vbdVqKu6XX19ezB1mHfK4ClBKMkVm4LbIK1pQoV4pxu8jt
K4JVQAfr1fvp06fZ0/Jp2AGnJkyYQMdXrlzpP1JXV0eCHTFiRExMzNChQ2fP
nm36g0mRshvA9u3bhw0bZjwoJSUltC/TaeBmf4Z1p6WtbpM2Bne+dtYkbo6s
IkApfhobG4cPH04Tufnmm7U+cyhuXmpSUlJoGOrlxmlKef7552mQDleKHxdG
VsGaEuVKMWgXuW0ErAI6cPm2pnvvvZdGG/Bxpm+++YYOer1e/z6Ldkb0kmKX
m5v78ssvZ2VlMVerRXH27NmtW7fS7DZu3HjFIfGyW1tbSwtTamrqmDFjyHTw
rUYHah/yFwhakC2KYGtrqw3zUqLNn3J/7l1xcWQVMUohvv7668GDB9M4J06c
SD4J2YavP+mqioqK4KW8o6ODffve+vXrDdq1XylR9Ll3d0ZWwZoS5UoxYhe5
bRCsAjpwqd737t1L4yEnl5eXsyO0h73xxhvp4IwZM9Qt9+zZo35Hg+JIbQ4e
PMhevvTSS2yrTsyfP/+KQ+Jil0QaFxc3cODAWbNmsQf++Hw+gw/8oUj169eP
OjfS2A/tEN99913R81Ki0J/SV++ujawgpezbt499HUx6err+t/hx9Ofy5cvZ
m7MNDQ3+g7S+sNsycfjwYSN2I6KUaKneXRtZrCnBdqNLKVe0i9w20tgPVgEt
uFTvXV1djz76KNmludMApk+fTjGil+T2xsbG4PY033feeae4uJjUQc1os8OO
09JAWx72JFgjdwYudpcuXUohOHPmDGuza9cuOkUhMOITSpu+fftevHjRSGM/
BQUFATcuEfNSotCftlXv586dO9HNvG52794dHx9/ogeLnUMpwYhQSnV1Nd3o
2K0yMTGRbuD0MlbFnDlzjMxLCdOflC3styvEoEGD7rnnnqlTp1JNy46sWLEi
+BLnKCXcmiQiSnFzZLGmRKlSDNpFbmMVsD+39VuSSEtKSmgHwQZPTpsyZUpz
c3NAM9pD3XDDDdRg7NixmZmZ7I9EtmzZom7T0tJi8M7Ay+6lS5f8LdnX8lIz
I9afeOIJg35WU1VVlZCQcOHCBZ027vSnbdV7RkaGRxvymJXOoZRgRCiF7oQ6
QQy4B/L156lTp6hZcnKy1+v1m6Oet2/fHtDSaUqpra196623jLePiFLcHFms
KVGqFIN2kdtGWqrBKqAFr+qdQTr97rvvDh48GPJxlzt37vR0v1/2yy+/sCMf
fvihxTsDR7uMjo4O2r4Z+W4vMpqUlOTfuBmns7OTNom0dzNiwj3+VCLxyRkR
QCnBRkUrRR9x/mxrazt06BD5M2QdC6XoY30WkkUWa4o0SkFuB4BVIIK5bT0b
8/PzaczqTffKlSu5eI+LXcaGDRs8xp7z/9VXX/l8Pq0/kdDnkUceyc3NNXGh
Gsn8qaAm6UGyyEIp+nYZUIoJJIsslKJvlxEVSkFuB4Dc1rfLEJTb1rNx1apV
NLDs7Ozq6ury8nLaX7D3GkR7z6BdpftZnfHx8ew7Gq7YbXFx8V133WVuSBUV
FeRPi8/zl8yfCmqSHiSLLJQCpYQESgkASpFGKcjtAJDbEcxt69nY3t4+Y8YM
NvJevXo98MADX375Jf1cVlambsbdewbtNjQ0DBkyZPjw4b/++quRbseMGUMb
JXNDamtro5EcOHDA3OUMyfypoCbpQbLIQilQSkiglACgFGmUgtwOALkdwdzm
pYKTJ08ePny4o6NDqwF37xmxS7semuDQoUND/iF8ME1NTTTIY8eOmR5PRkZG
UVGR6cv9yOFPBmoSNXJEFkqBUrSAUtRAKTIpBbmtBrkd2dy2TQWCvKdDVVVV
v379rrvuOuOuW716dWpqqhWjpaWlo0aNstKDQaLCnwzUJGERFZGFUnSAUuwx
FBWRhVJ0iDqlILfVILd1sCG3RWcj7c7+080LL7zg6f7OLPby888/F2p327Zt
cXFxZPHpp59+8cUXV/RQXV2tc9WkSZNCPtLTOLQX83q9R44csdKJDtHlTwZq
EiNEV2ShFC2gFChFDZSiRTQqBbmtBrmthT25LTobKyoqPKHIy8sTavfWW28N
aXfZsmVal7BEUn/HljkopSleFjvRIor86Qc1iRGiKLJQig5QCpTiB0rRIRqV
gtz2g9zWwZ7clmO94MKmTZtGjhxpvZ9Vq1bdcsst1vuRBjlyTI5ZcAFKEYQc
OSbHLLgApQhC1uo9ikBuCwLVuwlmz569ePFi6/00Njb6fL7W1lbrXcmBHDkm
xyy4AKUIQo4ck2MWXIBSBIHqPeIgtwWB6h04BzlyTI5ZACcjR47JMQvgZFC9
A1lB9Q6cgxw5JscsgJORI8fkmAVwMqjegaygegfOQY4ck2MWwMnIkWNyzAI4
GVTvQFaQYwAAAAAAAAAAAAAAAAAAAAAAAAAAAPj5Ly2Tz2U=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->1428432771,ExpressionUUID->"69c7ba80-dfc6-49fd-9f7b-da4938a35934"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXlIFV8bx2/qNWmxbNGwoh1sI8uwDWwhiYo2w3YCpc2yrAzejDbaqGj7
o+1nu7TQJiUVLRJJURZklv2R0r5rWIGV2XLnfd6G33BfvXeaOzNnZu6c7wcK
u56Z55zn+dync/R6bZOcljAjwOFwpIfQXwlJ/xm4cGFSxtiG9I/EeekpM+dN
nzZ03qLpM6cv7J0cSA9G0Z8L9MH/PhYAAAAAAAAAAAAAAAAAAAAAAAAAAIBa
mjZtavYUrEJaWtq2bdu03+f169ddu3YtLy/Xfit7YJZjcFsCbjMCbpsO3GYE
3DYduM0I5Y7BRomtW7d269ZN+3127twZFRWl/T62AZ3WdOA2I+C26cBtRsBt
04HbjMAOWQVPnz51OBz0t8b7xMfHL168WJcp2QN0WtOB24yA26YDtxkBt00H
bjMCO2R10Hlty5YtWu7w6dMnp9OZn5+v15RsADqtFYDbLIDbVgBuswBuWwG4
zQLskNWxYsWKuLg4LXc4cuRIZGSky+XSa0o2AJ3WCsBtFsBtKwC3WQC3rQDc
ZoG+O+TKysqsrKyUlBRdXjSuHOPjFhYWBgYGfvjwQfUdEhMTacLyY/jJp4iV
Oy0/tWDt9rt377Zu3TplypTOnTtHR0cnJCQcPHjwx48fqsMp5NWrVzt27KC4
UVFRffr0SUpKMvKrJdZ0m7daoG+zAG67Y1e3ecuniF475P3798fHx4eGhjr+
0KNHDz1m93fMiku0bt1637596q79/v17vXr1Ll265G0Ah/kUrNppOawFI7dd
LldmZmbDhg0dNejSpcvHjx+1zVqOnJycsLCwakFr1aq1ZMkSdkHdsZrb3NYC
fVt34LaELd3mNp+CfjvkYcOGuS/BsGeoWXGJ+fPnjxgxQt21586da9Cggcz5
i8N8CtbrtCIc1oKR22VlZZRqWsvo0aPPnj378uXLq1evpqenO51OenDChAna
Zu2V7OxsaqoUYty4cdRyS0tLCwsLKZyY2MuXLzOK647V3Oa2FujbugO3Rezq
Nrf5FPTbIX/+/Ln0D0uXLjXyGWpWXOLatWshISFfvnxRce20adMmTpwoM4DD
fArW67QiHNaCndv5+fmnTp2q9uDy5ctpgU2aNFERTgnU9idNmrR79+5qj/fv
35/iJicnM4rrjgXd5rMW6Nu6A7dFbOw2n/kUGPyk3pYtW4x/hpoS99evX+TG
6dOnfb3w9+/f4eHhJ06cUDKYn3wKluy07vBTC2Pcljh8+DAtMCgoyIBXtbkj
JjY2NtaAWBZ3W8L2tUDf1h24LY/N3JawfT4F7JC1kZSUNGXKFF+vun79eu3a
tSsqKpQM5iqfFu+0XNXCALdFqqqqBg0aRAvs3bu3r+E0snDhQoo7atQoA2JZ
3G0RTmqBvq0vqt1+8uRJbm6uMXHhtgzo297ADlkLZ8+eDQsL+/nzp09Xpaen
Dxs2TOFgrvJp8V0EV7Vg7fbnz58fPXq0f//+mJgY8Vt1BQUFqmaqEpfL1bFj
Rwq9adMmA8JZ2W3eaoG+rS+q3f7nn3/69evHNC7cVgL6tjewQ9bCt2/f6tat
6+spuF27dpmZmQoHc5VPK+8iBM5qwdTtK1euuP9g0Zw5c6jxqp2pSjZv3kyh
GzRo8ObNGwPCWdZtDmuBvq0vlt0hw22FoG97AztkjSQkJKSmpiofX1RUFBAQ
8P79e4XjucqnZXcRIlzVQmDpdn5+ftu2bevXry922jp16qSlpX39+lXDZH3j
3r17wcHBFJr+jzYmomXd5rAWAvq2rlh2hwy3lYC+LQN2yBrJyspq0aKF8vGr
Vq3yqSdwlU+fOq3L5frtHRZxuaqFwN5t4u3bt5s3b27cuDEtcMCAAb4WTh0l
JSWRkZHiK9kM+wVSFndb4KkWAvq2rqh2e9euXX379oXb+oK+rSNm7ZB1X6BZ
cZ89e0Zxnz59qnB8fHz84sWLld+fq3z61Gkpkw7vKK+I8rhc1UJg77ZEYWFh
UFAQxfL4U9j6ruvx48fNmzenWHFxcZWVlTIjuXJbgodaCOjbcLsGcNtXeMin
wTvke/fuzZgxo23btoGBgREREePHj9frxSRmxT127FizZs2UF2XZsmV05lJ+
f67y6VPHo2NsiXd8OtXCbY+wdtud6OhoWqN7o2axruLi4pYtW1Kg7t27e3sF
HZ9uu2P7Wgjo29Zwe+XKlSQb3PYvt92xfT6N3CHTKSAgIIBql5ycvH79+sTE
RHHJ0pPi7t27c+fOjYmJ6dSpEy2QTigK56YxbkFBQUpKSmxsbIcOHYYOHerT
uwLSPKkuysfTGqmC5eXlCsdzlU/LvlZThKtaCAzcplmdPHmy5n+CVVVV4u9s
2rZtm8J1qcjnnTt3mjRpQvfp06fPp0+fPI7hx22eayGgb1vDbUavQ4bb6NvG
u63L19kuXLjg/hVyqiMNvnXrlvDnyRIcHNyoUaNx48aJbyTidDqVv5GI6ri7
d+8mPRo3bjx27NhRo0bVqVOHPrV27VolQcmQ0NBQurnCSYrQaejQoUMKB3OV
T6vtIqrBVS1YuL1q1Srx22RFRUXSg9SZxYZG3L9/X8m6VOTz4sWLdevWpZHx
8fHyv3OKE7d5rgX6ds24prjNaIcMt9G3jXdbZmRCQkL4v9SrV09MmvTIkCFD
qo2nPB84cCAjI4OeHTTyyJEjwp/fYEgl+PjxozgmOzubPkUlkJmSLnFLSkom
Tpz44cMHcYx4GGnevLmSnFD56tev//37dyWDJVJTU8eMGcN6Xf6YT6vtIgSO
a8HC7ZycHPFrDgT1K1rFwIEDpdWtXr265iW65DMvL49asRglLCyMWi79M8iN
CRMmKIlrJ7d5rgX6tkXcZrRDhtvo28a7LTMyNjbW4Z3o6GhpJJ1TOnToQA92
7tyZntfii/YPHjwofvbXr1/SSPHXINIwmSnpFbca3bt3p+q7T8Ybs2bNku9d
HsnNzaVTzLdv31ivy+/yabVdhMBxLRi5XVpaOn369KioKOpR0nJo5seOHas2
Usd8Us+USabj/7s0P25zWwv0bYu4fffu3b1796q7Vj4u3PYJ9G1v6P4qCxlO
nz5Nc6ajyvPnz8VHzpw5420VVVVVdGRQ/juM9Ip7/PhxOpvMnj37r7d1uVyR
kZHiIcUnfv78SQciOpf5emE1bJZPwZK7CIXYrBYGuF1RUVFQUHDr1q2ysrKa
n7VZPgVru81VLdC34baEzWqBvm2i29qfBSkpKTTn169fS4+sW7fO2yq2b9/u
0Ol9oZXEPX/+PFWqTZs2lLr58+d7e0G4O7dv33Y6nUpG1mTy5MnJyckqLnTH
ZvkUrN1p5bFZLeC2TFy47de1gNsyceG2X9cCbsvEZe22dhs3bNhAc540aVJe
Xt7hw4dptuKXymtmr7CwMCQkRHwvcY1BFcbNzs7u16+f+I4icXFxSn7EMiMj
Y/DgweqmdPLkScqnxtXZLJ+CP3dam9UCbsNtCZvVAm7DbQmb1QJum+i2dhsr
KyvHjBkjzrx27dojR468ceMGfZyVleU+rKioKDw8nBby4sULjRF9iity8+ZN
Ct2oUaN3797J37ZTp050CFI3pYqKCprJ9evX1V0uYrN8Cv7caW1WC7gNtyVs
Vgu4DbclbFYLuG2i23o9C96/f3///v2qqiqPn6WNPQWKiIgoLi7WJZzCuO7s
3bvXW24lSkpKaMyrV69Uz2f48OHp6emqL5ewRz5F/LfTitijFnAbbtfEHrWA
23C7JvaoBdw2120DngW5ubmhoaGtWrXSPXUy5OTkuL/Ln/DnWxWUPflXrW/c
uDEmJkZL3MzMzPbt22u5w1/xo3yK+HunlcGPagG3vQG3PeJHtYDb3oDbHvGj
WsBtbxjjNmsbjx49GhwcTNNesGDBmjVrVv9LXl4eu6A/fvygYlHcmTNn0oHi
3LlzqampAQEB7dq1q6iokLmwb9++Ht8GUDl03qFADx8+1HITGfwrnyJ27bT+
VQu47RG47RH/qgXc9gjc9oh/1QJue8Qwt1nb2KtXL4cnVqxYwTRuWVnZ1KlT
IyIixHC1atUaOXLkkydPZC4RRap2KlEBKU2eaLyJN/wonxJ27bR+VAu4LQPc
rokf1QJuywC3a+JHtYDbMhjjtlnPAsN48+bNgwcPlBwr9uzZQwcQ7RE3bNjQ
s2dP7fexJsrzKWHXTms6cFtf4LZ1gNv6AretA9zWF6Zu295G5YwfP37RokXa
71NcXOx0OsvLy7Xfyh6g05oO3GYE3DYduM0IuG06cJsR2CED64BOC+wK3AZ2
BW4Du4IdMrAO6LTArsBtYFfgNrAr2CED64BOC+wK3AZ2BW4DuwLHAAAAAAAA
AAAAAAAAAAAAAAAAAABU81+s85iV
    "], {{0, 20.}, {475., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{475., 20.},
  PlotRange->{{0, 475.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->949892384,ExpressionUUID->"cbbffe80-ee89-4de1-9e04-1c4f396f9bf5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"op1", "**", "op2"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1250205212,ExpressionUUID->"e7eb9d54-13b9-43ac-b3f6-d0f612176558"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 20.}, {661., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{661., 20.},
  PlotRange->{{0, 661.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->447866090,ExpressionUUID->"83a133f6-9813-4df3-aa80-4d93a13297af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "=", 
  RowBox[{"DyadForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Matrix", "[", 
      RowBox[{"op1", ",", 
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}], ".", 
     RowBox[{"Matrix", "[", 
      RowBox[{"op2", ",", 
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->942244714,ExpressionUUID->"974785e0-b066-45ed-ae27-0908109b92b0"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
    "], {{0, 20.}, {661., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{661., 20.},
  PlotRange->{{0, 661.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->355191895,ExpressionUUID->"5878c19a-8447-430e-9c25-6ae9ef0b176d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "-", "new"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->7034574,ExpressionUUID->"cb3003ca-cd81-44b5-8578-5aec08e74a9e"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[5]=",
 CellID->430629677,ExpressionUUID->"4365b7ee-d249-468f-bf93-2b0931996b6b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "109f3b3f-8301-4db0-829f-1c2ef61bcd7a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->979322738,ExpressionUUID->"86ebe019-3fa3-498b-854a-531066309794"],

Cell[TextData[{
 "Let us consider multiplications of two ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", "\[Ellipsis]", "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "d3c617bf-9425-4a43-a5eb-d06efa00b81a"],
 "s of the same kind."
}], "ExampleText",
 CellID->1162586958,ExpressionUUID->"ce6c434e-7b65-465e-abba-ea353c615977"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"v", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Ket", "[", "]"}], "+", 
    RowBox[{"I", "*", 
     RowBox[{"Ket", "[", 
      RowBox[{
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}]}], "//", 
   "KetRegulate"}]}], "\[IndentingNewLine]", 
 RowBox[{"w", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"a", "@", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "->", "1"}], "]"}], "-", 
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"a", "@", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "->", 
     RowBox[{"{", 
      RowBox[{"3", ",", "2"}], "}"}]}], "]"}]}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1792782700,ExpressionUUID->"df09825c-5a2f-4572-a45a-5b162baf2cec"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
           $CellContext`a[1]]}, "RowWithSeparators"]], 
       SubscriptBox["0", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
           $CellContext`a[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[1] -> 0, $CellContext`a[2] -> 0|>]], "+", 
  RowBox[{"\[ImaginaryI]", " ", 
   InterpretationBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox["2", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]], 
            $CellContext`a[1]]}, "RowWithSeparators"]], 
        SubscriptBox["3", 
         TemplateBox[{",", "\",\"", 
           InterpretationBox[
            SubscriptBox["a", 
             TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]], 
            $CellContext`a[2]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
     "Ket"],
    Ket[<|$CellContext`a[1] -> 2, $CellContext`a[2] -> 3|>]]}]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1276810398,ExpressionUUID->"3adfed00-2f2e-442d-9618-f1edff40b2bf"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`a[3]]}, "RowWithSeparators"]], 
       SubscriptBox["1", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "4"}, "RowWithSeparators"]], 
           $CellContext`a[4]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[3] -> 1, $CellContext`a[4] -> 1|>]], "-", 
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
       SubscriptBox["3", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "3"}, "RowWithSeparators"]], 
           $CellContext`a[3]]}, "RowWithSeparators"]], 
       SubscriptBox["2", 
        TemplateBox[{",", "\",\"", 
          InterpretationBox[
           SubscriptBox["a", 
            TemplateBox[{",", "\",\"", "4"}, "RowWithSeparators"]], 
           $CellContext`a[4]]}, "RowWithSeparators"]]}, "RowWithSeparators"]},
    
    "Ket"],
   Ket[<|$CellContext`a[3] -> 3, $CellContext`a[4] -> 2|>]]}]], "Output",
 CellLabel->"Out[1]=",
 CellID->1695758362,ExpressionUUID->"acca3282-eded-4b22-9db3-b40a059999f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"op1", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"v", ",", "v", ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"op2", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"w", ",", "w", ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}]}], "]"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1415581697,ExpressionUUID->"2917d3d9-b378-49b3-99a3-65215df0116f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yCpYU7hiv1LCsovc1gergA7Wq/fa2loabcizzz33HJ1asGBB8Cnrjo2U3QB+
/vlnsnX06FGD7dPT05csWaLTwM3+DOtOy747RguDEbGzJnFzZBUBSlHz448/
XnPNNdT/5MmT29vbdVqKu6XX19ezB1mHfK4ClBKMkVm4LbIK1pQoV4pxu8jt
K4JVQAfr1fvp06fZ0/Jp2AGnJkyYQMdXrlzpP1JXV0eCHTFiRExMzNChQ2fP
nm36g0mRshvA9u3bhw0bZjwoJSUltC/TaeBmf4Z1p6WtbpM2Bne+dtYkbo6s
IkApfhobG4cPH04Tufnmm7U+cyhuXmpSUlJoGOrlxmlKef7552mQDleKHxdG
VsGaEuVKMWgXuW0ErAI6cPm2pnvvvZdGG/Bxpm+++YYOer1e/z6Ldkb0kmKX
m5v78ssvZ2VlMVerRXH27NmtW7fS7DZu3HjFIfGyW1tbSwtTamrqmDFjyHTw
rUYHah/yFwhakC2KYGtrqw3zUqLNn3J/7l1xcWQVMUohvv7668GDB9M4J06c
SD4J2YavP+mqioqK4KW8o6ODffve+vXrDdq1XylR9Ll3d0ZWwZoS5UoxYhe5
bRCsAjpwqd737t1L4yEnl5eXsyO0h73xxhvp4IwZM9Qt9+zZo35Hg+JIbQ4e
PMhevvTSS2yrTsyfP/+KQ+Jil0QaFxc3cODAWbNmsQf++Hw+gw/8oUj169eP
OjfS2A/tEN99913R81Ki0J/SV++ujawgpezbt499HUx6err+t/hx9Ofy5cvZ
m7MNDQ3+g7S+sNsycfjwYSN2I6KUaKneXRtZrCnBdqNLKVe0i9w20tgPVgEt
uFTvXV1djz76KNmludMApk+fTjGil+T2xsbG4PY033feeae4uJjUQc1os8OO
09JAWx72JFgjdwYudpcuXUohOHPmDGuza9cuOkUhMOITSpu+fftevHjRSGM/
BQUFATcuEfNSotCftlXv586dO9HNvG52794dHx9/ogeLnUMpwYhQSnV1Nd3o
2K0yMTGRbuD0MlbFnDlzjMxLCdOflC3styvEoEGD7rnnnqlTp1JNy46sWLEi
+BLnKCXcmiQiSnFzZLGmRKlSDNpFbmMVsD+39VuSSEtKSmgHwQZPTpsyZUpz
c3NAM9pD3XDDDdRg7NixmZmZ7I9EtmzZom7T0tJi8M7Ay+6lS5f8LdnX8lIz
I9afeOIJg35WU1VVlZCQcOHCBZ027vSnbdV7RkaGRxvymJXOoZRgRCiF7oQ6
QQy4B/L156lTp6hZcnKy1+v1m6Oet2/fHtDSaUqpra196623jLePiFLcHFms
KVGqFIN2kdtGWqrBKqAFr+qdQTr97rvvDh48GPJxlzt37vR0v1/2yy+/sCMf
fvihxTsDR7uMjo4O2r4Z+W4vMpqUlOTfuBmns7OTNom0dzNiwj3+VCLxyRkR
QCnBRkUrRR9x/mxrazt06BD5M2QdC6XoY30WkkUWa4o0SkFuB4BVIIK5bT0b
8/PzaczqTffKlSu5eI+LXcaGDRs8xp7z/9VXX/l8Pq0/kdDnkUceyc3NNXGh
Gsn8qaAm6UGyyEIp+nYZUIoJJIsslKJvlxEVSkFuB4Dc1rfLEJTb1rNx1apV
NLDs7Ozq6ury8nLaX7D3GkR7z6BdpftZnfHx8ew7Gq7YbXFx8V133WVuSBUV
FeRPi8/zl8yfCmqSHiSLLJQCpYQESgkASpFGKcjtAJDbEcxt69nY3t4+Y8YM
NvJevXo98MADX375Jf1cVlambsbdewbtNjQ0DBkyZPjw4b/++quRbseMGUMb
JXNDamtro5EcOHDA3OUMyfypoCbpQbLIQilQSkiglACgFGmUgtwOALkdwdzm
pYKTJ08ePny4o6NDqwF37xmxS7semuDQoUND/iF8ME1NTTTIY8eOmR5PRkZG
UVGR6cv9yOFPBmoSNXJEFkqBUrSAUtRAKTIpBbmtBrkd2dy2TQWCvKdDVVVV
v379rrvuOuOuW716dWpqqhWjpaWlo0aNstKDQaLCnwzUJGERFZGFUnSAUuwx
FBWRhVJ0iDqlILfVILd1sCG3RWcj7c7+080LL7zg6f7OLPby888/F2p327Zt
cXFxZPHpp59+8cUXV/RQXV2tc9WkSZNCPtLTOLQX83q9R44csdKJDtHlTwZq
EiNEV2ShFC2gFChFDZSiRTQqBbmtBrmthT25LTobKyoqPKHIy8sTavfWW28N
aXfZsmVal7BEUn/HljkopSleFjvRIor86Qc1iRGiKLJQig5QCpTiB0rRIRqV
gtz2g9zWwZ7clmO94MKmTZtGjhxpvZ9Vq1bdcsst1vuRBjlyTI5ZcAFKEYQc
OSbHLLgApQhC1uo9ikBuCwLVuwlmz569ePFi6/00Njb6fL7W1lbrXcmBHDkm
xyy4AKUIQo4ck2MWXIBSBIHqPeIgtwWB6h04BzlyTI5ZACcjR47JMQvgZFC9
A1lB9Q6cgxw5JscsgJORI8fkmAVwMqjegaygegfOQY4ck2MWwMnIkWNyzAI4
GVTvQFaQYwAAAAAAAAAAAAAAAAAAAAAAAAAAAPj5Ly2Tz2U=
    "], {{0, 20.}, {501., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{501., 20.},
  PlotRange->{{0, 501.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->1853124252,ExpressionUUID->"1f660e37-ba82-48e3-ae1d-be2e36a8ddb7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXtMFNcXxxFYNYgK4iuo8UmCohGLIT4S1FpixPjC4DsmEFFpSTFiUjBq
+/PVqhWN6UPRWiUa0vqIEjW+YjSaSk1ERP+opGpTRQWDkNCKoO78zs9JJ/sD
dnt3Zu7M3bnfT1KzLHfm3Dnns6f3LsMyMCMndVlwUFBQbkf6JzX9s0mrVqXn
z4mgL9I+zc1a/mnm0qmfrs5cnrlqTEYIPRlL/52lB/97rAAAAAAAAAAAAAAA
AAAAAAAAAAAAAL306NHD7imIQk5Ozq5du4yf58mTJyNGjKitrTV+Kmdgl2Nw
WwNucwJu2w7c5gTcth24zQl2x2Cjxs6dO0eOHGn8PN99911sbKzx8zgGdFrb
gducgNu2A7c5AbdtB25zAitkHTx8+DAoKIj+NXie5OTkvLw8U6bkDNBpbQdu
cwJu2w7c5gTcth24zQmskPVB+7WCggIjZ6irq3O5XKWlpWZNyQGg04oA3OYB
3BYBuM0DuC0CcJsHWCHr4/PPP09KSjJyhiNHjkRHR7vdbrOm5ADQaUUAbvMA
bosA3OYB3BYBuM0Dc1fIjY2NRUVFWVlZptw0zo71ccvLy0NCQl68eKH7DGlp
aTRh32PkyaeKyJ1WnlrwdvvZs2c7d+5cvHhxXFxcfHx8amrqwYMHm5ubdYdj
5PHjx99++y3FjY2NHTt2bHp6upXvlojptmy1QN/mAdz2xKluy5ZPFbNWyAcO
HEhOTu7SpUvQez744AMzZvfv2BWXGDBgwA8//KDv2NevX4eHh58/f97bAAnz
qYjaaSWsBSe33W53YWFhREREUCuGDx/+8uVLY7P2RUlJSWRkZIug7dq1W7Nm
Db+gnojmtrS1QN82Hbit4Ui3pc2nYt4KOSUlxfMSLHuF2hWXWLly5fTp0/Ud
e/r06a5du/rYf0mYT0W8TqsiYS04uV1TU0OppmuZNWvWqVOn/vzzz8uXL+fm
5rpcLnpy/vz5xmbtlRMnTlBTpRBz586llltdXV1eXk7h1MReuHCBU1xPRHNb
2lqgb5sO3FZxqtvS5lMxb4VcX19f/Z61a9da+Qq1Ky5x5cqVjh07/vXXXzqO
Xbp06YIFC3wMkDCfinidVkXCWvBzu7S09NixYy2eXL9+PV1g9+7ddYRjgdr+
woUL9+zZ0+L5CRMmUNyMjAxOcT0R0G05a4G+bTpwW8XBbsuZT4XDb+oVFBRY
/wq1Je7bt2/JjePHj/t74Lt373r27Pnzzz+zDJYnn4qQndYTeWphjdsahw8f
pgsMDQ214K42T9TEJiYmWhBLcLc1HF8L9G3Tgdu+cZjbGo7Pp4IVsjHS09MX
L17s71HXrl3r0KFDQ0MDy2Cp8il4p5WqFha4rdLU1PThhx/SBY4ZM8bfcAZZ
tWoVxZ05c6YFsQR3W0WSWqBvm4tutx88eHDp0iVr4sJtH6BvewMrZCOcOnUq
MjLyzZs3fh2Vm5ubkpLCOFiqfAq+ipCqFrzdrq+v/+233w4cOJCQkKD+qK6s
rEzXTHXidruHDh1Kob/++msLwonstmy1QN82F91u7927d/z48Vzjwm0W0Le9
gRWyEV69etWpUyd/d8GDBw8uLCxkHCxVPkVeRSiS1YKr2xcvXvT8xaJPPvmE
Gq/emepkx44dFLpr165VVVUWhBPWbQlrgb5tLsKukOE2I+jb3sAK2SCpqanZ
2dns4+/evRscHPz8+XPG8VLlU9hVhIpUtVB4ul1aWjpo0KDOnTurnTYsLCwn
J+fvv/82MFn/uH37dvv27Sk0/T/amojCui1hLRT0bVMRdoUMt1lA3/YBVsgG
KSoq6tu3L/v4DRs2+NUTpMqnX53W7Xa/8w6PuFLVQuHvNvH06dMdO3ZERUXR
BU6cONHfwumjsrIyOjpavZPNsj8gJbjbiky1UNC3TUW3299///24cePgtrmg
b5uIXStk0y/QrriPHj2iuA8fPmQcn5ycnJeXx35+qfLpV6elTAZ5h70i7HGl
qoXC322N8vLy0NBQitXmb2Gbe12///57nz59KFZSUlJjY6OPkVK5rSFDLRT0
bbjdCrjtLzLk0+IV8u3bt5ctWzZo0KCQkJBevXrNmzfPrJtJ7IpbXFzcu3dv
9qKsW7eO9lzs55cqn351PNrGVnrHr10t3G4T3m57Eh8fT9fo2ah5XNf9+/f7
9etHgUaNGuXtDjo53fbE8bVQ0LfFcPuLL74g2eB2YLntiePzaeUKmXYBwcHB
VLuMjIyvvvoqLS1NvWTtRVFWVpaVlZWYmBgTEzN16lS/Pp3PSFyN5ubmzMzM
OXPm1NbWMsalQlBd2Od569YtqiD7+aXKp7D3aqpIVQuFg9s0q6NHj7aeW1NT
k/o3m3bt2qU+wyOfN2/e7N69O51n7NixdXV1bY6Rx22Za6Ggb4vhNqf7kOE2
+rb1bpvyPtvZs2c93yGnOtLgGzdu0OM9e/ZQmaKiomjyM2fODAsLo29t3ryZ
cXq643qSnZ3t1896yJAuXbrQyRknqUK7oUOHDjEOliqfoq0iWiBVLXi4vWHD
BvXHZHfv3tWepE6lNjTizp072vPm5vPcuXOdOnWiYcnJyb7/5pQkbstcC/Tt
1nE9scxtTitkuI2+bb3bPkampqb2/Ifw8HB1AtozU6ZMaTGe8vzjjz/m5+fT
q4NGHjlyRHl/G/aCBQtevHihjlE3BX369PExJVPiaqh/IEa91+XBgwcsOaHy
de7c+fXr1yyDNahGs2fP5n1dgZhP0VYRisS14OF2SUmJ+p4DQX2SrmLSpEna
1W3cuLH1Iabk8+rVqy6XS40SGRlJLZe+DPVg/vz5LHE1HOC2zLVA3xbEbU4r
ZLiNvm292z5GJiYmBnknPj5eG0n7lJiYGHoyLi6OXtfqTfsHDx5s87SjRo2i
Krx9+9aCuBUVFbSjoa03lTuIeX+xYsUK2kaxjPTk0qVLFOvVq1cWXJcn4udT
tFWEInEtOLldXV2dmZkZGxtLvVG7HJp5cXFxi5Em5pN6po9kEp5XKo/b0tYC
fVsQt2/durV//359x/qOC7f9An3bG6bfZeGD48eP08Roq/LHH3+oz5w8edJb
9n766SfaI3z88ccGg7LEra+vp9zS5ujRo0ebNm1izJ7b7Y6Ojm6xSWHhzZs3
tCGifZm/B7bAYflUhFxFMOKwWljgdkNDQ1lZ2Y0bN2pqalp/12H5VMR2W6pa
oG/DbQ2H1QJ920a3jb8KsrKyaGJPnjzRntmyZUuL7J05cyYlJWXgwIGUupUr
V3q7MdvEuCTVrFmzKNzly5fpS/bs/frrry6XS98MFy1alJGRoeNATxyWT0Xs
Tusbh9UCbrcZF26rBHQt4HabceG2SkDXAm63Gdcat43buHXrVprYwoULr169
evjwYcqS+la5Z/ZOnDgxfvx49ZM9kpKSysvLDQb917hffvklPd69e7c6mD17
+fn5H330kb4pHT16lPJp8HO2HZZPJZA7rcNqAbfhtobDagG34baGw2oBt210
27iNjY2Ns2fPVmfeoUOHGTNmXL9+nR4XFRW1HvzLL79QDrt16/bs2TN+cSlK
SEhIRETEf/5h8uTJ9C3a2mzfvt33aYcNG/bNN9/om1JDQwPN5Nq1a/oOV3FY
PpVA7rQOqwXchtsaDqsF3IbbGg6rBdy20W2zXgXPnz+/c+dOU1PTv47cv3+/
t9yaFZf2TQP/H/WjRfr27Tt69GgfZ6usrKRhjx8/1j2fadOm5ebm6j5cwxn5
VAncTqvijFrAbbjdGmfUAm7D7dY4oxZw2163eb8KSkpKPD9tT3n/IwO6EOO/
GeEXjO/Ab9u2LSEhwUigwsLCIUOGGDmDbwIrnyqB3mm9EVi1gNuMwG0l0GoB
txmB20qg1QJuMyLsXRY+aG5u7t+/f/v27ZcvX04bitOnT2dnZwcHBw8ePLih
oYFf3NYwZm/cuHFtfgwgO7TfoQu8d++ekZN4I+DyqeLIThtwtYDbjMDtgKsF
3GYEbgdcLeA2I4G4QiZqamqWLFnSq1cv9WaSdu3azZgxg/FTnU1Evanbd/ZU
kVrshnRASlOxDJ7EGwGUTw1HdloloGoBt9mB20pA1QJuswO3lYCqBdxmh5Pb
lr0KqqqqKioqLN5W+MW+ffto42P8PFu3bmW5E8Yg4udTw6mdVkP8WsBtTsBt
24HbnIDbtgO3OSHgCll85s2bt3r1auPnuX//vsvlqq2tNX4qZ+D4Tis+cJsT
cNt24DYn4LbtwG1OYIUMxAGdFjgVuA2cCtwGTgUrZCAO6LTAqcBt4FTgNnAq
WCEDcUCnBU4FbgOnAreBU4FjAAAAAAAAAAAAAAAAAAAAAAAAAAC6+S/dd3Gt

    "], {{0, 20.}, {475., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{475., 20.},
  PlotRange->{{0, 475.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[2]=",
 CellID->503970923,ExpressionUUID->"d6c73ea9-878d-4535-840f-062330ec1423"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "=", 
  RowBox[{"op1", "**", "op2"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->547773473,ExpressionUUID->"43757d76-a093-4cec-8279-d31a34b58777"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQtQVdX//n8EQQYUBfyKgzql6ESaI0pjooVm0QXKC443ckwZu5B8vlA0
/aQJLS1Ny8u3KBSNlCDHSCYYbxljMTZJzXARrAnyUgmIEMqEioCw/+8/azxz
PodzNvucfd/7ec3UePZZez9rrf3sZ621OefssQnJcS96WCyWVB/6X9zq//fo
a6+tTls0jF4s/t/UxJf+94U1T//v6y+89MJrMxI8aWMr/Tfcy2L5///NAQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFCW//mf/1G7CkAdkpOTd+3aJf44
dXV1kydPbmlpEX8ooEfUyhBkl2lBdgFJQIYAAABwFYwdpmXnzp1TpkwRf5xP
P/00LCxM/HGATsHaGSgMsgtIAjIEAACAq2DsMC0XL160WCz0f5HHiY6OXrdu
nSRVAnoEa2egMMguIAnIEAAAAK6CscPMTJkyZceOHWKOcP36dS8vr9LSUqmq
BHQH1s5AeZBdQDzIEAAAAK6CscPMbNiwISoqSswR8vLyQkJCenp6pKoS0B1Y
OwPlQXYB8SBDAAAAuEq/Y0d1dfUbb7xBs5RJkyatWrXqiy++UKZiaukS7e3t
OTk5iYmJkvwcjZZ1KysrPT09m5ub3T7C4sWLqcI8BeAfw+tqdu0M7xlYF9kl
LVeuXNm5c+eKFStINDw8PC4ubv/+/Z2dnXLrXr58+ZNPPiHdsLCwyMjI1atX
K/lJAKydAQAAuAr/2HHs2LHBgwdb/hsa3eQeUtXSzc7Ojo6O9vf3Z4rTpk2T
VU51XeLee+/97LPP3Nv39u3bdJq+/fZbZwXgH1nlVNdlaHPtDO/JKqe6Lofs
koienp6srKxhw4ZZ+vDAAw9cu3ZNJl2iqKgoICDATnTAgAFvvvmmfKK2YO0M
AADAVXjGjj/++MPT05PGsmeffbaioqK+vj4jI2PgwIG0JS0tTb4qqaVLxMTE
2A7iis0D1dIlUlJSqJ/d2/fIkSNDhw51NqmDf8zgH06Ta2d4zwzeQ3ZJQlNT
E11KJLFgwYLCwsK///771KlTqampXl5etHHZsmUy6RYUFNAymSSWLFlCi+ir
V69WVlaSHDPSyZMnZdK1BWtnAAAArsIzdiQlJdEQ9sgjj9hOMLKzs2ljQEDA
jRs3ZKqSWrpEa2vr1V7eeustJeeBaukSP/zwg4+Pj3u9umbNmuXLlzt7F/4x
g384Ta6d4T0zeA/ZJRWlpaVff/213cb169eT7vDhw2USpTbGx8fv3r3bbvvs
2bNJNyEhQSZdW7B2BgAA4CrOxo6bN2/6+fnREHb48GHb7V1dXSNHjqTte/fu
laM+aunasWPHDuXXIKro3rlzh2ZHdr0thO7u7hEjRnz11VcO34V/TOIfTntr
Z3jPJN5DdslKbm4uiQ4cOFCBbz3bwow0ffp0BbSwdgYAAOAqzsaOX3/9lcYv
X1/fvuPm2rVr6a3k5GQ56qOWrh3mmX8Sq1evXrFihat7nT59etCgQW1tbQ7f
hX/M4x+trZ3hPfN4D9klEx0dHXPnziXRGTNmKCbKeO2110h3/vz5Cmhh7QwA
AMBVnI0dJ0+epPFr/PjxXO/t/fT09Pj4+HPnztHLbdu20VuLFi2Soz5q6dph
qvlnYWFhQEBAV1eXS3ulpqbGxMQ4exf+MY9/tLZ2hvfM4z1kl7S0trb+/vvv
2dnZERER7APb5eXlcova0tPTc//995P0hx9+qIAc1s4AAABcxdnYwb5j9fDD
D9O/jx49yn6+g90KzsnJke92tFq6dphq/nnr1i0/P7/i4mKX9goNDc3KynL2
LvxjHv9obe0M75nHe8guCfnuu+8sNqxdu5aW0rIq9mX79u0kPXTo0Pr6egXk
sHYGAADgKs7GjszMTBrC5s6dy/U+NYMNps888wy9PHToEP07PDxcjvqopWuH
qeafRFxcXFJSkvDy1dXVHh4ejY2NzgrAP+bxj9bWzvCeebzHIbuko7S0dNy4
cUOGDGHSvr6+ycnJN2/elFXUloqKCm9vb5Les2ePMopYOwMAAHAVZ2NHYWEh
DWGTJ0/m7n5+7Pnnn2efH/v444/prdjYWDnqo5auHWabf+bk5IwePVp4+Y0b
N86aNYunAPxjHv+4NP/s6enpdo4kuvCeebzHIbtkoKGhYfv27UFBQSQ6Z84c
Vy9M96itrQ0JCWF/aqeUUECRUy+7AAAA6BdnY0dZWRmNYg7fZc8iefHFF/u+
JX7IU0vXDoHzQMPoXrp0iXQvXrwosHx0dPS6det4CsA/5vGPS/NPco7FOcId
yKML75nHexyyS7ZlZmVlJXu0tMNfMpdW9/z586NGjSKtqKio9vZ2npLGyC4A
AAD6xdnY0dzcPGDAABoRaAC1e2v69Om0ffPmzdYtFRUVNKyPGzfO09MzODh4
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
emvRokVy1EctXVtaW1t///337OzsiIgI9hGR8vJyuUVt6enpuf/++0n6ww8/
VECusLAwICCgq6vLpb1SU1NjYmKcvWtm/3BIXWHs2bNn1qxZkuua2XvILiEg
u5xhNv8oll3d3d0nTpw4fvx4bC/UusGDB7sn3RckYV/M5mQ5ktAhCrdLxfOI
WRzgwVmPsW+msFujR48etfTCbjTl5OTId/NHLV0r3333ncWGtWvX0sUrq2Jf
tm/fTtJDhw6V8DEWPNy6dcvPz8/VvwCGhoZmZWU5e9e0/mEgdYUg09rZtN5D
dgkE2eUQE/pH+ez6Ty+lpaUKrJ3hZPM4WY4kdIiS7VL3PGIWB3hw1mOZmZl0
+ubOncv1PmuAWfeZZ56hl4cOHaJ/h4eHy1EftXSt0KA2bty4IUOGMGlfX9/k
5OSbN2/KKmpLRUWFt7c3SdPorJhoXFxcUlKS8PLV1dUeHh6NjY3OCpjWPwyk
rhBkWjub1nvILiEgu5xhQv8Ye+0MJ5vHyZwMSdgXhdul7nnELA7w4KzHCgsL
6fRNnjyZu/upm+eff5596ubjjz+mt2JjY+Woj1q6fWloaNi+fXtQUBCJzpkz
p7u7WwHR2trakJAQdpO2p6dHAUVGTk7O6NGjhZffuHEj/8zB5P5B6jqDXN19
F5pizZw5s9sGSXRN7j0O2cULsqtfzOMf5bNLybUznGweJ3MyJKEdarWLU+k8
YhbnDNsk7It8ldQUznqsrKyMTp/Dd9kvqL/44ot93xJ/Qaml64zKykr2UEKH
v2Eore758+dHjRpFWlFRUe3t7TwlJW/vpUuXSPfixYsCy0dHR69bt46ngMn9
IzD9jKHrUuqScyzOEe5AHl2Te88KssshyC6BmME/ymeXkmtnOJlhBidzMiSh
LSq2y4qS55HDLM45Es7i9IuzHmtubmZPRSe72r01ffp02r5582brloqKCgrD
cePGeXp6BgcHL1261O2vQqily0N4eDjp2oaMHLo1NTVjxowhoalTpzr7Tod8
7T148ODIkSOFX4zp6elz5szhKWBy//Cnn8F0XUrdhoaG2ru8/fbbdHHV2uDS
TUtkV78gu/qC7BKO4f2jfHYpuXaGk60Y3smcDEloRd122aLMeWRgFucM2yTs
i0n+9MzTY0899RSdQbsvUFRVVdFGDw8P672F8+fP00u6ZhMSEt5///3Fixez
S8y2A69fv56Xl0dnOTMzs98qSaVbVlZGg1RERMTEiRNJum+M20J75efn9z3p
HR0d1EV05F27dgnULS8vT0xMpDFiwoQJTz/9tJBn5/3yyy/Dhw+n40RGRlJf
OSwjpJ8ZnZ2dL7zwwqJFi1paWvqVZlD/OLwV7AzqW7py+Y9vKv/YwZN+cvhH
El0rrvpHa9935kzmPWQXsgv+YWg/u5RcO3Nwci9mcDInTxJy0rVLuH8kPI+Y
xcmdhKaFp8eOHz9O54UurtzcXLaloaHhvvvuo40LFy60LXns2DHbT3HQ9Utl
zpw5w15u2bKF3YQk6Gz2WyVJdGlo8/b2DgwMXLJkCftxey8vL54ft9+4caOl
9+Mo1dXV1o3kOmZO4uzZs0J0d+/eTTUPCgoi086fP9/X15feeu+993jae+LE
CT8/PyoWHR1948YNnpL8/WyFBiyXPjtBieTv708HF1LYypgxYw4cOMBTwFT+
sYP/zqG0/pFE1xZX/aPBtbOpvIfsQnbBPwztZ5fCa2c42SROlikJpWqXS/6R
6jxiFqdAEpoWnh7r6elZuXIldT55nowXExND1ya9pMutpqamb3ny+eeff56W
lkZjChXLy8tj22mYyMzMZM/1E5K6kuiuX7+eLr1r166xMgUFBfQWXXrORIuK
itgdLYI8/+STTz766KM0urEtmzZtEqhbW1u7fPny5uZmVobdJho1apQz3ZKS
ErqcmUpAQADFFL0caMOyZcuE6FqhoYo2sm+mXLhwwZmuLRSPQ4YMuX37tpDC
VujatBsE7TCVf7jeX7kccRerc6xbyFFCdF31j1S6VtzwjwbXzqbyHrIL2QX/
cNrOrtbW1oZeVvVCfe7j49NwF/fqYAVJyDCzk+VIQgnb5ZJ/pDqPmMUpkISm
hb/HKADT09MDAwPZqaSLZfbs2XV1dXbFDhw4MGHCBCowadIk8gD7Ivn+/ftt
yzQ1NQlMXal079y5Yy3Z3d1NDqRiPKJXr16l6oWFhZHPLXehXQ4ePOhGe61M
nTqVrgXbythC/rfwYnul96tbVVXl6+s7bdo0iheL4DtOL7/8Mn+eOKS4uJi0
bt26xVPGVP5h3+Ryhu1TOST0j7S67vnH7dQtKyvbt2+fe/v2q2sq7yG7XALZ
ZYdp/aNYdsXGxvK0lBziXjUYSEIrpnWyHEkobbs4V/wj1XnELA5/d5YJIT1G
Gfjbb7+dOXPG4YPVDh8+bOn9HM6ff/7JtnzzzTdirhppdRkdHR1+fn4xMTFC
dNva2srLy0nX4Yjmku6hQ4doyHjllVeE6PLTr25raytdU0FBQZcuXXr33XcF
XjXUySEhIXa3rYTQ1dUVEBBQVFQkRMJU/uHHYP7h1EtdZFdfkF1CQHY5w1T+
4YwyY0QS9sVUTlYgCfmRzz8SnkfM4ngwRhIqifgeS0xMpBNkeztx8+bNklw1
kugyMjIyLBI9z12I7tGjR+kKHTt2LF0yKSkpzn5gQUJdCs8FCxaQ3KlTp+il
8Kvm559/9vLycq+Gzz33XEJCghs72gL/6No/nLbXzvzAe7r2HrKLX5cB//Bg
jBkjklAOXR05GUnIr8uAf3gwRhIqifge27p1K52g+Pj4kpKS3NxccoulF7mv
GoG6XO9T4Xx8fGbOnCnJb6cL0S0oKJg1axb7Vf+oqCiXftzPPd0tW7bQvz/6
6CNWWPhVk5aW9vjjj7tXpfz8fPKPyF6Ff3TtH07Pa2d4T9feQ3bBP5w+s0ta
kIRy6OrIyUhC+IdDEiqL+B5rb29fuHAhO4ODBg2aN2/ejz/+SP/OycmxLSb5
VSNQt7q6esSIEWTgv/76S0ldxk8//UTSgYGBV65ckU+XVDw9PYcNG/bOXR57
7DF6KyUl5YMPPuA/7MSJEzMyMtyrUltbG9Xk9OnT7u3OgH907R9Oz2tneE/X
3kN2wT86zS5pQRLKpMvQvpORhPAPklBhpOqxxsbGs2fPdnR0OCsg+VUjRLey
spIaGBwc7PCnHeXTtWXfvn3OrimpdPPz88f+N+yxAqNHj37wwQd5jlZbW0vF
Ll++7HZ9YmNjU1NT3d7dCvzjDC37h6HftTMD3nOGlr2H7IJ/ON1ml7QgCeXQ
tUXLTkYSwj8cklBxFOsxma4aHoqLi/39/e+55x7JLxkeioqKbJ9Jx/V+nIYa
Lv7XGFxC4Kc1tm3bFhERIUYoKytr/PjxYo4gEPhHsTpwOvm0D7JLWvTlPWQX
D/CPxrNLWpCE0qIvJyMJeYB/TJWESiJ3j9XW1v5fL++88w6dx8jISPby+++/
l1X3yy+/9Pb2JsVXX32VLLTpLiUlJfKJdnZ20kVKui+99FJOTs6RI0eSkpI8
PDxCQ0Pb2trk0+2LwKtm5syZDh+WJ5zGxkZq4Llz58QchAf4R8v+YRh17Qzv
adl7yC5nwD/azy5pQRJKiO6cjCR0BvxjtiRUErl7LD8/3+KINWvWyKr70EMP
OdTdsGGDrLpNTU0rV64MDg5mcgMGDJg3b57Ap5NLCPvRAP6rhgWm3f0xN6Do
potU5EGcAf9o1j9WjLp2hvc06z1kFw/wj/azS1qQhNKiIycjCXmAf8yWhEqC
HpOJ+vr6qqoqhW80ucTevXtDQ0PFH2fr1q1Cvk8BXEL7/rFi1LWzadG+95Bd
Wkb7/rFijAwxRis0iPadjCTUMtr3jxVkiKugx0zL0qVLX3/9dfHHqamp8fLy
amlpEX8ooEewdgYKg+wCkmCMDDFGK4AbIAmBJCBDXAU9BgAQA9bOAAA9YowM
MUYrAABqgQxxFfQYAEAMWDsDAPSIMTLEGK0AAKgFMsRV0GMAADFg7QwA0CPG
yBBjtAIAoBbIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAgKvgd85NS3Jy8q5du8Qfp66ubvLkyS0t
LeIPBfSIMTLEGK0AboAkBJJgjAwxRiuAGyAJgSSYIUPM0EbgkJ07d06ZMkX8
cT799NOwsDDxxwE6xRgZYoxWADdAEgJJMEaGGKMVwA2QhEASzJAhZmgjcMjF
ixctFgv9X+RxoqOj161bJ0mVgB4xRoYYoxXADZCEQBKMkSHGaAVwAyQhkAQz
ZIgZ2gicMWXKlB07dog5wvXr1728vEpLS6WqEtAdxsgQY7QCuAeSEIjHGBli
jFYA90ASAvFoMEPa29v//fdfCQ+owTYCxdiwYUNUVJSYI+Tl5YWEhPT09EhV
JaA7VMkQJCGQECQhEA+SEOgdJCEQjwYz5IknnrBYLPX19VIdsN82VldXv/HG
G3Q1TZo0adWqVV988YVU0hrUvXLlys6dO1esWEGi4eHhcXFx+/fv7+zslFv3
8uXLn3zyCemGhYVFRkauXr1ambt2lZWVnp6ezc3Nbh9h8eLFiYmJzt5Vq11q
nUez+YehSk4qnIRmczKDpuU5OTl0gUvyAzJa1pU7CTmTjaQM8/iHgSSUDySh
MopIQmnBnFAjREdHU07W1dVJdUD+Nh47dmzw4MGW/4bOgtynXnndnp6erKys
YcOGWfrwwAMPXLt2TSZdoqioKCAgwE50wIABb775pnyiVu69997PPvvMvX1v
375Np+nbb791+K4q7VLrPJrWP5xKOalkEprKyYzs7GzqYX9/f6Y4bdo0WeVU
1+XkTELOTCMpw4T+4ZCE8oAkRBKKB2sKw88J+UlJSZkxY8Y///wj1QF52vjH
H394enpSnz/77LMVFRX19fUZGRkDBw6kLWlpaVJVQCO6TU1N1BUksWDBgsLC
wr///vvUqVOpqaleXl60cdmyZTLpFhQUkKVJYsmSJWT4q1evVlZWkhxz+8mT
J2XStUKOon52b98jR44MHTrUYfio1S61zqNp/cOplJOKJaHZnMyIiYmxHXYV
m7mppcvJloScyUZShgn9wyEJ5QFJiCQUCdYUZpgTKgxPG5OSkqirH3nkEdsL
ITs7mzYGBATcuHFDpiqppVtaWvr111/bbVy/fj3pDh8+XCZRamN8fPzu3bvt
ts+ePZt0ExISZNK18sMPP/j4+LjXq2vWrFm+fLnDt1RslyrnUS1d1f3DGSUn
nbXChE4mWltbr/by1ltvKTlzU0uXky0JOfONpJwp/cMhCWUDSYgkFAPWFBzm
hFLjrI03b9708/Ojrj58+LDt9q6urpEjR9L2vXv3ylEftXSdkZubS6IDBw5U
7Js1jB07dpDu9OnT5Ra6c+cOXcV2vS2E7u7uESNGfPXVVy7tpVi77FDrPBre
P5xRctLVVpjEyayZCq9BVNGVKQlNPpKaxz8cklBZkIQygSSUFcwJFaO9vT08
PHyKDQ8//LBUB3fWxl9//ZX62dfXt+/5Xbt2Lb2VnJwsVR20oOuQjo6OuXPn
kuiMGTMUE2W89tprpDt//nwFtFavXr1ixQpX9zp9+vSgQYPa2tpc2kvJdllR
6zyaxD9u5+SFCxeKi4uFl1clCZ1hEiebZ8bIyZOEJh9JTeUfxWaMSEIkoawg
CWUCc0J+XJ0T8tPd3X3ixInjx4/H9vLhhx8OHjxYqoM7a+PJkyepn8ePH8/1
3oZKT0+Pj48/d+4cvdy2bRu9tWjRIqnqoAVdW1pbW3///ffs7OyIiAj24Yry
8nK5RW3p6em5//77SZrOtQJyhYWFAQEBXV1dLu2VmpoaExPj0i4Kt0ut82g2
/7idk3v27Jk1a5bw8qokoUNM4mTOZDNGOZLQzCMpZzL/KLZ2RhIiCWUFSSgt
mBMKxNU5oUD+00tpaakCOcm+C8BuZh49epR9zZzdssjJyZHvtolaula+++47
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
JvEeskvXumr1sy2qZBf5dsaMGf/8849UB0QSqqurupNlSkLijz/+8PT0pFbQ
8SsqKurr6zMyMgYOHEhb0tLSRFS5H9TS5Uw5knJYO7uOsx6jSyk+Pn737t12
22fPnk2nNSEhQb4qlZaWfv3113Yb169fT7rDhw+XT5dobW292stbb72lpHvV
0iV++OEHHx+fGzduuLHvmjVrli9f7vAt+Mck/uG0t3aG90ziPWSXrnVV7Gcr
xpgxIgnV1VXdyTIlIZGUlERNeOSRR2wX19nZ2bQxICDAPUUhqKXLmXIk5YyS
hEriao/t2LGDTuv06dNlqo8zcnNzSXfgwIHKfHOQNVNh96qie+fOHRpTDh8+
7OqO3d3dI0aM+Oqrr1zaC/4xnq7W1s7OgPcMpovsMqSukv1sjBkjklCbuor1
s0xJePPmTT8/P2qC3ZG7urpGjhxJ2/fu3etmjXlRS9cO84yknFGSUElc7bHX
XnuNTuv8+fNlqo9DOjo65s6dS7ozZsxQRtFUV83q1atXrFjh6l6nT58eNGhQ
W1ubS3vBP8bT1cvaGd4zni6yy2C6nLL9rFh2tbe3h4eHT7Hh4YcflurgSEIN
6nLK9rMcSfjrr79S/X19ffvec1i7di29lZyc7E5d+0MtXTtMNZK6nYQXLlwo
Li6WtjK6wKUe6+npuf/+++m0fvjhh/JVyUpra+vvv/+enZ0dERHBPnJTXl6u
gC5nsqumsLAwICCgq6vLpb1SU1NjYmJc2gX+MaSuLtbO8J4hdZFdxtC1onA/
K5Zd3d3dJ06cOH78eGwv1LrBgwdLdXAkoXZ0rSjcz3Ik4cmTJ6n+48eP53r/
tJ2enh4fH3/u3Dl6uW3bNnpr0aJFIqutKV07TDWSup2Ee/bsmTVrlrSV0QUu
9dj27dvpnA4dOlTCxys447vvvrP94vzatWspDOUWtWKqq+bWrVt+fn6u3jsK
DQ3NyspyaRf4x5C6ulg7w3uG1EV2GUDXFiX7mVMju/7TS2lpqVprZzhZGRR2
shxJyL5fzD4gcfToUdaZ7M/oOTk58v0pXy1dO0w1kmLt7CrCe6yiosLb25vO
KfWVrFVi0OAybty4IUOGsAvH19c3OTn55s2bCkhzJrtqiLi4uKSkJOHlq6ur
PTw8Ghsbhe8C/xhVV/trZ3jPwLrILr3rWlG4nznzrZ3hZGVQ3smcDEmYmZlJ
TZg7dy7X+8Qo1pnPPPMMvTx06BD9Ozw8XHy1taNrh6lGUqydXUVgj9XW1oaE
hLCbPz09PXLXypaGhobt27cHBQWR+pw5c7q7uxUQNdVVw/XezRs9erTw8hs3
bnTpeoF/lEH7qUtnv9s5cujCe8qA7JIcVfyjlq4q/ax8dqm4doaTDexkToYk
LCwspFZMnjyZu/vZ6eeff559dvrjjz+mt2JjY0XWWVO6dphqJHU7CTMzM2fO
nOn2LE6/COmx8+fPjxo1is5mVFRUe3s7T0n5gqKyspI93M3hbwlKrivQvYbR
vXTpEulevHhRYPno6Oh169YJLAz/OMMYui6lLjnH4hzhDhSoC+85wzC6yC4D
6KrVz8pnl1prZzjZ2E7mZEjCsrIyOqBDd7HnKL344ot93xLfLrV07TDVSKrW
LE6/9NtjNTU1Y8aMoQ6ZOnWqs++MVFRUkJnHjRvn6ekZHBy8dOlSOb7iER4e
TtWwvdjl0+V3r/F0Dx48OHLkSOEXY3p6+pw5c4SUhH/6YjBdl1K3oaGh1jku
3bREdjnEVN7jkF3611Wxn5XPLlXWznCy4Z3MyZCEzc3NAwYMoOZUVlbavTV9
+nTavnnzZusWCdullq4dphpJ3U7Ct99+my4ut2dx+oW/x3755Zfhw4fTeYyM
jLx+/brDMufPn/fw8KBrNiEh4f3331+8eDGLDtsOpH3z8vLoLGdmZvLXh/bK
z8/v2/kdHR1UVTryrl27BOqWlZXRIBURETFx4kSS7nsZ8sDj3n51y8vLExMT
6RqfMGHC008/7dJTRMXoWuns7HzhhRcWLVrU0tIiUJf6x+GtPGdQ39KV2+/x
4R832qs7/2jz+87wnhvt1Z33OGSXaP9IqOuGf6TqZ4b2s0v5tTOcbAYnc/Ik
4VNPPUU1tPsadVVVFW2khlj/wiitfyTUxUgqdxLi+859OXHiBHtAeXR09I0b
N3gOcuzYMdtPp9D1S3udOXOGvdyyZQu7iUTQ2eSvz8aNG9nHXaqrq60b6ewz
kxBnz54Voksn1NvbOzAwcMmSJewhBV5eXsIfUsB/54dHd/fu3RRHQUFBZNr5
8+f7+vrSW++9957curZQ4Lj02QkaWfz9/engAivJGDNmzIEDB3gKwD8m8Y8G
187wnkm8h+zqq+uqf6TSdcM/UvWzFe1nl8JrZzjZJE6WKQmPHz9OdaDeyM3N
ZVsaGhruu+8+2rhw4ULbkhL6RypdjKQKJCHWznaUlJSQzVjnBwQEUCzQy4E2
LFu2zG4XyqvPP/88LS2NepL2ysvLY9tpmMjMzGTPZev3qikqKmJ3CAny3pNP
Pvnoo4/SKMO2bNq0qe8uDnXXr19PEXrt2jVWpqCggN6iCOWRjouLG3EXq6J1
C9VEiG5tbe3y5cubm5tZGXabaNSoUXLrWqGooY3sGzcXLlzg0bVCsT9kyJDb
t28LKWyFrk27ELMF/jGPf7S2dob3zOM9ZJd4/0il66p/JOxnhpazq7W1taGX
Vb1Qn/v4+DTcReTBkYTS6urRyXIkIdf7pdqVK1dSNWjlS8vPmJgYWqHTS1p0
19TU9C0viX+k0sVIqkASYu1sB50XCy+2Djxw4MCECRNo46RJk8gD7Ivk+/fv
tz1gU1OTwKvm6tWrVCwsLIz8ZpWjIx88eNCuJL/unTt3rCW7u7vJgVSMR5d9
k8IZtr+KL6S9VqZOnUrXgm1l5NOtqqry9fWdNm0aDRMWwXecXn75Zf48cUhx
cTFp3bp1y+G78I95/KO1tTO8Zx7vIbsk8Y9Uunbw+0faftZ4dsXGxvK0lBwi
5uBIQsl17dC+k+VIQgYtY9PT0wMDA1lbBg4cOHv27Lq6Orti0vpHKl2MpHIn
YVlZ2b59+9zbV9eIHzsOHz5s6f0cxZ9//sm2fPPNNyKvGkZbW1t5efmZM2cc
jiwCdRkdHR1+fn4xMTHC1Z3hku6hQ4fokn/llVcU0G1tbaVrKigo6NKlS+++
+67Aq4YCKiQkxO62lRC6uroCAgKKiopc3dEO+EfX/uG0t3YWDryna+8huyT3
j4S62vcPp152SQuSUFZd7TtZgSQkid9++4360+FjsuXzjyS6DIykPBgjCZVE
fI8lJibSCbK9HbR582ZJrhpJdBkZGRkWiZ5TL0T36NGjdIWOHTuWLpmUlBRn
PxwhoS4lzIIFC0ju1KlT9FL4VfPzzz97eXm5V8PnnnsuISHBjR1tgX907R9O
z2tneE/X3kN28esy4B8ejDFjRBLKoasjJyMJ+XUZ8A8PxkhCJRHfY1u3bqUT
FB8fX1JSkpubS26x9CL3VSNQl+t9up+Pjw97frcyugUFBbNmzWJPK4iKinLp
x/3c092yZQv9+6OPPmKFhV81aWlpjz/+uHtVys/PJ/+I7FX4R9f+4fS8dob3
dO09ZBf8w+kzu6QFSSiHro6cjCSEfzgkobKI77H29vaFCxeyMzho0KB58+b9
+OOP9O+cnBzbYpJfNQJ1q6urR4wYQQb+66+/lNRl/PTTTyQdGBh45coV+XRJ
xdPTc9iwYe/c5bHHHqO3UlJSPvjgA/7DTpw4MSMjw70qtbW1UU1Onz7t3u4M
+EfX/uH0vHaG93TtPWQX/KPT7JIWJKFMugztOxlJCP8gCRVGqh5rbGw8e/Zs
R0eHswKSXzVCdCsrK6mBwcHBDn+aTz5dW/bt2+fsmpJKNz8/f+x/wx6XMHr0
6AcffJDnaLW1tVTs8uXLbtcnNjY2NTXV7d2twD/O0LJ/GPpdOzPgPWdo2XvI
LviH0212SQuSUA5dW7TsZCQh/MMhCRVHsR6T6arhobi42N/f/5577pH8kuGh
qKjI9tmCXO/Haajh4n+XxiUEflpj27ZtERERYoSysrLGjx8v5ggCgX8UqwOn
k0/7ILukRV/eQ3bxAP9oPLukBUkoLfpyMpKQB/jHVEmoJHL3WG1t7f/18s47
79B5jIyMZC+///57WXW//PJLb29vUnz11VfJQpvuUlJSIp9oZ2cnXaSk+9JL
L+Xk5Bw5ciQpKcnDwyM0NLStrU0+3b4IvGpmzpzp8KGHwmlsbKQGnjt3TsxB
eIB/tOwfhlHXzvCelr2H7HIG/KP97JIWJKGE6M7JSEJnwD9mS0IlkbvH8vPz
LY5Ys2aNrLoPPfSQQ90NGzbIqtvU1LRy5crg4GAmN2DAgHnz5gl8OrmEsB8N
4L9qWGDa3R9zA4puukhFHsQZ8I9m/WPFqGtneE+z3kN28QD/aD+7pAVJKC06
cjKSkAf4x2xJqCToMZmor6+vqqpS+EaTS+zduzc0NFT8cbZu3Srk+xTAJbTv
HytGXTubFu17D9mlZbTvHyvGyBBjtEKDaN/JSEIto33/WEGGuAp6zLQsXbr0
9ddfF3+cmpoaLy+vlpYW8YcCegRrZ6AwyC4gCcbIEGO0ArgBkhBIAjLEVdBj
AAAxYO0MANAjxsgQY7QCAKAWyBBXQY8BAMSAtTMAQI8YI0OM0QoAgFogQ1wF
PQYAEAPWzgAAPWKMDDFGKwAAaoEMAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAp+59y0JCcn79q1
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
    "], {{0, 120.}, {650., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{650., 120.},
  PlotRange->{{0, 650.}, {0, 120.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->563799093,ExpressionUUID->"ac081a67-bf30-4407-a4f5-7acf31288859"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "=", 
  RowBox[{"DyadForm", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Matrix", "[", 
      RowBox[{"op1", ",", 
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], "]"}], ".", 
     RowBox[{"Matrix", "[", 
      RowBox[{"op2", ",", 
       RowBox[{"a", "@", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], "]"}]}], ",", 
    RowBox[{"a", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->90023360,ExpressionUUID->"a7a339ef-b268-4714-8378-bf1f28e18140"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQtQVdX//n8EQQYUBfyKgzql6ESaI0pjooVm0QXKC443ckwZu5B8vlA0
/aQJLS1Ny8u3KBSNlCDHSCYYbxljMTZJzXARrAnyUgmIEMqEioCw/+8/azxz
PodzNvucfd/7ec3UePZZez9rrf3sZ621OefssQnJcS96WCyWVB/6X9zq//fo
a6+tTls0jF4s/t/UxJf+94U1T//v6y+89MJrMxI8aWMr/Tfcy2L5///NAQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFCW//mf/1G7CkAdkpOTd+3aJf44
dXV1kydPbmlpEX8ooEfUyhBkl2lBdgFJQIYAAABwFYwdpmXnzp1TpkwRf5xP
P/00LCxM/HGATsHaGSgMsgtIAjIEAACAq2DsMC0XL160WCz0f5HHiY6OXrdu
nSRVAnoEa2egMMguIAnIEAAAAK6CscPMTJkyZceOHWKOcP36dS8vr9LSUqmq
BHQH1s5AeZBdQDzIEAAAAK6CscPMbNiwISoqSswR8vLyQkJCenp6pKoS0B1Y
OwPlQXYB8SBDAAAAuEq/Y0d1dfUbb7xBs5RJkyatWrXqiy++UKZiaukS7e3t
OTk5iYmJkvwcjZZ1KysrPT09m5ub3T7C4sWLqcI8BeAfw+tqdu0M7xlYF9kl
LVeuXNm5c+eKFStINDw8PC4ubv/+/Z2dnXLrXr58+ZNPPiHdsLCwyMjI1atX
K/lJAKydAQAAuAr/2HHs2LHBgwdb/hsa3eQeUtXSzc7Ojo6O9vf3Z4rTpk2T
VU51XeLee+/97LPP3Nv39u3bdJq+/fZbZwXgH1nlVNdlaHPtDO/JKqe6Lofs
koienp6srKxhw4ZZ+vDAAw9cu3ZNJl2iqKgoICDATnTAgAFvvvmmfKK2YO0M
AADAVXjGjj/++MPT05PGsmeffbaioqK+vj4jI2PgwIG0JS0tTb4qqaVLxMTE
2A7iis0D1dIlUlJSqJ/d2/fIkSNDhw51NqmDf8zgH06Ta2d4zwzeQ3ZJQlNT
E11KJLFgwYLCwsK///771KlTqampXl5etHHZsmUy6RYUFNAymSSWLFlCi+ir
V69WVlaSHDPSyZMnZdK1BWtnAAAArsIzdiQlJdEQ9sgjj9hOMLKzs2ljQEDA
jRs3ZKqSWrpEa2vr1V7eeustJeeBaukSP/zwg4+Pj3u9umbNmuXLlzt7F/4x
g384Ta6d4T0zeA/ZJRWlpaVff/213cb169eT7vDhw2USpTbGx8fv3r3bbvvs
2bNJNyEhQSZdW7B2BgAA4CrOxo6bN2/6+fnREHb48GHb7V1dXSNHjqTte/fu
laM+aunasWPHDuXXIKro3rlzh2ZHdr0thO7u7hEjRnz11VcO34V/TOIfTntr
Z3jPJN5DdslKbm4uiQ4cOFCBbz3bwow0ffp0BbSwdgYAAOAqzsaOX3/9lcYv
X1/fvuPm2rVr6a3k5GQ56qOWrh3mmX8Sq1evXrFihat7nT59etCgQW1tbQ7f
hX/M4x+trZ3hPfN4D9klEx0dHXPnziXRGTNmKCbKeO2110h3/vz5Cmhh7QwA
AMBVnI0dJ0+epPFr/PjxXO/t/fT09Pj4+HPnztHLbdu20VuLFi2Soz5q6dph
qvlnYWFhQEBAV1eXS3ulpqbGxMQ4exf+MY9/tLZ2hvfM4z1kl7S0trb+/vvv
2dnZERER7APb5eXlcova0tPTc//995P0hx9+qIAc1s4AAABcxdnYwb5j9fDD
D9O/jx49yn6+g90KzsnJke92tFq6dphq/nnr1i0/P7/i4mKX9goNDc3KynL2
LvxjHv9obe0M75nHe8guCfnuu+8sNqxdu5aW0rIq9mX79u0kPXTo0Pr6egXk
sHYGAADgKs7GjszMTBrC5s6dy/U+NYMNps888wy9PHToEP07PDxcjvqopWuH
qeafRFxcXFJSkvDy1dXVHh4ejY2NzgrAP+bxj9bWzvCeebzHIbuko7S0dNy4
cUOGDGHSvr6+ycnJN2/elFXUloqKCm9vb5Les2ePMopYOwMAAHAVZ2NHYWEh
DWGTJ0/m7n5+7Pnnn2efH/v444/prdjYWDnqo5auHWabf+bk5IwePVp4+Y0b
N86aNYunAPxjHv+4NP/s6enpdo4kuvCeebzHIbtkoKGhYfv27UFBQSQ6Z84c
Vy9M96itrQ0JCWF/aqeUUECRUy+7AAAA6BdnY0dZWRmNYg7fZc8iefHFF/u+
JX7IU0vXDoHzQMPoXrp0iXQvXrwosHx0dPS6det4CsA/5vGPS/NPco7FOcId
yKML75nHexyyS7ZlZmVlJXu0tMNfMpdW9/z586NGjSKtqKio9vZ2npLGyC4A
AAD6xdnY0dzcPGDAABoRaAC1e2v69Om0ffPmzdYtFRUVNKyPGzfO09MzODh4
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
emvRokVy1EctXVtaW1t///337OzsiIgI9hGR8vJyuUVt6enpuf/++0n6ww8/
VECusLAwICCgq6vLpb1SU1NjYmKcvWtm/3BIXWHs2bNn1qxZkuua2XvILiEg
u5xhNv8oll3d3d0nTpw4fvx4bC/UusGDB7sn3RckYV/M5mQ5ktAhCrdLxfOI
WRzgwVmPsW+msFujR48etfTCbjTl5OTId/NHLV0r3333ncWGtWvX0sUrq2Jf
tm/fTtJDhw6V8DEWPNy6dcvPz8/VvwCGhoZmZWU5e9e0/mEgdYUg09rZtN5D
dgkE2eUQE/pH+ez6Ty+lpaUKrJ3hZPM4WY4kdIiS7VL3PGIWB3hw1mOZmZl0
+ubOncv1PmuAWfeZZ56hl4cOHaJ/h4eHy1EftXSt0KA2bty4IUOGMGlfX9/k
5OSbN2/KKmpLRUWFt7c3SdPorJhoXFxcUlKS8PLV1dUeHh6NjY3OCpjWPwyk
rhBkWjub1nvILiEgu5xhQv8Ye+0MJ5vHyZwMSdgXhdul7nnELA7w4KzHCgsL
6fRNnjyZu/upm+eff5596ubjjz+mt2JjY+Woj1q6fWloaNi+fXtQUBCJzpkz
p7u7WwHR2trakJAQdpO2p6dHAUVGTk7O6NGjhZffuHEj/8zB5P5B6jqDXN19
F5pizZw5s9sGSXRN7j0O2cULsqtfzOMf5bNLybUznGweJ3MyJKEdarWLU+k8
YhbnDNsk7It8ldQUznqsrKyMTp/Dd9kvqL/44ot93xJ/Qaml64zKykr2UEKH
v2Eore758+dHjRpFWlFRUe3t7TwlJW/vpUuXSPfixYsCy0dHR69bt46ngMn9
IzD9jKHrUuqScyzOEe5AHl2Te88KssshyC6BmME/ymeXkmtnOJlhBidzMiSh
LSq2y4qS55HDLM45Es7i9IuzHmtubmZPRSe72r01ffp02r5582brloqKCgrD
cePGeXp6BgcHL1261O2vQqily0N4eDjp2oaMHLo1NTVjxowhoalTpzr7Tod8
7T148ODIkSOFX4zp6elz5szhKWBy//Cnn8F0XUrdhoaG2ru8/fbbdHHV2uDS
TUtkV78gu/qC7BKO4f2jfHYpuXaGk60Y3smcDEloRd122aLMeWRgFucM2yTs
i0n+9MzTY0899RSdQbsvUFRVVdFGDw8P672F8+fP00u6ZhMSEt5///3Fixez
S8y2A69fv56Xl0dnOTMzs98qSaVbVlZGg1RERMTEiRNJum+M20J75efn9z3p
HR0d1EV05F27dgnULS8vT0xMpDFiwoQJTz/9tJBn5/3yyy/Dhw+n40RGRlJf
OSwjpJ8ZnZ2dL7zwwqJFi1paWvqVZlD/OLwV7AzqW7py+Y9vKv/YwZN+cvhH
El0rrvpHa9935kzmPWQXsgv+YWg/u5RcO3Nwci9mcDInTxJy0rVLuH8kPI+Y
xcmdhKaFp8eOHz9O54UurtzcXLaloaHhvvvuo40LFy60LXns2DHbT3HQ9Utl
zpw5w15u2bKF3YQk6Gz2WyVJdGlo8/b2DgwMXLJkCftxey8vL54ft9+4caOl
9+Mo1dXV1o3kOmZO4uzZs0J0d+/eTTUPCgoi086fP9/X15feeu+993jae+LE
CT8/PyoWHR1948YNnpL8/WyFBiyXPjtBieTv708HF1LYypgxYw4cOMBTwFT+
sYP/zqG0/pFE1xZX/aPBtbOpvIfsQnbBPwztZ5fCa2c42SROlikJpWqXS/6R
6jxiFqdAEpoWnh7r6elZuXIldT55nowXExND1ya9pMutpqamb3ny+eeff56W
lkZjChXLy8tj22mYyMzMZM/1E5K6kuiuX7+eLr1r166xMgUFBfQWXXrORIuK
itgdLYI8/+STTz766KM0urEtmzZtEqhbW1u7fPny5uZmVobdJho1apQz3ZKS
ErqcmUpAQADFFL0caMOyZcuE6FqhoYo2sm+mXLhwwZmuLRSPQ4YMuX37tpDC
VujatBsE7TCVf7jeX7kccRerc6xbyFFCdF31j1S6VtzwjwbXzqbyHrIL2QX/
cNrOrtbW1oZeVvVCfe7j49NwF/fqYAVJyDCzk+VIQgnb5ZJ/pDqPmMUpkISm
hb/HKADT09MDAwPZqaSLZfbs2XV1dXbFDhw4MGHCBCowadIk8gD7Ivn+/ftt
yzQ1NQlMXal079y5Yy3Z3d1NDqRiPKJXr16l6oWFhZHPLXehXQ4ePOhGe61M
nTqVrgXbythC/rfwYnul96tbVVXl6+s7bdo0iheL4DtOL7/8Mn+eOKS4uJi0
bt26xVPGVP5h3+Ryhu1TOST0j7S67vnH7dQtKyvbt2+fe/v2q2sq7yG7XALZ
ZYdp/aNYdsXGxvK0lBziXjUYSEIrpnWyHEkobbs4V/wj1XnELA5/d5YJIT1G
Gfjbb7+dOXPG4YPVDh8+bOn9HM6ff/7JtnzzzTdirhppdRkdHR1+fn4xMTFC
dNva2srLy0nX4Yjmku6hQ4doyHjllVeE6PLTr25raytdU0FBQZcuXXr33XcF
XjXUySEhIXa3rYTQ1dUVEBBQVFQkRMJU/uHHYP7h1EtdZFdfkF1CQHY5w1T+
4YwyY0QS9sVUTlYgCfmRzz8SnkfM4ngwRhIqifgeS0xMpBNkeztx8+bNklw1
kugyMjIyLBI9z12I7tGjR+kKHTt2LF0yKSkpzn5gQUJdCs8FCxaQ3KlTp+il
8Kvm559/9vLycq+Gzz33XEJCghs72gL/6No/nLbXzvzAe7r2HrKLX5cB//Bg
jBkjklAOXR05GUnIr8uAf3gwRhIqifge27p1K52g+Pj4kpKS3NxccoulF7mv
GoG6XO9T4Xx8fGbOnCnJb6cL0S0oKJg1axb7Vf+oqCiXftzPPd0tW7bQvz/6
6CNWWPhVk5aW9vjjj7tXpfz8fPKPyF6Ff3TtH07Pa2d4T9feQ3bBP5w+s0ta
kIRy6OrIyUhC+IdDEiqL+B5rb29fuHAhO4ODBg2aN2/ejz/+SP/OycmxLSb5
VSNQt7q6esSIEWTgv/76S0ldxk8//UTSgYGBV65ckU+XVDw9PYcNG/bOXR57
7DF6KyUl5YMPPuA/7MSJEzMyMtyrUltbG9Xk9OnT7u3OgH907R9Oz2tneE/X
3kN2wT86zS5pQRLKpMvQvpORhPAPklBhpOqxxsbGs2fPdnR0OCsg+VUjRLey
spIaGBwc7PCnHeXTtWXfvn3OrimpdPPz88f+N+yxAqNHj37wwQd5jlZbW0vF
Ll++7HZ9YmNjU1NT3d7dCvzjDC37h6HftTMD3nOGlr2H7IJ/ON1ml7QgCeXQ
tUXLTkYSwj8cklBxFOsxma4aHoqLi/39/e+55x7JLxkeioqKbJ9Jx/V+nIYa
Lv7XGFxC4Kc1tm3bFhERIUYoKytr/PjxYo4gEPhHsTpwOvm0D7JLWvTlPWQX
D/CPxrNLWpCE0qIvJyMJeYB/TJWESiJ3j9XW1v5fL++88w6dx8jISPby+++/
l1X3yy+/9Pb2JsVXX32VLLTpLiUlJfKJdnZ20kVKui+99FJOTs6RI0eSkpI8
PDxCQ0Pb2trk0+2LwKtm5syZDh+WJ5zGxkZq4Llz58QchAf4R8v+YRh17Qzv
adl7yC5nwD/azy5pQRJKiO6cjCR0BvxjtiRUErl7LD8/3+KINWvWyKr70EMP
OdTdsGGDrLpNTU0rV64MDg5mcgMGDJg3b57Ap5NLCPvRAP6rhgWm3f0xN6Do
potU5EGcAf9o1j9WjLp2hvc06z1kFw/wj/azS1qQhNKiIycjCXmAf8yWhEqC
HpOJ+vr6qqoqhW80ucTevXtDQ0PFH2fr1q1Cvk8BXEL7/rFi1LWzadG+95Bd
Wkb7/rFijAwxRis0iPadjCTUMtr3jxVkiKugx0zL0qVLX3/9dfHHqamp8fLy
amlpEX8ooEewdgYKg+wCkmCMDDFGK4AbIAmBJCBDXAU9BgAQA9bOAAA9YowM
MUYrAABqgQxxFfQYAEAMWDsDAPSIMTLEGK0AAKgFMsRV0GMAADFg7QwA0CPG
yBBjtAIAoBbIEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAgKvgd85NS3Jy8q5du8Qfp66ubvLkyS0t
LeIPBfSIMTLEGK0AboAkBJJgjAwxRiuAGyAJgSSYIUPM0EbgkJ07d06ZMkX8
cT799NOwsDDxxwE6xRgZYoxWADdAEgJJMEaGGKMVwA2QhEASzJAhZmgjcMjF
ixctFgv9X+RxoqOj161bJ0mVgB4xRoYYoxXADZCEQBKMkSHGaAVwAyQhkAQz
ZIgZ2gicMWXKlB07dog5wvXr1728vEpLS6WqEtAdxsgQY7QCuAeSEIjHGBli
jFYA90ASAvFoMEPa29v//fdfCQ+owTYCxdiwYUNUVJSYI+Tl5YWEhPT09EhV
JaA7VMkQJCGQECQhEA+SEOgdJCEQjwYz5IknnrBYLPX19VIdsN82VldXv/HG
G3Q1TZo0adWqVV988YVU0hrUvXLlys6dO1esWEGi4eHhcXFx+/fv7+zslFv3
8uXLn3zyCemGhYVFRkauXr1ambt2lZWVnp6ezc3Nbh9h8eLFiYmJzt5Vq11q
nUez+YehSk4qnIRmczKDpuU5OTl0gUvyAzJa1pU7CTmTjaQM8/iHgSSUDySh
MopIQmnBnFAjREdHU07W1dVJdUD+Nh47dmzw4MGW/4bOgtynXnndnp6erKys
YcOGWfrwwAMPXLt2TSZdoqioKCAgwE50wIABb775pnyiVu69997PPvvMvX1v
375Np+nbb791+K4q7VLrPJrWP5xKOalkEprKyYzs7GzqYX9/f6Y4bdo0WeVU
1+XkTELOTCMpw4T+4ZCE8oAkRBKKB2sKw88J+UlJSZkxY8Y///wj1QF52vjH
H394enpSnz/77LMVFRX19fUZGRkDBw6kLWlpaVJVQCO6TU1N1BUksWDBgsLC
wr///vvUqVOpqaleXl60cdmyZTLpFhQUkKVJYsmSJWT4q1evVlZWkhxz+8mT
J2XStUKOon52b98jR44MHTrUYfio1S61zqNp/cOplJOKJaHZnMyIiYmxHXYV
m7mppcvJloScyUZShgn9wyEJ5QFJiCQUCdYUZpgTKgxPG5OSkqirH3nkEdsL
ITs7mzYGBATcuHFDpiqppVtaWvr111/bbVy/fj3pDh8+XCZRamN8fPzu3bvt
ts+ePZt0ExISZNK18sMPP/j4+LjXq2vWrFm+fLnDt1RslyrnUS1d1f3DGSUn
nbXChE4mWltbr/by1ltvKTlzU0uXky0JOfONpJwp/cMhCWUDSYgkFAPWFBzm
hFLjrI03b9708/Ojrj58+LDt9q6urpEjR9L2vXv3ylEftXSdkZubS6IDBw5U
7Js1jB07dpDu9OnT5Ra6c+cOXcV2vS2E7u7uESNGfPXVVy7tpVi77FDrPBre
P5xRctLVVpjEyayZCq9BVNGVKQlNPpKaxz8cklBZkIQygSSUFcwJFaO9vT08
PHyKDQ8//LBUB3fWxl9//ZX62dfXt+/5Xbt2Lb2VnJwsVR20oOuQjo6OuXPn
kuiMGTMUE2W89tprpDt//nwFtFavXr1ixQpX9zp9+vSgQYPa2tpc2kvJdllR
6zyaxD9u5+SFCxeKi4uFl1clCZ1hEiebZ8bIyZOEJh9JTeUfxWaMSEIkoawg
CWUCc0J+XJ0T8tPd3X3ixInjx4/H9vLhhx8OHjxYqoM7a+PJkyepn8ePH8/1
3oZKT0+Pj48/d+4cvdy2bRu9tWjRIqnqoAVdW1pbW3///ffs7OyIiAj24Yry
8nK5RW3p6em5//77SZrOtQJyhYWFAQEBXV1dLu2VmpoaExPj0i4Kt0ut82g2
/7idk3v27Jk1a5bw8qokoUNM4mTOZDNGOZLQzCMpZzL/KLZ2RhIiCWUFSSgt
mBMKxNU5oUD+00tpaakCOcm+C8BuZh49epR9zZzdssjJyZHvtolaula+++47
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
JvEeskvXumr1sy2qZBf5dsaMGf/8849UB0QSqqurupNlSkLijz/+8PT0pFbQ
8SsqKurr6zMyMgYOHEhb0tLSRFS5H9TS5Uw5knJYO7uOsx6jSyk+Pn737t12
22fPnk2nNSEhQb4qlZaWfv3113Yb169fT7rDhw+XT5dobW292stbb72lpHvV
0iV++OEHHx+fGzduuLHvmjVrli9f7vAt+Mck/uG0t3aG90ziPWSXrnVV7Gcr
xpgxIgnV1VXdyTIlIZGUlERNeOSRR2wX19nZ2bQxICDAPUUhqKXLmXIk5YyS
hEriao/t2LGDTuv06dNlqo8zcnNzSXfgwIHKfHOQNVNh96qie+fOHRpTDh8+
7OqO3d3dI0aM+Oqrr1zaC/4xnq7W1s7OgPcMpovsMqSukv1sjBkjklCbuor1
s0xJePPmTT8/P2qC3ZG7urpGjhxJ2/fu3etmjXlRS9cO84yknFGSUElc7bHX
XnuNTuv8+fNlqo9DOjo65s6dS7ozZsxQRtFUV83q1atXrFjh6l6nT58eNGhQ
W1ubS3vBP8bT1cvaGd4zni6yy2C6nLL9rFh2tbe3h4eHT7Hh4YcflurgSEIN
6nLK9rMcSfjrr79S/X19ffvec1i7di29lZyc7E5d+0MtXTtMNZK6nYQXLlwo
Li6WtjK6wKUe6+npuf/+++m0fvjhh/JVyUpra+vvv/+enZ0dERHBPnJTXl6u
gC5nsqumsLAwICCgq6vLpb1SU1NjYmJc2gX+MaSuLtbO8J4hdZFdxtC1onA/
K5Zd3d3dJ06cOH78eGwv1LrBgwdLdXAkoXZ0rSjcz3Ik4cmTJ6n+48eP53r/
tJ2enh4fH3/u3Dl6uW3bNnpr0aJFIqutKV07TDWSup2Ee/bsmTVrlrSV0QUu
9dj27dvpnA4dOlTCxys447vvvrP94vzatWspDOUWtWKqq+bWrVt+fn6u3jsK
DQ3NyspyaRf4x5C6ulg7w3uG1EV2GUDXFiX7mVMju/7TS2lpqVprZzhZGRR2
shxJyL5fzD4gcfToUdaZ7M/oOTk58v0pXy1dO0w1kmLt7CrCe6yiosLb25vO
KfWVrFVi0OAybty4IUOGsAvH19c3OTn55s2bCkhzJrtqiLi4uKSkJOHlq6ur
PTw8Ghsbhe8C/xhVV/trZ3jPwLrILr3rWlG4nznzrZ3hZGVQ3smcDEmYmZlJ
TZg7dy7X+8Qo1pnPPPMMvTx06BD9Ozw8XHy1taNrh6lGUqydXUVgj9XW1oaE
hLCbPz09PXLXypaGhobt27cHBQWR+pw5c7q7uxUQNdVVw/XezRs9erTw8hs3
bnTpeoF/lEH7qUtnv9s5cujCe8qA7JIcVfyjlq4q/ax8dqm4doaTDexkToYk
LCwspFZMnjyZu/vZ6eeff559dvrjjz+mt2JjY0XWWVO6dphqJHU7CTMzM2fO
nOn2LE6/COmx8+fPjxo1is5mVFRUe3s7T0n5gqKyspI93M3hbwlKrivQvYbR
vXTpEulevHhRYPno6Oh169YJLAz/OMMYui6lLjnH4hzhDhSoC+85wzC6yC4D
6KrVz8pnl1prZzjZ2E7mZEjCsrIyOqBDd7HnKL344ot93xLfLrV07TDVSKrW
LE6/9NtjNTU1Y8aMoQ6ZOnWqs++MVFRUkJnHjRvn6ekZHBy8dOlSOb7iER4e
TtWwvdjl0+V3r/F0Dx48OHLkSOEXY3p6+pw5c4SUhH/6YjBdl1K3oaGh1jku
3bREdjnEVN7jkF3611Wxn5XPLlXWznCy4Z3MyZCEzc3NAwYMoOZUVlbavTV9
+nTavnnzZusWCdullq4dphpJ3U7Ct99+my4ut2dx+oW/x3755Zfhw4fTeYyM
jLx+/brDMufPn/fw8KBrNiEh4f3331+8eDGLDtsOpH3z8vLoLGdmZvLXh/bK
z8/v2/kdHR1UVTryrl27BOqWlZXRIBURETFx4kSS7nsZ8sDj3n51y8vLExMT
6RqfMGHC008/7dJTRMXoWuns7HzhhRcWLVrU0tIiUJf6x+GtPGdQ39KV2+/x
4R832qs7/2jz+87wnhvt1Z33OGSXaP9IqOuGf6TqZ4b2s0v5tTOcbAYnc/Ik
4VNPPUU1tPsadVVVFW2khlj/wiitfyTUxUgqdxLi+859OXHiBHtAeXR09I0b
N3gOcuzYMdtPp9D1S3udOXOGvdyyZQu7iUTQ2eSvz8aNG9nHXaqrq60b6ewz
kxBnz54Voksn1NvbOzAwcMmSJewhBV5eXsIfUsB/54dHd/fu3RRHQUFBZNr5
8+f7+vrSW++9957curZQ4Lj02QkaWfz9/engAivJGDNmzIEDB3gKwD8m8Y8G
187wnkm8h+zqq+uqf6TSdcM/UvWzFe1nl8JrZzjZJE6WKQmPHz9OdaDeyM3N
ZVsaGhruu+8+2rhw4ULbkhL6RypdjKQKJCHWznaUlJSQzVjnBwQEUCzQy4E2
LFu2zG4XyqvPP/88LS2NepL2ysvLY9tpmMjMzGTPZev3qikqKmJ3CAny3pNP
Pvnoo4/SKMO2bNq0qe8uDnXXr19PEXrt2jVWpqCggN6iCOWRjouLG3EXq6J1
C9VEiG5tbe3y5cubm5tZGXabaNSoUXLrWqGooY3sGzcXLlzg0bVCsT9kyJDb
t28LKWyFrk27ELMF/jGPf7S2dob3zOM9ZJd4/0il66p/JOxnhpazq7W1taGX
Vb1Qn/v4+DTcReTBkYTS6urRyXIkIdf7pdqVK1dSNWjlS8vPmJgYWqHTS1p0
19TU9C0viX+k0sVIqkASYu1sB50XCy+2Djxw4MCECRNo46RJk8gD7Ivk+/fv
tz1gU1OTwKvm6tWrVCwsLIz8ZpWjIx88eNCuJL/unTt3rCW7u7vJgVSMR5d9
k8IZtr+KL6S9VqZOnUrXgm1l5NOtqqry9fWdNm0aDRMWwXecXn75Zf48cUhx
cTFp3bp1y+G78I95/KO1tTO8Zx7vIbsk8Y9Uunbw+0faftZ4dsXGxvK0lBwi
5uBIQsl17dC+k+VIQgYtY9PT0wMDA1lbBg4cOHv27Lq6Orti0vpHKl2MpHIn
YVlZ2b59+9zbV9eIHzsOHz5s6f0cxZ9//sm2fPPNNyKvGkZbW1t5efmZM2cc
jiwCdRkdHR1+fn4xMTHC1Z3hku6hQ4fokn/llVcU0G1tbaVrKigo6NKlS+++
+67Aq4YCKiQkxO62lRC6uroCAgKKiopc3dEO+EfX/uG0t3YWDryna+8huyT3
j4S62vcPp152SQuSUFZd7TtZgSQkid9++4360+FjsuXzjyS6DIykPBgjCZVE
fI8lJibSCbK9HbR582ZJrhpJdBkZGRkWiZ5TL0T36NGjdIWOHTuWLpmUlBRn
PxwhoS4lzIIFC0ju1KlT9FL4VfPzzz97eXm5V8PnnnsuISHBjR1tgX907R9O
z2tneE/X3kN28esy4B8ejDFjRBLKoasjJyMJ+XUZ8A8PxkhCJRHfY1u3bqUT
FB8fX1JSkpubS26x9CL3VSNQl+t9up+Pjw97frcyugUFBbNmzWJPK4iKinLp
x/3c092yZQv9+6OPPmKFhV81aWlpjz/+uHtVys/PJ/+I7FX4R9f+4fS8dob3
dO09ZBf8w+kzu6QFSSiHro6cjCSEfzgkobKI77H29vaFCxeyMzho0KB58+b9
+OOP9O+cnBzbYpJfNQJ1q6urR4wYQQb+66+/lNRl/PTTTyQdGBh45coV+XRJ
xdPTc9iwYe/c5bHHHqO3UlJSPvjgA/7DTpw4MSMjw70qtbW1UU1Onz7t3u4M
+EfX/uH0vHaG93TtPWQX/KPT7JIWJKFMugztOxlJCP8gCRVGqh5rbGw8e/Zs
R0eHswKSXzVCdCsrK6mBwcHBDn+aTz5dW/bt2+fsmpJKNz8/f+x/wx6XMHr0
6AcffJDnaLW1tVTs8uXLbtcnNjY2NTXV7d2twD/O0LJ/GPpdOzPgPWdo2XvI
LviH0212SQuSUA5dW7TsZCQh/MMhCRVHsR6T6arhobi42N/f/5577pH8kuGh
qKjI9tmCXO/Haajh4n+XxiUEflpj27ZtERERYoSysrLGjx8v5ggCgX8UqwOn
k0/7ILukRV/eQ3bxAP9oPLukBUkoLfpyMpKQB/jHVEmoJHL3WG1t7f/18s47
79B5jIyMZC+///57WXW//PJLb29vUnz11VfJQpvuUlJSIp9oZ2cnXaSk+9JL
L+Xk5Bw5ciQpKcnDwyM0NLStrU0+3b4IvGpmzpzp8KGHwmlsbKQGnjt3TsxB
eIB/tOwfhlHXzvCelr2H7HIG/KP97JIWJKGE6M7JSEJnwD9mS0IlkbvH8vPz
LY5Ys2aNrLoPPfSQQ90NGzbIqtvU1LRy5crg4GAmN2DAgHnz5gl8OrmEsB8N
4L9qWGDa3R9zA4puukhFHsQZ8I9m/WPFqGtneE+z3kN28QD/aD+7pAVJKC06
cjKSkAf4x2xJqCToMZmor6+vqqpS+EaTS+zduzc0NFT8cbZu3Srk+xTAJbTv
HytGXTubFu17D9mlZbTvHyvGyBBjtEKDaN/JSEIto33/WEGGuAp6zLQsXbr0
9ddfF3+cmpoaLy+vlpYW8YcCegRrZ6AwyC4gCcbIEGO0ArgBkhBIAjLEVdBj
AAAxYO0MANAjxsgQY7QCAKAWyBBXQY8BAMSAtTMAQI8YI0OM0QoAgFogQ1wF
PQYAEAPWzgAAPWKMDDFGKwAAaoEMAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAp+59y0JCcn79q1
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
    "], {{0, 120.}, {650., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{650., 120.},
  PlotRange->{{0, 650.}, {0, 120.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->1073505487,ExpressionUUID->"73afe988-15cf-4bc3-bf53-fb3e287020d3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"out", "-", "new"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1407924609,ExpressionUUID->"023300d0-1d1e-4dc2-97ce-f1d6a3678acc"],

Cell[BoxData["0"], "Output",
 CellLabel->"Out[5]=",
 CellID->439255882,ExpressionUUID->"28d3122a-be35-4156-99ba-4eeb6c6de339"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "23385885-cb7b-49a1-8a71-00a683461de8"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"cdad5a8a-3b44-442b-898c-7e658eeeb9c4"],
 "Properties & Relations",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "1fcd4a0c-bb1b-4ac6-9dca-952844079e35"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->2123667759,ExpressionUUID->"5ebc7b1d-6a0b-4be8-aaa4-5986be2c01de"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "f0437484-0466-4957-b87e-0ff7f3e360db"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"5b364c6d-163c-49f2-a78c-bca5e8bf10b9"],
 "Matrix",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "83f32e3c-e6df-4398-8d47-18138361393c"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->2113120676,ExpressionUUID->"a00ab025-5cfd-4854-93fb-6bc7403594e7"],

Cell[TextData[{
 "Here, we examine the matrix representation of the most general form of ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "5927b594-559d-4867-a414-c19db72204e2"],
 ", which may have different systems for input and output."
}], "ExampleText",
 CellID->879976361,ExpressionUUID->"ddc6df25-f21b-410b-88e6-8dfa31c91c19"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1624769793,ExpressionUUID->"ce382a89-e409-4a89-b1c3-4b6e277e3eb7"],

Cell[TextData[{
 "The following operator acts on ",
 StyleBox["S[1,$]", "Input"],
 " and ",
 StyleBox["S[3,$]", "Input"],
 " from the left and on ",
 StyleBox["S[1,$]", "Input"],
 " from the right."
}], "ExampleText",
 CellID->1586615223,ExpressionUUID->"92f30e53-989a-441b-915c-a08f495d166b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", "1", "}"}]}], "->", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "->", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->103855699,ExpressionUUID->"31f17a24-6f91-4367-9cce-a62727f0612e"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{
         SubscriptBox["0", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"S"}, "RowDefault"], 
            TemplateBox[{"1"}, "RowDefault"]], 
           $CellContext`S[1, Q3`$]]]}, "RowDefault"]}, "Ket"], 
     Ket[<|$CellContext`S[1, Q3`$] -> 0|>]], 
    InterpretationBox[
     TemplateBox[{
       TemplateBox[{
         SubscriptBox["1", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"S"}, "RowDefault"], 
            TemplateBox[{"1"}, "RowDefault"]], 
           $CellContext`S[1, Q3`$]]], 
         SubscriptBox["1", 
          InterpretationBox[
           SubscriptBox[
            TemplateBox[{"S"}, "RowDefault"], 
            TemplateBox[{"3"}, "RowDefault"]], 
           $CellContext`S[3, Q3`$]]]}, "RowDefault"]}, "Bra"], 
     Bra[<|$CellContext`S[1, Q3`$] -> 1, $CellContext`S[3, Q3`$] -> 1|>]]},
   "RowDefault"],
  Q3`Dyad[<|$CellContext`S[1, Q3`$] -> 0|>, <|$CellContext`S[1, Q3`$] -> 
    1, $CellContext`S[3, Q3`$] -> 1|>]]], "Output",
 CellLabel->"Out[2]=",
 CellID->511616465,ExpressionUUID->"e18b5ab0-e921-434a-bffb-0800e9419d08"]
}, Open  ]],

Cell[TextData[{
 "The simplest case is to take ",
 StyleBox["S[1,$]", "Input"],
 " as output and ",
 StyleBox["S[1,$]", "Input"],
 " and ",
 StyleBox["S[3,$]", "Input"],
 " as output."
}], "ExampleText",
 CellID->1115640777,ExpressionUUID->"ad21530e-4f1c-4ccd-adcd-a26c197971af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Matrix", "[", 
    RowBox[{"op", ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "3"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1705382524,ExpressionUUID->"a97b71c6-ab65-4424-b364-940f328fabcf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "1"},
     {"0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 4}, 0, {1, {{0, 1, 1}, {{4}}}, {1}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1806748620,ExpressionUUID->"9bf0fcfd-15ee-4594-a01d-e5f394d9a625"]
}, Open  ]],

Cell[TextData[{
 "Now, we consider a more general case, where we take ",
 StyleBox["S[{4,1,2},$]", "Input"],
 " as output (notice the order) and ",
 StyleBox["S[{1,2,3,4},$]", "Input"],
 "."
}], "ExampleText",
 CellID->1798206254,ExpressionUUID->"8989aebb-edc2-4cb7-877a-3df0caf1fd29"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Matrix", "[", 
    RowBox[{"op", ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1", ",", "2"}], "}"}]}], ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1816212359,ExpressionUUID->"82d712ae-00a2-4ed6-8773-c1cd5f5cc61c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 2, 2, 3, 4, 4, 4}, {{11}, {15}, {12}, {16}}}, {1, 1, 1, 
      1}}]]]]], "Output",
 CellLabel->"Out[4]//MatrixForm=",
 CellID->583979497,ExpressionUUID->"a198a6b1-1fde-4843-bd6f-1771bae8ce54"]
}, Open  ]],

Cell["\<\
The matrix above can also be achieved by multiplying basis vectors from the \
left and right.\
\>", "ExampleText",
 CellID->142331318,ExpressionUUID->"81084410-1974-4798-833a-f61d126fc213"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"new", "=", 
   RowBox[{"MatrixIn", "[", 
    RowBox[{"op", ",", 
     RowBox[{"Basis", "[", 
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"4", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Basis", "[", 
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"new", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->125131543,ExpressionUUID->"3130f40a-9c5f-4c1a-a83c-75f1f5bec531"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 2, 2, 3, 4, 4, 4}, {{11}, {15}, {12}, {16}}}, {1, 1, 1, 
      1}}]]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->846908800,ExpressionUUID->"c41ac5c4-285a-4347-8ecd-a3889d791f54"]
}, Open  ]],

Cell["Of course, the two result must be the same.", "ExampleText",
 CellID->1574097100,ExpressionUUID->"11415d1f-29d5-4414-878e-222b54b22b63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"new", "-", "mat"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->844307885,ExpressionUUID->"b5a2d63e-ef72-41c6-b4da-3c0a8cf76848"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 2, 2, 3, 4, 4, 4}, {{11}, {15}, {12}, {16}}}, {0, 0, 0, 
      0}}]]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1957212759,ExpressionUUID->"5307c8f6-6704-4193-b461-ad21fa8bc272"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "cb71c011-9ede-4b0c-83c1-1b54896f633a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->327787904,ExpressionUUID->"1e78a9a0-2c3f-46ee-9732-c373821dd385"],

Cell["\<\
In the above example, the output systems were arranged in a particular order. \
We can arrange them in the standard order.\
\>", "ExampleText",
 CellID->2013575321,ExpressionUUID->"6fc50b7b-6492-4d9e-af81-4ee5a9b05626"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"Matrix", "[", 
    RowBox[{"op", ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], ",", 
     RowBox[{"S", "@", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "mat", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1513406388,ExpressionUUID->"0f1b5e14-28f4-4217-89d1-da28ca0a1865"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 3, 4, 4, 4, 4, 4}, {{11}, {12}, {15}, {16}}}, {1, 1, 1, 
      1}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->485645415,ExpressionUUID->"5c8e69ac-ef37-4130-8437-f66088e88882"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"new", "=", 
   RowBox[{"MatrixIn", "[", 
    RowBox[{"op", ",", 
     RowBox[{"Basis", "[", 
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"Basis", "[", 
      RowBox[{"S", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"new", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->894833860,ExpressionUUID->"8551001e-4d1b-4d40-b865-483d1e13ac6c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 3, 4, 4, 4, 4, 4}, {{11}, {12}, {15}, {16}}}, {1, 1, 1, 
      1}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1236789425,ExpressionUUID->"625f1e4b-7ff1-4f9f-bb47-71e7d5d20223"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"new", "-", "mat"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1503263638,ExpressionUUID->"e581b69e-1315-485f-9bad-29210d747d14"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {8, 16}, 0, {
     1, {{0, 1, 2, 3, 4, 4, 4, 4, 4}, {{11}, {12}, {15}, {16}}}, {0, 0, 0, 
      0}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1765224355,ExpressionUUID->"97fc9667-be29-4dd9-b563-0bf8d475e5c9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "bf9fd95e-238d-4560-aa23-57fa672a7bdb"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->911711473,ExpressionUUID->"a065db2e-e2f1-416c-90c0-52e876a442c1"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Matrix"]], "paclet:Q3/ref/Matrix", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"Dyad", "[", 
     StyleBox["\[Ellipsis]", "TR"], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ffb32413-7ed2-4108-bdd5-ef3a387ac575"],
 " uses a different internal algorithm than ",
 Cell[BoxData[
  RowBox[{
   TemplateBox[{
     Cell[
      TextData["Matrix"]], "paclet:Q3/ref/Matrix", "Q3 Package Symbol"},
    "PackageLink",
    BaseStyle->"InlineFormula"], "[", 
   RowBox[{
    RowBox[{"Dyad", "[", "\[Ellipsis]", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["1", "TR"]], ",", 
      SubscriptBox[
       StyleBox["s", "TI"], 
       StyleBox["2", "TR"]], ",", 
      StyleBox["\[Ellipsis]", "TR"]}], "}"}]}], "]"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "a7db2bab-635b-4f84-99ab-0b6b4e15afc0"],
 "."
}], "ExampleText",
 CellID->1252343807,ExpressionUUID->"80a34638-6655-40d2-b42f-1157d855bea7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$n", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AA", "=", 
   RowBox[{"A", "@", 
    RowBox[{"Range", "@", "$n"}]}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->74791953,ExpressionUUID->"f4dc967f-5c30-475d-80c6-07e300c37601"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ket", "=", 
  RowBox[{
   RowBox[{"Ket", "[", 
    RowBox[{"AA", "->", "0"}], "]"}], "+", 
   RowBox[{"Ket", "[", 
    RowBox[{
     RowBox[{"A", "@", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", "$n", ",", "2"}], "]"}]}], "->", "1"}], 
    "]"}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->750420576,ExpressionUUID->"ea5eb348-5ef6-46fc-b93d-8d14e36198fe"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"1"}, "RowDefault"]], 
         $CellContext`A[1, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"2"}, "RowDefault"]], 
         $CellContext`A[2, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"3"}, "RowDefault"]], 
         $CellContext`A[3, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"4"}, "RowDefault"]], 
         $CellContext`A[4, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"5"}, "RowDefault"]], 
         $CellContext`A[5, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"6"}, "RowDefault"]], 
         $CellContext`A[6, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"7"}, "RowDefault"]], 
         $CellContext`A[7, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"8"}, "RowDefault"]], 
         $CellContext`A[8, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"9"}, "RowDefault"]], 
         $CellContext`A[9, Q3`$]]], 
       SubscriptBox["0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"10"}, "RowDefault"]], 
         $CellContext`A[10, Q3`$]]]}, "RowDefault"]},
    "Ket"],
   Ket[<|$CellContext`A[1, Q3`$] -> 0, $CellContext`A[2, Q3`$] -> 
     0, $CellContext`A[3, Q3`$] -> 0, $CellContext`A[4, Q3`$] -> 
     0, $CellContext`A[5, Q3`$] -> 0, $CellContext`A[6, Q3`$] -> 
     0, $CellContext`A[7, Q3`$] -> 0, $CellContext`A[8, Q3`$] -> 
     0, $CellContext`A[9, Q3`$] -> 0, $CellContext`A[10, Q3`$] -> 0|>]], "+", 
  
  InterpretationBox[
   TemplateBox[{
     TemplateBox[{
       SubscriptBox["1", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"1"}, "RowDefault"]], 
         $CellContext`A[1, Q3`$]]], 
       SubscriptBox["1", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"3"}, "RowDefault"]], 
         $CellContext`A[3, Q3`$]]], 
       SubscriptBox["1", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"5"}, "RowDefault"]], 
         $CellContext`A[5, Q3`$]]], 
       SubscriptBox["1", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"7"}, "RowDefault"]], 
         $CellContext`A[7, Q3`$]]], 
       SubscriptBox["1", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"A"}, "RowDefault"], 
          TemplateBox[{"9"}, "RowDefault"]], 
         $CellContext`A[9, Q3`$]]]}, "RowDefault"]},
    "Ket"],
   Ket[<|$CellContext`A[1, Q3`$] -> 1, $CellContext`A[3, Q3`$] -> 
     1, $CellContext`A[5, Q3`$] -> 1, $CellContext`A[7, Q3`$] -> 
     1, $CellContext`A[9, Q3`$] -> 1|>]]}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1466648697,ExpressionUUID->"4e69348d-3e5d-4397-9253-7afd4e2f67fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"op", "=", 
  RowBox[{"Dyad", "[", 
   RowBox[{"ket", ",", "ket", ",", "AA"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1598073110,ExpressionUUID->"30be6017-ea6a-4a8c-a185-838dfa002a5f"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQ1QFdX//y/PTyYi/gTxGWJMkMDUQBRC8SktJBhj0BRxKCUgKcykBC2T
Ruqr5WOgNQahowRJiYFRUU7lI5KgJqRMJgYSoYMiAXL/7z873tnw3svevXu2
C/fzmpHZPXvuvs/n7Nn3nrOe3R29bGXYC6YKhSLJGn/Col+b9sor0cnhA7Cy
4KWk2OUvPR/z5Eurnl/+/Ct+y8yQuBf/XsHC/19WEgRBEARBEARBEARBEARB
EARBEARBEETf5f/+7//+6yIQBEHoxsqVK99//33993Pt2jUvL6/Gxkb9d0UQ
BCEnhtl/M8xSEQRBaGHLli3e3t7672fnzp2PPPKI/vshCIKQGcPsvxlmqQiC
ILRw5coVhUKBv3ruZ+bMmWvWrJGkSARBEHJimP03wywVQRCEdry9vTdv3qzP
HpqamiwsLI4fPy5VkQiCIGTDMPtvhlkqgiAI7axbty4wMFCfPeTk5Li4uHR2
dkpVJIIgCNkwzP5bj6WqqKhYvXo13NvT03Pp0qXZ2dmsi0SKpEiKxqwokPLy
cjMzs4aGBtF7WLBgQWxsrJYMxlDbpEiKpGg4ijrRG3uVR44c6devn+LfREdH
t7W1MSoPKZIiKRqzok6MGjXqo48+Evfb1tZWhFZcXKwpgzHUNimSIikajqKu
9LpeZXV1tZnZ//8oz9NPP3327Nna2trt27ebm5sjJTk5mUVhSJEUSdGYFXUl
MTERZRP328OHD9vb22u6QBhDbZMiKZKi4SiKoNf1KuPj41GBAQEBfOP9+OOP
kejg4HD79m3JC0OKpEiKxqyoK6WlpdbW1uJKEhMTExkZqWmrMdQ2KZIiKRqO
ogh6V6/yzp07dnZ2qMC8vDx+ent7u7OzM9J3794tbUlIkRRJ0ZgVRdDR0TFo
0KBuJRTCvXv3Bg8efPDgQbVbjaG2SZEUSdFwFMXRu3qV58+fR9XZ2to++D9E
cXFx2LRy5UppS0KKpEiKxqwojujo6Oeee07XXx07dszKyqq5uVntVmOobVIk
RVI0HEVxiO5VXr58uaSkRNrCqNBUqqNHj6LqHn74YWXXDYGUlJSFCxdWVlZi
NT09HZvCw8OlLQkpkiIpGrOiOAoKChwcHNrb23X6VVJS0ty5czVtNYbaJkVS
JEXDURSH6F5lRkbGlClTpC2MCk2l4uYPTJ06FcuFhYWKLubPn4/VrKwsLPv5
+UlbElIkRVI0ZkVxtLS02NnZ6TrudnNzy8zM1LTVGGqbFEmRFA1HURy9q1e5
a9cuVN306dOVXc/Xc7X61FNPYfXAgQNY9vHx6faT2bNnI/31118XVxJSJEVS
NGZF0YSFhcXHxwvPX1FRYWpqWldXpymDMdQ2KZIiKRqOojh6V6+yoKAAVeTl
5aW8fwc4KiqKuwO8bds2bJo3bx4//19//WVubg6v5m4ai4AUSZEUjVlRNFlZ
WcOGDROe/6233tLuqMZQ26RIiqRoOIri0KlX2dnZee8+6Db7+/vf4yFDqc6c
OYOqU7t17dq12PTCCy/wEzMzMxVdU1jxt6ysTERJSJEUSdGYFUVTU1MD0StX
rgjMP3PmzDVr1mjJYAy1TYqkSIqGoygOnXqV8D2FZoT7p+hSNTQ0mJiYQKu8
vLzbpscffxzpaWlp/MQZM2YMHToUBcOm1157TURJSJEUSdGYFUWzf/9+Z2dn
4Z/zTklJCQoK0pLBGGqbFEmRFA1HURw69SqvX79edZ/169f7+PhU8ZDwdqWW
Us2ZMwdV1G3C0rlz55BoamrK79neuHHDzMxsxYoVWPb09HR1de22q6amppyc
nIiIiF27dmkpjFSKGGgkJCRMmDDBw8MDog82DMkVMTyJjY1Fe3N3d3/yySc1
vQdPQkUVbW1tzz//fHh4eGNjI1PFVatWhf0b6LKOEWc3BoB+fn5jxox59tln
CwoK2CmizYSpIz09nV2MOHxbt24NDAwcPXo0/m7ZskXT116kUqyrq4uLi/P2
9n700Uejo6Orq6vVykmoqOzJAa5evYq25OXl5evru3r1al3fMIzddrt1oB34
A0qr6XzhIPcj9+P/hNyPRYzkfkr93K93zasEX331FSoQ1fXpp59yKejronkj
8ZlnnuHn5Ka2Ij+W33jjDSyfOnVKtfWdd97huv1A05kooSKqy9LScuDAgTgN
Ya3YZGFhoemmtCSKH374Ifbg6OgIc5s/f76trS22bty4kWmtquA+AaDlDrZU
im5ubv369fPiERAQwFTxl19+cXFxwSkcHBy8aNGikSNHIkNubi4jxZCQEK9/
g7MDGeC37GKMiYlBir+/Py5b48aNwzLnTowU6+vrnZyccIIsW7YMPTGcJg89
9NCxY8fYKSp7coDffvsNR9nOzm7hwoWhoaHIOXHixDt37qgt0oP8888//fv3
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
uLhYU4aPP/545syZ/fv356J+7LHHxBZTKPLXNsXIAoqRBcYQo670ul5ldXW1
mZkZqvHpp58+e/ZsbW3t9u3bzc3NkZKcnMyiMKRIiqRozIq6kpiYiLKJ++3h
w4ft7e21XCDmzp3Lv5qwvor9J7VNMUoOxchI1Bhi1JVe16uMj49HBQYEBPCN
F+MFJDo4ONy+fVvywpAiKZKiMSvqSmlpqbW1tbiSxMTEREZGaslw8+bN+i7W
rl0rw1XsP6ltilFyKEaKUTZ6V6/yzp07dnZ2qMC8vDx+ent7u7OzM9J3794t
bUlIkRRJ0ZgVRdDR0TFo0KBuJRTCvXv3Bg8efPDgQSGZN2/ezPoq9p/XNsUo
CRQjxSgnvatXef78eVSdra3tg/9DFBcXh00rV66UtiSkSIqkaMyK4oiOjn7u
ued0/dWxY8esrKyam5uFZJbhKvaf1zbFKAkUI8UoJ6J7lZcvXy4pKZG2MCo0
lero0aOouocffljZdUMgJSVl4cKFlZWVWE1PT8em8PBwaUtCiqRIisasKI6C
ggIHB4f29nadfpWUlDR37lyBmWW4iv3ntU0xSgLFSDHKieheZUZGxpQpU6Qt
jApNpeLmD0ydOhXLhYWFii7mz5+P1aysLCz7+flJWxJSJEVSNGZFcbS0tNjZ
2ek67nZzc8vMzBSYWYar2H9e2xSjJFCMFKOc9K5e5a5du1B106dPV3Y9X8/V
6lNPPYXVAwcOYNnHx6fbT2bPno30119/XVxJSJEUSdGYFUUTFhYWHx8vPH9F
RYWpqWldXZ3A/EKuYr29tilGSRQpRopRnKI4elevsqCgAFXk5eWlvH8HOCoq
irsDvG3bNmyaN28eP/9ff/1lbm4Or+ZuGouAFEmRFI1ZUTRZWVnDhg0Tnv+t
t97SyVF7vIr1gdqmGCVRpBgpRnGK4tCpV9nZ2XnvPug2+/v73+MhQ6nOnDmD
qlO7lXuu/4UXXuAnZmZmKrqmsOJvWVmZiJKQIimSojEriqampgaiV65cEZh/
5syZa9asEb7/Hq9ifaC2KUZJFClGilFO99OpVwnfU2hGuH+KLlVDQ4OJiQm0
ysvLu216/PHHkZ6WlsZPnDFjxtChQ1EwbHrttddElIQUSZEUjVlRNPv373d2
dhb+Oe+UlJSgoCDh++/xKtYHaptilESRYqQY5XQ/nXqV169fr7rP+vXrfXx8
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
+qtjx45ZWVk1Nzer3Sp/7KRIiqRozIriEN2rvHz5cklJibSFUWE4vcqjR49C
4uGHH1Z23YJISUlZuHBhZWUlVtPT07EpPDycnbqSYpQIipFilJOCggIHB4f2
9nadfpWUlDR37lxNW+WPnRRJkRSNWVEconuVGRkZU6ZMkbYwKgynV8nNWJg6
dSqWCwsLFV3Mnz8fq1lZWVj28/Njp66kGCWCYqQY5aSlpcXOzk7Xcbebm1tm
ZqamrfLHToqkSIrGrCiOPt+rnD17NvK8/vrr4kqya9cu/Hz69OnKrif6ueP4
1FNPYfXAgQNY9vHxkVaxGxSjJIoUI8UoTlE0YWFh8fHxwvNXVFSYmprW1dVp
yiB/7KRIiqRozIri6Nu9yr/++svc3Bxezd00FkFBQQEkvLy8lPfvOUdFRXH3
nLdt24ZN8+bNk1axGxSjJIoUI8UoTlE0WVlZw4YNE57/rbfe0u6o8sdOiqRI
isasKA6depWdnZ337oNus7+//z0e8peqx6tYZmamomsKK/6WlZWJKMmZM2fw
W7Xl4d6j8sILL0ir2A2KURJFipFilCRG4dTU1ED0ypUrAvPPnDlzzZo1WjLI
HzspkiIpGrOiOHTqVcL3FJoR7p9SlarHq9iMGTOGDh2KgiHba6+9JqIkDQ0N
JiYm+Hl5eXm3TY8//jjS09LSpFXsBsUoiSLFSDFKEqNw9u/f7+zsLPxz3ikp
KUFBQVoyyB87KZIiKRqzojh06lVev3696j7r16/38fGp4iHh7UpJepU3btww
MzNbsWIFlj09PV1dXbtlaGpqysnJiYiI2LVrlxaVOXPmQKXbFKlz584h0dTU
lN+X1q6IgUZCQsKECRM8PDwg+mDDkDxGDE9iY2PR3tzd3Z988klN78GTMEYV
bW1tzz//fHh4eGNjI9MYV61aFfZvoMs6RpzdGAD6+fmNGTPm2WefLSgoYBcj
2kyYOtLT09nFiMO3devWwMDA0aNH4++WLVuEfA5Mn+NYV1cXFxfn7e396KOP
RkdHV1dXa1KR8Dhqd4CrV6+iLXl5efn6+q5evVrXNwxjt91uHWgH/oDSaj9f
ZItdckXh7ieVoiG7n1SKhux+kigauPtJpdjH3K8Pz6vkprZ+9dVXWH7jjTew
fOrUKdXWd955h+v2A01nIgf2gDw4QJ9++imXgt41TigkPvPMMwIVUV2WlpYD
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
QRAEQRAEQRAEQRAEQRAEQajl/wGGv/br
    "], {{0, 80.}, {441., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{441., 80.},
  PlotRange->{{0, 441.}, {0, 80.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->1396601562,ExpressionUUID->"8cff4f2a-2024-47b5-b8ce-2f774440e93b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"mat", "=", 
    RowBox[{"Matrix", "[", 
     RowBox[{"op", ",", "AA"}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"new", "=", 
    RowBox[{"Matrix", "[", 
     RowBox[{"op", ",", "AA", ",", "AA"}], "]"}]}], ";"}], "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->387558096,ExpressionUUID->"fa736cd5-c4b7-403b-9ec9-dace4255f9a9"],

Cell[CellGroupData[{

Cell[BoxData["0.00919`"], "EchoTiming",
 CellID->975639971,ExpressionUUID->"e0e2b7ff-2841-42e0-be57-7bedbc68aece"],

Cell[BoxData["0.028849`"], "EchoTiming",
 CellID->878192471,ExpressionUUID->"d5e437a3-aa5b-4642-9da7-fb1ced0f69a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SparseArray", "[", 
  RowBox[{"mat", "-", "new"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->2141843535,ExpressionUUID->"85f4e348-c0d4-44b4-8d7e-92e089e6a557"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["SparseArray",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, AxesStyle -> Large, 
             FrameStyle -> Large, ImageSize -> Large, PlotRangePadding -> 
             Scaled[0.025]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"59049", ",", "59049"}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[
             RasterBox[
             SparseArray[
              Automatic, {10, 10}, 0.93, {
               1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                 10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 0., 
                0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 0}, {10, 
              10}}, {0, 1}], Frame -> False, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
             FrameLabel -> {None, None}, 
             FrameTicks -> {{None, None}, {None, None}}, AxesStyle -> Large, 
             FrameStyle -> Large, ImageSize -> Large, PlotRangePadding -> 
             Scaled[0.025]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Specified elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"59049", ",", "59049"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["0.`", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Elements: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["None", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  SparseArray[Automatic, {59049, 59049}, 0, {1, {CompressedData["
1:eJztwYEAACAQBLALJaVHeIG8AosjkN+2+1SvJPcFAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABggA+1
yQM4
     "], {}}, {}}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->1483560158,ExpressionUUID->"8c582528-a558-464b-ad12-9bfd85b1807f"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "9b0a2c9c-cb4d-45c2-96ab-5c55017c0b76"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"d733fa8b-ed57-4699-868e-2975352578ce"],
 "Elaborate",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "acc654d9-96c4-478f-a862-0651bf1513f7"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1505789676,ExpressionUUID->"3c4766e7-4aa8-4714-b0ca-b473a0db5fd9"],

Cell[TextData[{
 "The examples here show how ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Elaborate"]], "paclet:Q3/ref/Elaborate", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b7e09bee-6ca5-4ea2-bca6-344382e18902"],
 " works for ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Dyad"]], "paclet:Q3/ref/Dyad", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "c3725bab-0444-4647-bef7-d9ec6f69846a"],
 " involving ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Fermions"]], "paclet:Q3/ref/Fermion", "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "f375689d-c563-487a-8cbc-6e22a3056430"],
 "."
}], "ExampleText",
 CellID->857003496,ExpressionUUID->"d148211d-9526-4904-a7d5-8033ffdd4f82"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Fermion", ",", "c"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1299873470,ExpressionUUID->"c1ebf127-d732-4235-9379-0173186cd9e0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"cc", "=", 
  RowBox[{"c", "[", 
   RowBox[{"Range", "@", "$n"}], "]"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->622269359,ExpressionUUID->"9edf3627-8c58-4dd9-881b-6e18732c8560"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    SubscriptBox["c", 
     TemplateBox[{",", "\",\"", "1"},
      "RowWithSeparators"]],
    $CellContext`c[1]], ",", 
   InterpretationBox[
    SubscriptBox["c", 
     TemplateBox[{",", "\",\"", "2"},
      "RowWithSeparators"]],
    $CellContext`c[2]], ",", 
   InterpretationBox[
    SubscriptBox["c", 
     TemplateBox[{",", "\",\"", "3"},
      "RowWithSeparators"]],
    $CellContext`c[3]]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->14269491,ExpressionUUID->"d4eb6b16-ecc7-4603-87b7-b7bb60483fb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bs", "=", 
  RowBox[{"Basis", "[", "cc", "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->240788446,ExpressionUUID->"1c2ee94d-a1e2-45c3-8a80-9562ce447998"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnXtsFOUah5de2KaFllalyCUVi3KEGBSiIkLrIXiAgiW0qbWNVIoFWq0W
OcSTRmtjKkJIRJGaSrDErCJBsbFG0JAm3hX/qFSKRAtFEUFKjahcaillznv6
pZM5s7uz35a5dd/fk0C6s9/Ob+Z73vfbzGYv45dV5KyI8ng8/46j/3KK//PP
1auLK3NH0I28x/5dtvKx5SXzH1uzfOXy1dOXRdPGf9C/f8V6PP/7WwEAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQJg0NjYuWbJk7ty5xsOuueYae44H
BKOiouLFF1+0ORTeHQfeeQLvPIF3nsA7T+CdJ/DOE0nvtbW12dnZ69ev/+uv
v+R3XlRUFBcXV1paumPHDuORqATHeeGFF6ZMmWJzKLw7DrzzBN55Au88gXee
wDtP4J0nkt5bW1vpcj49Pf3aa689fvy4zJ737t1Ll/PNzc0yg1EJjnP06FGP
x0P/2xkK744D7zyBd57AO0/gnSfwzhN450lY3ru7uzMzM++//36ZwWvXrp0z
Z47kYaAS3MCUKVM2btxoZyK8uwF45wm88wTeeQLvPIF3nsA7T8LyvmvXrrS0
NJmRTz75ZEFBgeRuUQluoLq6OiMjw85EeHcD8M4TeOcJvPME3nkC7zyBd56E
5f3jjz+++uqrZUaae0Xf2tr6xBNP0HFOnjx56dKlr7/+uuSerxBWuS0tLdHR
0Z2dnTZkCeDdn66uLp/PV1ZWZtsXm8C7FvvnX0G/98PNuyO5LvSucOo7p3Lh
XYXVOgPvjuei31VYeXckNyzvjlzR79mzZ9iwYZ7/p7i4+OLFi5L7Hxjcconr
rruuvr7e6hQVeNeybdu2e+65JzExUSROnTrV0jgt8K44N//odwE37+h3Abe+
Q78LuHlHvwu4rbfodwE374Oi3+2/oj98+HB0dDRNyL333rt///4TJ07U1tbG
xMTQlsrKSsn9DwBuuYJVq1ZRrtUpKvCuJSsrS7vm27kCwLvi0Pyj3wXcvDuY
q7jJu8Ks79DvKqy8K+j3flitt+h3FVbeHcxVwvFu/xV9eXk5zcasWbO0r2ht
27aNNiYnJ587d04yIly45QrIb1xcnNUpKvCu5Y8//ujo46mnnrJ5BYB3xaH5
R78LuHl3MFdxk3eFWd+h31VYeVfQ7/2wWm/R7yqsvDuYq4Tj3eYr+vPnzyck
JNBsvPPOO9rtPT09o0aNou1bt26VjAgLbrkqly5dIr+6dOuA94Bs3LjR5hWA
uXcdts2/4+cL71rs7zuncl3iXUfE953jdQ7vPNcZ5t6dynW83uCdZ668d5uv
6L/77juaivj4eP+PnDzyyCN0V0VFhWREWHDL1VJcXPzAAw9YnSKA94A4svJw
9q7Dtvl3w/nCuwqfZ3zFHd51RHzfuaHO4Z3nOsPZu1O5bqg3eOeZK+nd5iv6
vXv30lRMmDBB6XvZoaqqqrCw8ODBg3Rzw4YNdFdubq5kRFhwy9XS2NiYnJzc
09NjdZAC70FwZAXg7F2HbfPvhvOFdxVWz/hu8K4j4vvODXUO7zzXGc7encp1
Q73BO89cSe/yV/QlJSXLli2TTA9WCeLzJjNnzqS/d+/e7elj0aJFdNPn89Hf
06dPl4wIC265Wi5cuJCQkNDU1GR1kALvQXBkBeDsXYdt8++G84V3FVbP+G7w
riPi+84NdQ7vPNcZzt6dynVDvcE7z1xJ7/v27fN6vTTYeFhvb29qauprr70m
mR6sEurq6mgqZs+erfT9BoToiIULF9LNnTt30t+33HKLZERYcMvVkZOTU15e
bkMQvAfEqZWHrXcdts2/S84X3gWsnvEVF3jXEfF955I6h3eF5TrD1rtTuS6p
N3jnmSvjvbu7Oz4+/t133zUY8+mnn+bn55PcU6dOSUYHq4TGxkaaiptvvlnp
f9fKgw8+KN61snnzZrprwYIFkhFhwS1Xh8/nGzt2rA1B8B4Qp1YAtt512Db/
LjlfeBdwe8Z33LuOiO87l9Q5vCss1xm23p3KdUm9wTvPXEnvZWVlEydObGpq
6urq8r/39OnTdPAJCQnHjh2Tjw5WCc3NzbS3gPeKXwRYsWJFwAdevnxZPh25
On788UfKOnr0qIn7DAi8B0R+BYB3wSCdf5ecL7wLnOo7tv2uI+L7ziV1Du/+
d3FYZ9h6dyrXJfUG7zxz5b0vXbqURtbU1Pjf1dPTs3nz5htvvPGmm246e/as
ZHSwSujs7BwyZAhltbS06O66/fbbaftzzz2n3fj5558vWLBgzJgxXq/3tttu
W79+/cC+EYJbro4dO3aMGjXK3OoKCLwHJOQKAO+CwT7/LjlfeBc41Xds+11H
xPedS+oc3nmuM2y9O5XrknqDd565kt43bdqUlJRUWlra3t4ebEx3d3diYmJD
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
AAAAQMTzXzDiozM=
    "], {{0, 20.}, {675., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{675., 20.},
  PlotRange->{{0, 675.}, {0, 20.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[3]=",
 CellID->686190824,ExpressionUUID->"0cf1590a-aff7-47de-8d05-c7f66eb3b1b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dya", "=", 
  RowBox[{
   RowBox[{"Outer", "[", 
    RowBox[{
     RowBox[{"Dyad", "[", "cc", "]"}], ",", "bs", ",", "bs"}], "]"}], "//", 
   "Flatten"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1282628041,ExpressionUUID->"0c9d5cef-5b99-43ff-b553-8a2523a2d063"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvWtsFdXf9116oE2LLa3ehXAIktZLbwhBwQNyKDyEBmkRIqQ2oKBFjlov
EIw3zWXto4goiej/oloBIbdbK0FikxJAJU3Uux7wRaXSaqQcFAWk1FpNoRxK
O8/v6XqYZ/673bPXnpk9s2at7+cF6Z69Zn5rre/6dDnbvXdHLlk9b3lsTEzM
uiT6Z17R//q/1q4tKpk/kB4U/Oe6VSv+c9nSWf/57LIVy9ZOWBJHB/9vapuU
EBPz//6sAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOihurp60aJFM2fO
NG/2P/7H/3CnPyAUq1evfvPNN+1f58yZM2PGjGltbbV/KWAHN52Cv54DfyUD
/ioF/JUM+KsU8FcyoufU4sWLk5KSVq5cuXv3bq/6ADh54403xo4da/86b7/9
9h133GH/OsAm2JeVAv5KBvxVCvgrGfBXKeCvZETJqUOHDtFNcV1dnYd9APyc
OnUqJiaG/rV5ndzc3PXr1zvSJWAH7MtKAX8lA/4qBfyVDPirFPBXMqLk1MaN
G2fMmOFtH0BEjB07dsuWLXau0NbWlpCQcPjwYae6BCyDfVk14K9MwF/VgL8y
AX9VA/7KRJSc+q//+q8FCxZ42wcQEWVlZTk5OXauUFlZOWTIkO7ubqe6BCyD
fVk14K9MwF/VgL8yAX9VA/7KhC/uixsaGp577jladaNHj3788cfff/992x3k
Qqm69fX1cXFxLS0tlq9QUFCwatUqkwZKzaeHdTXB9mXV5h/+OouHHl2+fDkQ
CNC0OPK1KvzAX9XqSuyv5pFH2H8ZSnnkVV34K1Nd8e+LDx48OGDAgJh/p6io
6Nq1a070FHX/f2699dadO3daO/fKlSvU7c8++yxUA9Xm08McNZH2ZdXmH/46
i1d1d+3alZubm5qayiqOGzcuquWCgL+q1dUk9dcrj7D/MlTzCP46i1f+Srn/
OnVffPz48bi4OJqWBx988MiRI2fPni0vL4+Pj6cjJSUlDnUWdf8/1qxZQ3Wt
nbt///60tLRQkqo2n97mqAmzL6s2//DXWTycz7y8PON/gcixL0daS7Xc4a/j
eOIR9l+Gah7BX8fxah+Ucv916r64uLiY5mTKlCnGBbNr1y46mJ6efvHiRbsd
RV0DX3zxRVJSkrUqS5cuNUlctfn0NkdNmH1ZtfmHv87i4Xz+/fffzT08//zz
0uzLkdZSLXf46zieeIT9l6GaR/DXcbzaB6Xcfx25L7506VJKSgrNyccff2w8
3tnZOXjwYDq+Y8cOux1FXQPXr1+/5ZZbgqrz0NXVlZmZ+dFHH/X5rGrz6XmO
mhj7smrz73nu8DcabNmyRZp9OaJaquXu+XqTzN8gXPNIhPHCX3Xq6sBfaeqK
fF/8448/0oQkJyf3fnfBU089RU+tXr3aVi9DoFpdI0VFRY8++mikZ9XW1iYm
Jra3t/f5rGrzKUKOIuzLqs2/CLnDX8eRaV+OqJZquYuw3mTyNwjXPBJhvPBX
nbpG4K8cdUW+Lz506BBNSHZ2ttbzUkxpaenChQsbGxvp4ebNm+mp+fPnO9Vh
lesaqa6uTk9P7+zsjOisdevW5eXlhXpWtfkUIUcR9mXV5l+E3OGv48i0L0dU
S7XcRVhvMvkbhGseiTBe+KtOXSPwV466UfJ36dKlS5YssdkH9v75yZMn088H
DhyI6WHu3Ln0MBAI0M8TJkxwqsMq1zXS0dGRkpJSU1MT0VlZWVnbt28P9axq
8ylCjiLsy6rNvwi5w1/HkWlfjqiWarmLsN5k8jcI1zwSYbzwV526RuCvHHWj
4W9XV9egQYP+9//+3zb7UFFRQRMyffp0redbytl6mD17Nj3cs2cP/XznnXc6
1WeV6wYxb9684uJi/vYNDQ2xsbHnz58P1UC1+RQhRxH2ZdXmX4TcNfjrNNLs
y5HWUi13QdabNP4G4ZpHIowX/qpTNwj4K0Fdx/39P//n/xQWFtJlTYLm7EN1
dTVNyJgxY7Qb7x947LHH2PsHtm7dSk/l5+c71W2V6wYRCASGDRvG3/6ll16a
NGmSSQPV5lOEHEXYl1WbfxFy1+Cv08ixL1uopVrugqw3afwNwjWPRBgv/FWn
bhDwV4K6zvp74cIFGkJKSsrp06ft96Guro6u1uez7Lu7ly9f3ueJ3d3d/NVR
N4hffvmFap06dYqzfW5u7vr1600aqDafIuQowr6s2vyLkLsGf52eT/59Gf4y
fJq7IOtNGn+DcM0jEcYLf9WpGwT8laCus/52dnZu3br1P/7jP/7n//yfob5d
jb8PLS0t/fr1ozmpr68Peuree++l46+88orx4FdffZWfnz906NDExMR77rnn
1VdfjfTz72rWDWL37t2DBw/mX2OlpaXTpk0zaaDafIqQowj7smrzL0LuGvx1
ej7D7svwl+H33AVZb9L4G4RrHokwXvirTt0g4K8EdaPh79WrV1NTU6uqquz3
4YEHHqA5CXq7/tGjR+lgbGys8TWZ119/nQ5mZGQ8/fTTGzdupImihzSleoO2
trbKysrCwsKKioqwXXKqbl1dHR0fP378qFGjqHTvhR2lut9///2qVavImttu
u23WrFmh/jJan1A/Q70A1Sc0xri4uNbWVhfGpSFHPni8/vnnn6dOnXrzzTc/
/PDD5CznlSOqhdyt1YW/ztaNNEcj5vsy/GXIkTv8dTZHI3Y88l2O8Bf+cgJ/
o1dXNH8XLFhA/bHfh08++YSGScvmgw8+YEfOnTt3++2308GHHnpIb/bDDz/E
x8dnZ2c3NzfrB2tra/U/+LVp0yb2kguxbNmysF1ypO62bdv69+9PkdG80ZKg
cxMSEiipaNd955136AqU1/z58+fOnZucnEyn05oJO2rtxmsaBw8e5GmsM3z4
8Pfeey/a49KQI3eOPF4vWrQo5gaRfoMiZy3kDn/9mKMRk30Z/jKkyR3+Opuj
Ecse+TFH+At/+YG/0agroL+O/P1irecd44sXL6a6lCZNaV5eHq06ekgL6dix
Y3oz9me8TF4NOHz4cEVFBWvGsx4cqfvCCy/k5OT89ddf7GFVVRU1LigoiHbd
pqYmmvyWlhb28MSJE7GxsUOHDg07auLTTz+96aabrly5wtNYp7i42Khnb5Cj
yznyeL127Vrdaxojz2UjrYXc4a8Rv+Q4b968zBsMGDCAOaIfmTlzJk9d+Kvj
l9zhr7M5OuKRH3OEv/CXH/gbjboC+uvUfbHWsyRKS0szMjJYB+Lj46dOnXrm
zBljm6KiInrq+PHj5oXY14Jxvk7iSN3r16/rP3d1dVGmo0ePdqFuEHfddRet
LmNnQrFy5UrzFdsnNTU1ycnJHR0dJm2Qo5s58nj966+/0m9j1r0nnniCsw+R
1kLu8DcI8XNkn9sKhf53MeAvQ5rcnaobhLL+OuWR73KEv/CXH/gbpbpBeO6v
g/fFDFoVP/3007fffnvp0qXez7KvZQv7/7Ij8trBuoyrV6+mpKTk5eW5XHfP
nj0k0ZNPPslTdMiQIZWVlTyXNdLZ2Zmenr5v3z6eEsjRWl3+HLVIvjdgzpw5
MdxvL7FcC7lbrgt/narLiChHc+AvQ77c4a8JFnI0R7IcNfjraF2G+LnDX57G
Ku+/jt8Xm8Pefj9t2jTjSwHNzc1//vmnsZnj64GzLqO8vJwab9u2zZ26Bw4c
oLU3cuRIWgxr1qxpa2sLe9nvvvsuISGBp2VvHnnkkSVLllg40Qhy7F3XQo4a
t1P//PNPYmIi9eHLL7+MtPOR1jIBufeuC38dr8sQP0cN/jpalyF+7vBXjhw1
+OtoXYb4ucNfOXLUouavy/fFREFBQUzPp7N37txZVVVVVlaWnp6+cOFCYxvH
1wNnXaK+vj4pKWnixIldXV3u1KWDkyZNGj58ODXLycnh+Qq4kpKSGTNmWOvP
3r17KUf7o0OO9nPU+Jw6efLkfffdR5edPn269QHA3+jUhb+O19V8kqMGfx2t
q/kkd/grR44a/HW0ruaT3OGvHDlqUfPX/fviy5cvb9iwIS0tjb3fm+7iCwsL
z507Z2wTjfXAU7ehoSEzM5OiOX36tJt1Gd988w2VzsjI+OOPP8yvOWrUqPLy
cmv9aW9vpz7U1tZaO10HOdrPUeNw6uuvv2Zf3TB58uTffvvNYu/5avGA3OFv
tOv6JUcN/jpa1y+5w185ctTgr6N1/ZI7/JUjRy1q/rp/X8zo7u6mTjY2Nurf
TG4kGushbN36+noa4KBBg4xfHOdCXSPvvvsuDTwQCJi0aWpqoja///675c7k
5+evW7fO8ulGkGOf8OTICOvUiRMnBg4c+NZbb/H/AXrLtfhB7n0Cf+3X9UuO
DPjrVF2/5A5/zev6JUcG/HWqrl9yh7/mdf2SIyNK/np1X2xO9NZDKGpqalJT
U0eMGBGNxRCKffv2NTQ0GI+UlJTQwM0/17958+bx48fbqbt9+/bs7Gw7V+AE
OYY9l8epixcvWu9chLUcAbmbnAV/TfBRjgz46wg+yh3+muCjHBnw1xF8lDv8
NcFHOTKi5O+LL744e/ZszsbR9rqpqelfPVCvaFruv/9+9vDzzz+Pat0PP/yw
f//+VPGZZ555+eWXN9zAzncshOXatWu0/KjuihUrAoHA/v37i4uLY2Njs7Ky
2tvbTU6cOHEi9c1O6fPnz1OhxsZGOxcxATny5Mhwba90oRZyh7928FeODPhr
H3/lDn9D4a8cGfDXPv7KHf6Gwl85MqLkVFVVVVpaGufbyKPt9d69e2P6YunS
pVGtyz6U3ZuysrKo1r1w4cLixYsHDRrEyvXr12/OnDknT540OYUpGfTqigXo
lwOtfJsXCQVyDJujjkz7MnKHv3bwUY468Nc+Psod/prgoxx14K99fJQ7/DXB
RznqRMmpzs7OKVOmDBs27L//+7+PHDniSR/A2bNnjx49yvPyyI4dO7KysuxX
fO211+6++2771wFG+HPUkWlfVhb4KwfwV03grxzAXzWBv3IglL8dHR2bNm0a
N27ciBEjvOoD4KSwsPDZZ5+1f51jx44lJCS0trbavxSwA/ZlpYC/kgF/lQL+
Sgb8VQr4KxkiOCVCHwCQCezLAPgX+AuAf4G/APgXEZwSoQ8AyAT2ZQD8C/wF
wL/AXwD8iwhOidAHAGQC+zIA/gX+AuBf4C8A/gVOAQAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3wDdj
e87q1avffPNN+9c5c+bMmDFjWltb7V8K2AF/LUIp4K9kwF+lgL+SAX+VAv5K
hghOidAHxXnjjTfGjh1r/zpvv/32HXfcYf86wCbYl5UC/koG/FUK+CsZ8Fcp
4K9kiOCUCH1QnFOnTsXExNC/Nq+Tm5u7fv16R7oE7IB9WSngr2TAX6WAv5IB
f5UC/kqGCE6J0AcwduzYLVu22LlCW1tbQkLC4cOHneoSsAz2ZdWAvzIBf1UD
/soE/FUN+CsTIjglQh9AWVlZTk6OnStUVlYOGTKku7vbqS4By2BfVg34KxPw
VzXgr0zAX9WAvzIhglNh+9DQ0PDcc8/Rqhs9evTjjz/+/vvvu9MxperW19fH
xcW1tLRYvkJBQcGqVavM21y+fDkQCFAzR76mgBOlcmQItS+rNv/w11k89MiT
8WrwV726EvvrVV3svwylPPKqLvyVqa7498UHDx4cMGBAzL9TVFR07dq1qPZK
tbrErbfeunPnTmvnXrlyhbr92WefhWqwa9eu3Nzc1NRUNqJx48ZZ7WZkKJij
JtK+rNr8w19n8Wo+vRovA/6qVleT1F/Vfm8w4K9qdTX4K0VdhuD3xcePH4+L
i6NpefDBB48cOXL27Nny8vL4+Hg6UlJSEr0uqVaXsWbNGqpr7dz9+/enpaWZ
/PLJy8sz/qZyZ52rmaMmzL6s2vzDX2fxcD49Ga8O/FWqLkM+f72qi/2XoZpH
8NdxVKvLEPy+uLi4mOZkypQpxgWza9cuOpienn7x4sUodUm1uowvvvgiKSnJ
WpWlS5cuWLDApMHff//d3MPzzz/v2jpXM0dNmH1ZtfmHv87i4Xx6Ml4d+KtU
XYZ8/npVF/svQzWP4K/jqFaXIfJ98aVLl1JSUmhOPv74Y+Pxzs7OwYMH0/Ed
O3ZEoz+q1dW5fv36LbfcElSdh66urszMzI8++oin8ZYtW9xZ58rmqImxL6s2
/57nDn+jgWvjNQJ/1amrI5m/XtX1PEcN/qpUVwf+SlNX5PviH3/8kSYkOTm5
97sLnnrqKXpq9erV0eiPanWNFBUVPfroo5GeVVtbm5iY2N7eztPYtXWuco4i
7Muqzb8IucNfx5F+X4a/3tY1IpO/XtUVIUf4q05dI/BXjroi3xcfOnSIJiQ7
O1vreSmmtLR04cKFjY2N9HDz5s301Pz586PRH9XqGqmurk5PT+/s7IzorHXr
1uXl5XE2dm2dq5yjCPuyavMvQu7w13Gk35fhr7d1jcjkr1d1RcgR/qpT1wj8
laOuyPfF7HMBkydPpp8PHDgQ08PcuXPpYSAQoJ8nTJgQjf6oVtdIR0dHSkpK
TU1NRGdlZWVt376ds7Fr61zlHEXYl1WbfxFyh7+OI/2+DH+9rWtEJn+9qitC
jvBXnbpG4K8cdUW+L66oqKAJmT59utbz7etsnc+ePZse7tmzh36+8847o9Ef
1eoGMW/evOLiYv72DQ0NsbGx58+f52zv2jpXOUcR9mXV5l+E3DX46zTS78vw
19u6QUjjr1d1RcgR/qpTNwj4K0Fdke+Lq6uraULGjBmj3XhfxGOPPcbeF7F1
61Z6Kj8/Pxr9Ua1uEIFAYNiwYfztX3rppUmTJvG3d22dq5yjCPuyavMvQu4a
/HUa6fdl+Ott3SCk8deruiLkCH/VqRsE/JWgrsj3xXV1dTQhfT7Lvrt7+fLl
fZ7Y3d1tpz+q1Q3il19+oVqnTp3ibJ+bm7t+/Xr+6/Ovc5/Opwg5irAvqzb/
IuSuwV+n59O18RqBv+rUDUIaf72qK0KO8FedukHAXwnqinxf3NLS0q9fP5qT
+vr6oKfuvfdeOv7KK68YD3711Vf5+flDhw5NTEy85557Xn311Ug//65m3SB2
7949ePBg/jVWWlo6bdo0/uuHXed+n08RchRhX1Zt/kXIXYO/Ts+na+M1An/V
qRuENP56VVeEHOGvOnWDgL8S1BX5vph44IEHaE6C3q5/9OhROhgbG2t8Teb1
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
//79KTKaN1oSdG5CQgIlxTMnmul6MK/7zjvvUM8pr/nz58+dOzc5OZmuQ2uG
pyjlm5qaevDgQc5OMoYPH/7ee+9xNrY8Ls0/OTpS106OPF4vWrQo5gaRfoMi
Zy34C3+RI/xF7mr660hd7L+Wa8Ff+OtHfx2p6xd/LfShu7t78eLFVJfSpCnN
y8ujVUcPaSEdO3ZMb8b+LJrJqwGHDx+uqKhgzXjWgyN1X3jhhZycnL/++os9
rKqqosYFBQUmdefNm5d5gwEDBrA514/MnDmTp25TU9OCBQtaWlrYwxMnTsTG
xg4dOjTsqIlPP/30pptuunLlCk9jneLiYuOvu944Mi7NPzk6UtdOjjxer127
Vveaxshz2UhrwV/4awQ5wl/kboJk/jpSF/uv5VrwF/4a8Yu/nufopr/W+kCK
lZaWZmRksA7Ex8dPnTr1zJkzxjZFRUX01PHjx80LXbhwgXM9OFX3+vXr+s9d
XV2U6ejRo02Kss9fhEL/fnvO8ercddddtLqMnQnFypUrzVdsn9TU1CQnJ3d0
dIRq4Oy4xM/RqbpB8OfI4/Wvv/5Kv41Z95544gnOPkRaC/7C3yCQY9iW8FfN
3CXz16m62H8t14K/8DcI8f31PEc3/bXTB7Lsp59++vbbby9dutT7WfY1d2H/
X3ZEXjtYl3H16tWUlJS8vDz+6qGIqO6ePXvol9KTTz4ZtiUNdsiQIZWVlZH2
p7OzMz09fd++fZGeGIR8OTpYlz9HLZLvDZgzZ04M99tLLNeCv5brwl9NsRw1
+OtoXYb4uUvsryN1Gdh/LdSCv5brwl+n6jLEz1Fz11/7fQgF+zjDtGnTjC8F
NDc3//nnn8Zmjq8HzrqM8vJyarxt2zZ36h44cIDW3siRI2kxrFmzpq2tLexl
v/vuu4SEBJ6WvXnkkUeWLFli4UQjyLF3XQs5atxO/fPPP4mJidSHL7/8MtLO
R1rLBOTeuy78dbwuQ/wcNfjraF2G+LnDXzly1OCvo3UZ4ucOf+XIUXPXX5t9
MKegoCCm59PZO3furKqqKisrS09PX7hwobGN4+uBsy5RX1+flJQ0ceLErq4u
d+rSwUmTJg0fPpya5eTk8HwFXElJyYwZM6z1Z+/evZSj/dEhR/s5anxOnTx5
8r777qPLTp8+3foA4G906sJfx+tqPslRg7+O1tV8kjv8lSNHDf46WlfzSe7w
V44cNXf9tdOHsFy+fHnDhg1paWns/d50F19YWHju3Dljm2isB566DQ0NmZmZ
FM3p06fdrMv45ptvqHRGRsYff/xhfs1Ro0aVl5db6097ezv1oba21trpOsjR
fo4ah1Nff/01+yqMyZMn//bbbxZ7z1eLB+QOf6Nd1y85avDX0bp+yR3+ypGj
Bn8dreuX3OGvHDlq7vpruQ/8dHd3UycbGxv1byY3Eo31ELZufX09DXDQoEHG
L+Jzoa6Rd999lwYeCARM2jQ1NVGb33//3XJn8vPz161bZ/l0I8ixT3hyZIR1
6sSJEwMHDnzrrbf4/wC95Vr8IPc+gb/26/olRwb8daquX3KHv+Z1/ZIjA/46
VdcvucNf87p+yZHhpr+W++AU0VsPoaipqUlNTR0xYkQ0FkMo9u3b19DQYDxS
UlJCAzf/XP/mzZvHjx9vp+727duzs7PtXIET5Bj2XB6nLl68aL1zEdZyBORu
chb8NcFHOTLgryP4KHf4a4KPcmTAX0fwUe7w1wQf5chw0187fbBDU1PTv3p4
8cUXaVruv/9+9vDzzz+Pat0PP/ywf//+VPGZZ555+eWXN9wgGp/R1rl27Rot
P6q7YsWKQCCwf//+4uLi2NjYrKys9vZ2kxMnTpxIfbNT+vz581SosbHRzkVM
QI48OTJc2ytdqIXc4a8d/JUjA/7ax1+5w99Q+CtHBvy1j79yh7+h8FeODDf9
9aoPe/fujemLpUuXRrUu+1B2b8rKyqJa98KFC4sXLx40aBAr169fvzlz5pw8
edLkFKZk0KsrFqBfDrTybV4kFMgxbI46Mu3LyB3+2sFHOerAX/v4KHf4a4KP
ctSBv/bxUe7w1wQf5aijwn2xspw9e/bo0aM8L4/s2LEjKyvLfsXXXnvt7rvv
tn8dYIQ/Rx2Z9mVlgb9yAH/VBP7KAfxVE/grB4L7K3IfFKewsPDZZ5+1f51j
x44lJCS0trbavxSwA/ZlpYC/kgF/lQL+Sgb8VQr4KxkiOCVCHwCQCezLAPgX
+AuAf4G/APgXEZwSoQ8AyAT2ZQD8C/wFwL/AXwD8iwhOidAHAGQC+zIA/gX+
AuBf4C8A/gVOAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAIBog+/E9pzVq1e/+eab9q9z5syZMWPGtLa2
2r8UsAP+ToRSwF/JgL9KAX8lA/4qBfyVDBGcEqEPivPGG2+MHTvW/nXefvvt
O+64w/51gE2wLysF/JUM+KsU8Fcy4K9SwF/JEMEpEfqgOKdOnYqJiaF/bV4n
Nzd3/fr1jnQJ2AH7slLAX8mAv0oBfyUD/ioF/JUMEZwSoQ9g7NixW7ZssXOF
tra2hISEw4cPO9UlYBnsy6oBf2UC/qoG/JUJ+Ksa8FcmRHBKhD6AsrKynJwc
O1eorKwcMmRId3e3U10ClsG+rBrwVybgr2rAX5mAv6oBf2VCBKfC9qGhoeG5
556jVTd69OjHH3/8/fffd6djxOXLlwOBwKpVqxz5WD0nnoy3vr4+Li6upaXF
8hUKCgpookwaeJWjanU1wfZl+OtCUfgbDTxZPxr8vQH85UdYfzWVcmTAX4Y6
ucNfmeqKf1988ODBAQMGxPw7RUVF165di2qvdu3alZubm5qayiqOGzcuquV0
vBovceutt+7cudPauVeuXKFuf/bZZ6EaeDUu1eoyxNmX4S/8tYNq64cBf+Fv
RAjrr4I5avBXydzhrwR1GYLfFx8/fjwuLo6m5cEHHzxy5MjZs2fLy8vj4+Pp
SElJSVR7lZeXZ1yB7uTi4XiJNWvWUF1r5+7fvz8tLS2UpF6NS7W6OoLsy/AX
/tpBtfWjA3/hb0SI6a+mZI4a/FUyd/grQV2G4PfFxcXFNCdTpkwxLphdu3bR
wfT09IsXL0avV3///XdzD88//7xruXg4XuKLL75ISkqyVmXp0qULFiwI9axX
41Ktro4g+zL81eCvDVRbPzrwF/5GhJj+akrmqMFfJXOHvxLUZYh8X3zp0qWU
lBSak48//th4vLOzc/DgwXR8x44dLnRvy5Yt7uTi+XivX79+yy23BFXnoaur
KzMz86OPPurzWa/GpVpdIyLsyyLMgwZ/OYC/Jri2fozAXx34GxYx/Q1CnRw1
+GtAndzhrzR1Rb4v/vHHH2lCkpOTe7+74KmnnqKnVq9eHf3euZeLCOMtKip6
9NFHIz2rtrY2MTGxvb29z2e9GpdqdY2IsC+LMA8a/OUA/pog/b4MfxkijFcm
f4NQKkf4q6NU7vBXjroi3xcfOnSIJiQ7O1vreSmmtLR04cKFjY2N9HDz5s30
1Pz5813onmu5iDDe6urq9PT0zs7OiM5at25dXl5eqGe9GpdqdY2IsC+LMA8a
/OUA/pog/b4MfxkijFcmf4NQKkf4q6NU7vBXjroi3xez989PnjyZfj5w4EBM
D3PnzqWHgUCAfp4wYYIL3XMtFxHG29HRkZKSUlNTE9FZWVlZ27dvD/WsV+NS
ra4REfZlEeZBg78cwF8TpN+X4S9DhPHK5G8QSuUIf3WUyh3+ylFX5PviiooK
mpDp06drPd9SztbD7Nmz6eGePXvo5zvvvNOF7rmWiyDjnTdvXnFxMX/7hoaG
2NjY8+fPh2rg1bhUq2tEhH1ZhHnQ4G844K850u/L8JchyHil8TcIpXKEvzpK
5a7BXynqinxfXF1dTRMyZswY7cb7Bx577DH2/oGtW7fSU/n5+S50z7VcBBlv
IBAYNmwYf/uXXnpp0qRJJg28GpdqdY2IsC+LMA8a/A0H/DVH+n0Z/jIEGa80
/gahVI7wV0ep3DX4K0Vdke+L6+rqaEL6fJZ9d/fy5cv7PLG7u9vB7vHnYrOu
IOP95ZdfqNapU6c42+fm5q5fv96kgVfjUq2uERH2ZRHmQYO/4YC/5ri2fozA
Xx34a46w/gahVI7wV0ep3DX4K0Vdke+LW1pa+vXrR3NSX18f9NS9995Lx195
5RXjwa+++io/P3/o0KGJiYn33HPPq6++Gunn3/skbC5O1RVkvLt37x48eDD/
GistLZ02bZpJA6/GpVpdIyLsyyLMgwZ/wwF/zXFt/RiBvzrw1xxh/Q1CqRzh
r45SuWvwV4q6It8XEw888ADNSdDb9Y8ePUoHY2Njja/JvP7663QwIyPj6aef
3rhxI00UPaQp1Ru0tbVVVlYWFhZWVFRE1D3zXMzr1tXV0fHx48ePGjWKSvde
2FEa7/fff79q1Sqy5rbbbps1a1aov4zWJ9TPUC9A9QmNMS4urrW11YVxaRHm
6FRd3+XI4/XPP/88derUm2+++eGHH7569SrnlSOqBX+tjRf+Ols30hyN2Fk/
8FdvAH85kclfI0rlCH91lMpdg7/Yfx3CpA+ffPIJDZOWzQcffMCOnDt37vbb
b6eDDz30kN7shx9+iI+Pz87Obm5u1g/W1tbqf/Br06ZN7CUXYtmyZRF1zyQX
87rbtm3r378/RUbzRkuCLpKQkEBJmdRyZLzvvPMOXYHymj9//ty5c5OTk+l0
WjM8g6V8U1NTDx48yNNYZ/jw4e+99160x6VFnqMjdf2YI4/XixYtirlBpN+g
yFkL/sJfP/prxPL6gb/wV3F/jSiVI/zVUSp3+Nu7LvZfa5j0obu7e/HixVSX
0qQpzcvLo1VHD2khHTt2TG/G/oyXyasBhw8frqioYM141sO8efMybzBgwAA2
dv3IzJkzeeq+8MILOTk5f/31F3tYVVVFjQsKCkzqOjLepqamBQsWtLS0sIcn
TpyIjY0dOnRo2FETn3766U033XTlyhWexjrFxcVGPXvjVY6O1PVjjjxer127
Vveaxshz2UhrwV/4a8Qv/jqyfuCvDvxV019lc4S/auYOf3uD/dca5n2gJVFa
WpqRkcE6EB8fP3Xq1DNnzhjbFBUV0VPHjx83L3ThwgXO9cDetx8K/XvRw9a9
fv26/nNXVxdlOnr0aPPSDo5X56677qLVZexMKFauXGm+YvukpqYmOTm5o6PD
pI0nOTpV13c58nj966+/0m9j1r0nnniCsw+R1oK/8DcI8f11av0EAX/hrzmS
+atsjvBXzdzhb59g/7UATx9oVfz000/ffvvtpUuXej/LvpYt7P/Ljui/x3jg
rMu4evVqSkpKXl4eT2NHxsvYs2cPSfTkk0/yFB0yZEhlZSXPZY10dnamp6fv
27ePp4QnOTo4n+LnqEXyvQFz5syJ4X57ieVa8NdyXfjrVF1GRDmaA38Z8NcE
+BsWyXLU4C8fkuUOf3kaY//lxP53f7G330+bNs34UkBzc/Off/5pbOb4euCs
yygvL6fG27Ztc6fugQMHaO2NHDmSFsOaNWva2trCXva7775LSEjgadmbRx55
ZMmSJRZONIIce9e1kKPG7dQ///yTmJhIffjyyy8j7XyktUxA7r3rwl/H6zLE
z1GDv47WZYifO/yVI0cN/jpalyF+7vBXjhw1d/212QdzCgoKYno+nb1z586q
qqqysrL09PSFCxca2zi+HjjrEvX19UlJSRMnTuzq6nKnLh2cNGnS8OHDqVlO
Tg7PV8CVlJTMmDHDWn/27t1LOdofHXK0n6PG59TJkyfvu+8+uuz06dOtDwD+
Rqcu/HW8ruaTHDX462hdzSe5w185ctTgr6N1NZ/kDn/lyFFz1187fQjL5cuX
N2zYkJaWxt7vTXfxhYWF586dM7aJxnrgqdvQ0JCZmUnRnD592s26jG+++YZK
Z2Rk/PHHH+bXHDVqVHl5ubX+tLe3Ux9qa2utna6DHO3nqHE49fXXX7Ovbpg8
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
86ApsN6MwF/HkX5fhr8MEcYrk79e1RUhR/iro1Tu8FeOuiLfF1dUVNCETJ8+
Xev59nW2zmfPnk0P9+zZQz/feeedLnTPtVwEGe+8efOKi4v52zc0NMTGxp4/
f56zvfTzKUKOIuzLIsyDpsB6CwL+Oov0+zL8ZQgyXmn89aquCDnCXx2lctfg
rxR1Rb4vrq6upgkZM2aMduN9EY899hh7X8TWrVvpqfz8fBe651ougow3EAgM
GzaMv/1LL700adIk/vbSz6cIOYqwL4swD5oC6y0I+Oss0u/L8JchyHil8der
uiLkCH91lMpdg79S1BX5vriuro4mpM9n2Xd3L1++vM8Tu7u7Hewefy426woy
3l9++YVqnTp1irN9bm7u+vXr+a8v/XyKkKMI+7II86ApsN6CgL8+XT9G4K+O
autNGn+9qitCjvBXR6ncNfgrRV2R74tbWlr69etHc1JfXx/01L333kvHX3nl
FePBr776Kj8/f+jQoYmJiffcc8+rr74a6eff+yRsLk7VFWS8u3fvHjx4MP8a
Ky0tnTZtGv/1pZ9PEXIUYV8WYR40BdZbEPDXp+vHCPzVUW29SeOvV3VFyBH+
6iiVuwZ/pagr8n0x8cADD9CcBL1d/+jRo3QwNjbW+JrM66+/TgczMjKefvrp
jRs30kTRQ5pSvUFbW1tlZWVhYWFFRUVE3TPPxbxuXV0dHR8/fvyoUaOodG9h
ozTe77//ftWqVfTb4Lbbbps1axbnX0ZjUD9DvbDWJzTGuLi41tZWzvZ25lOL
MEen5tN3OfJ4/fPPP0+dOvXmm29++OGHr169ynnliGrBX2vjhb8Mr/x1arzw
V28AfzmRyV+n6vouR/iro1TuGvzF/usQJn345JNPaJi0bD744AN25Ny5c7ff
fjsdfOihh/RmP/zwQ3x8fHZ2dnNzs36wtrZW/0NmmzZtYi8lEcuWLYuoeya5
mNfdtm1b//79KTKaN1oSdJGEhARKyqSWI+N955136AqU1/z58+fOnZucnEyn
05rhGSzlm5qaevDgQZ7GOsOHD3/vvfc4G1ueTy3yHB2ZTz/myOP1okWLYm4Q
6TcoctaCv/DXj/46Ml74C38V99eRun7MEf7qKJU7/O1dF/uvNUz60N3dvXjx
YqpLadKU5uXl0aqjh7SQjh07pjdjf57M5NWAw4cPV1RUsGY862HevHmZNxgw
YAAbu35k5syZPHVfeOGFnJycv/76iz2sqqqixgUFBSZ1HRlvU1PTggULWlpa
2MMTJ07ExsYOHTo07KiJTz/99Kabbrpy5QpPY53i4mLjr53eODKfWuQ5OjKf
fsyRx+u1a9fqXtMYeS4baS34C3+N+MVfR8YLf3Xgr5r+Kpsj/FUzd/jbG+y/
1jDvAy310tLSjIwM1oH4+PipU6eeOXPG2KaoqIieOn78uHmhCxcucK4H9nmE
UOjf9x627vXr1/Wfu7q6KNPRo0ebl3ZwvDp33XUXrS5jZ0KxcuVK8xXbJzU1
NcnJyR0dHaEaODWfDP4cNYfm03c58nj966+/0m9j1r0nnniCsw+R1oK/8DcI
8f11drw68Bf+miOZv8rmCH/VzB3+9gn2Xwvw9IFW+08//fTtt99eunSp97Ps
6+bC/r/siP57jAfOuoyrV6+mpKTk5eXxNHZkvIw9e/bQL4cnn3ySp+iQIUMq
Kyt5Lmuks7MzPT193759kZ4YRPRydHA+xc9Ri+R7A+bMmRPD/fYSy7Xgr+W6
8Ffzzl9z4C8D/poAf52qyxA/Rw3+8iFZ7vCXpzH2X07sf/cX+1jBtGnTjC8F
NDc3//nnn8Zmjq8HzrqM8vJyarxt2zZ36h44cIDW3siRI2kxrFmzpq2tLexl
v/vuu4SEBJ6WvXnkkUeWLFli4UQjyLF3XQs5atxO/fPPP4mJidSHL7/8MtLO
R1rLBOTeuy78dbwuQ/wcNfjraF2G+LnDXzly1OCvo3UZ4ucOf+XIUXPXX5t9
MKegoCCm59PZO3furKqqKisrS09PX7hwobGN4+uBsy5RX1+flJQ0ceLErq4u
d+rSwUmTJg0fPpya5eTk8HwFXElJyYwZM6z1Z+/evZSj/dEhR/s5anxOnTx5
8r777qPLTp8+3foA4G906sJfx+tqPslRg7+O1tV8kjv8lSNHDf46WlfzSe7w
V44cNXf9tdOHsFy+fHnDhg1paWns/d50F19YWHju3Dljm2isB566DQ0NmZmZ
FM3p06fdrMv45ptvqHRGRsYff/xhfs1Ro0aVl5db6097ezv1oba21trpOsjR
fo4ah1Nff/01+0qKyZMn//bbbxZ7z1eLB+QOf6Nd1y85avDX0bp+yR3+ypGj
Bn8dreuX3OGvHDlq7vpruQ/8dHd3UycbGxv1byY3Eo31ELZufX09DXDQoEHG
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
iouL+ds3NDTExsaeP38+VAOvclStrhER9mUR5kGDv+GAv+ZIvy/DX6HqSuNv
EK7Npwjjhb868Ncc+CtgXZHvi6urq2lCxowZo914/8Bjjz3G3j+wdetWeio/
P9+F7im1HrSe16CGDRvG3/6ll16aNGmSSQOvclStrhER9mUR5kGDv+GAv+ZI
vy/DX6HqSuNvEK7Npwjjhb868Ncc+CtgXZHvi+vq6mhC+nyWfXf38uXL+zyx
u7vbwe7x5yJH3V9++YXqnjp1irN9bm7u+vXrTRp4laNqdY2IsC+LMA8a/A0H
/DXHkxzhrw78NUdYf4NwbT5FGC/81YG/5sBfAeuKfF/c0tLSr18/mpP6+vqg
p+699146/sorrxgPfvXVV/n5+UOHDk1MTLznnnteffXVSD//3idhc5Gs7u7d
uwcPHsy/xkpLS6dNm2bSwKscVatrRIR9WYR50OBvOOCvOZ7kCH914K85wvob
hGvzKcJ44a8O/DUH/gpYV+T7YuKBBx6gOQl6u/7Ro0fpYGxsrPE1mddff50O
ZmRkPP300xs3bqSJooc0pXqDtra2ysrKwsLCioqKiLpnnot53bq6Ojo+fvz4
UaNGUeneCztKdb///vtVq1aRNbfddtusWbNC/WW0PqF+hnoBqk9ojHFxca2t
rSZtvMrRqbqR5uhUXcs58nj9888/T5069eabb3744YevXr3KeeWIasFf+OtH
f414kiP81YG/5ojsrxE3c8T+y1Atd6fqwt/eKJWjm/5a6MMnn3xCw6Rl88EH
H7Aj586du/322+ngQw89pDf74Ycf4uPjs7Ozm5ub9YO1tbX6H/zatGkTe8mF
WLZsWUTdM8nFvO62bdv69+9PkdG80ZKgiyQkJFBS0a77zjvv0IxRXvPnz587
d25ycjJdh9YMT1HKNzU19eDBg5ydZAwfPvy9994zaeBVjo7UtZCjI3Xt5Mjj
9aJFi2JuEOk3KHLWgr/w14/+GvEkR/irA3/DIqy/RtzMEfsvQ7XcHakLf/tE
qRzd9NdCH7q7uxcvXkx1KU2a0ry8PFp19JAW0rFjx/Rm7M94mbwacPjw4YqK
CtaMZz3Mmzcv8wYDBgxgY9ePzJw5k6fuCy+8kJOT89dff7GHVVVV1LigoCDa
dZuamhYsWNDS0sIenjhxIjY2dujQoWFHTXz66ac33XTTlStXeBrrFBcXG/Xs
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
m/v376fBeXl50c6tra2dNm1afX09u3nu3LnY2Ng+ffqEPWviq6++6tat2507
d3gG6xQWFhp/zLbHkfPSIu/RkfVjoUdHcu30yOP1+++/r3tN58hz2Eiz4C/8
NeIXfz3vEf7CX36E9derHrH/MuAv/DWCHgX019ocSO3i4uK0tDQ2gfj4+DFj
xly+fNk4pqCggB46e/asedD169c51wP7/EUo9O+3D5t7//59/d8tLS3U6aBB
g1zIDWLo0KG0uoyTCcXs2bPNV2yHVFRUJCUl3bp1K9QAZ8+Lv0fNofUTaY9O
5QbB3yOP13/88Qf9NGbTe/PNNznnEGkW/IW/QYjvr+c9wl/4y4+w/nrVo4b9
9wHwF/4GgR7DjnTTXztzILt//fXX48eP37x5s/2j7Ov1wv5/2RH97zEeOHMZ
d+/eTU5OzsnJcTl39+7d9MPw3XffDTuSLnLv3r3Ly8sjnU9zc3NqaurBgwcj
fWIQ0evRkfXDiKhHB3P5e9Qi+d6AiRMnxnD/eonlLPhrORf+at75aw78ZcBf
E+CvU7kM7L8WsuCv5Vz461QuQ/weNXf9tT+HULCPUYwdO9b4VkBdXd3ff/9t
HOb4euDMZZSWltLgzZs3u5N7+PBhWnv9+/enxbBgwYLGxsawhz158mRCQgLP
yPa88sorb7zxhoUnGkGP7XMt9KhxO/Xff/8lJibSHI4ePRrp5CPNMgG9t8+F
v47nMsTvUYO/juYyxO8d/srRowZ/Hc1liN87/JWjR81df23OwZy8vLyYtk9n
b9u2bf/+/SUlJampqdOnTzeOcXw9cOYSVVVVXbp0GTFiREtLizu5dOfIkSP7
9etHw7Kysni+Aq6oqOj555+3Np+9e/dSj/bPDj3a71Hjc+r8+fPPPPMMHXbc
uHHWTwD+RicX/jqeq/mkRw3+Opqr+aR3+CtHjxr8dTRX80nv8FeOHjV3/bUz
h7Dcvn175cqV3bt3Z7/vTa/i8/Pzr169ahwTjfXAk1tdXZ2enk7VXLx40c1c
xg8//EDRaWlpf/31l/kxBw4cWFpaam0+TU1NNIfKykprT9dBj/Z71Dic+v77
79lXcIwaNerPP/+0OHu+LB7QO/yNdq5fetTgr6O5fukd/srRowZ/Hc31S+/w
V44eNXf9tTwHflpbW2mSNTU1+jeTG4nGegibW1VVRSfYs2dP4xcAupBr5LPP
PqMTDwQCJmNqa2tpzKVLlyxPJjc3d+HChZafbgQ9dghPj4ywTp07d65Hjx4b
Nmzg/wP0lrP4Qe8dAn/t5/qlRwb8dSrXL73DX/Ncv/TIgL9O5fqld/hrnuuX
Hhlu+mt5Dk4RvfUQioqKipSUlEceeSQaiyEUBw8erK6uNt5TVFREJ27+uf61
a9cOGzbMTu6WLVsyMzPtHIET9Bj2uTxO3bhxw/rkIsxyBPRu8iz4a4KPemTA
X0fwUe/w1wQf9ciAv47go97hrwk+6pHhpr925mCH2tra/2tj+fLldFmee+45
dvPbb7+Nau7OnTs7d+5Mie+9996qVatWPiAan9HWuXfvHi0/yn3nnXcCgcCh
Q4cKCwtjY2MzMjKamppMnjhixAiam53oa9euUVBNTY2dg5iAHnl6ZLi2V7qQ
hd7hrx381SMD/trHX73D31D4q0cG/LWPv3qHv6HwV48MN/31ag579+6N6YhZ
s2ZFNZd9KLs9JSUlUc29fv36jBkzevbsyeI6deo0ceLE8+fPmzyFKRn07ooF
6IcDrXybBwkFegzbo45M+zJ6h7928FGPOvDXPj7qHf6a4KMedeCvfXzUO/w1
wUc96qjwulhZrly5cvr0aZ63R7Zu3ZqRkWE/8aOPPho+fLj94wAj/D3qyLQv
Kwv8lQP4qybwVw7gr5rAXzkQ3F+R56A4+fn5ixYtsn+cM2fOJCQkNDQ02D8U
sAP2ZaWAv5IBf5UC/koG/FUK+CsZIjglwhwAkAnsywD4F/gLgH+BvwD4FxGc
EmEOAMgE9mUA/Av8BcC/wF8A/IsITokwBwBkAvsyAP4F/gLgX+AvAP4FTgEA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAACAaIPvxPac+fPnf/rpp/aPc/ny5cGDBzc0NNg/FLAD/k6EUsBf
yYC/SgF/JQP+KgX8lQwRnBJhDorzySefDBkyxP5xNm7cOGDAAPvHATbBvqwU
8Fcy4K9SwF/JgL9KAX8lQwSnRJiD4ly4cCEmJob+a/M42dnZS5YscWRKwA7Y
l5UC/koG/FUK+CsZ8Fcp4K9kiOCUCHMAQ4YMWbdunZ0jNDY2JiQknDhxwqkp
ActgX1YN+CsT8Fc14K9MwF/VgL8yIYJTIswBlJSUZGVl2TlCeXl57969W1tb
nZoSsAz2ZdWAvzIBf1UD/soE/FUN+CsTIjjFM4fbt28HAoE5c+Y48vF2Tqqr
qxcvXkyrfdCgQTNnzvz8888lzq2qqoqLi6uvr7d8hLy8PCrIZIBS19PDXE28
fRn+Rhv4Gw08Wbca/G1DqfUmsb+aYutHg79twN+IgL/i5Ir/unj79u3Z2dkp
KSkxbTz55JPuzOrIkSNdu3aN+V8KCgru3bsnZS7x6KOPbtu2zdpz79y5Q9P+
+uuvQw1Q7Xp62KMm0r4Mf+GvHbzK9WrdMuCvautNk9Rf1dYPA/7C34iAv4Lk
MsR/XZyTk2NcCe5cn7Nnz8bFxVHcSy+99NNPP125cqW0tDQ+Pp7uKSoqki+X
sWDBAsq19txDhw517949lKSqXU9ve9RE2pfhL/y1jIfX05N1qwN/VVtvmoz+
aoqtHx34C38jAv4KkssQ/3Xxv//+W9fG0qVLXbs+hYWFlDV69GjjQt2+fTvd
mZqaeuPGDclyGd99912XLl2spcyaNWvatGmhHlXtenrboybSvgx/4a9lPLye
nqxbHfir2nrTZPRXU2z96MBf+BsR8FeQXIb4r4t11q1b5871uXnzZnJyMmXt
27fPeH9zc3OvXr3o/q1bt8qUq3P//v2HH344KJ2HlpaW9PT0PXv2dPioatfT
8x41kfZlHfgLfyPC8+vJcG3dGoG/Cq43yfwNQvr1YwT+wl9+4K9ouXhd3J5f
fvmFgpKSktr/VsPcuXPpofnz58uUa6SgoODVV1+N9FmVlZWJiYlNTU0dPqra
9RShR5X3ZZV7h7+OI/2+DH+9zTUik79BSL9+jMBf+MsP/BUtF6+L2/PNN99Q
UGZmptb2FlBxcfH06dNramro5tq1a+mhKVOmyJRr5MCBA6mpqc3NzRE9a+HC
hTk5OaEeVe16itCjyvuyyr3DX8eRfl+Gv97mGpHJ3yCkXz9G4C/85Qf+ipaL
18XtYb+3P2rUKPr34cOHY9qYNGkS3QwEAvTvZ599VqZcI7du3UpOTq6oqIjo
WRkZGVu2bAn1qGrXU4QeVd6XVe4d/jqO9Psy/PU214hM/gYh/foxAn/hLz/w
V7RcvC5uT1lZGQWNGzdOa/t2dLYOX3zxRbq5e/du+vcTTzwhU24QkydPLiws
5B9fXV0dGxt77dq1UANUu54i9Kjyvqxy7xr8dRrp92X4621uENL4G4T068cI
/IW/nMBfAXPxurg9Bw4coKDBgwdrD35v4fXXX2e/t7B+/Xp6KDc3V6bcIAKB
QN++ffnHr1ixYuTIkSYDVLueIvSo8r6scu8a/HUa6fdl+OttbhDS+BuE9OvH
CPyFv5zAXwFzpXxd3Nraamc+p06doqAOZ8W+M/ztt9+WKTeI33//nbIuXLjA
OT47O3vJkiUmA1S7niL06Ot92afXX4TeNfjr9PV0bd0agb/Krjdp/A1C+vVj
BP7CX87x8FfAXJleFx87diw3N7dPnz6JiYlPPfXUhx9+GOnn3xn19fWdOnWi
rKqqqqCHnn76abp/9erVMuUGsWvXrl69evGvseLi4rFjx5oMUO16itCjH/dl
v19/EXrX4K/T19O1dWsE/iq73qTxNwjp148R+At/OcfDXwFzpXld/PHHH9Oj
aWlp8+bN++CDD+hC0U16ij6gsbGxvLw8Pz+/rKwsbNb48ePp6UEfEzh9+jTd
GRsba3wvyDz31KlTdP+wYcMGDhxI0e0XdpRyf/zxxzlz5pA1jz322IQJE0L9
ZbQOoXmGegOqQ+gc4+LiGhoaXDgvDT3ywePUb7/9NmbMmIceemjq1Kl3797l
PLK1LA3+wt82fNGjETvrFv7qA3zRO/x1tkcjdtaP73qEv/CXE/gbvVxf+Gtn
Dprp9fn555/j4+MzMzPr6ur0OysrK/U/+LVmzRr2lgvx1ltvhc368ssvaSQt
1y+++ILdc/Xq1ccff5zufPnllzlzN2/e3LlzZ6qMrhstCXpuQkICNRXt3E2b
NtERqK8pU6ZMmjQpKSmJnk5rJuxZE9RvSkrKkSNHeAbr9OvXb8eOHdE+Lw09
cvfI49Rrr70W84BIv0Ex0iwN/sJf//RoxPK6hb++6x3+OtujEcvrx489wl/4
yw/8jUauX/y1MIfJkyenP6Br165sDvo9L7zwAhvG/oyXybsBJ06cKCsrY8N4
1kNra+uMGTNoMK0iqjInJ4dWO92kBXzmzBl9mHnusmXLsrKy/vnnH3Zz//79
NDgvLy/aubW1tdOmTauvr2c3z507Fxsb26dPn7BnTXz11VfdunW7c+cOz2Cd
wsJCo57tceS8NPTI3SOP1++//77uNZ0jz2EjzYK/8NeIX3p0ZN3CXx2/9A5/
ne3RkfXjxx7hL/zlB/5GI9cv/lqYA/v9+VDo309eUFBAN8+ePWsedP36dc71
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
6KPbtm2z9tw7d+7QtL/++utQA9Cjaz1qIu3L6B3+2sGr6+nV+TLgL/yNCGH9
VW39MOAv/I0I+CtILkP818U5OTnGFe7O9Tl79mxcXBzFvfTSSz/99NOVK1dK
S0vj4+PpnqKiIvlyGQsWLKBca889dOhQ9+7dTX74oEfXetRE2pfRO/y1jIfX
05Pz1YG/8DcixPTXq1zsvzpKXX/46ziq5TLEf13877//1rWxdOlS165PYWEh
ZY0ePdq4ULdv3053pqam3rhxQ7JcxnfffdelSxdrKbNmzZo2bZrJAPToWo+a
SPsyeoe/lvHwenpyvjrwF/5GhJj+epWL/VdHqesPfx1HtVyG+K+LddatW+fO
9bl582ZycjJl7du3z3h/c3Nzr1696P6tW7fKlKtz//79hx9+OCidh5aWlvT0
9D179vAMRo/R7lETaV/WQe/wNyI8v54M187XCPyFv/yI6a9XuZ73qMFf+BsJ
8Fe0XLwubs8vv/xCQUlJSe1/q2Hu3Ln00Pz582XKNVJQUPDqq69G+qzKysrE
xMSmpiaewejRhR5V3pdV7h3+Oo70+zL89TbXiEz+epUrQo/wF/7yA39Fy8Xr
4vZ88803FJSZmam1vQVUXFw8ffr0mpoaurl27Vp6aMqUKTLlGjlw4EBqampz
c3NEz1q4cGFOTg7nYPToQo8q78sq9w5/HUf6fRn+eptrRCZ/vcoVoUf4C3/5
gb+i5eJ1cXvY5xFGjRpF/z58+HBMG5MmTaKbgUCA/v3ss8/KlGvk1q1bycnJ
FRUVET0rIyNjy5YtnIPRows9qrwvq9w7/HUc6fdl+OttrhGZ/PUqV4Qe4S/8
5Qf+ipaL18XtKSsro6Bx48Zpbd/6zvx68cUX6ebu3bvp30888YRMuUFMnjy5
sLCQf3x1dXVsbOy1a9c4x6NHF3pUeV9WuXcN/jqN9Psy/PU2Nwhp/PUqV4Qe
4S/85QT+CpiL18XtOXDgAAUNHjxYe/D7GK+//jr7fYz169fTQ7m5uTLlBhEI
BPr27cs/fsWKFSNHjuQfjx5d6FHlfVnl3jX46zTS78vw19vcIKTx16tcEXqE
v/CXE/grYK6Ur4tbW1vtzOfUqVMU1OGs2HeGv/322zLlBvH7779T1oULFzjH
Z2dnL1myhP/46NGFHn29L/v0+ovQuwZ/nb6erp2vEfgLfznHC+uvV7ki9Ah/
4S/nePgrYK5Mr4uPHTuWm5vbp0+fxMTEp5566sMPP4z08++M+vr6Tp06UVZV
VVXQQ08//TTdv3r1aplyg9i1a1evXr3411hxcfHYsWP5j48eXejRj/uy36+/
CL1r8Nfp6+na+RqBv/CXc7yw/nqVK0KP8Bf+co6HvwLmSvO6+OOPP6ZH09LS
5s2b98EHH9CFopv0FH1AY2NjeXl5fn5+WVlZ2Kzx48fT04M+JnD69Gm6MzY2
1vhekHnuqVOn6P5hw4YNHDiQotsLG6XcH3/8cc6cOfTT4LHHHpswYQLnX0Zj
0DxDvbHWIXSOcXFxDQ0NnOPRows98jj122+/jRkz5qGHHpo6derdu3c5j2wt
S0Pv8LcNX/To1PnCX32AL3qHv8726FSu73qEv/CXE/gbvVxf+GtnDprp9fn5
55/j4+MzMzPr6ur0OysrK/U/ZLZmzRr2VhLx1ltvhc368ssvaSQt1y+++ILd
c/Xq1ccff5zufPnllzlzN2/e3LlzZ6qMrhstCXpuQkICNRXt3E2bNtERqK8p
U6ZMmjQpKSmJnk5rJuxZE9RvSkrKkSNHeAbr9OvXb8eOHZyD0SNnrp0eeZx6
7bXXYh4Q6TcoRpqloXf4658eHTlf+Ou73uGvsz06kuvHHuEv/OUH/kYj1y/+
WpjD5MmT0x/QtWtXNgf9nhdeeIENY3+ezOTdgBMnTpSVlbFhPOuhtbV1xowZ
NJhWEVWZk5NDq51u0gI+c+aMPsw8d9myZVlZWf/88w+7uX//fhqcl5cX7dza
2tpp06bV19ezm+fOnYuNje3Tp0/Ysya++uqrbt263blzh2ewTmFhofHHTnvQ
o8s98nj9/vvv617TOfIcNtIs9A5/jfilR0fOF/7q+KV3+Otsj47k+rFH+At/
+YG/0cj1i78W5sA+FxAK/XvXCwoK6ObZs2fNg65fv865HrQ2xYqLi9PS0lhW
fHz8mDFjLl++bBwTNvf+/fv6v1taWqjTQYMGuZAbxNChQ2l1GScTitmzZ5uv
2A6pqKhISkq6detWqAHo0eUeebz+448/6Kcxm96bb77JOYeIstA7/G2P+D06
e7468Ffw3p3KDUJZf53K9V2P8Bf+8gN/o3q+OmL6a2cO5rCvmwv7/2VH5DWD
LPv111+PHz9+8+ZNy7mMu3fvJicn5+TkuJy7e/du+uHw7rvv8oT27t27vLyc
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
0Qc0NjaWl5fn5+eXlZWFzRo/fjw9PehjAqdPn6Y7Y2Njje8FmeeeOnWK7h82
bNjAgQMpuv3CjtL5/vjjj3PmzCFrHnvssQkTJoT6y2gdQvMM9QZUh9A5xsXF
NTQ0mIxx6npqPunRqVzLPfI49dtvv40ZM+ahhx6aOnXq3bt3OY9sLUuDv5Gc
L/x1Ntd3PcJfNXvX5PLXiJ3rif3XZpYGfyM5X/jbHjf9dSrXF/7amYNmen1+
/vnn+Pj4zMzMuro6/c7Kykr9D36tWbOGveVCvPXWW2GzvvzySxpJy/WLL75g
91y9evXxxx+nO19++WXO3M2bN3fu3Jkqo+tGS4Kem5CQQE3xnKyd8920aRPN
nPqaMmXKpEmTkpKS6Di0ZnhCqd+UlJQjR45wTpLRr1+/HTt2mAxw5Hpq/unR
kVw7PfI49dprr8U8INJvUIw0S4O/3OcLf53N9WOP8FfN3iXz14jl64n9136W
Bn+5zxf+doib/jqS6xd/Lcxh8uTJ6Q/o2rUrm4N+zwsvvMCGsT/jZfJuwIkT
J8rKytgwnvXQ2to6Y8YMGkyriKrMycmh1U43aQGfOXNGH2aeu2zZsqysrH/+
+Yfd3L9/Pw3Oy8szyXXkfGtra6dNm1ZfX89unjt3LjY2tk+fPmHPmvjqq6+6
det2584dnsE6hYWFRj3b48j11PzToyO5dnrk8fr999/XvaZz5DlspFnwF/4a
QY/wF72bIJm/jlxP7L+Ws+Av/DXiF38979FNfy3Mgf3+fCj07ycvKCigm2fP
njUPun79Oud60NqWYnFxcVpaGsuKj48fM2bM5cuXjWPC5t6/f1//d0tLC3U6
aNAgk1Bnz1dn6NChtLqMkwnF7NmzzVdsh1RUVCQlJd26dctkjCPXkyF+j07l
BsHfI4/Xf/zxB/00ZtN78803OecQURb8hb/tQY9hR8JfNXuXzF+nrif2X2tZ
8Bf+tkd8fz3v0U1/7czBHPa1bGH/v+yIvGbQavz111+PHz9+8+ZNy7mMu3fv
Jicn5+Tk8KeHIqLc3bt3k0Tvvvtu2JF0sr179y4vL490Ps3NzampqQcPHuSJ
sH89fdSjg7n8PWqRODVx4sQY7l8vsZkVCvl6Nwf+okdz4C9Dqd4l9tcc7L/w
NyzwV1PPXwdzhfXX/hxCwX79fuzYsca3Aurq6v7++2/jMMfXA2cuo7S0lAZv
3rzZndzDhw/T2uvfvz8thgULFjQ2NoY97MmTJxMSEnhGtueVV1554403LDzR
CHpsn2uhR43bqf/++y8xMZHmcPTo0UgnH2mWCei9fS78dTyXIX6PGvx1NJch
fu/wV44eNfjraC5D/N7hrxw9au76a3MO5uTl5cW0fTp727Zt+/fvLykpSU1N
nT59unGM4+uBM5eoqqrq0qXLiBEjWlpa3MmlO0eOHNmvXz8alpWVxfMVcEVF
Rc8//7y1+ezdu5d6tH926NF+jxqfU+fPn3/mmWfosOPGjbN+AvA3Ornw1/Fc
zSc9avDX0VzNJ73DXzl61OCvo7maT3qHv3L0qLnrr505hOX27dsrV67s3r07
+31vehWfn59/9epV45horAee3Orq6vT0dKrm4sWLbuYyfvjhB4pOS0v766+/
zI85cODA0tJSa/NpamqiOVRWVlp7ug56tN+jxuHU999/z766YdSoUX/++afF
2fNl8YDe4W+0c/3SowZ/Hc31S+/wV44eNfjraK5feoe/cvSoueuv5Tnw09ra
SpOsqanRv5ncSDTWQ9jcqqoqOsGePXsavzjOhVwjn332GZ14IBAwGVNbW0tj
Ll26ZHkyubm5CxcutPx0I+ixQ3h6ZIR16ty5cz169NiwYQP/H6C3nMUPeu8Q
+Gs/1y89MuCvU7l+6R3+muf6pUcG/HUq1y+9w1/zXL/0yHDTX8tzcIrorYdQ
VFRUpKSkPPLII9FYDKE4ePBgdXW18Z6ioiI6cfPP9a9du3bYsGF2crds2ZKZ
mWnnCJygx7DP5XHqxo0b1icXYZYjoHeTZ8FfE3zUIwP+OoKPeoe/JvioRwb8
dQQf9Q5/TfBRjww3/bUzBzvU1tb+XxvLly+ny/Lcc8+xm99++21Uc3fu3Nm5
c2dKfO+991atWrXyAdH4jLbOvXv3aPlR7jvvvBMIBA4dOlRYWBgbG5uRkdHU
1GTyxBEjRtDc7ERfu3aNgmpqauwcxAT0yNMjw7W90oUs9A5/7eCvHhnw1z7+
6h3+hsJfPTLgr3381Tv8DYW/emS46a9Xc9i7d29MR8yaNSuquexD2e0pKSmJ
au7169dnzJjRs2dPFtepU6eJEyeeP3/e5ClMyaB3VyxAPxxo5ds8SCjQY9ge
dWTal9E7/LWDj3rUgb/28VHv8NcEH/WoA3/t46Pe4a8JPupRR4XXxcpy5cqV
06dP87w9snXr1oyMDPuJH3300fDhw+0fBxjh71FHpn1ZWeCvHMBfNYG/cgB/
1QT+yoHg/oo8B8XJz89ftGiR/eOcOXMmISGhoaHB/qGAHbAvKwX8lQz4qxTw
VzLgr1LAX8kQwSkR5gCATGBfBsC/wF8A/Av8BcC/iOCUCHMAQCawLwPgX+Av
AP4F/gLgX0RwSoQ5ACAT2JcB8C/wFwD/An8B8C9wCgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEG3wn
tufMnz//008/tX+cy5cvDx48uKGhwf6hgB3wdyKUAv5KBvxVCvgrGfBXKeCv
ZIjglAhzUJxPPvlkyJAh9o+zcePGAQMG2D8OsAn2ZaWAv5IBf5UC/koG/FUK
+CsZIjglwhwU58KFCzExMfRfm8fJzs5esmSJI1MCdsC+rBTwVzLgr1LAX8mA
v0oBfyVDBKdEmAMYMmTIunXr7ByhsbExISHhxIkTTk0JWAb7smrAX5mAv6oB
f2UC/qoG/JUJEZwSYQ6gpKQkKyvLzhHKy8t79+7d2trq1JSAZbAvqwb8lQn4
qxrwVybgr2rAX5kQwSmeOdy+fTsQCMyZM8eRj7dzUl1dvXjxYlrtgwYNmjlz
5ueff+5atPvnW1VVFRcXV19fb/kIeXl5NGHzMUr16OH6EW1fVqp3Df46ilI9
MuCvpljvEvvrVS72Xx3Vrj/8dRbVcsV/Xbx9+/bs7OyUlJSYNp588kl3ZnXk
yJGuXbvG/C8FBQX37t2Laq5X50s8+uij27Zts/bcO3fu0OX6+uuvQw1QrUev
chni7Muq9Q5/nUXBHjX4q2TvUvqr2vphwF/4GxHwV5Bchvivi3NycoxmuXN9
zp49GxcXR3EvvfTSTz/9dOXKldLS0vj4eLqnqKgoqtGenC9jwYIFdL7Wnnvo
0KHu3bub/NBTqkcP1w9DnH1Zqd41+OsoavaowV8le5fPX69ysf/qqHb94a+z
qJbLEP918b///lvXxtKlS127PoWFhZQ1evRo40Ldvn073Zmamnrjxo3oRXty
vozvvvuuS5cu1s5u1qxZ06ZNMxmgVI8erh+GOPuyUr1r8NdR1OxRg79K9i6f
v17lYv/VUe36w19nUS2XIf7rYp1169a5c31u3ryZnJxMWfv27TPe39zc3KtX
L7p/69at0Z6D5uL56ty/f//hhx8OOmseWlpa0tPT9+zZwzNY+h5FWD/i7Ms6
0vceBPy1ibI9avBXyd4l89erXBHWD/yFv/zAX9Fy8bq4Pb/88gsFJSUltf+t
hrlz59JD8+fPj/YcNI/WQ0FBwauvvhrpsyorKxMTE5uamngGS9+jCOtH5X1Z
hOuvwV/bqNwj/FWzd5n89SpXhPUDf+EvP/BXtFy8Lm7PN998Q0GZmZla21tA
xcXF06dPr6mpoZtr166lh6ZMmRLtOWgerYcDBw6kpqY2NzdH9KyFCxfm5ORw
Dpa+RxHWj8r7sgjXX4O/tlG5R/irZu8y+etVrgjrB/7CX37gr2i5eF3cHvY5
iFGjRtG/Dx8+HNPGpEmT6GYgEKB/P/vss9Geg+bRerh161ZycnJFRUVEz8rI
yNiyZQvnYOl7FGH9qLwvi3D9NfhrG5V7hL9q9i6Tv17lirB+4C/85Qf+ipaL
18XtKSsro6Bx48Zpbd82z7x+8cUX6ebu3bvp30888US056B5tw4nT55cWFjI
P766ujo2NvbatWuc46XvUYT1o/K+LML11+CvbVTuEf6q2bsmkb9e5YqwfuAv
/OUE/gqYi9fF7Tlw4AAFDR48WHvweyCvv/46+z2Q9evX00O5ubnRnoPm3ToM
BAJ9+/blH79ixYqRI0fyj5e+RxHWj8r7sgjXX4O/tlG5R/irZu+aRP56lSvC
+oG/8JcT+CtgrpSvi1tbW+3M59SpUxTU4azYd4a//fbb0cgNwrXzDeL333+n
3AsXLnCOz87OXrJkCf/xpe9RhPXj631ZguuvwV/0aAP4q2bvmkT+epUrwvqB
v/CXczz8FTBXptfFx44dy83N7dOnT2Ji4lNPPfXhhx9G+vl3Rn19fadOnSir
qqoq6KGnn36a7l+9enU0coNw7XyD2LVrV69evfjXWHFx8dixY/mPL32PIqwf
P+7LMl1/Df6iRxvAXzV71yTy16tcEdYP/IW/nOPhr4C50rwu/vjjj+nRtLS0
efPmffDBB3Sh6CY9RR/Q2NhYXl6en59fVlYWNmv8+PH09KCPCZw+fZrujI2N
Nb4XZJ576tQpun/YsGEDBw6k6PY/KKJ0vj/++OOcOXPop9Bjjz02YcIEzr+M
xqB5hnpDr0PoHOPi4hoaGjjHq9CjU7mWe+Rx6rfffhszZsxDDz00derUu3fv
ch7ZWpamRu9OnS/8ZSjbI/xVs3dNLn+dysX+azNLg7+RnC/8dTbXdz266a+d
OWim1+fnn3+Oj4/PzMysq6vT76ysrNT/gNqaNWvYW1jEW2+9FTbryy+/pJG0
XL/44gt2z9WrVx9//HG68+WXX+bM3bx5c+fOnakyum60JOi5CQkJ1BTPydo5
302bNtHMqa8pU6ZMmjQpKSmJjkNrhieU+k1JSTly5AjnJBn9+vXbsWMH52AV
enQk106PPE699tprMQ+I9BsUI83S1OjdkfOFvzrK9gh/1exdMn8dycX+az9L
g7/c5wt/nc31Y49u+mthDpMnT05/QNeuXdkc9HteeOEFNoz9WTSTdwNOnDhR
VlbGhvGsh9bW1hkzZtBgWkVUZU5ODq12ukkL+MyZM/ow89xly5ZlZWX9888/
7Ob+/ftpcF5enkmuI+dbW1s7bdq0+vp6dvPcuXOxsbF9+vQJe9bEV1991a1b
tzt37vAM1iksLDT+uGuPaj06kmunRx6v33//fd1rOkeew0aapVrv8Bc96sBf
HfSupr+O5GL/tZwFf+GvEb/463mPbvprYQ7s8wih0L/vvaCggG6ePXvWPOj6
9euc60FrU7u4uDgtLY1lxcfHjxkz5vLly8YxYXPv37+v/7ulpYU6HTRokEmo
s+erM3ToUFpdxsmEYvbs2eYrtkMqKiqSkpJu3boVaoBqPTqVGwR/jzxe//HH
H/TTmE3vzTff5JxDRFmq9Q5/0aMJ8Be9myOZv07lYv+1lgV/4W97xPfX8x7d
9NfOHMxhX3MX9v/LjshrBtn966+/Hj9+/ObNm5ZzGXfv3k1OTs7JyeFPD0VE
ubt376YfSu+++27YkXSyvXv3Li8vj3Q+zc3NqampBw8ejPSJQcjXo4O5/D1q
kTg1ceLEGO5fL7GZFQr5ejcH/qJHc+AvQ6neJfbXkVwG9l/LWaGAvybAX6dy
GeL3qLnrr/05hIJ9nGHs2LHGtwLq6ur+/vtv4zDH1wNnLqO0tJQGb9682Z3c
w4cP09rr378/LYYFCxY0NjaGPezJkycTEhJ4RrbnlVdeeeONNyw80Qh6bJ9r
oUeN26n//vsvMTGR5nD06NFIJx9plgnovX0u/HU8lyF+jxr8dTSXIX7v8FeO
HjX462guQ/ze4a8cPWru+mtzDubk5eXFtH06e9u2bfv37y8pKUlNTZ0+fbpx
jOPrgTOXqKqq6tKly4gRI1paWtzJpTtHjhzZr18/GpaVlcXzFXBFRUXPP/+8
tfns3buXerR/dujRfo8an1Pnz59/5pln6LDjxo2zfgLwNzq58NfxXM0nPWrw
19FczSe9w185etTgr6O5mk96h79y9Ki566+dOYTl9u3bK1eu7N69O/t9b3oV
n5+ff/XqVeOYaKwHntzq6ur09HSq5uLFi27mMn744QeKTktL++uvv8yPOXDg
wNLSUmvzaWpqojlUVlZae7oOerTfo8bh1Pfff8++CmPUqFF//vmnxdnzZfGA
3uFvtHP90qMGfx3N9Uvv8FeOHjX462iuX3qHv3L0qLnrr+U58NPa2kqTrKmp
0b+Z3Eg01kPY3KqqKjrBnj17Gr+Iz4VcI5999hmdeCAQMBlTW1tLYy5dumR5
Mrm5uQsXLrT8dCPosUN4emSEdercuXM9evTYsGED/x+gt5zFD3rvEPhrP9cv
PTLgr1O5fukd/prn+qVHBvx1KtcvvcNf81y/9Mhw01/Lc3CK6K2HUFRUVKSk
pDzyyCPRWAyhOHjwYHV1tfGeoqIiOnHzz/WvXbt22LBhdnK3bNmSmZlp5wic
oMewz+Vx6saNG9YnF2GWI6B3k2fBXxN81CMD/jqCj3qHvyb4qEcG/HUEH/UO
f03wUY8MN/21Mwc71NbW/l8by5cvp8vy3HPPsZvffvttVHN37tzZuXNnSnzv
vfdWrVq18gHR+Iy2zr1792j5Ue4777wTCAQOHTpUWFgYGxubkZHR1NRk8sQR
I0bQ3OxEX7t2jYJqamrsHMQE9MjTI8O1vdKFLPQOf+3grx4Z8Nc+/uod/obC
Xz0y4K99/NU7/A2Fv3pkuOmvV3PYu3dvTEfMmjUrqrnsQ9ntKSkpiWru9evX
Z8yY0bNnTxbXqVOniRMnnj9/3uQpTMmgd1csQD8caOXbPEgo0GPYHnVk2pfR
O/y1g4961IG/9vFR7/DXBB/1qAN/7eOj3uGvCT7qUUeF18XKcuXKldOnT/O8
PbJ169aMjAz7iR999NHw4cPtHwcY4e9RR6Z9WVngrxzAXzWBv3IAf9UE/sqB
4P6KPAfFyc/PX7Rokf3jnDlzJiEhoaGhwf6hgB2wLysF/JUM+KsU8Fcy4K9S
wF/JEMEpEeYAgExgXwbAv8BfAPwL/AXAv4jglAhzAEAmsC8D4F/gLwD+Bf4C
4F9EcEqEOQAgE9iXAfAv8BcA/wJ/AfAvcAoAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARBt8J7bnzJ8/
/9NPP7V/nMuXLw8ePLihocH+oYAd8HcilAL+Sgb8VQr4KxnwVyngr2SI4JQI
c1CcTz75ZMiQIfaPs3HjxgEDBtg/DrAJ9mWlgL+SAX+VAv5KBvxVCvgrGSI4
JcIcFOfChQsxMTH0X5vHyc7OXrJkiSNTAnbAvqwU8Fcy4K9SwF/JgL9KAX8l
QwSnRJgDGDJkyLp16+wcobGxMSEh4cSJE05NCVgG+7JqwF+ZgL+qAX9lAv6q
BvyVCRGcEmEOoKSkJCsry84RysvLe/fu3dra6tSUgGWwL6sG/JUJ+Ksa8Fcm
4K9qwF+ZEMEpnjncvn07EAjMmTPHkY+38+NJbnV19eLFi8myQYMGzZw58/PP
P3chtKqqKi4urr6+3vIR8vLy6EKZDPDkvBTM1cTbl+FvtIG/0cCrdQt/PcyF
v46jTo8M+OthLvx1HKXWj+aH18Xbt2/Pzs5OSUmJaePJJ590Z1Ze5R45cqRr
164x/0tBQcG9e/eiHf3oo49u27bN2nPv3LlD0/76669DDfDqvFTLZYizL8Nf
+GsHr3K9Wj8M+At/I0JYfxXsUYO/SvYOfyXIZYj/ujgnJ8e4Ely7Pp7knj17
Ni4ujuJeeumln3766cqVK6WlpfHx8XRPUVFRtNMXLFhAudaee+jQoe7du4eS
1KvzUi1XR5x9Gf7CX8t4eD29WrcM+At/I0JMfzUle9Tgr5K9w18Jchnivy7+
999/69pYunSpm9fHk9zCwkLKGj16tFGQ7du3052pqak3btyIavp3333XpUsX
aymzZs2aNm1aqEe9Oi/VcnXE2ZfhL/y1jIfX06t1y4C/8DcixPRXU7JHDf4q
2Tv8lSCXIf7rYp1169a5f33czL1582ZycjJl7du3z3h/c3Nzr1696P6tW7dG
dQL3799/+OGHg9J5aGlpSU9P37NnT4ePenVequUaEWdf1oG/8DciPL+eDE/W
Lfx1P9fz9SaZv0Go06MGf73I9bx3+CtNLl4Xi5P7yy+/UFBSUlL736aYO3cu
PTR//vxoz6GgoODVV1+N9FmVlZWJiYlNTU0dPurVeamWawT7svu5IvQOfx1H
+n0Z/jJEWG8y+RuEUj3CX/dzRegd/sqRi9fF4uR+8803FJSZmam1vfVUXFw8
ffr0mpoaurl27Vp6aMqUKdGew4EDB1JTU5ubmyN61sKFC3NyckI96tV5qZZr
BPuy+7ki9A5/HUf6fRn+MkRYbzL5G4RSPcJf93NF6B3+ypGL18Xi5LLPC4wa
NYr+ffjw4Zg2Jk2aRDcDgQD9+9lnn432HG7dupWcnFxRURHRszIyMrZs2RLq
Ua/OS7VcI9iX3c8VoXf46zjS78vwlyHCepPJ3yCU6hH+up8rQu/wV45cvC4W
J7esrIyCxo0bp7V9Kztb/y+++CLd3L17N/37iSeeiPYciMmTJxcWFvKPr66u
jo2NvXbtWqgBXp2XarlGsC+7nytC7xr8dRrp92X4yxBkvUnjbxBK9Qh/3c8V
oXcN/kqRi9fF4uQeOHCAggYPHqw9+H2J119/nf2+xPr16+mh3NzcaM9Ba3sP
qm/fvvzjV6xYMXLkSJMBXp2XarlGsC+7nytC7xr8dRrp92X4yxBkvUnjbxBK
9Qh/3c8VoXcN/kqRK+Xr4tbWVtuT8iD31KlTFNTh1WDfVf72229HIzeI33//
nbIuXLjAOT47O3vJkiUmA7w6L9Vyjfh6X4a/doC/Pl0/RuCv+7mCrDdp/A1C
qR7hr/u5IvSuwV8pcmV6XXzs2LHc3Nw+ffokJiY+9dRTH374YaSff/c2t76+
vlOnTpRVVVUV9NDTTz9N969evToauUHs2rWrV69e/GusuLh47NixJgO8Oi/V
co34cV+Gv/BXhNwgPFm38Nf9XEHWmzT+BqFUj/DX/VwRetfgrxS50rwu/vjj
j+nRtLS0efPmffDBB3Sh6CY9RR/Q2NhYXl6en59fVlYW0fTs5J46dYruHzZs
2MCBAym6/cIOYvz48fT0oI8nnD59mu6MjY01vgdlnvvjjz/OmTOHrHnssccm
TJgQ6i+jdQjNM9QbUB1C5xgXF9fQ0ODCeWkR9uhUru965HHqt99+GzNmzEMP
PTR16tS7d+9yHtlalgZ/4W8bvvDXiJ31A3/1AfCXE5n8NaJUj/DXkVzf9a7B
X+y/DmHf659//jk+Pj4zM7Ourk6/s7KyUv+DX2vWrGFvuRBvvfVWRNOznLt5
8+bOnTtTZXTdaEnQQRISEqgpk6wvv/yShpEmX3zxBbvn6tWrjz/+ON358ssv
c+Zu2rSJjkB9TZkyZdKkSUlJSfR0WjM8J0v9pqSkHDlyhGewTr9+/Xbs2BHt
89Ii79GRXD/2yOPUa6+9FvOASL9BMdIsDf7CX//4a8Ty+oG/8Fdxf40o1SP8
tZ/rx97hb/tc7L/WMJnD5MmT0x/QtWtXNgf9nhdeeIENY3/Gy+TdgBMnTpSV
lbFhPOvBkdxly5ZlZWX9888/7Ob+/ftpcF5enklua2vrjBkzaBitXlpCOTk5
ZBndJHHOnDmjDzPPra2tnTZtWn19Pbt57ty52NjYPn36hD1r4quvvurWrdud
O3d4BusUFhYa9WyPI+elRd6jI7l+7JHH6/fff1/3ms6R57CRZsFf+GvEL/46
sn7grw78VdNfZXuEv2r2Dn/bg/3XGiZzYL8/Hwr9+8kLCgro5tmzZ82Drl+/
zrkenMq9f/++/u+WlhbqdNCgQebRpEBxcXFaWhrLio+PHzNmzOXLl41jOM9X
Z+jQobS6jJMJxezZs81XbIdUVFQkJSXdunXLZIyD58Xfo1O5vuuRx+s//viD
fhqz6b355pucc4goC/7C3/aI76+z61YH/sJfcyTzV9ke4a+avcPfDsH+awH7
n3FmX8sW9v/Ljuh/jzmYy7h7925ycnJOTg7PYLLg119/PX78+M2bN23m7t69
myR69913eUJ79+5dXl7Oc1gjzc3NqampBw8e5Imwf14WenTweorfoxaJUxMn
Tozh/vUSm1mhgL8mwF+nchkR9WgO/GXAXxPgb1gk61GDv47mMsTvHf7yDMb+
y4l9r9mv348dO9b4VkBdXd3ff/9tHOb4euDMZZSWltLgzZs3u5N7+PBhWnv9
+/enxbBgwYLGxsawhz158mRCQgLPyPa88sorb7zxhoUnGkGP7XMt9KhxO/Xf
f/8lJibSHI4ePRrp5CPNMgG9t8+Fv47nMsTvUYO/juYyxO8d/srRowZ/Hc1l
iN87/JWjR81df23OwZy8vLyYtk9nb9u2bf/+/SUlJampqdOnTzeOcXw9cOYS
VVVVXbp0GTFiREtLizu5dOfIkSP79etHw7Kysni+Aq6oqOj555+3Np+9e/dS
j/bPDj3a71Hjc+r8+fPPPPMMHXbcuHHWTwD+RicX/jqeq/mkRw3+Opqr+aR3
+CtHjxr8dTRX80nv8FeOHjV3/bUzh7Dcvn175cqV3bt3Z7/vTa/i8/Pzr169
ahwTjfXAk1tdXZ2enk7VXLx40c1cxg8//EDRaWlpf/31l/kxBw4cWFpaam0+
TU1NNIfKykprT9dBj/Z71Dic+v7779lXN4waNerPP/+0OHu+LB7QO/yNdq5f
etTgr6O5fukd/srRowZ/Hc31S+/wV44eNXf9tTwHflpbW2mSNTU1+jeTG4nG
egibW1VVRSfYs2dP4xfHuZBr5LPPPqMTDwQCJmNqa2tpzKVLlyxPJjc3d+HC
hZafbgQ9dghPj4ywTp07d65Hjx4bNmzg/wP0lrP4Qe8dAn/t5/qlRwb8dSrX
L73DX/Ncv/TIgL9O5fqld/hrnuuXHhlu+mt5Dk4RvfUQioqKipSUlEceeSQa
iyEUBw8erK6uNt5TVFREJ27+uf61a9cOGzbMTu6WLVsyMzPtHIET9Bj2uTxO
3bhxw/rkIsxyBPRu8iz4a4KPemTAX0fwUe/w1wQf9ciAv47go97hrwk+6pHh
pr925mCH2tra/2tj+fLldFmee+45dvPbb7+Nau7OnTs7d+5Mie+9996qVatW
PiAan9HWuXfvHi0/yn3nnXcCgcChQ4cKCwtjY2MzMjKamppMnjhixAiam53o
a9euUVBNTY2dg5iAHnl6ZLi2V7qQhd7hrx381SMD/trHX73D31D4q0cG/LWP
v3qHv6HwV48MN/31ag579+6N6YhZs2ZFNZd9KLs9JSUlUc29fv36jBkzevbs
yeI6deo0ceLE8+fPmzyFKRn07ooF6IcDrXybBwkFegzbo45M+zJ6h7928FGP
OvDXPj7qHf6a4KMedeCvfXzUO/w1wUc96qjwulhZrly5cvr0aZ63R7Zu3ZqR
kWE/8aOPPho+fLj94wAj/D3qyLQvKwv8lQP4qybwVw7gr5rAXzkQ3F+R56A4
+fn5ixYtsn+cM2fOJCQkNDQ02D8UsAP2ZaWAv5IBf5UC/koG/FUK+CsZIjgl
whwAkAnsywD4F/gLgH+BvwD4FxGcEmEOAMgE9mUA/Av8BcC/wF8A/IsITokw
BwBkAvsyAP4F/gLgX+AvAP4FTgEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAaIPvxPac+fPnf/rpp/aP
c/ny5cGDBzc0NNg/FLAD/k6EUsBfyYC/SgF/JQP+KgX8lQwRnBJhDorzySef
DBkyxP5xNm7cOGDAAPvHATbBvqwU8Fcy4K9SwF/JgL9KAX8lQwSnRJiD4ly4
cCEmJob+a/M42dnZS5YscWRKwA7Yl5UC/koG/FUK+CsZ8Fcp4K9kiOCUCHMA
Q4YMWbdunZ0jNDY2JiQknDhxwqkpActgX1YN+CsT8Fc14K9MwF/VgL8yIYJT
IswBlJSUZGVl2TlCeXl57969W1tbnZoSsAz2ZdWAvzIBf1UD/soE/FUN+CsT
IjjFM4fbt28HAoE5c+Y48vF2fjzJra6uXrx4MVk2aNCgmTNnfv755y6EVlVV
xcXF1dfXWz5CXl4eXSjzMepcTw9zNfH2ZfgbbeBvNPBq3cJfD3Phr+Oo0yMD
/nqYC38dR7Vc8V8Xb9++PTs7OyUlJaaNJ5980p1ZeZV75MiRrl27xvwvBQUF
9+7di3b0o48+um3bNmvPvXPnDk3766+/DjVAtevpYY+aSPsy/IW/dvDqenp1
vgz4q9p60yT1V8EeNfirZO/wV4Jchvivi3Nycowr3LXr40nu2bNn4+LiKO6l
l1766aefrly5UlpaGh8fT/cUFRVFO33BggWUa+25hw4d6t69u8kPH6Wup7c9
aiLty/AX/lrGw+vp1bplwF/V1psmo79e5WL/1UHv8NcOquUyxH9d/O+//9a1
sXTpUjevjye5hYWFlDV69GijINu3b6c7U1NTb9y4EdX07777rkuXLtZSZs2a
NW3aNJMBSl1Pb3vURNqX4S/8tYyH19OrdcuAv6qtN01Gf73Kxf6rg97hrx1U
y2WI/7pYZ926de5fHzdzb968mZycTFn79u0z3t/c3NyrVy+6f+vWrVGdwP37
9x9++OGgdB5aWlrS09P37NnDM1j66+l5j5pI+7IO/IW/EeH59WR4sm7hr/u5
nq83yfz1KtfzHjX460Wu573DX2ly8bpYnNxffvmFgpKSktr/NsXcuXPpofnz
50d7DgUFBa+++mqkz6qsrExMTGxqauIZLP31FKFH7Mvu54rQO/x1HOn3ZfjL
EGG9yeSvV7ki9Ah/3c8VoXf4K0cuXheLk/vNN99QUGZmptb21lNxcfH06dNr
amro5tq1a+mhKVOmRHsOBw4cSE1NbW5ujuhZCxcuzMnJ4Rws/fUUoUfsy+7n
itA7/HUc6fdl+MsQYb3J5K9XuSL0CH/dzxWhd/grRy5eF4uTyz4HMWrUKPr3
4cOHY9qYNGkS3QwEAvTvZ599NtpzuHXrVnJyckVFRUTPysjI2LJlC+dg6a+n
CD1iX3Y/V4Te4a/jSL8vw1+GCOtNJn+9yhWhR/jrfq4IvcNfOXLxulic3LKy
MgoaN26c1vZt88zrF198kW7u3r2b/v3EE09Eew7E5MmTCwsL+cdXV1fHxsZe
u3aNc7z011OEHrEvu58rQu8a/HUa6fdl+MsQZL1J469XuSL0CH/dzxWhdw3+
SpGL18Xi5B44cICCBg8erD34PZDXX3+d/R7I+vXr6aHc3Nxoz0Fre2+tb9++
/ONXrFgxcuRI/vHSX08ResS+7H6uCL1r8NdppN+X4S9DkPUmjb9e5YrQI/x1
P1eE3jX4K0WulK+LW1tbbU/Kg9xTp05RUIdXg31X+dtvvx2N3CB+//13yrpw
4QLn+Ozs7CVLlvAfX/rrKUKPvt6X4a8d4K9P148R+Ot+riDrTRp/vcoVoUf4
636uCL1r8FeKXJleFx87diw3N7dPnz6JiYlPPfXUhx9+GOnn373Nra+v79Sp
E2VVVVUFPfT000/T/atXr45GbhC7du3q1asX/xorLi4eO3Ys//Glv54i9OjH
fRn+wl8jglxPT9Yt/HU/V5D1Jo2/XuWK0CP8dT9XhN41+CtFrjSviz/++GN6
NC0tbd68eR988AFdKLpJT9EHNDY2lpeX5+fnl5WVRTQ9O7mnTp2i+4cNGzZw
4ECKbi9sEOPHj6enB3084fTp03RnbGys8T0o89wff/xxzpw59NPgsccemzBh
AudfRmPQPEO9sdYhdI5xcXENDQ2c493s0anr6bseeZz67bffxowZ89BDD02d
OvXu3bucR7aWpcFf+NuGL/x16nzhrz4A/nIik79O5fquR/jrSK7vetfgL/Zf
h7Dv9c8//xwfH5+ZmVlXV6ffWVlZqf8hszVr1rC3koi33noroulZzt28eXPn
zp2pMrputCToIAkJCdSUSdaXX35Jw0iTL774gt1z9erVxx9/nO58+eWXOXM3
bdpER6C+pkyZMmnSpKSkJHo6rRmek6V+U1JSjhw5wjNYp1+/fjt27OAc7GaP
jlxPP/bI49Rrr70W84BIv0Ex0iwN/sJf//jryPnCX/iruL+O5PqxR/hrP9eP
vcPf9rnYf61hMofJkyenP6Br165sDvo9L7zwAhvG/jyZybsBJ06cKCsrY8N4
1oMjucuWLcvKyvrnn3/Yzf3799PgvLw8k9zW1tYZM2bQMFq9tIRycnLIMrpJ
4pw5c0YfZp5bW1s7bdq0+vp6dvPcuXOxsbF9+vQJe9bEV1991a1btzt37vAM
1iksLDT+2GmPVz06cj392COP1++//77uNZ0jz2EjzYK/8NeIX/x15Hzhrw78
VdNfZXuEv2r2Dn/bg/3XGiZzYJ8LCIX+vesFBQV08+zZs+ZB169f51wPTuXe
v39f/3dLSwt1OmjQIPNoUru4uDgtLY1lxcfHjxkz5vLly8YxnOerM3ToUFpd
xsmEYvbs2eYrtkMqKiqSkpJu3boVaoBXPWoOXU/f9cjj9R9//EE/jdn03nzz
Tc45RJQFf+Fve8T319nz1YG/8NccyfxVtkf4q2bv8LdDsP9awP5nnNnXzYX9
/7Ij+t9jDuYy7t69m5ycnJOTwzOY7P7111+PHz9+8+ZNm7m7d++mHw7vvvsu
T2jv3r3Ly8t5Dmukubk5NTX14MGDkT4xiOj16OD1FL9HLRKnJk6cGMP96yU2
s0IBf02Av5p3/poDfxnw1wT461QuQ/weNfjraC5D/N7hL89g7L+c2Peafaxg
7NixxrcC6urq/v77b+Mwx9cDZy6jtLSUBm/evNmd3MOHD9Pa69+/Py2GBQsW
NDY2hj3syZMnExISeEa255VXXnnjjTcsPNEIemyfa6FHjdup//77LzExkeZw
9OjRSCcfaZYJ6L19Lvx1PJchfo8a/HU0lyF+7/BXjh41+OtoLkP83uGvHD1q
7vprcw7m5OXlxbR9Onvbtm379+8vKSlJTU2dPn26cYzj64Ezl6iqqurSpcuI
ESNaWlrcyaU7R44c2a9fPxqWlZXF8xVwRUVFzz//vLX57N27l3q0f3bo0X6P
Gp9T58+ff+aZZ+iw48aNs34C8Dc6ufDX8VzNJz1q8NfRXM0nvcNfOXrU4K+j
uZpPeoe/cvSoueuvnTmE5fbt2ytXruzevTv7fW96FZ+fn3/16lXjmGisB57c
6urq9PR0qubixYtu5jJ++OEHik5LS/vrr7/Mjzlw4MDS0lJr82lqaqI5VFZW
Wnu6Dnq036PG4dT333/PvpJi1KhRf/75p8XZ82XxgN7hb7Rz/dKjBn8dzfVL
7/BXjh41+Otorl96h79y9Ki566/lOfDT2tpKk6ypqdG/mdxINNZD2Nyqqio6
wZ49exq/EM+FXCOfffYZnXggEDAZU1tbS2MuXbpkeTK5ubkLFy60/HQj6LFD
eHpkhHXq3LlzPXr02LBhA/8foLecxQ967xD4az/XLz0y4K9TuX7pHf6a5/ql
Rwb8dSrXL73DX/Ncv/TIcNNfy3Nwiuith1BUVFSkpKQ88sgj0VgMoTh48GB1
dbXxnqKiIjpx88/1r127dtiwYXZyt2zZkpmZaecInKDHsM/lcerGjRvWJxdh
liOgd5NnwV8TfNQjA/46go96h78m+KhHBvx1BB/1Dn9N8FGPDDf9tTMHO9TW
1v5fG8uXL6fL8txzz7Gb3377bVRzd+7c2blzZ0p87733Vq1atfIB0fiMts69
e/do+VHuO//f3rnHxFEtfpxnt4EWBA30UpvqBVPTpqna+qIVmkZiBaWxDXJB
xaJoi2JabWNKIhKtj7aJVSOKLdLEVTQVbW4bWh8hUYMP/ANFwEZoqY+WykNE
L20p5TG/E046md/CDmdnzs7jnO/nj5vu7pn5ntnvfPY4e3eXDRu8Xm9dXV1J
SUlYWFhycvLg4KDOhqmpqWRuZqK7u7tJUFtbm5md6IAeWXqkWLZWWpCF3uGv
GdzVIwX+msddvcNff7irRwr8NY+7eoe//nBXjxQr/bVrDrW1tSFTUVRUFNRc
+qXsyZSXlwc1t7e3t6CgIDExkcaFhoZmZ2d3dnbqbEKV9Hl3xQDkxYGc+SZ3
4g/0OG2PKiKty+gd/prBRT2qwF/zuKh3+KuDi3pUgb/mcVHv8FcHF/WoIsN1
sbR0dXW1tLSwvD1SVVWVnJxsPnHnzp3Lli0zvx+ghb1HFZHWZWmBv2IAf+UE
/ooB/JUT+CsGDvfXyXOQnNzc3K1bt5rfT3t7e2RkZH9/v/ldATNgXZYK+CsY
8Fcq4K9gwF+pgL+C4QSnnDAHAEQC6zIA7gX+AuBe4C8A7sUJTjlhDgCIBNZl
ANwL/AXAvcBfANyLE5xywhwAEAmsywC4F/gLgHuBvwC4FzgFAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AIINfhPbdjZt2vTKK6+Y38+pU6cWL17c399vflfADPg7EVIBfwUD/koF/BUM
+CsV8FcwnOCUE+YgOS+//PKSJUvM7+eNN964+uqrze8HmATrslTAX8GAv1IB
fwUD/koF/BUMJzjlhDlIzokTJ0JCQsj/mtxPRkbGtm3buEwJmAHrslTAX8GA
v1IBfwUD/koF/BUMJzjlhDmAJUuW7N6928weBgYGIiMjGxsbeU0JGAbrsmzA
X5GAv7IBf0UC/soG/BUJJzjlhDmA8vLytLQ0M3uoqalJSkoaHx/nNSVgGKzL
sgF/RQL+ygb8FQn4KxvwVySc4BTLHIaGhrxeb3FxMZevt7MjT25zc3N4eHhf
X5/hPeTk5JAJ6wxobW198sknyavHokWL1q9f/8477xjOCgjZchXnrcvyeGRX
LvwNBnadP/BXtlyB/VVs6hHrr4o8HtmVC39FynX+dfG+ffsyMjJiYmJCJrju
uuusmZVsuYQrrriiurra2Lbnz5+fNWvWp59+6m/AkSNHyICQ/09hYeGFCxeM
zpcJ2XIpzlmXZfMI/vLFrlwbe1Tgr3y5iqD+2vV8Yv2lyOYR/OWLhD0qbrgu
zszM1J4Jlj0/suUSNm/efOeddxrbtq6uLjY21p+kx44dCw8PJ4dD9v/DDz90
dXVVVFRERESQe0pLS01MeRpky1Vxzrosm0fwlyM2emRjjwr8lS9XEdFfxabn
E+uvimwewV++SNij4obr4r///rtngqeeesrK50e2XMIXX3wxc+bMM2fOGNi2
qKgoLy/P36MlJSXkWG655Rat+Pv27SN3xsXFGUtkQbZcFeesy7J5BH85YqNH
NvaowF/5chUR/VVsej6x/qrI5hH85YuEPSpuuC5W2b17t/XPj1S5o6Ojl112
2UcffRTohmNjYwkJCR988MGUj549ezY6Opoci8+eR0ZG5syZQ+6vqqoyOGNd
ZMvV4px1WUUej+zKhb/BwJbzB/5KmCuYvz5Y9nw64Xjhr4S58FeYXFwXI1dL
YWHhvffeG+hWDQ0NHo9ncHBwykd/+uknciBRUVGTPyXy6KOPkoc2bdpkZK7T
IVuuFqzLcubCX+4Ivy7DX+fkiuSvD5Y9n044XvgrZy78FSMX18XI1XLw4MG4
uLiRkZGAttqyZUtmZqa/Rz/77DNyICkpKcrEW2plZWX5+fltbW3k5q5du8hD
69atMzlt5PqAdVnOXPjLHeHXZfjrnFyR/PXBsufTCccLf+XMhb9i5OK6GLla
zp07Fx0dXV9fH9BWycnJe/fu9fco/R7EihUryL8PHz4cMsGaNWvITa/XS/59
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
    "], {{0, 320.}, {644., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{644., 320.},
  PlotRange->{{0, 644.}, {0, 320.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[4]=",
 CellID->821994578,ExpressionUUID->"a02cd5bc-eebb-4df4-bd97-e88eb230c8c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"ops", "=", 
   RowBox[{"Elaborate", "[", "dya", "]"}]}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1124298624,ExpressionUUID->"8faacb1d-870c-424b-917b-3e6ae9c51002"],

Cell[BoxData["0.098658`"], "EchoTiming",
 CellID->687437727,ExpressionUUID->"aa70cf2d-882d-4e00-aef5-e0b49d5d8d40"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
0qJmZKMEku4XFRWlCX/dqFo+CTy4JzEx37jtHZFoiBWbY3rFTgZr6W+hfzoh
gokVKapVToRw342qqakZN25cfn6+/eVICrUzxhSqq6uZesmPHDt2jBnNHtdO
MDTs1J7p9zRt1hXlbrWZWyg90h/LXUPZTZufBHDdTfo7ix8rbTKoGXHE3f/6
9euIESPYxQ8ePAg9jbjdkxidb0z2DkMaYsXmGF2xsZYKrqU4nUihsbHxTz85
efIkG7OwsJD/eO/ePf3BQyHcs83r169nZWWxmR45cuT06dOnfmFiF9ZH8z2F
np4e1qpsvvv27WOD3Lp16+DBgxkZGbNmzRL8/+rawcIKbPqE3E5d0e/WwPr9
Uujvu1nrGvpu2n9fyV03ndhZPFhp+4OaGRzZdaalpWXp0qXsyjVr1oSYBidu
9ySG5hurvcOQhlixOUZXbKyl4mspTidSuHnzZtrv2LNnj/7g+oR+GsZLpT/H
jx8PZXwdTJwxslLZuXMnW3n4NNPT04uKiljLaCcbJqZXYAtnqnbqini3coy6
aecc3k7XEHfTQtf45CblnSWBBystakYWqXXm0aNHzEH22xUrVrx//z7ENBLE
7Z7ExHzjtneY0BArdmBlxcZaKriWOn06Qf+8NFycONsMC9NnjG1tbc+fPyf1
9oSdeo5VFUWIBTftv+9GsGvsYKFr4KY1vFlpUTOmaW5uzs7OvnjxYl9fn+lY
BLU12ikE52sCo+tATDT0ZsVOJibeJZBdS50+nSB+Xho6TpxthogT7ymEiJ16
jlsVRYUdN+PWI1Fhp2vgph18WmlRM6bp6uqKOoXIiNs9tglwx6WPTyt2nJFa
S0+ePPk//sf/MJcMAPrE7YwRAFnQIz4BN4EsqBkAAAB+UFVVNX78eGv/I3IA
AAAAAAAAAACAFP7rv/5r5cqVU6dO/Yd/+Id/+7d/izodAAAAAAAAAAAAxJH/
/M//PHv27J//+Z/n5+dHnQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIGR6e3vv3LkTdRZu
Aw31saMhnAJugYoFIqBO9IGG+mAfB6A/qFgAZPn27ducOXOizsJtoKE+djSE
U8AtULFABNSJPtBQH+zjAPQHFQuALOgafaChPrirAaA/qFggAupEH2ioD/Zx
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
nTlzJlvYDx8+3NHREWKeal0g+yostl0g6F1Yc0Gv6Y9p83RCPDfl90CloqSA
3SH0fBIQ3x1snk7EtguwO7jVawkGVxK60bmDpeYFIM6pU6f4h7czMzMXLly4
cePG/Px8bjRrh9+eRA15tiw7ZkNDw8iRI/k3mIU8Pb3clO8KTKiqH0VNZxOK
HT16NLGelJSUiCcjmw8nxIqtqqpiL3mmTZvG19hB/tjWWhfIvgqTzc2bLhD3
Tn8u6DWbc/wtpvuCo/B5J2p9wUHF6o9paHew/AnneHYBdge3eo0joiR0o3MH
S80LQJzHjx8XFhbyQy3O1KlTz58/n3JMJ3W2LDgm48WLF3l5eaxZWltbw5+b
Xm46dwUmVNWZi47OoSv27t27zZs386EGOS7WzMdQxXJqa2uZmDk5Oe3t7fpj
6rhTX19/9epV2WfFsws4It7pREGvhdVrOrVnui84ap93otYXqFjKu4P9v7+O
ZxdwsDuEnk/krx2gW3+iuoOl5gWgz/fv3589e3b37l1WEr+9QOFsecgx2SC5
ubmTJk168+aNVvbyDJlbEMZdgQlVFaKEonPoihUVFaUJf8mVQj4mKjYZ9tqH
jXzt2jXNMdEFdrogGUHvFKKg10Lstai+F0uwljQ/9UekL1CxlHeHAF2A3UEy
ShCDXlNQErqlEOEdLDUvgB+onS33p6amZty4cfn5+fZflAli864gLFX7Y1Nn
ccW+fv06YsQIdvGDBw9MZxWKttXV1S9evEh+5NixYyx/9rhObuiCZAx1gSHv
+oNeC9dByt/abfNTf9gdzEF5d+CgCzjYHcTxuNcCk0p6rJtzd7A0vQDEUT5b
TnD9+vWsrCw2yJEjR06fPn3qF6Sqy/Jdgb6q/bGjc2Nj459+cvLkSRarsLCQ
/3jv3r3fXt/S0rJ06VJ25Zo1a0JMYxA0te3p6WHLL1Ny3759bJBbt24dPHgw
IyNj1qxZnZ2dylmhC/oTehcY8q4/6DWOvoOyc7SP/c87YXcwB83dAV3QH+wO
g+N9rwVmlPReN4fuYOl7Aehg4syNl1N/jh8/rptueBh9XWbnxN6Ozjdv3vxt
lD179vS/+NGjR+PGjWO/XbFixfv370NMI4EJbVkx7Ny5k92J8amlp6cXFRWx
hVEnT3SBnS4w4V1/0GscfQel5mgfC++BYndwq2JNrDDoAuwOssSh10woGQfd
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
lpqDILa0trYWFxePHz8+7ScZGRlz584tKyvr6+tLuVKnv6hFsQ81BXyKogO1
mqGmLX0HTefmk8703aRWM9S0hYN2cvPJTdSMzSgm8kGdmMsH2tqMAoAgFRUV
o0aN4tU4ffr0lStXTpw4kf+4a9eulItZlVZXV/sRRYeWlpaamhpzufmkM3E3
rdWMiXzgIAf9SC2KMuhHIlGUoeagcm4+uYmasRbFUD6oE3P5QFtrUQAQ5NWr
V6NHj2blt2DBgrq6usTjlZWVkydPvn//PqL8lsuXLy9fvpxabohCMwq1fHyK
wkE/IooJfJq1T1Eo54YocY5CLR+folDLB1EAMMe6detYQebl5X3+/DnlVyF+
mMenKBzZV0M+KYAo5vBp1uhHRKEZhVo+iGIHnxRAFJpRqOXjUxRq+SAKAIZg
VZednc1qsrS0NFZRnj59un///iVLlsyePXv9+vU3btyQDSf1aoigAj5FUXZT
di4dHR0VFRXbt28vLy8XDCEFQW3tRKmvrz906FBBQcG8efOYvA0NDbLh0I90
oii7iX4kEsXOiqrf9VIQ1NmnKMRrBmsLnSjQ1lAUb+6EAWhpaeF/VVRbWxuf
KJcuXRo2bNiECRO2bNmyadMm/nGmM2fODBmCtfCPX7CuXLZs2Y8kQslNh3hG
UXZTKgrj7Nmz6enp/Pq9e/cKTUMSatraiXL58uWsrKycnJxt27ax2072lMzM
TLbPDhkC/UgwirKbUlEC9KOxKHZW1FC6vj+h5KZDPKMQrxmpKAHWFpNRoK2h
KD7dCQPQ1NTEayz574wGQvnUWiqK8umfeJTGxsbi4uJPnz7xH5ubmzMyMqZM
mTJkiLVr16YNzNu3b/Vz46idTMLNQMZNqSiMJ0+eMDvOnTtnbk2Op4MlJSWr
Vq368uUL/7Gqqoo9a+vWrUOGQD/KRqHsplSUAP3o+IqKrg9QM5JRsLa4XicB
tHW8BwMrDgLQ29vLv6P1ypUrg1+pc2otHkXn9E88Sn8WL148duxYNsLgl334
8KHxFydOnFi0aFFjEoO8cSOVm/LJJNzkCLqpFuXjx4/m1uTYOphsFuujvLy8
+fPnD/ks9KNUFOJuykbhoB/dXVH1u74/6PoUUDMKUThYW8zVCbR1twc5Rh0E
gFFYWMhqbMaMGV1dXSm/YhXb09PD/61zai0eRef0TzxKCpWVlcOHDz9w4IBg
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
JTH9xAKGP1hvPWF2MiVVwjwlSaP615OcqkDIJzh26myiL1JkWPFaMhl+jkWF
U3X2uFNU3aQfh1Fh1nlWW7ojQhXLDoZ5p8nrOtfcDPhkp4RUMf0OCCCT27dv
i64RkRMN29zcnP5+Y2NjcXHxjh07Bhwvk0+lc167dk1005w5c8Rt7sCBA52d
nZGsM6CyslL8iJil1q5dsHXr1lG/o/R/hTa0npAqaeSfkqRRvYu5VoEwT3Ds
1NlEX6TIsLqK5ByLCtfq7FmnaLtJPzriYBpqG7kK3SEvoaGSxmh32NydcK3O
nt2t0nyyU0KqmH4HBDCAY8eOBR+mysnJWbRo0bp164qKioJoiYYasPclmU/5
c9bW1opBN2vWrKBHhvkVMKV1CsSpxo0bF/z1HpvXfujQoXRvlpeXD3+whfWE
VAnQeyKsehdTXZvNCqjuS+upaNTZRF+QYVUV+TkWFc7W2YNOCeMm/eiCgwHU
1oQK3aEkoaoSYLo7bO5OWFtbMu9WATKdElLFwjsggAHcvXu3pKQk2EYLmDlz
5unTpwdv9MnPDflzBjQ0NIj7XX5+fkdHR/hzNjU1FRYWihO2tbVZvvbnz59v
2LAhONUwW6nW1hNGJeQT4cbGxgsXLhhaW8pKBdKo7ksrqYSsc+R9QYY1riVA
Zo5FhVN1TuNHpwTouUk/uuAgtaU7ol2PTw6GuRZe17nmpvz7nTAqdt4BAQzm
3bt3jx49un79ugjhUMeozg2Zc6YRE0+c/OLFiyHP+fDhw4KCgmnTpj19+jTC
dSpde2lp6SjpP4NjYT16KvafCMuvLWWlAgF6+9LyKpHUOfK+IMPyKplIzrGo
cKTOAX50SibabtKPHz2AWacnIaNCd+CgjEpq5P7CoSN1DvDjbqXxfkdDJWX3
HRCAKhHOtLq6uqampszvHD58WJxcfD/Maevr6ydNmlRUVBSmVT+K/LW/fft2
7Nix4uBbt25Fuwa99YTH5hNheexUIMy+tCrm6qzaF2RYEkNzLFroFEmsuUk/
MuvMQXeYwAMH07j8/1/gbiWPufc7g3HtHRBAJlHNjd7eXtFQubm5u3fvvnjx
4tWrV/ft25ednT137tyuri7t0166dEmcU6zw4MGDx48fP/Y7YXrk2bNn333g
6NGj4swlJSXBlzdu3Pjo8a2trUuXLhVHrlq1SltUBsv3F8tPhGWwUIFI9qWV
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
auNgBXxS0ca1zDhYWxw0tx4ctKZiYW0+uUlmrKkYWg858UzF0Hp8yom2CnjG
zz//PH78eBGSL7/88v79++nv19TUTJ8+/ebNm6iMiIpr6/FJxeW1oeKmimvr
QcUcPl21Tyourw2VJKu4th5U3FRxbT0+qYB/rF69WsSmsLDw9evXA/4pwo8z
oWIOn67atdpm4lMFUDGHT1ftk4pr60HFDj5VABU3VVxbDypuqri2Hp9UwDNE
NvLy8kRyKioqEqXy4MGDPXv2LFmyZN68eWvWrLl8+bIJlcbGxv379xcXFy9Y
sGDLli0PHz6UVJHHwdpaU+ns7KyurhaFraqqMrcqvbWh4mA/psxnxsHa2lHB
wbiraN+tXHMwzNpQcbDrvUmmgw7aUSEnSjjooOMq4B+tra3B7/40NDQkR+Xs
2bOjR4+eMmXKxo0b169fH3zo6MSJE9GqnDt3Ljc3Nz8/f/PmzWJgih/JyckR
U1r2euRwrbbWVE6ePJmVlRUcv2vXLkkJMSrfD01Ua9MmmSp2+jGlmxklXKut
HRUcjLtKmLsVczuZKu6/jmK2uKBCTlRxzUH3VcA/mpubg+Rk/jbQMOjtGSqp
aO9/yqs8e/asrKzs1atXwZctLS3Z2dkzZsyIVqW8vHzFihVv3rwJvqytrRU/
tWnTJhkVeZLpoODevXviEk6dOqV0j/jmm29GDc0vv/wSydpSHtVZ+6mHa/2Y
0s2MEsnMCQ7G3cEwdyvmtmtupjya244nU4lkppGcqJLMnKRCTC3wj76+vuAv
qZ4/f/6TB2vvGcqrhNn/VLqWASxevHjixIniDNGqZJ7w/fv3hYWFCxcuVF1b
hOvxz8GXL18qXcuvv/76bGiGeQyXzDqHeerhYD8GqGZGiWTmZDA4GJWKNQe1
71bMbdfc9Gxuu5xMJZKZxsGQkwjX401Owkwt8JKSkhKRgdmzZ3d3dw/4J5Gr
3t7e9Jdh9gwlVUJ+3kD+WjKpqakZM2bM3r17jar09PRMmDBh7dq1Q532yZMn
K1euFL0pJoA4WHIxSuvxz0Gj9wjttXlT5zBPPeRVBmC6HyUzQz8qXUsmOBih
yog4+Mm7VUgV5nbwJXM7pslktihdSybkJNr1eJMT1amlXVuIC7dv3xYZEOER
8Wtubk5/v7Gxsbi4eMeOHQOO13tdIa8S5vMGStdy7do1MbvmzJkjRuWBAwc6
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
AAAAAAAQe/4PzMyC8Q==
    "], {{0, 236.}, {709., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{709., 236.},
  PlotRange->{{0, 709.}, {0, 236.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->500571295,ExpressionUUID->"1075a64a-b2bd-40e6-a65e-e480aaf79d3d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", 
  RowBox[{"new", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ExpressionFor", "[", 
      RowBox[{"#", ",", "cc"}], "]"}], "&"}], "/@", 
    RowBox[{"Matrix", "[", 
     RowBox[{"dya", ",", "cc"}], "]"}]}]}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->66470024,ExpressionUUID->"b07bfeaf-b871-414d-a26a-c57d167e8f76"],

Cell[BoxData["3.254089`"], "EchoTiming",
 CellID->762682909,ExpressionUUID->"68f8f359-d7b8-4a7d-a6a3-683d12afe6a4"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
0qJmZKMEku4XFRWlCX/dqFo+CTy4JzEx37jtHZFoiBWbY3rFTgZr6W+hfzoh
gokVKapVToRw342qqakZN25cfn6+/eVICrUzxhSqq6uZesmPHDt2jBnNHtdO
MDTs1J7p9zRt1hXlbrWZWyg90h/LXUPZTZufBHDdTfo7ix8rbTKoGXHE3f/6
9euIESPYxQ8ePAg9jbjdkxidb0z2DkMaYsXmGF2xsZYKrqU4nUihsbHxTz85
efIkG7OwsJD/eO/ePf3BQyHcs83r169nZWWxmR45cuT06dOnfmFiF9ZH8z2F
np4e1qpsvvv27WOD3Lp16+DBgxkZGbNmzRL8/+rawcIKbPqE3E5d0e/WwPr9
Uujvu1nrGvpu2n9fyV03ndhZPFhp+4OaGRzZdaalpWXp0qXsyjVr1oSYBidu
9ySG5hurvcOQhlixOUZXbKyl4mspTidSuHnzZtrv2LNnj/7g+oR+GsZLpT/H
jx8PZXwdTJwxslLZuXMnW3n4NNPT04uKiljLaCcbJqZXYAtnqnbqini3coy6
aecc3k7XEHfTQtf45CblnSWBBystakYWqXXm0aNHzEH22xUrVrx//z7ENBLE
7Z7ExHzjtneY0BArdmBlxcZaKriWOn06Qf+8NFycONsMC9NnjG1tbc+fPyf1
9oSdeo5VFUWIBTftv+9GsGvsYKFr4KY1vFlpUTOmaW5uzs7OvnjxYl9fn+lY
BLU12ikE52sCo+tATDT0ZsVOJibeJZBdS50+nSB+Xho6TpxthogT7ymEiJ16
jlsVRYUdN+PWI1Fhp2vgph18WmlRM6bp6uqKOoXIiNs9tglwx6WPTyt2nJFa
S0+ePPk//sf/MJcMAPrE7YwRAFnQIz4BN4EsqBkAAAB+UFVVNX78eGv/I3IA
AAAAAAAAAACAFP7rv/5r5cqVU6dO/Yd/+Id/+7d/izodAAAAAAAAAAAAxJH/
/M//PHv27J//+Z/n5+dHnQsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIGR6e3vv3LkTdRZu
Aw31saMhnAJugYoFIqBO9IGG+mAfB6A/qFgAZPn27ducOXOizsJtoKE+djSE
U8AtULFABNSJPtBQH+zjAPQHFQuALOgafaChPrirAaA/qFggAupEH2ioD/Zx
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
nTlzJlvYDx8+3NHREWKeal0g+yostl0g6F1Yc0Gv6Y9p83RCPDfl90CloqSA
3SH0fBIQ3x1snk7EtguwO7jVawkGVxK60bmDpeYFIM6pU6f4h7czMzMXLly4
cePG/Px8bjRrh9+eRA15tiw7ZkNDw8iRI/k3mIU8Pb3clO8KTKiqH0VNZxOK
HT16NLGelJSUiCcjmw8nxIqtqqpiL3mmTZvG19hB/tjWWhfIvgqTzc2bLhD3
Tn8u6DWbc/wtpvuCo/B5J2p9wUHF6o9paHew/AnneHYBdge3eo0joiR0o3MH
S80LQJzHjx8XFhbyQy3O1KlTz58/n3JMJ3W2LDgm48WLF3l5eaxZWltbw5+b
Xm46dwUmVNWZi47OoSv27t27zZs386EGOS7WzMdQxXJqa2uZmDk5Oe3t7fpj
6rhTX19/9epV2WfFsws4It7pREGvhdVrOrVnui84ap93otYXqFjKu4P9v7+O
ZxdwsDuEnk/krx2gW3+iuoOl5gWgz/fv3589e3b37l1WEr+9QOFsecgx2SC5
ubmTJk168+aNVvbyDJlbEMZdgQlVFaKEonPoihUVFaUJf8mVQj4mKjYZ9tqH
jXzt2jXNMdEFdrogGUHvFKKg10Lstai+F0uwljQ/9UekL1CxlHeHAF2A3UEy
ShCDXlNQErqlEOEdLDUvgB+onS33p6amZty4cfn5+fZflAli864gLFX7Y1Nn
ccW+fv06YsQIdvGDBw9MZxWKttXV1S9evEh+5NixYyx/9rhObuiCZAx1gSHv
+oNeC9dByt/abfNTf9gdzEF5d+CgCzjYHcTxuNcCk0p6rJtzd7A0vQDEUT5b
TnD9+vWsrCw2yJEjR06fPn3qF6Sqy/Jdgb6q/bGjc2Nj459+cvLkSRarsLCQ
/3jv3r3fXt/S0rJ06VJ25Zo1a0JMYxA0te3p6WHLL1Ny3759bJBbt24dPHgw
IyNj1qxZnZ2dylmhC/oTehcY8q4/6DWOvoOyc7SP/c87YXcwB83dAV3QH+wO
g+N9rwVmlPReN4fuYOl7Aehg4syNl1N/jh8/rptueBh9XWbnxN6Ozjdv3vxt
lD179vS/+NGjR+PGjWO/XbFixfv370NMI4EJbVkx7Ny5k92J8amlp6cXFRWx
hVEnT3SBnS4w4V1/0GscfQel5mgfC++BYndwq2JNrDDoAuwOssSh10woGQfd
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
lpqDILa0trYWFxePHz8+7ScZGRlz584tKyvr6+tLuVKnv6hFsQ81BXyKogO1
mqGmLX0HTefmk8703aRWM9S0hYN2cvPJTdSMzSgm8kGdmMsH2tqMAoAgFRUV
o0aN4tU4ffr0lStXTpw4kf+4a9eulItZlVZXV/sRRYeWlpaamhpzufmkM3E3
rdWMiXzgIAf9SC2KMuhHIlGUoeagcm4+uYmasRbFUD6oE3P5QFtrUQAQ5NWr
V6NHj2blt2DBgrq6usTjlZWVkydPvn//PqL8lsuXLy9fvpxabohCMwq1fHyK
wkE/IooJfJq1T1Eo54YocY5CLR+folDLB1EAMMe6detYQebl5X3+/DnlVyF+
mMenKBzZV0M+KYAo5vBp1uhHRKEZhVo+iGIHnxRAFJpRqOXjUxRq+SAKAIZg
VZednc1qsrS0NFZRnj59un///iVLlsyePXv9+vU3btyQDSf1aoigAj5FUXZT
di4dHR0VFRXbt28vLy8XDCEFQW3tRKmvrz906FBBQcG8efOYvA0NDbLh0I90
oii7iX4kEsXOiqrf9VIQ1NmnKMRrBmsLnSjQ1lAUb+6EAWhpaeF/VVRbWxuf
KJcuXRo2bNiECRO2bNmyadMm/nGmM2fODBmCtfCPX7CuXLZs2Y8kQslNh3hG
UXZTKgrj7Nmz6enp/Pq9e/cKTUMSatraiXL58uWsrKycnJxt27ax2072lMzM
TLbPDhkC/UgwirKbUlEC9KOxKHZW1FC6vj+h5KZDPKMQrxmpKAHWFpNRoK2h
KD7dCQPQ1NTEayz574wGQvnUWiqK8umfeJTGxsbi4uJPnz7xH5ubmzMyMqZM
mTJkiLVr16YNzNu3b/Vz46idTMLNQMZNqSiMJ0+eMDvOnTtnbk2Op4MlJSWr
Vq368uUL/7Gqqoo9a+vWrUOGQD/KRqHsplSUAP3o+IqKrg9QM5JRsLa4XicB
tHW8BwMrDgLQ29vLv6P1ypUrg1+pc2otHkXn9E88Sn8WL148duxYNsLgl334
8KHxFydOnFi0aFFjEoO8cSOVm/LJJNzkCLqpFuXjx4/m1uTYOphsFuujvLy8
+fPnD/ks9KNUFOJuykbhoB/dXVH1u74/6PoUUDMKUThYW8zVCbR1twc5Rh0E
gFFYWMhqbMaMGV1dXSm/YhXb09PD/61zai0eRef0TzxKCpWVlcOHDz9w4IBg
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
JTH9xAKGP1hvPWF2MiVVwjwlSaP615OcqkDIJzh26myiL1JkWPFaMhl+jkWF
U3X2uFNU3aQfh1Fh1nlWW7ojQhXLDoZ5p8nrOtfcDPhkp4RUMf0OCCCT27dv
i64RkRMN29zcnP5+Y2NjcXHxjh07Bhwvk0+lc167dk1005w5c8Rt7sCBA52d
nZGsM6CyslL8iJil1q5dsHXr1lG/o/R/hTa0npAqaeSfkqRRvYu5VoEwT3Ds
1NlEX6TIsLqK5ByLCtfq7FmnaLtJPzriYBpqG7kK3SEvoaGSxmh32NydcK3O
nt2t0nyyU0KqmH4HBDCAY8eOBR+mysnJWbRo0bp164qKioJoiYYasPclmU/5
c9bW1opBN2vWrKBHhvkVMKV1CsSpxo0bF/z1HpvXfujQoXRvlpeXD3+whfWE
VAnQeyKsehdTXZvNCqjuS+upaNTZRF+QYVUV+TkWFc7W2YNOCeMm/eiCgwHU
1oQK3aEkoaoSYLo7bO5OWFtbMu9WATKdElLFwjsggAHcvXu3pKQk2EYLmDlz
5unTpwdv9MnPDflzBjQ0NIj7XX5+fkdHR/hzNjU1FRYWihO2tbVZvvbnz59v
2LAhONUwW6nW1hNGJeQT4cbGxgsXLhhaW8pKBdKo7ksrqYSsc+R9QYY1riVA
Zo5FhVN1TuNHpwTouUk/uuAgtaU7ol2PTw6GuRZe17nmpvz7nTAqdt4BAQzm
3bt3jx49un79ugjhUMeozg2Zc6YRE0+c/OLFiyHP+fDhw4KCgmnTpj19+jTC
dSpde2lp6SjpP4NjYT16KvafCMuvLWWlAgF6+9LyKpHUOfK+IMPyKplIzrGo
cKTOAX50SibabtKPHz2AWacnIaNCd+CgjEpq5P7CoSN1DvDjbqXxfkdDJWX3
HRCAKhHOtLq6uqampszvHD58WJxcfD/Maevr6ydNmlRUVBSmVT+K/LW/fft2
7Nix4uBbt25Fuwa99YTH5hNheexUIMy+tCrm6qzaF2RYEkNzLFroFEmsuUk/
MuvMQXeYwAMH07j8/1/gbiWPufc7g3HtHRBAJlHNjd7eXtFQubm5u3fvvnjx
4tWrV/ft25ednT137tyuri7t0166dEmcU6zw4MGDx48fP/Y7YXrk2bNn333g
6NGj4swlJSXBlzdu3Pjo8a2trUuXLhVHrlq1SltUBsv3F8tPhGWwUIFI9qWV
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
auNgBXxS0ca1zDhYWxw0tx4ctKZiYW0+uUlmrKkYWg858UzF0Hp8yom2CnjG
zz//PH78eBGSL7/88v79++nv19TUTJ8+/ebNm6iMiIpr6/FJxeW1oeKmimvr
QcUcPl21Tyourw2VJKu4th5U3FRxbT0+qYB/rF69WsSmsLDw9evXA/4pwo8z
oWIOn67atdpm4lMFUDGHT1ftk4pr60HFDj5VABU3VVxbDypuqri2Hp9UwDNE
NvLy8kRyKioqEqXy4MGDPXv2LFmyZN68eWvWrLl8+bIJlcbGxv379xcXFy9Y
sGDLli0PHz6UVJHHwdpaU+ns7KyurhaFraqqMrcqvbWh4mA/psxnxsHa2lHB
wbiraN+tXHMwzNpQcbDrvUmmgw7aUSEnSjjooOMq4B+tra3B7/40NDQkR+Xs
2bOjR4+eMmXKxo0b169fH3zo6MSJE9GqnDt3Ljc3Nz8/f/PmzWJgih/JyckR
U1r2euRwrbbWVE6ePJmVlRUcv2vXLkkJMSrfD01Ua9MmmSp2+jGlmxklXKut
HRUcjLtKmLsVczuZKu6/jmK2uKBCTlRxzUH3VcA/mpubg+Rk/jbQMOjtGSqp
aO9/yqs8e/asrKzs1atXwZctLS3Z2dkzZsyIVqW8vHzFihVv3rwJvqytrRU/
tWnTJhkVeZLpoODevXviEk6dOqV0j/jmm29GDc0vv/wSydpSHtVZ+6mHa/2Y
0s2MEsnMCQ7G3cEwdyvmtmtupjya244nU4lkppGcqJLMnKRCTC3wj76+vuAv
qZ4/f/6TB2vvGcqrhNn/VLqWASxevHjixIniDNGqZJ7w/fv3hYWFCxcuVF1b
hOvxz8GXL18qXcuvv/76bGiGeQyXzDqHeerhYD8GqGZGiWTmZDA4GJWKNQe1
71bMbdfc9Gxuu5xMJZKZxsGQkwjX401Owkwt8JKSkhKRgdmzZ3d3dw/4J5Gr
3t7e9Jdh9gwlVUJ+3kD+WjKpqakZM2bM3r17jar09PRMmDBh7dq1Q532yZMn
K1euFL0pJoA4WHIxSuvxz0Gj9wjttXlT5zBPPeRVBmC6HyUzQz8qXUsmOBih
yog4+Mm7VUgV5nbwJXM7pslktihdSybkJNr1eJMT1amlXVuIC7dv3xYZEOER
8Wtubk5/v7Gxsbi4eMeOHQOO13tdIa8S5vMGStdy7do1MbvmzJkjRuWBAwc6
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
AAAAAAAQe/4PzMyC8Q==
    "], {{0, 236.}, {709., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    RasterInterpolation->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{709., 236.},
  PlotRange->{{0, 709.}, {0, 236.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[6]=",
 CellID->1408309766,ExpressionUUID->"eae3fab6-b1f9-4a0d-8d67-0b5e802dc512"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"new", "-", "ops"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->1934521111,ExpressionUUID->"f4f43e67-5d6a-4e01-9cc4-909867e76c34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellLabel->"Out[7]=",
 CellID->388653685,ExpressionUUID->"8d332fcd-9145-4e3b-8450-474a5ba6d072"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Projector"]], "paclet:Q3/ref/Projector", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "4db5f775-0459-4d0a-91a2-57aba9ac24ca"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Elaborate"]], "paclet:Q3/ref/Elaborate", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "3435caed-87a7-4bfb-8e6f-f89aed2c1091"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Matrix"]], "paclet:Q3/ref/Matrix", "Q3 Package Symbol"},
          
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "04f06e39-29bf-4ac6-916b-d69343ebbd1e"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["DyadForm"]], "paclet:Q3/ref/DyadForm", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "13ecc4ed-08c5-4852-ac01-16899e24e23b"]
       }], "SeeAlso",ExpressionUUID->"20cf148d-fe39-4ea3-849b-e71d592a3936"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"ba24f130-ccbe-4fb4-a233-\
206f08ce7079"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTutorial.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox["Tutorials", "TutorialsSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum States"]], "paclet:Q3/tutorial/QuantumStates"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "c873402f-60d7-4430-b1f3-70583db8ee90"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems with Q3"]], 
           "paclet:Q3/tutorial/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "f3279b97-93d6-4da3-a11a-9f7197f7f71d"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Q3: Quick Start"]], "paclet:Q3/tutorial/Q3QuickStart"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "39e6d989-f42c-45a8-b461-3dd99d74339d"]}]}
     }]}
  }]], "TutorialsSection",ExpressionUUID->"525d1316-b983-432b-a23e-\
e8a578007ae2"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems"]], 
           "paclet:Q3/guide/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "1d9a2f4a-9aef-4f01-8a1d-29e5a65e673c"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Q3"]], "paclet:Q3/guide/Q3"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "46605632-4df1-4161-b300-fe1661d36a39"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"81b36e56-5618-4a8a-ad7f-\
5f71b1b506ec"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[Cell[BoxData[
        RowBox[{
         TemplateBox[{16},
          "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
          TemplateBox[{
            Cell[
             TextData[
              Cell[
               TextData[{
                 Cell[
                  BoxData[
                   TemplateBox[{2}, "Spacer1"]]], 
                 "Wikipedia, \"Dyadics\""}]]]], 
            "https://en.wikipedia.org/wiki/Dyadics"},
           "WebLink",
           BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
          "fb6dd681-2d71-485b-aa9b-49928798d22c"]}]],ExpressionUUID->
        "ba64c3e7-b63c-4793-9753-1f01d792e8b0"]], "RelatedLinks",
        ExpressionUUID->"237576be-8236-4f71-8f63-94369be650e1"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "Mahn-Soo Choi (2022)"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "f329de7c-2438-4bf8-bc79-660dd844e7de"]}]],ExpressionUUID->
         "5b0d7320-5fcf-4a06-a9fb-c609dca7ddb0"],
        ", A Quantum Computation Workbook (Springer)."
       }], "RelatedLinks",ExpressionUUID->
        "b340a1df-ac90-4631-9098-5ffaf902e697"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"4cb3fa10-a8a6-408c-8a17-\
ae98b1f38c2f"],

Cell[" ", "FooterCell",ExpressionUUID->"d46386a6-cd7e-45ec-bbdc-7c9d4e48fb48"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"Dyad",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Open, "2" -> Open, "4" -> Open}, 
    "AllOptsTable" -> Closed, "NotesSection" -> Closed, 
    "ExampleSubsection" -> {"0" -> Open, "1" -> Open}}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "HasOptions" -> 
  True, "RootCaptions" -> "", "HeaderCoreAreaLink" -> {}, 
  "Metadata" -> {
   "built" -> "{2024, 3, 30, 1, 5, 0.929754}", 
    "history" -> {"12", "13.2", "", ""}, "context" -> "Q3`", 
    "keywords" -> {"dyadic product", "linear algebra"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Q3 Symbol", "language" -> "en", "paclet" -> "Q3", "status" -> 
    "None", "summary" -> 
    "Dyad[{u1, u2, ...}, {v1, v2, ...}] returns the dyadic product of two \
vectors {u1, u2, ...} and {v1, v2, ...}; in other words, it is equivalent to \
KroneckerProduct[{u1, u2, ...}, Conjugate[{v1, v2, ...}]]. Dyad[<|a1 -> u1, \
a2 -> u2, ...|>, <|b1 -> v1, b2 -> v2, ...|>] represents the dyadic product \
of two vectors Ket[<|a1 -> u1, a2 -> u2, ...|>] and Ket[<|b1 -> v1, b2 -> v2, \
...|>]; that is, Ket[<|a1 -> u1, a2 -> u2, ...|>] ** Bra[<|b1 -> v1, b2 -> \
v2, ...|>] acting on system {a1, a2, ...} from the right and on system {b1, \
b2, ...} from the left. Dyad[expr1, expr2, {s1, s2, ...}] returns the dyadic \
product of two vectors expressed by expr1 and expr2, respectively, that acts \
on system {s1, s2, ...} from both the left and right. Dyad[expr1, expr2, {a1, \
a2, ...}, {b1, b2, ...}] returns the dyadic product of two vectors expressed \
by expr1 and expre2, respectively, that acts on system {a1, a2, ...} from the \
right and system {b1, b2, ...} from the left.", "synonyms" -> {}, 
    "tabletags" -> {}, "title" -> "Dyad", "titlemodifier" -> "", 
    "metadescription" -> "", "windowtitle" -> "Dyad", "type" -> "Symbol", 
    "uri" -> "Q3/ref/Dyad"}},
CellContext->"Global`",
FrontEndVersion->"14.0 for Mac OS X ARM (64-bit) (December 12, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "14.0 for Mac OS X ARM (64-bit) (December 12, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"52f62a62-1d03-4896-9942-4fe9d0d4b2a6"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[26386, 752, 1391, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"ef5cfdea-4344-49c2-bb79-9ee026ba5c3a",
   CellTags->"PrimaryExamplesSection",
   CellID->1774443724]},
 "RasterizedOutput"->{
  Cell[43874, 1318, 5155, 91, 41, "Output",ExpressionUUID->"d7bb26b9-a7c9-4182-8ae9-fe5affc40d4a",
   CellTags->"RasterizedOutput",
   CellID->1373279182],
  Cell[50704, 1461, 5728, 100, 41, "Output",ExpressionUUID->"59c7bdd2-3070-452b-876d-16f896dccc50",
   CellTags->"RasterizedOutput",
   CellID->1696457565],
  Cell[60770, 1699, 5154, 91, 41, "Output",ExpressionUUID->"57e04c86-c9d1-4efe-b5a9-4bfd8a5be719",
   CellTags->"RasterizedOutput",
   CellID->221913736],
  Cell[72741, 2016, 5155, 91, 41, "Output",ExpressionUUID->"5b009915-62f7-46ca-8a81-8cd5f2960c66",
   CellTags->"RasterizedOutput",
   CellID->1672549760],
  Cell[78248, 2123, 5155, 91, 41, "Output",ExpressionUUID->"58838388-f4cd-4f50-aedf-a74f8a6025c5",
   CellTags->"RasterizedOutput",
   CellID->2130360737],
  Cell[84082, 2242, 6017, 105, 41, "Output",ExpressionUUID->"f039646d-29b6-408b-8aae-f1467a82230b",
   CellTags->"RasterizedOutput",
   CellID->2125543975],
  Cell[90462, 2363, 6016, 105, 41, "Output",ExpressionUUID->"d7847dc4-fdb1-42fb-b38e-d3c3cb5e2d8e",
   CellTags->"RasterizedOutput",
   CellID->627119980],
  Cell[120206, 3139, 7085, 122, 62, "Output",ExpressionUUID->"499c141d-fb9b-4344-b664-088ec0d50d65",
   CellTags->"RasterizedOutput",
   CellID->155764384],
  Cell[127294, 3263, 7041, 122, 62, "Output",ExpressionUUID->"252c1fef-4857-44ae-b721-48d24c0fbbf4",
   CellTags->"RasterizedOutput",
   CellID->149436195],
  Cell[148461, 3757, 17379, 291, 116, "Output",ExpressionUUID->"b48b9159-1720-4cdd-a23f-ec9749d1f4e4",
   CellTags->"RasterizedOutput",
   CellID->1165746022],
  Cell[165843, 4050, 36146, 599, 234, "Output",ExpressionUUID->"00a100f5-ea7f-48a3-8fe4-02a725ad7d33",
   CellTags->"RasterizedOutput",
   CellID->1200080173],
  Cell[206730, 4782, 17378, 291, 116, "Output",ExpressionUUID->"80e30244-d9a0-44fb-a30a-b0f8e4764a38",
   CellTags->"RasterizedOutput",
   CellID->581054987],
  Cell[267695, 6324, 10450, 178, 61, "Output",ExpressionUUID->"0e96c4fd-47f9-4bb2-91be-77288490e098",
   CellTags->"RasterizedOutput",
   CellID->1183023600],
  Cell[278363, 6513, 10856, 184, 61, "Output",ExpressionUUID->"5533c9cf-205b-4b60-b316-4f04ab52fc99",
   CellTags->"RasterizedOutput",
   CellID->1674041274],
  Cell[295131, 6881, 5618, 98, 41, "Output",ExpressionUUID->"69c7ba80-dfc6-49fd-9f7b-da4938a35934",
   CellTags->"RasterizedOutput",
   CellID->1428432771],
  Cell[300752, 6981, 4987, 88, 41, "Output",ExpressionUUID->"cbbffe80-ee89-4de1-9e04-1c4f396f9bf5",
   CellTags->"RasterizedOutput",
   CellID->949892384],
  Cell[305984, 7081, 6414, 111, 41, "Output",ExpressionUUID->"83a133f6-9813-4df3-aa80-4d93a13297af",
   CellTags->"RasterizedOutput",
   CellID->447866090],
  Cell[313110, 7219, 6414, 111, 41, "Output",ExpressionUUID->"5878c19a-8447-430e-9c25-6ae9ef0b176d",
   CellTags->"RasterizedOutput",
   CellID->355191895],
  Cell[325240, 7507, 5618, 98, 41, "Output",ExpressionUUID->"1f660e37-ba82-48e3-ae1d-be2e36a8ddb7",
   CellTags->"RasterizedOutput",
   CellID->1853124252],
  Cell[330861, 7607, 4959, 88, 41, "Output",ExpressionUUID->"d6c73ea9-878d-4535-840f-062330ec1423",
   CellTags->"RasterizedOutput",
   CellID->503970923],
  Cell[336064, 7707, 34233, 567, 141, "Output",ExpressionUUID->"ac081a67-bf30-4407-a4f5-7acf31288859",
   CellTags->"RasterizedOutput",
   CellID->563799093],
  Cell[371042, 8302, 34234, 567, 141, "Output",ExpressionUUID->"73afe988-15cf-4bc3-bf53-fb3e287020d3",
   CellTags->"RasterizedOutput",
   CellID->1073505487],
  Cell[432443, 9686, 23109, 385, 101, "Output",ExpressionUUID->"8cff4f2a-2024-47b5-b8ce-2f774440e93b",
   CellTags->"RasterizedOutput",
   CellID->1396601562],
  Cell[467383, 10387, 5646, 99, 41, "Output",ExpressionUUID->"0cf1590a-aff7-47de-8d05-c7f66eb3b1b6",
   CellTags->"RasterizedOutput",
   CellID->686190824],
  Cell[473385, 10502, 77116, 1270, 341, "Output",ExpressionUUID->"a02cd5bc-eebb-4df4-bd97-e88eb230c8c4",
   CellTags->"RasterizedOutput",
   CellID->821994578],
  Cell[550912, 11788, 49634, 820, 253, "Output",ExpressionUUID->"1075a64a-b2bd-40e6-a65e-e480aaf79d3d",
   CellTags->"RasterizedOutput",
   CellID->500571295],
  Cell[601096, 12629, 49635, 820, 253, "Output",ExpressionUUID->"eae3fab6-b1f9-4a0d-8d67-0b5e802dc512",
   CellTags->"RasterizedOutput",
   CellID->1408309766]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 661775, 13731},
 {"RasterizedOutput", 661976, 13735}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[576, 21, 7058, 174, 57, "AnchorBarGrid",ExpressionUUID->"c7c9b44c-0884-4420-b7c6-acdf46e08b89",
 CellID->1],
Cell[7637, 197, 85, 0, 23, "ContextNameCell",ExpressionUUID->"0704c5ac-90cc-41a0-b31e-a22d37a6332e"],
Cell[CellGroupData[{
Cell[7747, 201, 547, 14, 60, "ObjectNameGrid",ExpressionUUID->"ab46ad79-4245-467c-8fab-9dccc9cb31c1"],
Cell[8297, 217, 14147, 418, 464, "Usage",ExpressionUUID->"52fbda19-a586-4bc7-9907-b9812a75ca26"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22481, 640, 1898, 47, 37, "NotesSection",ExpressionUUID->"655c5105-1de6-4f24-96a7-25ed5c74a93d",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->483471475],
Cell[24382, 689, 1877, 57, 70, "Notes",ExpressionUUID->"642d9c18-4b19-435b-92db-c716b0015382",
 CellID->1025582183]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[26386, 752, 1391, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"ef5cfdea-4344-49c2-bb79-9ee026ba5c3a",
 CellTags->"PrimaryExamplesSection",
 CellID->1774443724],
Cell[27780, 791, 192, 3, 31, "Input",ExpressionUUID->"afc63199-f5c9-4063-a957-afb56722ceb5",
 CellID->1927565408],
Cell[CellGroupData[{
Cell[27997, 798, 1367, 36, 31, "ExampleSection",ExpressionUUID->"8b0826fa-42ed-46ad-943e-4cd0f2ce4a24",
 CellID->970263379],
Cell[29367, 836, 455, 12, 40, "ExampleText",ExpressionUUID->"df027f6c-d7bd-40f4-98c2-5a1aa1ad8459",
 CellID->711353346],
Cell[CellGroupData[{
Cell[29847, 852, 553, 15, 84, "Input",ExpressionUUID->"941f13c5-b4c0-4a6d-98c4-9789a3834307",
 CellID->683624071],
Cell[30403, 869, 213, 5, 37, "Output",ExpressionUUID->"8f0b6374-0eb4-41d6-8cef-acf8b4656185",
 CellID->1401126832],
Cell[30619, 876, 194, 4, 37, "Output",ExpressionUUID->"83422560-3902-4fee-a7eb-540a8b8bb279",
 CellID->1580476069],
Cell[30816, 882, 867, 26, 82, "Output",ExpressionUUID->"ab3757f8-03a9-426e-a9ee-681692c70446",
 CellID->836061940]
}, Open  ]],
Cell[31698, 911, 461, 12, 70, "ExampleText",ExpressionUUID->"c8d3a1bd-46cc-4371-b463-130c9c7a9e8b",
 CellID->132858231],
Cell[CellGroupData[{
Cell[32184, 927, 459, 12, 70, "Input",ExpressionUUID->"10eb068c-d0c7-479e-bc46-8ff0c6cb4dbc",
 CellID->1940702456],
Cell[32646, 941, 868, 26, 82, "Output",ExpressionUUID->"5fbda443-7046-487e-9dbf-739210908fac",
 CellID->1930126730],
Cell[33517, 969, 625, 18, 82, "Output",ExpressionUUID->"447b308a-95cb-42c1-9173-75c4666e76c6",
 CellID->1899463175]
}, Open  ]],
Cell[CellGroupData[{
Cell[34179, 992, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"fb5f7c67-a610-472a-bbba-16e398397544",
 CellID->1200765697],
Cell[34425, 999, 673, 19, 70, "ExampleText",ExpressionUUID->"ebcfacdb-f93c-4163-b037-aef713baf074",
 CellID->217886903],
Cell[CellGroupData[{
Cell[35123, 1022, 489, 14, 70, "Input",ExpressionUUID->"abb9c8b7-e3cf-4e8f-ad7c-c4c14af2f1e2",
 CellID->1701922151],
Cell[35615, 1038, 252, 8, 41, "Output",ExpressionUUID->"a2ab1ec1-c56b-4fe4-a974-4fda0e1bdfef",
 CellID->1670077482],
Cell[35870, 1048, 277, 9, 41, "Output",ExpressionUUID->"85e74e37-c7a6-43b6-a7e1-a48a2fa3ed72",
 CellID->1380973684]
}, Open  ]],
Cell[CellGroupData[{
Cell[36184, 1062, 236, 6, 70, "Input",ExpressionUUID->"c42e932e-7802-40a5-b29e-54ca76ace508",
 CellID->552373578],
Cell[36423, 1070, 804, 28, 41, "Output",ExpressionUUID->"fc943841-c33b-42e1-b794-08676e0b5d53",
 CellID->1210291622]
}, Open  ]],
Cell[CellGroupData[{
Cell[37264, 1103, 222, 5, 70, "Input",ExpressionUUID->"2a0061c0-75c8-4c44-81a6-6363b94ec2e6",
 CellID->587658316],
Cell[37489, 1110, 818, 24, 66, "Output",ExpressionUUID->"1378b2b6-21d4-497b-a508-f9c2dc22d810",
 CellID->1967166679]
}, Open  ]],
Cell[CellGroupData[{
Cell[38344, 1139, 193, 4, 70, "Input",ExpressionUUID->"ec2606c7-af22-4d39-a8c6-5a0c03aa2143",
 CellID->2042304589],
Cell[38540, 1145, 506, 16, 52, "Output",ExpressionUUID->"ce50b9d0-0d89-4810-9f28-dd83b2535893",
 CellID->214966291]
}, Open  ]],
Cell[CellGroupData[{
Cell[39083, 1166, 420, 11, 70, "Input",ExpressionUUID->"6fe26931-3730-4781-864e-42b3e091baac",
 CellID->366221925],
Cell[39506, 1179, 507, 16, 52, "Output",ExpressionUUID->"42af87ed-654a-43ae-a438-1f2a2006c401",
 CellID->2132044218]
}, Open  ]],
Cell[CellGroupData[{
Cell[40050, 1200, 218, 5, 70, "Input",ExpressionUUID->"76cc2f33-91ec-4c39-9b1b-0e8b3caab568",
 CellID->2113193738],
Cell[40271, 1207, 126, 2, 37, "Output",ExpressionUUID->"8a482bb2-b49a-4e5a-84fe-1752ee613abf",
 CellID->138402464]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40446, 1215, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"c8792721-5011-4415-a1af-e7a05b124215",
 CellID->2126852329],
Cell[40692, 1222, 143, 1, 70, "ExampleText",ExpressionUUID->"74f9f26f-f88d-48eb-8efd-9370c1a1358e",
 CellID->1975086875],
Cell[40838, 1225, 209, 5, 70, "Input",ExpressionUUID->"4ed49eb2-3f4f-45e7-b836-420ba304f42f",
 CellID->1321988934],
Cell[41050, 1232, 155, 1, 70, "ExampleText",ExpressionUUID->"5bf7f68a-cb80-42ea-8dba-81ede048abdd",
 CellID->1945755543],
Cell[CellGroupData[{
Cell[41230, 1237, 618, 20, 70, "Input",ExpressionUUID->"68b0a3e7-ef7e-443e-8c68-122ba1d4c774",
 CellID->1858232418],
Cell[41851, 1259, 1662, 43, 41, "Output",ExpressionUUID->"d0e47779-f402-4ad4-9f07-777826201848",
 CellID->1181978303]
}, Open  ]],
Cell[CellGroupData[{
Cell[43550, 1307, 321, 9, 70, "Input",ExpressionUUID->"1ce125ea-e29b-43b6-a2ff-60551d76cf5f",
 CellID->40233771],
Cell[43874, 1318, 5155, 91, 41, "Output",ExpressionUUID->"d7bb26b9-a7c9-4182-8ae9-fe5affc40d4a",
 CellTags->"RasterizedOutput",
 CellID->1373279182]
}, Open  ]],
Cell[49044, 1412, 157, 2, 70, "ExampleText",ExpressionUUID->"bbb595ca-a2b2-4b2f-ab7a-679836477d5f",
 CellID->173157041],
Cell[CellGroupData[{
Cell[49226, 1418, 188, 4, 70, "Input",ExpressionUUID->"96ca909b-3b60-4154-953b-c7b7cb5526ed",
 CellID->273380634],
Cell[49417, 1424, 427, 7, 101, "Output",ExpressionUUID->"f8226ef4-e8a9-4da6-887f-9eff93523f57",
 CellID->1143271578]
}, Open  ]],
Cell[49859, 1434, 396, 9, 70, "ExampleText",ExpressionUUID->"307ba477-8e98-4529-a117-8c0544431510",
 CellID->131285690],
Cell[CellGroupData[{
Cell[50280, 1447, 421, 12, 70, "Input",ExpressionUUID->"df499ccd-18f7-4215-9e61-51209ec4dd50",
 CellID->929583880],
Cell[50704, 1461, 5728, 100, 41, "Output",ExpressionUUID->"59c7bdd2-3070-452b-876d-16f896dccc50",
 CellTags->"RasterizedOutput",
 CellID->1696457565]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56481, 1567, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a8e13562-ebba-4573-9a31-e07397fbc220",
 CellID->1119508851],
Cell[56727, 1574, 209, 5, 70, "Input",ExpressionUUID->"fcfa702f-11c8-4ae9-bef4-d37df14fe933",
 CellID->1458297143],
Cell[56939, 1581, 1245, 36, 70, "ExampleText",ExpressionUUID->"1cda63e6-7e1e-4aeb-ab97-99abc79d15df",
 CellID->2007253971],
Cell[CellGroupData[{
Cell[58209, 1621, 618, 20, 70, "Input",ExpressionUUID->"40b29b9d-7ce1-439d-a821-18541968a46f",
 CellID->2111775373],
Cell[58830, 1643, 1662, 43, 41, "Output",ExpressionUUID->"afdee30e-8f83-4020-a0ce-0c98655048c3",
 CellID->1420174807]
}, Open  ]],
Cell[CellGroupData[{
Cell[60529, 1691, 238, 6, 70, "Input",ExpressionUUID->"699ca0e2-ea61-44a3-97be-e6265ef5729b",
 CellID->1859960351],
Cell[60770, 1699, 5154, 91, 41, "Output",ExpressionUUID->"57e04c86-c9d1-4efe-b5a9-4bfd8a5be719",
 CellTags->"RasterizedOutput",
 CellID->221913736]
}, Open  ]],
Cell[CellGroupData[{
Cell[65961, 1795, 184, 4, 70, "Input",ExpressionUUID->"1500a6a2-c781-48cd-8148-a6c02cefdc5f",
 CellID->798866213],
Cell[66148, 1801, 426, 7, 101, "Output",ExpressionUUID->"7bcff49c-6152-4840-b2cc-6b495b46e29b",
 CellID->208383122]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66623, 1814, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"70cd8873-4336-49bc-8484-2906064746c7",
 CellID->609585336],
Cell[66868, 1821, 209, 5, 70, "Input",ExpressionUUID->"178699b7-1b0d-4ebd-9a35-c1727b1347cd",
 CellID->1601217490],
Cell[67080, 1828, 2537, 88, 70, "ExampleText",ExpressionUUID->"52256074-b402-4552-adf1-2c014f23deea",
 CellID->1792993793],
Cell[69620, 1918, 176, 3, 70, "ExampleText",ExpressionUUID->"e276eb7e-f250-4840-a7c8-bc1eac243e27",
 CellID->550720435],
Cell[CellGroupData[{
Cell[69821, 1925, 618, 20, 70, "Input",ExpressionUUID->"8780a9ab-91d9-4804-85bd-3fe5a5140cbd",
 CellID->1055833258],
Cell[70442, 1947, 1662, 43, 41, "Output",ExpressionUUID->"12ef0b9a-24fb-4531-b8c4-fb434d42dd58",
 CellID->1339138721]
}, Open  ]],
Cell[72119, 1993, 271, 8, 70, "ExampleText",ExpressionUUID->"217d5c5b-a499-448d-9915-1fc0786d0716",
 CellID->188970509],
Cell[CellGroupData[{
Cell[72415, 2005, 323, 9, 70, "Input",ExpressionUUID->"e266a191-0373-4cb0-a47e-5292a8ab32aa",
 CellID->1612816608],
Cell[72741, 2016, 5155, 91, 41, "Output",ExpressionUUID->"5b009915-62f7-46ca-8a81-8cd5f2960c66",
 CellTags->"RasterizedOutput",
 CellID->1672549760]
}, Open  ]],
Cell[CellGroupData[{
Cell[77933, 2112, 312, 9, 70, "Input",ExpressionUUID->"afe0157f-d01e-42c8-8f16-1508a3f0e8e5",
 CellID->259061264],
Cell[78248, 2123, 5155, 91, 41, "Output",ExpressionUUID->"58838388-f4cd-4f50-aedf-a74f8a6025c5",
 CellTags->"RasterizedOutput",
 CellID->2130360737]
}, Open  ]],
Cell[83418, 2217, 303, 10, 70, "ExampleText",ExpressionUUID->"ec96e0dc-4da3-4bfd-b404-a74e4157f0d8",
 CellID->99245921],
Cell[CellGroupData[{
Cell[83746, 2231, 333, 9, 70, "Input",ExpressionUUID->"f4f076ea-b227-4707-9233-8b5c228ab4d0",
 CellID->536040056],
Cell[84082, 2242, 6017, 105, 41, "Output",ExpressionUUID->"f039646d-29b6-408b-8aae-f1467a82230b",
 CellTags->"RasterizedOutput",
 CellID->2125543975]
}, Open  ]],
Cell[CellGroupData[{
Cell[90136, 2352, 323, 9, 70, "Input",ExpressionUUID->"875cc6e7-8aec-4c4c-81e9-8a1954a16163",
 CellID->2100320132],
Cell[90462, 2363, 6016, 105, 41, "Output",ExpressionUUID->"d7847dc4-fdb1-42fb-b38e-d3c3cb5e2d8e",
 CellTags->"RasterizedOutput",
 CellID->627119980]
}, Open  ]],
Cell[96493, 2471, 151, 1, 70, "ExampleText",ExpressionUUID->"43170d46-fd58-4f32-8ef1-fa6f4525b39c",
 CellID->290895411],
Cell[CellGroupData[{
Cell[96669, 2476, 353, 10, 70, "Input",ExpressionUUID->"96a25780-08c9-43a7-b2f0-816dc9ec9282",
 CellID->782459243],
Cell[97025, 2488, 830, 21, 41, "Output",ExpressionUUID->"27ed56e0-0334-42fa-9779-4fa221a7e7e1",
 CellID->1409172965]
}, Open  ]],
Cell[97870, 2512, 205, 5, 70, "ExampleText",ExpressionUUID->"fa006379-9bb1-4ed4-aca8-9fe9d66548a5",
 CellID->1344322737],
Cell[CellGroupData[{
Cell[98100, 2521, 178, 4, 70, "Input",ExpressionUUID->"220c597c-b170-43c7-8023-0efa674cf425",
 CellID->1044640710],
Cell[98281, 2527, 2216, 54, 41, "Output",ExpressionUUID->"bbc0a84b-3bac-424b-9626-e015c886b6f9",
 CellID->701415585]
}, Open  ]],
Cell[100512, 2584, 687, 19, 70, "ExampleText",ExpressionUUID->"8685ff6f-cd68-40ef-a297-e8aee44fcebe",
 CellID->1996260642],
Cell[CellGroupData[{
Cell[101224, 2607, 178, 4, 70, "Input",ExpressionUUID->"f3b5924f-257b-4bfd-b5b3-4a8652b45aad",
 CellID->810190654],
Cell[101405, 2613, 125, 2, 37, "Output",ExpressionUUID->"d429b251-3065-40c7-8662-7169e17e406c",
 CellID->67141302]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[101691, 2624, 1358, 36, 70, "ExampleSection",ExpressionUUID->"d53aec1a-8cd4-4339-9786-9b9f0b314238",
 CellID->933922142],
Cell[103052, 2662, 193, 6, 70, "ExampleText",ExpressionUUID->"d8aff9d4-0f41-4fe3-ba33-2fca2bdb01e6",
 CellID->1509904446],
Cell[103248, 2670, 209, 5, 70, "Input",ExpressionUUID->"067b2169-413d-4c2b-85ba-36119245ec4f",
 CellID->1450531086],
Cell[CellGroupData[{
Cell[103482, 2679, 863, 28, 70, "Input",ExpressionUUID->"25da8194-493d-49e0-bad5-f144355b3d23",
 CellID->841601658],
Cell[104348, 2709, 829, 21, 41, "Output",ExpressionUUID->"c914d94f-a83d-49c3-b759-78e2657a15ea",
 CellID->283018031],
Cell[105180, 2732, 1641, 42, 41, "Output",ExpressionUUID->"167e34f9-87d5-4045-bb92-ab878eb913f5",
 CellID->7768912]
}, Open  ]],
Cell[CellGroupData[{
Cell[106858, 2779, 583, 16, 70, "Input",ExpressionUUID->"e7edb8f7-3790-464c-8a3a-8778fec6dcc2",
 CellID->2046474957],
Cell[107444, 2797, 3709, 84, 41, "Output",ExpressionUUID->"36e7c823-6cff-44bf-89aa-6ef5709daa5e",
 CellID->1683494573],
Cell[111156, 2883, 127, 2, 37, "Output",ExpressionUUID->"951dd131-7350-41bf-a674-c86ab09dd7d5",
 CellID->1396239186],
Cell[111286, 2887, 871, 22, 41, "Output",ExpressionUUID->"4f851eaf-daae-4a8a-8f65-809fdd07c357",
 CellID->1038188333]
}, Open  ]],
Cell[CellGroupData[{
Cell[112194, 2914, 185, 4, 70, "Input",ExpressionUUID->"2188eccd-8dd0-4130-a951-6f2d689ca222",
 CellID->207478467],
Cell[112382, 2920, 5013, 125, 52, "Output",ExpressionUUID->"f27a1253-9d85-4838-85b5-725694ff4862",
 CellID->307917139]
}, Open  ]],
Cell[CellGroupData[{
Cell[117432, 3050, 792, 23, 70, "Input",ExpressionUUID->"950f3eae-3db2-4f7d-909b-12769b9fb635",
 CellID->13067883],
Cell[118227, 3075, 773, 22, 100, "Output",ExpressionUUID->"f5bc02d0-b293-4ad4-aabb-76fe1b370694",
 CellID->1067060809],
Cell[119003, 3099, 772, 22, 100, "Output",ExpressionUUID->"3e744f28-fa47-41c8-b1fe-962cd7c271e9",
 CellID->455080766]
}, Open  ]],
Cell[CellGroupData[{
Cell[119812, 3126, 391, 11, 70, "Input",ExpressionUUID->"77e19433-de6e-4f6f-897b-65d5e31b4eda",
 CellID->1985854257],
Cell[120206, 3139, 7085, 122, 62, "Output",ExpressionUUID->"499c141d-fb9b-4344-b664-088ec0d50d65",
 CellTags->"RasterizedOutput",
 CellID->155764384],
Cell[127294, 3263, 7041, 122, 62, "Output",ExpressionUUID->"252c1fef-4857-44ae-b721-48d24c0fbbf4",
 CellTags->"RasterizedOutput",
 CellID->149436195]
}, Open  ]],
Cell[CellGroupData[{
Cell[134372, 3390, 258, 7, 70, "Input",ExpressionUUID->"b8cd3308-b6af-4f12-a35f-99e2d3fb7480",
 CellID->1487912646],
Cell[134633, 3399, 5454, 118, 41, "Output",ExpressionUUID->"26ae0749-7fca-4f7c-aab3-fef080546fef",
 CellID->400884947]
}, Open  ]],
Cell[CellGroupData[{
Cell[140124, 3522, 178, 4, 70, "Input",ExpressionUUID->"6d10e783-c79b-46c9-aea0-3e204aa32ef5",
 CellID->449388957],
Cell[140305, 3528, 1699, 45, 41, "Output",ExpressionUUID->"ac0dd5b1-3758-4821-8243-31728bd9df9a",
 CellID->1574779555]
}, Open  ]],
Cell[CellGroupData[{
Cell[142041, 3578, 246, 7, 70, "Input",ExpressionUUID->"b1c58316-00fe-4ba6-8767-f3aef2d8301d",
 CellID->812754911],
Cell[142290, 3587, 1703, 42, 62, "Output",ExpressionUUID->"22622d43-f8ab-4d28-9834-4e43857a4280",
 CellID->108480559]
}, Open  ]],
Cell[CellGroupData[{
Cell[144030, 3634, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"72ea7927-7150-453b-a498-442e8092c089",
 CellID->1883465645],
Cell[CellGroupData[{
Cell[144298, 3643, 334, 10, 70, "Input",ExpressionUUID->"abcde123-c8b7-4a16-bb8d-b6378325f053",
 CellID->2140438801],
Cell[144635, 3655, 3279, 80, 62, "Output",ExpressionUUID->"6c718933-6fa0-4d9b-aeef-08935135cdc8",
 CellID->1786376866]
}, Open  ]],
Cell[CellGroupData[{
Cell[147951, 3740, 507, 15, 70, "Input",ExpressionUUID->"48d59f98-da0f-4f2d-a9e1-abbc4cb41b97",
 CellID->1158246954],
Cell[148461, 3757, 17379, 291, 116, "Output",ExpressionUUID->"b48b9159-1720-4cdd-a23f-ec9749d1f4e4",
 CellTags->"RasterizedOutput",
 CellID->1165746022],
Cell[165843, 4050, 36146, 599, 234, "Output",ExpressionUUID->"00a100f5-ea7f-48a3-8fe4-02a725ad7d33",
 CellTags->"RasterizedOutput",
 CellID->1200080173]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[202038, 4655, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"747d02ff-fea9-4e33-abd3-a9de026af949",
 CellID->30565064],
Cell[202282, 4662, 569, 15, 70, "ExampleText",ExpressionUUID->"25b8644b-2872-42a6-a765-070e107083b0",
 CellID->1843799028],
Cell[CellGroupData[{
Cell[202876, 4681, 569, 17, 70, "Input",ExpressionUUID->"3ce90f24-3ed5-40c3-a28b-d3c816cbecfe",
 CellID->541237386],
Cell[203448, 4700, 3279, 80, 62, "Output",ExpressionUUID->"845fce03-ec11-49d9-82b9-349307852f1d",
 CellID->1225954784],
Cell[206730, 4782, 17378, 291, 116, "Output",ExpressionUUID->"80e30244-d9a0-44fb-a30a-b0f8e4764a38",
 CellTags->"RasterizedOutput",
 CellID->581054987]
}, Open  ]],
Cell[CellGroupData[{
Cell[224145, 5078, 354, 10, 70, "Input",ExpressionUUID->"aafe1eb1-20db-4f44-a7b3-808ff1395aa4",
 CellID->928845875],
Cell[224502, 5090, 1334, 43, 140, "Output",ExpressionUUID->"089cc36e-fd3f-4d76-92e6-816741dd9cef",
 CellID->2103824781]
}, Open  ]],
Cell[CellGroupData[{
Cell[225873, 5138, 297, 7, 70, "Input",ExpressionUUID->"49249029-f4dd-4ae6-b16f-d6372d5addf9",
 CellID->1982994718],
Cell[226173, 5147, 1458, 39, 192, "Output",ExpressionUUID->"66a9e643-1557-4ebb-a89f-e9f7ff23ff65",
 CellID->1229717678]
}, Open  ]],
Cell[CellGroupData[{
Cell[227668, 5191, 462, 13, 70, "Input",ExpressionUUID->"40307efd-5532-4f86-b092-105744d74eef",
 CellID->226133649],
Cell[228133, 5206, 1457, 39, 192, "Output",ExpressionUUID->"f0e0d715-6100-4872-829e-4a6ec0856371",
 CellID->225415910]
}, Open  ]],
Cell[CellGroupData[{
Cell[229627, 5250, 212, 5, 70, "Input",ExpressionUUID->"9308f68b-b19f-47e0-9704-f70669f92d2f",
 CellID->30500961],
Cell[229842, 5257, 1093, 27, 168, "Output",ExpressionUUID->"ee4d44d8-c10a-4642-b4b1-454a08e3e9c1",
 CellID->1373208783]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[230984, 5290, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"e59287a0-84ed-4c80-a9ec-1c3bb4120a2e",
 CellID->1380442354],
Cell[231230, 5297, 551, 15, 70, "ExampleText",ExpressionUUID->"b4758486-f268-4e98-9447-2f051f1711bc",
 CellID->1902391335],
Cell[CellGroupData[{
Cell[231806, 5316, 605, 20, 70, "Input",ExpressionUUID->"1825413e-8df6-4085-9d3d-8ce22ea4ad93",
 CellID->995709017],
Cell[232414, 5338, 1650, 41, 62, "Output",ExpressionUUID->"6dd8b125-ed09-469f-a3f7-1d66107357c7",
 CellID->1396154819]
}, Open  ]],
Cell[CellGroupData[{
Cell[234101, 5384, 572, 15, 70, "Input",ExpressionUUID->"ce77c113-a848-473e-95e1-7c9be301a443",
 CellID->1568492666],
Cell[234676, 5401, 1914, 43, 95, "Output",ExpressionUUID->"b332665c-1ce4-409b-8bb5-5c34b3c9131b",
 CellID->1155702287]
}, Open  ]],
Cell[CellGroupData[{
Cell[236627, 5449, 186, 4, 70, "Input",ExpressionUUID->"834234c2-7e80-4bea-9484-6b744bf34a03",
 CellID->9487602],
Cell[236816, 5455, 5216, 136, 60, "Output",ExpressionUUID->"472c5898-dc62-4899-8806-a33afaf3a98f",
 CellID->1537417752]
}, Open  ]],
Cell[CellGroupData[{
Cell[242069, 5596, 369, 11, 70, "Input",ExpressionUUID->"39f79974-edaa-444d-9857-a58e740b1a6a",
 CellID->390547132],
Cell[242441, 5609, 5216, 136, 60, "Output",ExpressionUUID->"7c5a932e-f425-48ae-9164-761caf453b82",
 CellID->1033943584]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247706, 5751, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"3d828226-7263-4b8c-927d-6d95744194c7",
 CellID->960582794],
Cell[247951, 5758, 405, 12, 70, "ExampleText",ExpressionUUID->"cb96b2f8-631f-438f-940b-be8012dea049",
 CellID->403448163],
Cell[248359, 5772, 208, 5, 70, "Input",ExpressionUUID->"f49cb4f4-083a-482a-bcad-743ba39f62e3",
 CellID->445557620],
Cell[CellGroupData[{
Cell[248592, 5781, 868, 28, 70, "Input",ExpressionUUID->"26978093-1469-4ddf-a347-a724b777a9b0",
 CellID->211442251],
Cell[249463, 5811, 830, 21, 41, "Output",ExpressionUUID->"225e01c7-d4a6-4432-bdc4-d6fd6f6cb93e",
 CellID->1228825415],
Cell[250296, 5834, 1643, 42, 41, "Output",ExpressionUUID->"b9e0f869-345e-4a1a-b623-4df198e4d072",
 CellID->518516706]
}, Open  ]],
Cell[CellGroupData[{
Cell[251976, 5881, 582, 16, 70, "Input",ExpressionUUID->"18dcec95-1dc4-481c-9838-04fffaebda9c",
 CellID->413386493],
Cell[252561, 5899, 3707, 84, 41, "Output",ExpressionUUID->"8ce6c367-3211-46f3-98d8-3b678892ad4d",
 CellID->16488269],
Cell[256271, 5985, 125, 2, 37, "Output",ExpressionUUID->"2f3e10c9-7d2c-41a2-bc25-dc11e1a77473",
 CellID->92946620],
Cell[256399, 5989, 870, 22, 41, "Output",ExpressionUUID->"ea226082-06b3-4983-9d36-55f04573525a",
 CellID->933230971]
}, Open  ]],
Cell[CellGroupData[{
Cell[257306, 6016, 297, 7, 70, "Input",ExpressionUUID->"b55d8a50-3ca0-49c8-b847-e8cf661b1442",
 CellID->1180733851],
Cell[257606, 6025, 1154, 28, 184, "Output",ExpressionUUID->"99633a56-feae-4b20-bd2d-75dd69ebd55b",
 CellID->616641788]
}, Open  ]],
Cell[CellGroupData[{
Cell[258797, 6058, 540, 15, 70, "Input",ExpressionUUID->"456caf00-df38-46b0-96d5-5ca0c7c8b931",
 CellID->314182906],
Cell[259340, 6075, 1027, 24, 184, "Output",ExpressionUUID->"7c69ddf1-c4bc-409c-b4b1-bb93759f8597",
 CellID->1858991813]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[260528, 6108, 1382, 36, 70, "ExampleSection",ExpressionUUID->"5d8f4513-4d81-4e35-b1f2-aa9ca10d05bf",
 CellID->1020263627],
Cell[261913, 6146, 490, 13, 70, "ExampleText",ExpressionUUID->"9757989d-3616-4120-a76b-ab71ce1ba0dd",
 CellID->643028171],
Cell[262406, 6161, 297, 7, 70, "Input",ExpressionUUID->"de88288a-7921-4deb-823d-1345439a84f0",
 CellID->1615025532],
Cell[CellGroupData[{
Cell[262728, 6172, 853, 29, 70, "Input",ExpressionUUID->"996ce1be-7c69-4c4c-a364-db9cf9d964d9",
 CellID->1618552189],
Cell[263584, 6203, 2680, 65, 41, "Output",ExpressionUUID->"342df1c5-c63c-45c7-b779-622cd2fec3be",
 CellID->643355981]
}, Open  ]],
Cell[CellGroupData[{
Cell[266301, 6273, 386, 12, 70, "Input",ExpressionUUID->"6e6e22ce-cb62-4c37-b47f-5cf97ab6f8b7",
 CellID->144765629],
Cell[266690, 6287, 720, 24, 37, "Output",ExpressionUUID->"74219b15-7d69-4f70-bcde-3f8f81362ca4",
 CellID->1438741094]
}, Open  ]],
Cell[CellGroupData[{
Cell[267447, 6316, 245, 6, 70, "Input",ExpressionUUID->"00a5f0fd-0339-4470-880c-83161f74f5e5",
 CellID->863221295],
Cell[267695, 6324, 10450, 178, 61, "Output",ExpressionUUID->"0e96c4fd-47f9-4bb2-91be-77288490e098",
 CellTags->"RasterizedOutput",
 CellID->1183023600]
}, Open  ]],
Cell[CellGroupData[{
Cell[278182, 6507, 178, 4, 70, "Input",ExpressionUUID->"131d7537-67da-41db-ac93-54eb26f2db7c",
 CellID->2132482861],
Cell[278363, 6513, 10856, 184, 61, "Output",ExpressionUUID->"5533c9cf-205b-4b60-b316-4f04ab52fc99",
 CellTags->"RasterizedOutput",
 CellID->1674041274]
}, Open  ]],
Cell[CellGroupData[{
Cell[289256, 6702, 324, 10, 70, "Input",ExpressionUUID->"73b76c20-1630-4908-b757-0bd73fb92f86",
 CellID->1980240024],
Cell[289583, 6714, 126, 2, 37, "Output",ExpressionUUID->"75d8cfcf-2b8a-42c3-a1ef-6d84a78947d1",
 CellID->624893981]
}, Open  ]],
Cell[CellGroupData[{
Cell[289746, 6721, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"1bdc1e98-1f90-4647-a759-c5a25981379f",
 CellID->1134327929],
Cell[289992, 6728, 488, 13, 70, "ExampleText",ExpressionUUID->"b15db1c0-715e-4b37-9301-28ef69a5e971",
 CellID->789695703],
Cell[CellGroupData[{
Cell[290505, 6745, 960, 32, 70, "Input",ExpressionUUID->"e883eb18-161d-4fa2-a676-9725f2746d53",
 CellID->21571257],
Cell[291468, 6779, 1575, 39, 41, "Output",ExpressionUUID->"3ceaeed9-269c-47d7-b6f4-5efc274897ae",
 CellID->440661431],
Cell[293046, 6820, 1529, 39, 41, "Output",ExpressionUUID->"87f68010-b814-40a2-bea6-3b7feddd397d",
 CellID->1673055961]
}, Open  ]],
Cell[CellGroupData[{
Cell[294612, 6864, 516, 15, 70, "Input",ExpressionUUID->"87dd871b-e657-4576-993f-2bad5d8dd4ad",
 CellID->329168220],
Cell[295131, 6881, 5618, 98, 41, "Output",ExpressionUUID->"69c7ba80-dfc6-49fd-9f7b-da4938a35934",
 CellTags->"RasterizedOutput",
 CellID->1428432771],
Cell[300752, 6981, 4987, 88, 41, "Output",ExpressionUUID->"cbbffe80-ee89-4de1-9e04-1c4f396f9bf5",
 CellTags->"RasterizedOutput",
 CellID->949892384]
}, Open  ]],
Cell[CellGroupData[{
Cell[305776, 7074, 205, 5, 70, "Input",ExpressionUUID->"e7eb9d54-13b9-43ac-b3f6-d0f612176558",
 CellID->1250205212],
Cell[305984, 7081, 6414, 111, 41, "Output",ExpressionUUID->"83a133f6-9813-4df3-aa80-4d93a13297af",
 CellTags->"RasterizedOutput",
 CellID->447866090]
}, Open  ]],
Cell[CellGroupData[{
Cell[312435, 7197, 672, 20, 70, "Input",ExpressionUUID->"974785e0-b066-45ed-ae27-0908109b92b0",
 CellID->942244714],
Cell[313110, 7219, 6414, 111, 41, "Output",ExpressionUUID->"5878c19a-8447-430e-9c25-6ae9ef0b176d",
 CellTags->"RasterizedOutput",
 CellID->355191895]
}, Open  ]],
Cell[CellGroupData[{
Cell[319561, 7335, 176, 4, 70, "Input",ExpressionUUID->"cb3003ca-cd81-44b5-8578-5aec08e74a9e",
 CellID->7034574],
Cell[319740, 7341, 126, 2, 37, "Output",ExpressionUUID->"4365b7ee-d249-468f-bf93-2b0931996b6b",
 CellID->430629677]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[319915, 7349, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"86ebe019-3fa3-498b-854a-531066309794",
 CellID->979322738],
Cell[320160, 7356, 489, 13, 70, "ExampleText",ExpressionUUID->"ce6c434e-7b65-465e-abba-ea353c615977",
 CellID->1162586958],
Cell[CellGroupData[{
Cell[320674, 7373, 898, 30, 70, "Input",ExpressionUUID->"df09825c-5a2f-4572-a45a-5b162baf2cec",
 CellID->1792782700],
Cell[321575, 7405, 1576, 39, 41, "Output",ExpressionUUID->"3adfed00-2f2e-442d-9618-f1edff40b2bf",
 CellID->1276810398],
Cell[323154, 7446, 1529, 39, 41, "Output",ExpressionUUID->"acca3282-eded-4b22-9db3-b40a059999f9",
 CellID->1695758362]
}, Open  ]],
Cell[CellGroupData[{
Cell[324720, 7490, 517, 15, 70, "Input",ExpressionUUID->"2917d3d9-b378-49b3-99a3-65215df0116f",
 CellID->1415581697],
Cell[325240, 7507, 5618, 98, 41, "Output",ExpressionUUID->"1f660e37-ba82-48e3-ae1d-be2e36a8ddb7",
 CellTags->"RasterizedOutput",
 CellID->1853124252],
Cell[330861, 7607, 4959, 88, 41, "Output",ExpressionUUID->"d6c73ea9-878d-4535-840f-062330ec1423",
 CellTags->"RasterizedOutput",
 CellID->503970923]
}, Open  ]],
Cell[CellGroupData[{
Cell[335857, 7700, 204, 5, 70, "Input",ExpressionUUID->"43757d76-a093-4cec-8279-d31a34b58777",
 CellID->547773473],
Cell[336064, 7707, 34233, 567, 141, "Output",ExpressionUUID->"ac081a67-bf30-4407-a4f5-7acf31288859",
 CellTags->"RasterizedOutput",
 CellID->563799093]
}, Open  ]],
Cell[CellGroupData[{
Cell[370334, 8279, 705, 21, 70, "Input",ExpressionUUID->"a7a339ef-b268-4714-8378-bf1f28e18140",
 CellID->90023360],
Cell[371042, 8302, 34234, 567, 141, "Output",ExpressionUUID->"73afe988-15cf-4bc3-bf53-fb3e287020d3",
 CellTags->"RasterizedOutput",
 CellID->1073505487]
}, Open  ]],
Cell[CellGroupData[{
Cell[405313, 8874, 179, 4, 70, "Input",ExpressionUUID->"023300d0-1d1e-4dc2-97ce-f1d6a3678acc",
 CellID->1407924609],
Cell[405495, 8880, 126, 2, 37, "Output",ExpressionUUID->"28d3122a-be35-4156-99ba-4eeb6c6de339",
 CellID->439255882]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, Closed]]]],
Cell[CellGroupData[{
Cell[405782, 8891, 1376, 36, 70, "ExampleSection",ExpressionUUID->"5ebc7b1d-6a0b-4be8-aaa4-5986be2c01de",
 CellID->2123667759],
Cell[CellGroupData[{
Cell[407183, 8931, 1369, 36, 70, "ExampleSubsection",ExpressionUUID->"a00ab025-5cfd-4854-93fb-6bc7403594e7",
 CellID->2113120676],
Cell[408555, 8969, 514, 12, 70, "ExampleText",ExpressionUUID->"ddc6df25-f21b-410b-88e6-8dfa31c91c19",
 CellID->879976361],
Cell[409072, 8983, 209, 5, 70, "Input",ExpressionUUID->"ce382a89-e409-4a89-b1c3-4b6e277e3eb7",
 CellID->1624769793],
Cell[409284, 8990, 293, 9, 70, "ExampleText",ExpressionUUID->"92f30e53-989a-441b-915c-a08f495d166b",
 CellID->1586615223],
Cell[CellGroupData[{
Cell[409602, 9003, 477, 16, 70, "Input",ExpressionUUID->"31f17a24-6f91-4367-9cce-a62727f0612e",
 CellID->103855699],
Cell[410082, 9021, 1237, 33, 41, "Output",ExpressionUUID->"e18b5ab0-e921-434a-bffb-0800e9419d08",
 CellID->511616465]
}, Open  ]],
Cell[411334, 9057, 279, 9, 70, "ExampleText",ExpressionUUID->"ad21530e-4f1c-4ccd-adcd-a26c197971af",
 CellID->1115640777],
Cell[CellGroupData[{
Cell[411638, 9070, 470, 14, 70, "Input",ExpressionUUID->"a97b71c6-ab65-4424-b364-940f328fabcf",
 CellID->1705382524],
Cell[412111, 9086, 675, 19, 66, "Output",ExpressionUUID->"9bf0fcfd-15ee-4594-a01d-e5f394d9a625",
 CellID->1806748620]
}, Open  ]],
Cell[412801, 9108, 285, 7, 70, "ExampleText",ExpressionUUID->"8989aebb-edc2-4cb7-877a-3df0caf1fd29",
 CellID->1798206254],
Cell[CellGroupData[{
Cell[413111, 9119, 528, 15, 70, "Input",ExpressionUUID->"82d712ae-00a2-4ed6-8773-c1cd5f5cc61c",
 CellID->1816212359],
Cell[413642, 9136, 1432, 35, 168, "Output",ExpressionUUID->"a198a6b1-1fde-4843-bd6f-1771bae8ce54",
 CellID->583979497]
}, Open  ]],
Cell[415089, 9174, 199, 4, 70, "ExampleText",ExpressionUUID->"81084410-1974-4798-833a-f61d126fc213",
 CellID->142331318],
Cell[CellGroupData[{
Cell[415313, 9182, 603, 17, 70, "Input",ExpressionUUID->"3130f40a-9c5f-4c1a-a83c-75f1f5bec531",
 CellID->125131543],
Cell[415919, 9201, 1432, 35, 168, "Output",ExpressionUUID->"c41ac5c4-285a-4347-8ecd-a3889d791f54",
 CellID->846908800]
}, Open  ]],
Cell[417366, 9239, 142, 1, 70, "ExampleText",ExpressionUUID->"11415d1f-29d5-4414-878e-222b54b22b63",
 CellID->1574097100],
Cell[CellGroupData[{
Cell[417533, 9244, 211, 5, 70, "Input",ExpressionUUID->"b5a2d63e-ef72-41c6-b4da-3c0a8cf76848",
 CellID->844307885],
Cell[417747, 9251, 1433, 35, 168, "Output",ExpressionUUID->"5307c8f6-6704-4193-b461-ad21fa8bc272",
 CellID->1957212759]
}, Open  ]],
Cell[CellGroupData[{
Cell[419217, 9291, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"1e78a9a0-2c3f-46ee-9732-c373821dd385",
 CellID->327787904],
Cell[419462, 9298, 229, 4, 70, "ExampleText",ExpressionUUID->"6fc50b7b-6492-4d9e-af81-4ee5a9b05626",
 CellID->2013575321],
Cell[CellGroupData[{
Cell[419716, 9306, 528, 15, 70, "Input",ExpressionUUID->"0f1b5e14-28f4-4217-89d1-da28ca0a1865",
 CellID->1513406388],
Cell[420247, 9323, 1432, 35, 168, "Output",ExpressionUUID->"5c8e69ac-ef37-4130-8437-f66088e88882",
 CellID->485645415]
}, Open  ]],
Cell[CellGroupData[{
Cell[421716, 9363, 603, 17, 70, "Input",ExpressionUUID->"8551001e-4d1b-4d40-b865-483d1e13ac6c",
 CellID->894833860],
Cell[422322, 9382, 1433, 35, 168, "Output",ExpressionUUID->"625f1e4b-7ff1-4f9f-bb47-71e7d5d20223",
 CellID->1236789425]
}, Open  ]],
Cell[CellGroupData[{
Cell[423792, 9422, 212, 5, 70, "Input",ExpressionUUID->"e581b69e-1315-485f-9bad-29210d747d14",
 CellID->1503263638],
Cell[424007, 9429, 1433, 35, 168, "Output",ExpressionUUID->"97fc9667-be29-4dd9-b563-0bf8d475e5c9",
 CellID->1765224355]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[425489, 9470, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"a065db2e-e2f1-416c-90c0-52e876a442c1",
 CellID->911711473],
Cell[425734, 9477, 1681, 54, 70, "ExampleText",ExpressionUUID->"80a34638-6655-40d2-b42f-1157d855bea7",
 CellID->1252343807],
Cell[427418, 9533, 402, 11, 70, "Input",ExpressionUUID->"f4dc967f-5c30-475d-80c6-07e300c37601",
 CellID->74791953],
Cell[CellGroupData[{
Cell[427845, 9548, 420, 13, 70, "Input",ExpressionUUID->"ea5eb348-5ef6-46fc-b93d-8d14e36198fe",
 CellID->750420576],
Cell[428268, 9563, 3889, 110, 41, "Output",ExpressionUUID->"4e69348d-3e5d-4397-9253-7afd4e2f67fb",
 CellID->1466648697]
}, Open  ]],
Cell[CellGroupData[{
Cell[432194, 9678, 246, 6, 70, "Input",ExpressionUUID->"30be6017-ea6a-4a8c-a185-838dfa002a5f",
 CellID->1598073110],
Cell[432443, 9686, 23109, 385, 101, "Output",ExpressionUUID->"8cff4f2a-2024-47b5-b8ce-2f774440e93b",
 CellTags->"RasterizedOutput",
 CellID->1396601562]
}, Open  ]],
Cell[CellGroupData[{
Cell[455589, 10076, 482, 14, 70, "Input",ExpressionUUID->"fa736cd5-c4b7-403b-9ec9-dace4255f9a9",
 CellID->387558096],
Cell[CellGroupData[{
Cell[456096, 10094, 114, 1, 70, "EchoTiming",ExpressionUUID->"e0e2b7ff-2841-42e0-be57-7bedbc68aece",
 CellID->975639971],
Cell[456213, 10097, 115, 1, 70, "EchoTiming",ExpressionUUID->"d5e437a3-aa5b-4642-9da7-fb1ced0f69a2",
 CellID->878192471]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[456377, 10104, 217, 5, 70, "Input",ExpressionUUID->"85f4e348-c0d4-44b4-8d7e-92e089e6a557",
 CellID->2141843535],
Cell[456597, 10111, 6876, 147, 70, "Output",ExpressionUUID->"8c582528-a558-464b-ad12-9bfd85b1807f",
 CellID->1483560158]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[463637, 10267, 1372, 36, 70, "ExampleSubsection",ExpressionUUID->"3c4766e7-4aa8-4714-b0ca-b473a0db5fd9",
 CellID->1505789676],
Cell[465012, 10305, 1002, 30, 70, "ExampleText",ExpressionUUID->"d148211d-9526-4904-a7d5-8033ffdd4f82",
 CellID->857003496],
Cell[466017, 10337, 211, 5, 70, "Input",ExpressionUUID->"c1ebf127-d732-4235-9379-0173186cd9e0",
 CellID->1299873470],
Cell[CellGroupData[{
Cell[466253, 10346, 303, 8, 70, "Input",ExpressionUUID->"9edf3627-8c58-4dd9-881b-6e18732c8560",
 CellID->622269359],
Cell[466559, 10356, 576, 19, 37, "Output",ExpressionUUID->"d4eb6b16-ecc7-4603-87b7-b7bb60483fb9",
 CellID->14269491]
}, Open  ]],
Cell[CellGroupData[{
Cell[467172, 10380, 208, 5, 70, "Input",ExpressionUUID->"1c2ee94d-a1e2-45c3-8a80-9562ce447998",
 CellID->240788446],
Cell[467383, 10387, 5646, 99, 41, "Output",ExpressionUUID->"0cf1590a-aff7-47de-8d05-c7f66eb3b1b6",
 CellTags->"RasterizedOutput",
 CellID->686190824]
}, Open  ]],
Cell[CellGroupData[{
Cell[473066, 10491, 316, 9, 70, "Input",ExpressionUUID->"0c9d5cef-5b99-43ff-b553-8a2523a2d063",
 CellID->1282628041],
Cell[473385, 10502, 77116, 1270, 341, "Output",ExpressionUUID->"a02cd5bc-eebb-4df4-bd97-e88eb230c8c4",
 CellTags->"RasterizedOutput",
 CellID->821994578]
}, Open  ]],
Cell[CellGroupData[{
Cell[550538, 11777, 253, 6, 70, "Input",ExpressionUUID->"8faacb1d-870c-424b-917b-3e6ae9c51002",
 CellID->1124298624],
Cell[550794, 11785, 115, 1, 70, "EchoTiming",ExpressionUUID->"aa70cf2d-882d-4e00-aef5-e0b49d5d8d40",
 CellID->687437727],
Cell[550912, 11788, 49634, 820, 253, "Output",ExpressionUUID->"1075a64a-b2bd-40e6-a65e-e480aaf79d3d",
 CellTags->"RasterizedOutput",
 CellID->500571295]
}, Open  ]],
Cell[CellGroupData[{
Cell[600583, 12613, 392, 11, 70, "Input",ExpressionUUID->"b07bfeaf-b871-414d-a26a-c57d167e8f76",
 CellID->66470024],
Cell[600978, 12626, 115, 1, 70, "EchoTiming",ExpressionUUID->"68f8f359-d7b8-4a7d-a6a3-683d12afe6a4",
 CellID->762682909],
Cell[601096, 12629, 49635, 820, 253, "Output",ExpressionUUID->"eae3fab6-b1f9-4a0d-8d67-0b5e802dc512",
 CellTags->"RasterizedOutput",
 CellID->1408309766]
}, Open  ]],
Cell[CellGroupData[{
Cell[650768, 13454, 179, 4, 70, "Input",ExpressionUUID->"f4f43e67-5d6a-4e01-9cc4-909867e76c34",
 CellID->1934521111],
Cell[650950, 13460, 826, 13, 55, "Output",ExpressionUUID->"8d332fcd-9145-4e3b-8450-474a5ba6d072",
 CellID->388653685]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "4"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[652133, 13485, 2328, 64, 70, "SeeAlsoSection",ExpressionUUID->"ba24f130-ccbe-4fb4-a233-206f08ce7079"],
Cell[654464, 13551, 1390, 35, 70, "TutorialsSection",ExpressionUUID->"525d1316-b983-432b-a23e-e8a578007ae2"],
Cell[655857, 13588, 1045, 27, 70, "MoreAboutSection",ExpressionUUID->"81b36e56-5618-4a8a-ad7f-5f71b1b506ec"],
Cell[656905, 13617, 1906, 53, 70, "RelatedLinksSection",ExpressionUUID->"4cb3fa10-a8a6-408c-8a17-ae98b1f38c2f"],
Cell[658814, 13672, 78, 0, 70, "FooterCell",ExpressionUUID->"d46386a6-cd7e-45ec-bbdc-7c9d4e48fb48"]
}
]
*)

(* End of internal cache information *)

