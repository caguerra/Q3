(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    262404,       5839]
NotebookOptionsPosition[    247896,       5528]
NotebookOutlinePosition[    250370,       5588]
CellTagsIndexPosition[    250283,       5583]
WindowTitle->NLindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["Q3 SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "391a9464-9062-4b30-a42f-5cc725ce9d8a"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "f518eafb-e5d1-48dc-935b-af3479c20c28"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "d2f139e0-365a-42c7-a0ab-88f9926339b7"]
         }],ExpressionUUID->"c4c2e453-2c89-4ea4-8f08-215afad6a128"],
         StripOnInput->False], {"\<\"LindbladSolve\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/ref/LindbladSolve"], "\<\"LindbladConvert\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/ref/LindbladConvert"], "\<\"LindbladBasis\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/ref/LindbladBasis"], "\<\"LindbladGenerator\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/ref/LindbladGenerator"], "\<\"Supermap\"\>":>
        Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "7749654c-9e3a-4b42-bd6a-9627906fba4f"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "21dc0378-3506-4ada-a422-f2edd2076104"]
         }],ExpressionUUID->"258526a4-9afa-4fda-a68c-9fd2c2deca85"],
         StripOnInput->False], {"\<\"Dynamical Process of Decoherence\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/guide/DynamicalProcessOfDecoherence"], "\<\"Quantum \
Computation and Information\"\>":>Documentation`HelpLookup[
        "paclet:Q3/guide/QuantumComputationAndInformation"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "999e799c-b8b4-435e-8b89-cda87696047b"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "bf075e08-3474-435e-902e-bcb77084c1a5"]
         }],ExpressionUUID->"595ba629-c87a-4fce-954a-2a8da06de255"],
         StripOnInput->False], {"\<\"Quantum Noise and Decoherence\"\>":>
        Documentation`HelpLookup[
        "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"], "\<\"Quantum \
Computation and Information: Overview\"\>":>Documentation`HelpLookup[
        "paclet:Q3/tutorial/QuantumComputationAndInformationOverview"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "e76bb329-98f6-4a67-a8d0-64696dbeeae8"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "a9c94a2a-5449-4616-95a8-da868fdacd31"]
         }],ExpressionUUID->"32856dc8-6a2b-44b0-8b8f-395cbffc8dd5"],
         StripOnInput->False], {"\<\"Q3/ref/NLindbladSolve\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell["Q3/ref/NLindbladSolve"]}, Visible -> False]]; 
         SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; Null], 
        Delimiter, "\<\"Copy web URL\"\>":>
        Module[{DocumentationSearch`Private`nb$}, 
         DocumentationSearch`Private`nb$ = NotebookPut[
            Notebook[{
              Cell[
               BoxData[
                MakeBoxes[
                 Hyperlink[
                 "http://reference.wolfram.com/language/Q3/ref/NLindbladSolve.\
html"], StandardForm]], "Input", TextClipboardType -> "PlainText"]}, Visible -> 
             False]]; SelectionMove[
          DocumentationSearch`Private`nb$, All, Notebook]; 
         FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
         NotebookClose[DocumentationSearch`Private`nb$]; 
         Null], "\<\"Go to web URL\"\>":>FrontEndExecute[{
          NotebookLocate[{
            URL[If[
               TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$40342], 
               "http://reference.wolfram.com/system-modeler/", 
               "http://reference.wolfram.com/language/"] <> 
             "Q3/ref/NLindbladSolve" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "96adb8bf-95ba-4204-a59f-2b213104aa82"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "723a6115-9a94-49f3-909e-901fff3e55ef"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"5429d7a2-41aa-403a-b266-7d76b8830c6a"],

Cell["Q3`", "ContextNameCell",
 CellID->1861585604,ExpressionUUID->"7168bd13-26e0-488d-a1ca-be3cf615ff5e"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "NLindbladSolve", "ObjectName",ExpressionUUID->
      "b1cb55fc-1030-4422-b72d-e73990a4ceb0"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"37788cdf-8967-427c-ae89-d3685ee0db77"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "f67d51b0-ce38-4e18-9de7-cb07acaabd5a"]
    }],ExpressionUUID->"80c52f65-9058-4615-81be-6aaf0f509eb4"], Cell[BoxData[
     StyleBox[
      GraphicsBox[InsetBox[
        StyleBox["\<\"UPDATED IN 13.1\"\>",
         StripOnInput->False,
         FontFamily->"Source Sans Pro",
         FontSize->17,
         FontWeight->"Bold",
         FontSlant->"Italic",
         FontColor->RGBColor[0.968627, 0.466667, 0]], {Right, Center}, {
        Right, Center}],
       AxesStyle->Large,
       FrameStyle->Large,
       ImageSize->{125, 24},
       PlotRangePadding->Scaled[0.025]], "NewInGraphic",
      StripOnInput->False]],
     Deployed->True,
     Magnification->1,ExpressionUUID->
     "6bed6b55-0925-475c-b339-837991870921"]}
  }]], "ObjectNameGrid",
 CacheGraphics->False,
 CellID->979993285,ExpressionUUID->"3f2c5905-0899-4d65-ae5d-e21b404073d1"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["t", "TI"], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["min", "TI"]], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e3cce9da-853b-42b5-b59d-2a9df653a32f"],
     "\[LineSeparator]finds a numerical solution to the Lindblad equation \
characterized by Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "89526bbf-d5ac-4098-b24f-04b073785b85"],
     " and Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "72f6ed72-34ff-4269-a781-c687c04803f0"],
     "."
    }],ExpressionUUID->"3d9bb857-9ff0-4591-9dff-3c4a052f8fc8"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["tsr", "TI"], ",", 
        StyleBox["init", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["t", "TI"], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["min", "TI"]], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a1873e72-2d09-42a0-81ad-44accd0ce8e0"],
     "\[LineSeparator]assumes that the Lindblad generator is specified by \
Choi matrix ",
     Cell[BoxData[
      StyleBox["tsr", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8cd4988a-6ff2-4c44-ad01-0b504e68f32d"],
     "."
    }],ExpressionUUID->"e7b1acda-4b6f-4bb8-a849-bd4282d2a0f5"]}
  }]], "Usage",
 CellID->325754926,ExpressionUUID->"955c3fa6-35e0-45d2-9247-fbb75733dd81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"68aff118-b33f-4559-aae2-6ae3bd8158ed"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"f55319bb-3c70-4965-9e5b-e3bc758324b2"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"d27050e8-5f70-4534-91a1-49addfdd29a6"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"33e5783c-3231-4bde-aca7-345e66ad85f0"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->1695052152,ExpressionUUID->"a20b1552-902b-4b29-8107-bc066c3f609e"],

Cell[TextData[{
 "Internally, it uses the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NDSolve"]], "paclet:ref/NDSolve"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b50d2539-c5f4-48b3-8717-1c211f2e0e9d"],
 " built-in function and hence takes all options to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NDSolve"]], "paclet:ref/NDSolve"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "61becdea-da61-43f7-89ed-42b1f1b12d8c"],
 "."
}], "Notes",
 CellID->1027225079,ExpressionUUID->"e109e126-545a-4427-a75c-4611572bb771"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "44a75cf3-f3ee-4480-9055-48368f18b5a6"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"69cab4e1-6448-417e-b642-be279389bc8e"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "79234334-ac50-4084-9bfb-8c113edb6507"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->223457562,ExpressionUUID->"bf5dc2a7-ad22-44da-8e3f-e4ab70ef1241"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "6e6752bd-7b9a-4c55-afdb-68376ba484cb"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"d106fe1c-a7c1-4dd6-a758-84010309159b"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(6)", "ExampleCount",ExpressionUUID->
  "80b9149a-cde8-4b4d-bd26-dacdcfbaad51"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1849829578,ExpressionUUID->"de3d15c7-9844-455e-bfa7-c1181f74a58a"],

Cell[BoxData[
 RowBox[{"<<", "Q3`"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->615462090,ExpressionUUID->"b0c9355f-4347-48dd-b98d-8c2b8c344554"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->383286299,ExpressionUUID->"5cb3e7fd-e6cf-4afc-a58e-042571c9c4d3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}], 
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}]},
     {
      RowBox[{
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"x"},
          "RowDefault"], 
         TemplateBox[{"2"},
          "RowDefault"]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       SubscriptBox[
        TemplateBox[{"x"},
         "RowDefault"], 
        TemplateBox[{"3"},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1163061591,ExpressionUUID->"4b1943fb-f191-4477-b50b-06e0acf41edc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Zero", "[", 
    RowBox[{"2", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->575047188,ExpressionUUID->"8e5655a8-d8d5-4a5e-8042-bbe324179a03"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0"},
     {"0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[Automatic, {2, 2}, 0, {1, {{0, 0, 0}, {}}, {}}]]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->1669179460,ExpressionUUID->"6a4edb1a-c4b2-41d2-a59e-89d443c1c83c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1820491489,ExpressionUUID->"bf53bafd-fd0e-461a-b287-eb2aee7f9a10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->1394439337,ExpressionUUID->"93cf1496-9fcd-4dea-a7fe-b2bc8a8ac69c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "\[CapitalGamma]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], "=", "0.2"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", "2", "]"}], "=", "0.3"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"x", "[", "3", "]"}], "=", "0.1"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", "0.3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NLindbladSolve", "[", 
       RowBox[{"opH", ",", "opL", ",", "init", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->309037009,ExpressionUUID->"b97850ee-f27c-4659-bfd0-e867eee7b80d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Rho]", "[", ".2", "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->222257030,ExpressionUUID->"bbbc8e91-1157-4072-9d29-7922b66ad3e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5456192488652735`", 
      RowBox[{"0.18096748715518765`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.2714512307327815`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.18096748715518765`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.2714512307327815`", " ", "\[ImaginaryI]"}]}], 
      "0.45438075113472653`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->1677804088,ExpressionUUID->"39e25023-1c28-441b-af4f-3403bc85d2de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "9b50ffcf-1e8b-470b-a69b-301ba72e045c"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1200765697,ExpressionUUID->"b7ed2e39-cece-4f7a-a7f0-a35946e8f820"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ThePauli", "[", "0", "]"}], "+", 
      RowBox[{"ThePauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->435145815,ExpressionUUID->"b6acc0cc-3585-4605-972a-73957e5046c7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]},
     {
      FractionBox["1", "2"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 2, 4}, {{1}, {2}, {2}, {1}}}, {
      Rational[1, 2], Rational[1, 2], Rational[1, 2], Rational[
       1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->943084244,ExpressionUUID->"0dbebf21-cc18-4ec0-9072-92445ad5674d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"ThePauli", "[", "3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"opH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->1196829607,ExpressionUUID->"a8f2a853-970f-47fe-967b-5230cd15ad54"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Output",\

 CellLabel->"Out[2]//MatrixForm=",
 CellID->693259531,ExpressionUUID->"77f0fb34-176a-463b-af18-a3acb056fbdd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1273375212,ExpressionUUID->"36d552f0-94a7-494a-8e5b-ceeb13e71dec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->374788519,ExpressionUUID->"49a28250-ae31-4264-a0ff-791899a8b1e9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->667061092,ExpressionUUID->"07c7a5b8-08cf-4b92-9fd0-84c73936bcea"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxV1HlM02cYwHEOuUGOYrmhB0wORZRmwwPeBxXtgkLQEgcGERw6GYOOe4oC
1eoAB0FAEXCuVBAZDBgFQQblnDhpFRghMsqMnVxbERwwGLCD9fGPvUnT/NL3
+bzN921KD485EqGmoqIS8e9r/f3/a5YU3VpfzaRkzutX5pACnx8TfinD59DX
04Tlvr4GSfXP/cuhLeP4+XPC3+zMHYaXROm8II65C4NuMyO4X06Mogon7F37
yZnT62ucbL8xRNLut+H8FNnuldb0k26+WNK3vn4jfvtFMsusTvHb71XR4e58
dvMzsXL/HImr9ox/83BIrPR/J88MFELu+HOcnyd7TkxOMASjYuV5i6S+aUL2
x5wMvSUiu7OrRqKQobdMXGjR6aRhFL0V0tlQVb43dgS9VWIQ90E8P3AYvb+I
/2wCbzRvED0VMI+xlCY+kuJ+FWAWVLNECz3oqwJtYckl1e0hzquBB/Vo3x3X
UjxPHdgB1VUFq0XYbwNEXZ9YYkhFROltgPiwmpK1Y+3YSwOkO+RHsw17sKcm
9CayU1+f68XeWlBXrZcbe+MH9LThc5arr3/UE/S0IUifc/IXkyfo6YBXs+Ju
ReVj9HThkyCX5PHjj9DTg9sjnzmHcLrR04fb+0wb5d3t6OnDy14B1betGT0D
OGsmTbO+V4feRtg/s7VQ4ilEzxDqkxsjWj9NRc8IQidr54ad8rGPEYxNZxbU
BJdjTyN4V3t3y8cHa8X/jbsbg1DSs+jtKcK+xkD53sFaqvoA78ME5pLoZ3IK
mtAzAaHrgxBvjWb0TIC/871vXD9qwv4UyKZoxpOxRvQowN8y4DH2hQg9U+AM
NGtJBHXomUIWn2+gkV2Fnil4LRVVswPL0NsEyf0O/l0vitHbBBvpNqsscSZ6
VFjZnZMQlbUD+1AhNtplyy52BvakAisy71CL303sZQbCHBPZJbWvsK8ZmM6H
cU74CbGfOfydaOX0Ha8MPXMIP8bJSxKWo2cOrU+d6hzF5ehZQAUnHDIUZehZ
QNpYcJjg8F30LEGhWxszpF6KniVw3bVmhmO+RM8SChRVUu93CtGzAnaD7EBd
Si56VrBNy0qqw+OjZw2OAxe3iqa46FlDk/NQ7tq1EOxnDcF+7Pf/pFzAfjaw
1/PDEYfuq9jPBg6PmusccczBfrZwymdwIMX3Ot6HLbj1Vp57pf72/8MWbt4z
SnjVlY+eHVAz1s6fKs5Hzw7yn16qp5fmoUcDyYF+ps5iLv6+aPC6bzazLTYH
fRoUsnih8/RMnKdBybCzvb7PZTyPBinGscJa3xT06MDtipgUULjo0UGek7J6
9UIAenT4MSqyLyIvCHvRwcORFVneEYN96VCha3x8pj8J+zHAiTn1rVTvIlF6
DNhmts9FbU869mRAnKb2tehMHnoMsOB1Jrct89BjQHEIuVVbxEOPCRJOoKD1
cjreHxPs3sgM1e6noscE4c5KuRPnPHpM4K+otsv9EtFjwuqAw3SHjIuePRwM
8FOcvHKa/AOfAr21
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0n0w23ccwPHMc4siIUKUPNRu3UMbk/aK8P3g2tJ1o3amG2ZqRWdXqlTX
aazz1M1TKzNEWbVKqxIxtymuiyaHaUuZ0rVGWiKZY5t2SqixWj79Z5+7XO53
+X5e39w7YR9IDDloQKFQDj5/rb3/f8Tla9NKqjP9NBm8n4n+uYcYVjipbAqG
Cd99bQbJ04AlpdBRhZ/fJ8d+S30Wemuc6JWHpLHHnZWrU+P5CSKmLL8extCQ
uNi10ZAd+4J1fTs0uD9FjirduNNJk6T39trMkO6e92bvjU2gN0vSc7oPmdQ+
wvOPyTmrALPMB6Po/00kYWPiktZ7uD9HirXVNJ7HAN43T6bW1cXr9nSipyOj
V4x7L1s3obdI2DwvrWRELNd7z8iQUCuce9ou13vLZKupbVqaabdc762QFuit
Vwf2yTEbUOp54oyBATxPAaZzUBQte1Cu91+C6qCgP3t33sV9A6g7/M4f67l3
8T5D+J0OY8Pug+gZQYOF4fjukheeEURuTy0+PdCHnjFo+L9EHq/pQc8EJKek
9U9mlOiZQtaXvt/4aNrRMwNelUo5ON2Inhmogrs+srQqRm8dJK+6jZ5klGGv
9XB+hCL1uiDFvuawt7SyUMZswX4W0O2V+Zq553XsbQEOzGIb7c0O7GkJfGvf
6CN0BXobwF/Lch7MVaBnBQtl/0QKtirQs4YnEovDadwbeN4aXBkrBtcocvSt
4S+VtO3QzTby37q7DZxlpMzu0/yA99lAKG/RP6lUhh4VLu02bo3xrkWPCu2p
5Bxj/Fv0qFCVcStcFB6D34cGHrEfel9yO4M9aNA0UZTl6HYe+9kCtcaFzh6t
xd62EEJ97NW2dBV72kLv8FsLZp83Yn87UHhee7VaJkPPDqrmfWmfPJShR4fV
X40aTkfK0KODkrmrPjddih4dYhO8kjmeV9Gzh+Ux0yHBljr07CF9SO6nLLmA
HgMaC8ZaKOEV6DFgSjjf+X7UWfQYoF6qDZQUCtFzgHmOjB1TEYb9HCDmCkVw
8d1M7OcIe7mq5hvSM9jPEQJN+2tFES/6OUJh+UxgWLkY+zEhcbZp8mhEJXpM
cFuMSvxAUoWeEwTzpsy/r65Czwngu1dSnMMr0XOC4/kLjzqMKtDbCMq5B5Oi
/lL0NkL5zk0zHXMi9JyBFtnPsA8pQs8Z7NTx0cMBOeg5Q0aDe3Nlwgn0XOBY
y2aT7WPR6LmAzqOPH7oSgf1YcF+t5PuXp8r1/y8WJCgN4nxHvsCeLFDMGPwU
fzkb+7NglVp2x5X9FfZ9vv/jgTgLvzz02OB98SRTZZePHhsYoc3dXc156LEh
XJCdv837a/TYwGeJN4tGctFjQ0jXovbO9Sz0OCB4Oy930e4UehyIEjRNDL1x
Aj0O9IxQNuxXH0GPA7uSFXV79segx4GFT7e8nJjjjR4XzNothV0+odiHCzUj
BTWBrnHYkwtpH7Pm6zqTsBcXbKY9fHS3U7AvF9zkRSxRRRr+HptgOGhctu3N
z8i/iSS+kg==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU2cYBvCDlouCjEuBAgV6cSNzjMDANYuw70XXeQMCY4DMsTAQRBAQ
jClsMmRiFBgKhdJWEaNCxpBLJDKoEavIZLgCQoG2mU6RjMaFiGSKoMBm5/f2
jz3JycmX8z6/9+Tk8JNzPktdxTBM6uvLdP9/TitNUZEI9Z+7NhdeVL85D5Dw
WcvQ+6c61MFBpmhJQlB3xs6yq/S5gSR42sT7T95Qv1EekrFM77Xb3u6j81NE
PNo6e9e9X703zZRpYttyMHX37QHaf0zaPjXuvRmoUQ9qTJkhO2Sq4Y3JQ9R7
SsJu7Ihp9r9L5+dIxtiMgsMeof7fZJ1uVHp5aoT2nxFpQCuv9Nwo3TdPlv1e
VBzZrqXeAmENNUXunNJSb5FkeHbmH8weo94rwrooLEmcGaPeEtFEG9nhX41T
b4VIPq/npvwyTj0GqvsD2poFE3SegdIHcYOOkgnqW8ADNqv3wK0J2l8F7iXP
/cttdHTfahiOtec7bdVRjwU3sxe1jUU66rHgvqPLR7oOHfUs4YKPoeDdSR31
rMDBJz3M2VZPPWvIiubM/xOgp54NbLV2uxUVo6eeDTB+STWJeXrqrQHbHIuF
Qyf11FsL0WnDjyd/RM8WvozrLX90HT07cFTzBju06NlBz2yxxYlp9NbB1W8v
7JO+QM8eyjxXty1bGaj3FpQbj0fNsQ3UcwBRSrBDFd9A5x1AceVD8bKfgfoO
MJ1yOyhGZFD/Vw9yhIYcXnwrGOg+RyDVSY3C7eg5gYw/pfktCj0n2BD3e6Yq
Hj0nqA8r3bySiO/jDEuNPUnNKeg5w+6OlUhNOnpsOHykLyg3Cz02FOVseN6Q
ix4b9O2Z8XmH0HOBJ74FnKl89FxgmjtrwxxGzxVevnNJMPIdeq7g1bDpbGIx
eq5wJjuRaTmKnhuku3UF9x5Dzw3EJUvSxuPoccD3wPm5L0rR40Dg6Y8vT5eh
x4F7cQP94T+g5w4lWao7lRXouUPBNdFC50n0PKDSL4uoT6HnAXWh1tvaK9Hz
gH3ZlgUnqtDzhJgnD1fCpeh5gi7Be2RFih4X9CPxXeeq0eNCqlgTEViDHhc2
thSt6axBzwuars1v8pOh5wWR7XJXhQw9b6jp6m5dlKHnDS+t9ryKrkXPG1T7
9ZPna9HzgTjLwff/qkXPByZUhYr35OjxQKk/NpAmx/+LB5eOVuyqk6PPg/1h
Q0MaOfZ5sKU6r2lBjvt4MO86FstToMeHZ1+fCflEgR4fjJK+7j0K9PjA5Jd5
fa9Ajw/aeyE/1ynQ44NdLtN/xewJIM9YWHHH7AmgYrwo7A+zJ4DexmKXp2ZP
AMnGABGjRE8A4p8eDdsr0RPC9folFleJ30cIJZLYBV8lekIIlZX/+oESPSHU
SGKqQsyeENJEPZlis7ceMiXfZEe8Pv8L12Ps6Q==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.4678935687105749, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1186739723,ExpressionUUID->"1cc75e35-96e2-47dd-9b42-f627a5474cdd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "ca7a5812-3329-43f5-8501-052243a3f4b1"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1586259128,ExpressionUUID->"19e7d564-a3b0-402a-95cf-5d016f0c0304"],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445,ExpressionUUID->"b9487c0a-3c12-4f9b-9871-3d07bea94add"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->1425866839,ExpressionUUID->"2135986b-33b6-4ca2-bcad-1ea6b401b2d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1610597569,ExpressionUUID->"32a11069-e5b8-4fac-ba60-28d11fd49896"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellLabel->"In[2]:=",
 CellID->1104129648,ExpressionUUID->"8310bfd1-7d9c-434c-8da5-7b062c872233"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0"},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]]},
     {
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], "0", "0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]]},
     {"0", 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"1"},
        "RowDefault"]], 
      SubscriptBox[
       TemplateBox[{"B"},
        "RowDefault"], 
       TemplateBox[{"2"},
        "RowDefault"]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->899549971,ExpressionUUID->"807923c3-a3a5-452f-865d-2d9ec929f588"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->252233040,ExpressionUUID->"4fbf3ddd-d517-496e-bcc5-8a81c0fb3dab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1111348201,ExpressionUUID->"dc24cd70-1223-450e-857c-adbd56c43b75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[4]:=",
 CellID->1792714312,ExpressionUUID->"eaf2653f-2406-40c6-b52d-98548403c1c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.010744`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->2096161748,ExpressionUUID->"fc88b9a6-9f65-4e8e-a8eb-e40c9f3a7832"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1112511420,ExpressionUUID->"a813b530-f337-4c42-b1ea-dc1797cbaf97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Diagonal", "/@", "data"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellLabel->"In[6]:=",
 CellID->1239593903,ExpressionUUID->"cbcb4296-78b5-49f8-8035-ebcac8d0ce4f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd1ntUjOsaAPBSuqhJl+kyU6a5kG4qW9Siep9SC5GcRtSOUIkl90JtttiR
OFFIdpyl5BJbsuXS2NEpKVNKzUyGsaf7KGMcR2orpI625/3nvGvNmvWt731/
3/N93/M878eL2RK2dpyWllbdt9/Y//+PM3lj4yr5vVI1Oyb6MPl+fI94zBK7
hBrnEc8ZY6OaMO3sg84fLsTzdcTGMMrBNvEK+a40E8e8oWhZXAnOlxG2n+xt
2bxSsi5+bMjJzoNX+n1P38H1CsJuUNzxD7hHGhvGhpJw2C0HohMeoNdBfkrS
jp/KrsL5nSSiVluibK1Gv5sU320vPcl4jOtV5JJDQfKx0nq8Xg8J37wm5bHk
KXqvSVnL7C/FdyToqUlxOfEx8W1BT0Mqsnd4ij7J0XtLsvrji651K9B7R6Jn
aS9e/V6J3nuS8a7fLM2wA+e/Jw3C20Fbz3Wi30cmvnIubHXrxvUfSG9gyxav
UhVer58wy1k1Ivse9AbICV3/8aLNvegNkEt1drYDua/R+4uwpaLBtmw1eh9J
27lX97vC36A3SN65afrOdbxBb4isD9rrbTtNg94QibCcUfvOW4PeJ2KorI6L
0NGg95mURFm9mX+Uel9IRCvDOVqhRm+YjN982KpJ8xq9YZJ+8FDZgvpe9L6S
mOvi1Y9296A3QvZkrZHONXiF3ihx/rBX+WtyN3pacDmjMMRa3onztWDl4O7i
Bc70eWqBqVt6/PyvSvL38hnakNa2TZ0oUuD1tEH87LP4P7ly9MbBOnlA3sMi
GXrjgHdCN7husBm9cVC7kZ9XwG/EeHTgJeNh2ONBMXo6UMdK16xIrkFPF6wO
tri9L3qIni5sXOm8LuVAJXrfjvcoN//MqEBvPETFWmQ3BN1HbzxcFBSfjTlR
jp4eqM3nj1xtLEdPD6b8uMfrWeN99PRg2WlOpTyeevrg3V6y0G1WJXr68GZG
Y1prZBV6BmDZWO6nOELjM4Bc4f5AbVE1egbAhCvrI2WP0DOEVbLujYekNegZ
QqQo1Uhwoxa9CZC1LO+mPP4xehOgW+AasOQLra8JsOt6W6TOdjF6RqD3LyO9
Khl9fkZgqp4e6uBah54xfOztYvVl1KFnDO+S3IXen+rQMwbzIf/S3Mx69BhQ
fjzLPzTsCXoMqBS6fdwR0YCeCRRKfrs55VojeiYg6p0jFgub0DOBoqT0ZP/i
ZvQmgomen1trK633ieB4Nu/4K18Zeqbw8ujht9vrWjC/TCHQ+NPJo7vl6JvC
meogo+CQF7jeFHzzqnZ/nvkSr2cKwfOjXRNdaD8wg+m9Bu6r+W3omcG2eXK1
UL8DPTP46TZLqOnrQM8M3OZlB4rrO9EzA48Py4h2Zhd65lA4++hyR49u9Mwh
snOqx95S2k/M4dKFnAHORBV65vADOZUzda4KPXN4v6xMJlmkQs8CpJlVduku
tP9YgChEs6WrnXoW4KHb7343oRs9C/g1o1mrX9KFngUMXbyw7KQVjY8J16WK
4l1+negxYVpyjq5PKL1fJkTdLTnJONeGHhNs7qwZvZyhRI8JJzZx3HcmvETP
Eo680rdOFr5AzxK6F4bJDULo+7AEu4TfWvfGtqBnCUWzVx6RFkjRs4SuuPwN
QoYEPSswFA46t0U3oWcFHdPnDlha0/z5dpyqvqWaR/PNCiomW6fe7KP5aQU+
5lNGO0xpPltDjW/U/annaP5bQ8XdA7tGjonRs4aPtRaZP8hpPViDq+fWs5lx
1LMGr2v+8elO9ejZwE7V8EID5hP0bKD42D8rHCwa0LOBrqtLZr6wakTPBla5
Xxw5a/oUPRsI92V5Gw/Q/Y0FuSnB9UvL6P2yoLYmv7DGqRk9Fvw+7UvA9phm
9L6dD19PYg/S/siCfSlJ2n+ebEaPDarFPdeys2k9sWH5cIh3eir12HA6/I+5
TWupx4ZEhhc7ZAH12CCaGWsd40E9W8j13v04n0c9WyhLOeWTKKCeLQQrnDiy
OdSzhTDPVec/bKGeLQTusmR9raaeHUDC9I3K2RL07CDHmbgw5BL07GDD8mD1
/lNS9Oxg8w6D4dxdMvTsQLXCx8U6pQW9SXDc77Zmyaln6E2CgtEH9XNqaf5N
ghztFeJrurQfTAKx/Kjn8fkK9CZBY4C7V8Bhms8ckAZ2Cp48+BM9DiRHhSYE
tCrR48ClNo3Crr0VPQ5sS739bG95G3ocWLj1H5sOJbSjZw/9kS6hJ9Tt6NnD
dnWsSZkNrTd78KtfeiCAS/uLPdSNlHG+TKD7qT2c6W82zy+lHhe6fTZct2C1
f5/P4sKSWxsGD4XQ/sUFgdEvmivhrd/XL+LCsXb29fXeNH4uCEdrbf/9Fe93
HxeYWWu3rymh+zMXKpz+eJT4rZ7/5m5xobhyR7zXR/p9xYWyCPvl9/Kfffd6
uBA06NSSFkHfBw/yAlyHwx1lGB8PnB8qp6gspRgfD85fvBF8wUGC8fGg6rzO
nvPRNJ944HX5aZRiXxPGx4OlWq6ZE888xfh4oCwgIx36TzE+Hiiei6ziahsx
Ph4c8RS4MZqwX/Tw4Dnbfashi9YbH8LthYKSPPRYfGA63TwzGNiE8fHhl/T2
IEN9zN9FfJirlcX8K5HGx4db4V0FL7swn/fxoSDjYFxFCN2v+GPfD2ThDQnG
x4dtUz79rK9D+x0fXlQlH0kNkmJ8fACf3sq4JCnGJ4A1acKk/GOY/ywBLFl6
uygsR4r5IwDty4VtsnT0Fglgf9/UdTnr0YsXwOTniWdHfdDbJ4BV+qEXFhvQ
ehJAhnhak7AJ6++WABrS2pvJaXwfDQIYerspOHYt1mOPAB44djr814/258nQ
vONH5V1HCfkfUWFnQQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
cS3bRqxvFsy8xTQZntVE/gPa42EK
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
7UDzOxHSTfVcTIKqyH8BGo9d4w==
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxV1XdU01cbB/AIChhlJRAII2SgWLVKcVBRvI+Ki4IDrBYUVBCxivoiojKk
VNPCi9o6UXCAe1SGBkWGo8gKIwSBsMJUIggyKkMRaMvrc/947zk5Ob+T3/3c
7+/mee5P4LXXxUeNwWBI//2Mfv//6CaxMaPjLvltcOdQmX8XXqeRctOwrp7o
TjJ71uh4SbIe+q0a2P8ef5eSbCbkTGd3kC+OnNhsHspeGfwO7y8jsbMSMqen
tBLf7aNDQdhTDMojC1U4v5ocuThNeLLwDSkuGh1KovQvc4h53oxeI8l4L9uf
+7AR728iLM90ny2b69B/TcwMu5jW4dU4/w0p1RW+cKiuwPVU5Ly2vbd90Cv0
Wknn8J5vD1TK0GsjxmOO7XPdJ0WvnZz/7t5Ux+Js9DrInTlrN2l1vECvk9wv
nuE79kIGofvGi/kzp136GO/vJn1r3A4tcpWg30NqXnjPcNZ/gPP/IjXT1cOd
Hifheh+ImHUPHmsmoddLevMtjmxJS0Kvl6R7f1rplpqMXh8JLhrYy26lXj8Z
8WD+fHy5BL0B0nn63TlxSgp6H4lw5nwJ15Dm+0hUNy3TUjekoveJLNPlNJ4L
eILeIOk+XXK8eEcaep9J/2HtdjVIR2+IdCT4rbw9PgO9IZLcU7qwXpmB3jB5
FdHixFZkojdCXpzYumyN4TP0/iaOEf4jvpnP0WNAfezWr8X9dH8ZwNrZHevj
nYU+A0TRNUYJNtnkf9NnjQHbzw4aHntzcb0x4JNUOamVL0VPDRZI+5JjHIvQ
U4PI1Y6+U9pL0FODhBDeU/uRUsyjDj5rXArk88rRUwedi/cnhcUr0BsLytpC
9dVTqtEbCydX7/bclVOL3lio3brZKHBnPXrjoK3CSxQspvU6Do4Ozdnemt+E
nga0iL0H2wab0dOAqPNlcg6b1r8GDIs+5oUwW9DThL4tn2uqalrQ04QpyrBD
1WEq9LSAn6xIcvhLhZ4WXPzJ0dbS5i16WhBfm9hXv+AteuMhyle2eAXrLXrj
4Vne6earEuoxwfn6yrmnRNRjgrhvu6bW9hb0mFB/OLpWEP4GvQngcemE28DB
1+hNgEH1ivAd62j/ToQ9n19aN5s1oTcRNm0bEC942IDeRPBr1VRlC2g/a8Oe
Ng4n/HwNetqgcByRJAiq0NOBZAUvfn4x7W8dyMrOdN52sww9HcjojNX1ktD/
VxfyE52m/ThUgp4uuD7Zen7IoBg9Pags6qrsSSnA+tID32dHetWU+ejrgfrv
Oj6Bv+ThfD2w5rq4R97JxfX0wK4iyFVjXi56+tBx8srZPqtc9PSh8667n8e2
XPT04YVXvD9XSetXHzLB6cSD0Dz09GGFw0KNGbPz0WPB0OZH7IaefPRY0Ghp
qq93W4oeCzzMJN5xywvQY4Fa8eINgQUF6LHgVYPR5YqvCtFjQ33FpqRI70Lc
HzaYXPUYqzxUiB4b3OO+SwjaU4geG6I2/HiN61SIHhtyBQci9MyoZwAwrk3r
z3cF6BnAkLjqp/6cAvQMIOehA2tmJs1nAOk7Lkyur6X5DODjhB/qEm2oZwjO
nO2hsiKazxBqknfLlqXQfjaEQyVct93dxegZQm6tVOL/C+1vQ+BE3/Ucly5H
jwOeC/yzbyhpPXBgo1flqpVWZehxoLLBndlwlvY/By5IXBMSeQr0OJBWF9B9
KrMSPSOY78qws/WpRs8I1kRMstqnU4ueEciePj16LkGJnhG4qmzWltnWo2cE
VZG+rLhrDegZw0CMaJHmvkb0jEHRLw2K/dSInjHkKQL77bY1oWcM3ySFPGpJ
bELPGNxDrdrCKun5wgVpyMjOFmUTelx4XDqNM/yM9h8Xtt27fzspjHpcsGs5
Z/XGnHr/Xh88QHbHNaJnAs2Hn3C6NGg+E5DoJcSHPqhHzwT2y7Wy/jOrDj0T
YJLejJlX6PloAoFZw33HhqrRMwXpO/mk9W5V6JnCzMDdExnPFeiZQvw6ho+D
bQV6prDxaP+IooD2tymEHWw9zf+Zvs/NIGiQq6u1hf6/ZuBrHZhSuEuOnhnE
G8i4Cmfa/2bAGXA85mApQ88Mpo0EJL//gZ4H5lAw597wHVUReuYwy6fBPCCH
1p85zG7fUNrwrgg9c7iw7JjbVcdi9MzhgKhJx6KSejywvxP40eCIDD0e5LUU
18yxL0GPB+FX3K2lgzQfD6LZF7dYbJCjx4P4pXs03G7ReraAqu6v5t9XydGz
AMvWunHtBqXoWcDk0EUddjNL0bMA3wDBB8GcUvQsoFxWxBFblaLHh7XK1yGn
tPB+Lh9CDp/+41atHM8bPiSWpVyxuIl5nPiQWjLGgb+T7i8f1KXfX15njfnC
+XDyjHj/+s/0efhwOOryJ25yyRdPwgfm0YKNU6Nov/Jh5NGrazFncD9UfAic
/AepKi/BfALQth2Os5wqx3wCSLy1Sqc/iuYTgFj3+ze/a+PzOQnAze+kFB7Q
/RDAUjNRZG8A1ku4AKqGX/YQlzLMJwC7i46WocvLMZ8AnpzJ4r13rsB8AjA+
ful+ryfWp0oAXy+38VsVQM8DIQTzGPkuR6swnxDmynfNWxhRjfmE8KF3mkbw
wRrMJ4QZ0kvXXzvR80IIjF/TVbpjlJhPCFnXu0IifqPnhxDSmqOXDHYrMZ8Q
7MNKbvhOqsN8Qljc5OVqN7UO8wnhRurSX9f/jR5DBCuYIetMbqHHFcFZ1jff
rhYosX5EULh2rppeIParkwhmaETK4m/VYD4R5Ih6XewzsX/DReD839tb6zPx
eWNEsITZyf+UVPnFk4jghiJNbHeZnp8isKuel7joOL6vVSKwqb6buFFcjvks
QR6n937J8TLyD25YfXM=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Probabilities\"", TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \
\\!\\(\\*StyleBox[\\\"t\\\",FontSlant->\\\"Italic\\\"]\\)\"", 
      TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->207179694,ExpressionUUID->"b4c46b62-6915-4e7c-ab1b-118acdd8c11e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "1d018b9f-de4f-4014-a7a0-d437f4f0427d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1261705519,ExpressionUUID->"bf7fe9cf-e683-405d-a8ed-38355ca84e97"],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355,ExpressionUUID->"84a8bb94-3738-4fdd-998a-a676c410b0b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[1]:=",
 CellID->427878852,ExpressionUUID->"c815928d-30dd-4306-9226-763c59a5b978"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     TagBox[
      SuperscriptBox["\[Sigma]", "0"],
      DisplayForm], "+", 
     TagBox[
      SuperscriptBox["\[Sigma]", "x"],
      DisplayForm]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->411596753,ExpressionUUID->"94bb4553-c54a-49e9-abe9-e8e394b47098"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[2]:=",
 CellID->1686455809,ExpressionUUID->"36708342-88a8-45d9-ba11-abaf2e30af68"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->1773608757,ExpressionUUID->"7ff2ca08-e5c0-4c88-8805-fedfe21494b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"+\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     SuperscriptBox["\[Sigma]", 
      StyleBox["\<\"-\"\>",
       StripOnInput->False,
       FontSize->Larger,
       FontWeight->Bold]],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2076444501,ExpressionUUID->"13048497-3ef8-4e37-bcfe-c3bfe9429177"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", 
         RowBox[{"Normal", "@", "opH"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->813112276,ExpressionUUID->"d7546a56-0010-41b9-99ea-dc75f1899826"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[155]:=",
 CellID->1784536049,ExpressionUUID->"bc16abb5-8102-4e80-9745-3750cea4d2cf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[155]:=",
 CellID->940761541,ExpressionUUID->"9ae2fba8-4170-46d8-9936-cbb6e03a216d"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"avgX", "[", "t_", "]"}], ",", 
     RowBox[{"avgY", "[", "t_", "]"}], ",", 
     RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Elaborate", "@", 
        RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Pauli", "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], ";"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->1408697964,ExpressionUUID->"942a0c5e-92d4-4678-9f8b-c07198769f23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->743762978,ExpressionUUID->"b6b8f868-4683-4b1b-9c7e-17ccfd969eed"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlM01ccwHEOuWHch9xtYVzakcHCxOH7IeMwXFHKvMK5IRMYlcolsnEV
naAwqGUKLK5AKDCQygBBlMrQoaYtoYSRMYpuTA5nGThgIMc21p+/5J+m6Xuf
l3zfP6XEM48kqCgpKSX89+x8vpntf3bmKam+vjO9pGbpwB+0MRl+f0zYdVT/
kO8miKfHzoyS1qcj6zF9P+HvP5NiJ9cz4yAlCu0ZcapYGXVfeILrp4lByrVZ
B/oASTy1MzPEvWqM5DffxP3zxP1Afs8v2myhWLQzL0noh50yy9IOocJbJPwB
D9fTTveFivVLhNXmk/7qzkOhwv+LDOvJ68/MPMb9y8Q7em6WyhMJFeetko6e
WdnfS2L01sjkDe92sVyM3jpxtU8tIF0i9DbIQFdr40HWE/Q2ie7ZY+nFkUPo
bZPwxYzCSc4gekpgzrSUZA7143oloHLbPDtXutBXBruVNbc89xbcrwJeZhGi
G/RKPE8VAg+3tXI3S7DfLkiunF2jShqIwtsFZ+Paa7eOCrCXGojfnY4o0+/C
nuowlBmU92dOD/bWAEGbTgWr6g56mnDBkx4cntKHniYc02XE/m7Uh54W+PTK
G5paetHThpTjbtkzJ2+jpwO1E+dcoxid6OnCN34m3dMPBOjpwq+PeGbB/c3o
6cFpc0m+NZ+H3lvgt7D3mtiHg54+dGR3J9xLY6JnANFzgqVxFzb2MQDZixJu
+4kq7GkA72nu70sO/Fb4/3YPQ6gTP1z19WnAvoZg9KOjtUSZj/dhBItZlMRy
bhN6RlBHvx3lq9aMnhGw93ndpH/ahP2N4YqxejqZakTPGNh7pO9PXWlAzwQi
pL0aYh4PPRMoKS7WUyurRc8EfNaq24IiueiZQuaIY/jgs1L0TEGPYrPpKcxB
zwxe7y/PSCmlYh8zSEt12+MddA57moFHEiekL+wi9jKH+nIjWZHKV9jXHIyX
4xjRYRzsZwHbmVYudwu56FlA3FEGJ6u+Cj0LuDvscstZWIXebuAz4uGSnIve
bsibOhHHC72KniW81BYwx1Qr0bMEpofGwjizDD1LuCpvlfi+/SV6VhDYJQu4
lVuAnhXQNawkWoUZ6FmDk/SLvZ3zsehZQ7frWMXW5VDsZw3Hw4IOvTb+DPvZ
gK/PJxOOD7Kwnw2ETFpoHXHOw362EO8/Ks0NLsT7sIV3HrXkPFd98/9hC1V8
g4zng2z07MD00tb5j2vY6NkBZ7joe0pdEXr2IAoYoWmtFuD7ZQ9y0WJJPysP
fXv42rMwZpmSg/vtoWbc1UHXPx3Ps4fzhqx6QXAKehRgDibM8Yxj0aPAb+W5
mxc/90WPAqMpSaIEziHsRQEvZ8+kxoEY7EsBvrbhyYWRROxHBSfafIdEJ5Uo
PCrQzf3cVD5Iw55UYKlrXk4tYaFHBYvCH7L711noUaEmilwXVLPQo4GIEcm7
x07D+6OBzSuZvkozEz0a1O1rmXZhJKNHA/aG8v3psFPo0WBD6vhiQBaLngME
HA6Tx174iPwLGwa8+Q==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0n1Q03UcwPHFg6CAwIAxGI49SJeVusX05PH7AQ4Bo3g6wkJCRJ47QB4t
EFQUOBEsCBFQYMmDIuPxCtCLCVM41AlIULrYDJDFQYWGPEmQtI//9Lnb7X63
7+f13b039pE43zA1CoUS9vq18f7/KSvdmE4izHKeyuR1ENVzP1Evt1AY5vcS
gfXGDJOX7iuSDPMB/PwxSfk1+ZX//UdEpTwlTf3WrJyln/D8BCmjrL4fQB8l
EeEbM0X2+XgvPdw3ivvTJFHC587EjxDpg42ZJX39n8z9LB9Gb46kZ/dFbaod
wvPPyWV9d+2sJ1L0/yaiAHlZcWcf7s+TQqXQiGfTjfctkOnNdZFLB75Hb4mM
XdeUXjMQordM2Dw7pUh2TqzyXpGRDGXG/MsbYpW3SnZrGaemarWLVd4aaQdp
/aRHlxizAaWeV5Y51I3nKcBgegUbnZWIVf5bIPTy+lPqegf31aAu9uM/tnDv
4H3q8DsN5KPWEvQ0oEFXfdyt+I2nAUF7kwtzh7rQ04QpwaOg49Wd6G0C0anG
+hezbehpwZnTTt86Tt1ATxt4FQrJ8Ewletqg8O49rKd/Gr3NkLDOHztBz8Ve
W6BKRmm0+64C++qAZ8mVgmZGHfbThT67rPd0bEXYWxfMGIWGynvN2FMPBAZO
IcdorehtBRclizmc04qePixe+ifIfncregbwQqQbm8ptwfMGYEVfU+ugNKFv
AH8pGm9G3asn/61bG8I39KQ5n6kavM8Q/HnLLvElVehRocZNszPU4SJ6VLiV
TC7Tx7PRo0JF5v3AokA//D5GYBP+uUMN/yT2MIKWiQtnzPlfYz9joFZb0thj
F7G3MfhSn9vdXCnHnsYgHf1wUTutEvubQI9tx7vC5ir0TKBiwcko+mkVejRY
/0WjITeoCj0aSBj763PSK9CjQXiMXQLHthw9U1iVa43Y7ypBzxTSR8TOkuJC
9OjQlC9vpwTmoUeH6YyFu58Gn0KPDpMrtR6iglj0zGCB08wOLXfDfmYQep1i
f9UvEfuZgydX0dbdeBL7mYOH1mBt0aE3/cyhoHTWI6D0HPZjQNxcy7PEQ/no
MYC/HBz3magAPQvw5k3rtAoL0LMAqHwniRmYj54FHD+/+NttjTz0toFk/smz
osEc9LZBqev22dvzWegxwShokG7qm4keE0wmI0NG3VPQY0Jmg3XblZho9Cwh
pX3Hpr1yH/QsYcnmocB/zRP7seDxpETgUhomVv2/WBAjUYtwksVjTxb0zKp1
RV5Lxv4sWKdeGrBif4l9X+//cCRC1zkNPTY4XD3BUJiko8cGun9bX29bGnps
CLQ/e36Pw1fosUHAKttRJEtFjw2+vcvKgR+T0OOA/Ud5Ocsmx9DjQLB9y8TI
zmj0ONAvo2w9OBmCHgf2J/TUHTjohx4HFr/Y9XZc9k70uKB9Sy+j19EV+3Ch
WpZf7WEVgD25kHqUtVB39zD24oLhjI3j0oOj2JcLfPEFVlF5BP4e22HUa7x5
zwdR5F8lh7hS
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU2cYBvAiV5EhlwIFSull0zgZw8Eki+h5a8DhLAZkUKbpgnKVCgjG
VeYYMjBSEJEWaIu3oBK1gkwCgyZoubfVAgN0aHROJNC4sCFxIASEyfze/rEn
OTn5ct7n956cHM6BzD1Jq2g0WtK7a+X+/1SrVqKhBNrxuO25cu37s4ESTFlv
/b3ssjYocCXDVFxga9quYjV5/piK87YT+o/+rH2vPKeGxSz78I+ayPwYFTpU
P/WrZ4s2JXklE5R93ZGkfb0a0n9J1e0wpXRsatP2GVcySYVXagY+P3CXeK8o
fvtX0Wr/djI/TR18MKlk0DuI/5pyGBmS3R7rIP1/qPKAerb0UifZN0st+r0p
PbGzi3hzlGX/9d27xrqIN0+leTcfO5LRTbwFyvIKr1A02U28Rep+lIku+LaH
eEvUd19fZCb09BCPBjJdwC01t5fM06Doj9g+Z0kv8S3gGd2q83BXL+mvAkbh
jH+JnY7ss4T+GEeOy5c64llBe8b8cG2ejnhW8NTZ7YuRRh3xrKHG93HOhlEd
8WxgrW8q33WNnni2cCiKMbscoCeeHeyw9eiKjNYTzw6WN8ZXiLL1xFsN9pkW
c0fP6IlnD5HJAy9Hr6G3BvbFdpa8uIueAzhp2X2Nw+g5QNtUvkXRBHofQOvx
ywdlb9BzBKm35a23NgbirQWp6VTkNN1APCfYnBDkVM4xkHknUDRtDnvrZyC+
E4wn9AZGBxu0/9UDneFKJltYDwayzxm2yeNreTvRc4EKzpjxfiR6LrAh9olY
I0TPBS7wpduXRPg+rrBQeydenYCeK+xtXNptTEWPDsdPdAdmpaNHh9zMj2eu
ZqFHh5EGsTD7KHpu8Nf6HMbYMfTcYJw5ZUf7AT13mF93kzv4I3ruwLy65YIo
Hz13qM4Q0eoK0POAFI+WoM6T6HlAaOGirPYUegxYd7hmeq8UPQZ8Wr3t9kQx
egx4EmvQCU6j5wkF6Zp7Z0vR8wRJW/Bc8xn0vKDML53SlqHnBee22oY3nEXP
C1IzrHOKytHzhj1/P18SyNDzht++YQ0uydBjwsigsOWSHD0mJIYZIzZVoMeE
oLq81c0V6PnAtbbZLX6V6PlARIPCXVmJHgvkLa3185XosWDeJnEhqgo9FrQe
ejRaU4WeL8RY933yZxV6vvBQk6vcqECPDcpHJw3JCvy/2KAuKI07r0CfDWJ+
f79RgX028OXZ1+cUuI8NM+4PYthK9Djwev+5kFAlehwYl3S3JirR48CypNjn
JyV6HBh6GvLLeSV6HLDPoumazB4Xsky5pffMHhdOP8zjPzN7XOiozXd7Zfa4
sN8UEExToceF0BsvBhxV6PGg7eKiFVOF34cHBZKYufUq9HgQUlmi/0yFHg/k
kujyELPHg6TgO+Iws/chpEm+z4h4d/4XWTToOw==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394678435528743`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1420327328,ExpressionUUID->"4963cefa-eeef-490f-a1ec-e9eb2834f640"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b4a4e403-87db-486f-9f46-6df858cf097d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002,ExpressionUUID->"6c6086ea-f898-4f31-a961-60cb0a91dddd"],

Cell["\<\
Let us consider a single qubit and solve a master equation specified in the \
Pauli operators.\
\>", "ExampleText",
 CellID->1536645940,ExpressionUUID->"13ba2c7c-eb30-497d-a664-288462e86380"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->1470681252,ExpressionUUID->"4ca10a4f-b2ee-4c7c-a385-d972758e4d74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->963207285,ExpressionUUID->"739a2fe6-9326-442b-94ff-66da68834ea1"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"x\""}, "RowDefault"]},
      "Superscript"]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->47070641,ExpressionUUID->"704aa0b2-20df-4e16-978a-595ce7b3f04e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[3]:=",
 CellID->1701417680,ExpressionUUID->"72746c94-eb8f-45f8-94a2-3c469ac8962c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->682224499,ExpressionUUID->"7f2f8310-1d19-4fd1-abde-fb6d3f77b38e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->540576344,ExpressionUUID->"60596c10-8c69-4d66-9aec-460ce7145be9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ops", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{"opL", ",", "opH"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "ops"}]}], "Input",
 CellLabel->"In[5]:=",
 CellID->39881190,ExpressionUUID->"e6aeb91b-7ae8-4033-ad9d-1b00cfa9aa0d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"+\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"-\""}, "RowDefault"]},
      "Superscript"], " ", 
     SqrtBox[
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]]]}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->865973765,ExpressionUUID->"aeda520a-62a7-4b3e-993f-44b7524cefbb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", "opH"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"ops", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->719143774,ExpressionUUID->"2b945f9f-46b5-4a50-a135-88017bc822d7"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[171]:=",
 CellID->1767555474,ExpressionUUID->"786b3b9c-5c0b-4166-bfce-ddc1d91b79df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[171]:=",
 CellID->1163562567,ExpressionUUID->"250cde94-6c5e-40c7-b072-2a619113a548"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"avgX", "[", "t_", "]"}], ",", 
     RowBox[{"avgY", "[", "t_", "]"}], ",", 
     RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Elaborate", "@", 
        RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], ";"}]], "Input",
 CellLabel->"In[7]:=",
 CellID->1210483635,ExpressionUUID->"c31fd6fe-1698-40ff-8b20-2a118e097b9c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[8]:=",
 CellID->1754552550,ExpressionUUID->"107570e0-ad6c-4a96-9b77-4fdb3ba9d23f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJw11AlM01ccwHEOuWHch9xtYVzakcHCxOH7IeMwXFHKvMK5IRMYlcolsnEV
naAwqGUKLK5AKDCQygBBlMrQoaYtoYSRMYpuTA5nGThgIMc21p+/5J+m6Xuf
l3zfP6XEM48kqCgpKSX89+x8vpntf3bmKam+vjO9pGbpwB+0MRl+f0zYdVT/
kO8miKfHzoyS1qcj6zF9P+HvP5NiJ9cz4yAlCu0ZcapYGXVfeILrp4lByrVZ
B/oASTy1MzPEvWqM5DffxP3zxP1Afs8v2myhWLQzL0noh50yy9IOocJbJPwB
D9fTTveFivVLhNXmk/7qzkOhwv+LDOvJ68/MPMb9y8Q7em6WyhMJFeetko6e
WdnfS2L01sjkDe92sVyM3jpxtU8tIF0i9DbIQFdr40HWE/Q2ie7ZY+nFkUPo
bZPwxYzCSc4gekpgzrSUZA7143oloHLbPDtXutBXBruVNbc89xbcrwJeZhGi
G/RKPE8VAg+3tXI3S7DfLkiunF2jShqIwtsFZ+Paa7eOCrCXGojfnY4o0+/C
nuowlBmU92dOD/bWAEGbTgWr6g56mnDBkx4cntKHniYc02XE/m7Uh54W+PTK
G5paetHThpTjbtkzJ2+jpwO1E+dcoxid6OnCN34m3dMPBOjpwq+PeGbB/c3o
6cFpc0m+NZ+H3lvgt7D3mtiHg54+dGR3J9xLY6JnANFzgqVxFzb2MQDZixJu
+4kq7GkA72nu70sO/Fb4/3YPQ6gTP1z19WnAvoZg9KOjtUSZj/dhBItZlMRy
bhN6RlBHvx3lq9aMnhGw93ndpH/ahP2N4YqxejqZakTPGNh7pO9PXWlAzwQi
pL0aYh4PPRMoKS7WUyurRc8EfNaq24IiueiZQuaIY/jgs1L0TEGPYrPpKcxB
zwxe7y/PSCmlYh8zSEt12+MddA57moFHEiekL+wi9jKH+nIjWZHKV9jXHIyX
4xjRYRzsZwHbmVYudwu56FlA3FEGJ6u+Cj0LuDvscstZWIXebuAz4uGSnIve
bsibOhHHC72KniW81BYwx1Qr0bMEpofGwjizDD1LuCpvlfi+/SV6VhDYJQu4
lVuAnhXQNawkWoUZ6FmDk/SLvZ3zsehZQ7frWMXW5VDsZw3Hw4IOvTb+DPvZ
gK/PJxOOD7Kwnw2ETFpoHXHOw362EO8/Ks0NLsT7sIV3HrXkPFd98/9hC1V8
g4zng2z07MD00tb5j2vY6NkBZ7joe0pdEXr2IAoYoWmtFuD7ZQ9y0WJJPysP
fXv42rMwZpmSg/vtoWbc1UHXPx3Ps4fzhqx6QXAKehRgDibM8Yxj0aPAb+W5
mxc/90WPAqMpSaIEziHsRQEvZ8+kxoEY7EsBvrbhyYWRROxHBSfafIdEJ5Uo
PCrQzf3cVD5Iw55UYKlrXk4tYaFHBYvCH7L711noUaEmilwXVLPQo4GIEcm7
x07D+6OBzSuZvkozEz0a1O1rmXZhJKNHA/aG8v3psFPo0WBD6vhiQBaLngME
HA6Tx174iPwLGwa8+Q==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0n1Q03UcwPHFg6CAwIAxGI49SJeVusX05PH7AQ4Bo3g6wkJCRJ47QB4t
EFQUOBEsCBFQYMmDIuPxCtCLCVM41AlIULrYDJDFQYWGPEmQtI//9Lnb7X63
7+f13b039pE43zA1CoUS9vq18f7/KSvdmE4izHKeyuR1ENVzP1Evt1AY5vcS
gfXGDJOX7iuSDPMB/PwxSfk1+ZX//UdEpTwlTf3WrJyln/D8BCmjrL4fQB8l
EeEbM0X2+XgvPdw3ivvTJFHC587EjxDpg42ZJX39n8z9LB9Gb46kZ/dFbaod
wvPPyWV9d+2sJ1L0/yaiAHlZcWcf7s+TQqXQiGfTjfctkOnNdZFLB75Hb4mM
XdeUXjMQordM2Dw7pUh2TqzyXpGRDGXG/MsbYpW3SnZrGaemarWLVd4aaQdp
/aRHlxizAaWeV5Y51I3nKcBgegUbnZWIVf5bIPTy+lPqegf31aAu9uM/tnDv
4H3q8DsN5KPWEvQ0oEFXfdyt+I2nAUF7kwtzh7rQ04QpwaOg49Wd6G0C0anG
+hezbehpwZnTTt86Tt1ATxt4FQrJ8Ewletqg8O49rKd/Gr3NkLDOHztBz8Ve
W6BKRmm0+64C++qAZ8mVgmZGHfbThT67rPd0bEXYWxfMGIWGynvN2FMPBAZO
IcdorehtBRclizmc04qePixe+ifIfncregbwQqQbm8ptwfMGYEVfU+ugNKFv
AH8pGm9G3asn/61bG8I39KQ5n6kavM8Q/HnLLvElVehRocZNszPU4SJ6VLiV
TC7Tx7PRo0JF5v3AokA//D5GYBP+uUMN/yT2MIKWiQtnzPlfYz9joFZb0thj
F7G3MfhSn9vdXCnHnsYgHf1wUTutEvubQI9tx7vC5ir0TKBiwcko+mkVejRY
/0WjITeoCj0aSBj763PSK9CjQXiMXQLHthw9U1iVa43Y7ypBzxTSR8TOkuJC
9OjQlC9vpwTmoUeH6YyFu58Gn0KPDpMrtR6iglj0zGCB08wOLXfDfmYQep1i
f9UvEfuZgydX0dbdeBL7mYOH1mBt0aE3/cyhoHTWI6D0HPZjQNxcy7PEQ/no
MYC/HBz3magAPQvw5k3rtAoL0LMAqHwniRmYj54FHD+/+NttjTz0toFk/smz
osEc9LZBqev22dvzWegxwShokG7qm4keE0wmI0NG3VPQY0Jmg3XblZho9Cwh
pX3Hpr1yH/QsYcnmocB/zRP7seDxpETgUhomVv2/WBAjUYtwksVjTxb0zKp1
RV5Lxv4sWKdeGrBif4l9X+//cCRC1zkNPTY4XD3BUJiko8cGun9bX29bGnps
CLQ/e36Pw1fosUHAKttRJEtFjw2+vcvKgR+T0OOA/Ud5Ocsmx9DjQLB9y8TI
zmj0ONAvo2w9OBmCHgf2J/TUHTjohx4HFr/Y9XZc9k70uKB9Sy+j19EV+3Ch
WpZf7WEVgD25kHqUtVB39zD24oLhjI3j0oOj2JcLfPEFVlF5BP4e22HUa7x5
zwdR5F8lh7hS
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
     LineBox[CompressedData["
1:eJxd0ntMU2cYBvAiV5EhlwIFSull0zgZw8Eki+h5a8DhLAZkUKbpgnKVCgjG
VeYYMjBSEJEWaIu3oBK1gkwCgyZoubfVAgN0aHROJNC4sCFxIASEyfze/rEn
OTn5ct7n956cHM6BzD1Jq2g0WtK7a+X+/1SrVqKhBNrxuO25cu37s4ESTFlv
/b3ssjYocCXDVFxga9quYjV5/piK87YT+o/+rH2vPKeGxSz78I+ayPwYFTpU
P/WrZ4s2JXklE5R93ZGkfb0a0n9J1e0wpXRsatP2GVcySYVXagY+P3CXeK8o
fvtX0Wr/djI/TR18MKlk0DuI/5pyGBmS3R7rIP1/qPKAerb0UifZN0st+r0p
PbGzi3hzlGX/9d27xrqIN0+leTcfO5LRTbwFyvIKr1A02U28Rep+lIku+LaH
eEvUd19fZCb09BCPBjJdwC01t5fM06Doj9g+Z0kv8S3gGd2q83BXL+mvAkbh
jH+JnY7ss4T+GEeOy5c64llBe8b8cG2ejnhW8NTZ7YuRRh3xrKHG93HOhlEd
8WxgrW8q33WNnni2cCiKMbscoCeeHeyw9eiKjNYTzw6WN8ZXiLL1xFsN9pkW
c0fP6IlnD5HJAy9Hr6G3BvbFdpa8uIueAzhp2X2Nw+g5QNtUvkXRBHofQOvx
ywdlb9BzBKm35a23NgbirQWp6VTkNN1APCfYnBDkVM4xkHknUDRtDnvrZyC+
E4wn9AZGBxu0/9UDneFKJltYDwayzxm2yeNreTvRc4EKzpjxfiR6LrAh9olY
I0TPBS7wpduXRPg+rrBQeydenYCeK+xtXNptTEWPDsdPdAdmpaNHh9zMj2eu
ZqFHh5EGsTD7KHpu8Nf6HMbYMfTcYJw5ZUf7AT13mF93kzv4I3ruwLy65YIo
Hz13qM4Q0eoK0POAFI+WoM6T6HlAaOGirPYUegxYd7hmeq8UPQZ8Wr3t9kQx
egx4EmvQCU6j5wkF6Zp7Z0vR8wRJW/Bc8xn0vKDML53SlqHnBee22oY3nEXP
C1IzrHOKytHzhj1/P18SyNDzht++YQ0uydBjwsigsOWSHD0mJIYZIzZVoMeE
oLq81c0V6PnAtbbZLX6V6PlARIPCXVmJHgvkLa3185XosWDeJnEhqgo9FrQe
ejRaU4WeL8RY933yZxV6vvBQk6vcqECPDcpHJw3JCvy/2KAuKI07r0CfDWJ+
f79RgX028OXZ1+cUuI8NM+4PYthK9Djwev+5kFAlehwYl3S3JirR48CypNjn
JyV6HBh6GvLLeSV6HLDPoumazB4Xsky5pffMHhdOP8zjPzN7XOiozXd7Zfa4
sN8UEExToceF0BsvBhxV6PGg7eKiFVOF34cHBZKYufUq9HgQUlmi/0yFHg/k
kujyELPHg6TgO+Iws/chpEm+z4h4d/4XWTToOw==
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394678435528743`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[8]=",
 CellID->821265604,ExpressionUUID->"9b396dac-1dbb-4db3-a98f-69181bbd2236"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "a3f658e1-a98d-44b1-b729-32e60c683a2a"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->1593892289,ExpressionUUID->"a2f05ac8-0c37-4cf8-af27-ffdbffdccb74"],

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "ExampleText",
 CellID->210970783,ExpressionUUID->"5e0ea816-f129-452d-b8c6-f8a03fac6208"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellLabel->"In[1]:=",
 CellID->290448684,ExpressionUUID->"13506f15-fa70-4351-9b7c-a2fe5ae160d1"],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357,ExpressionUUID->"d7a3efa8-58dc-4273-b9b5-9e187d427d3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[2]:=",
 CellID->993111197,ExpressionUUID->"7199ca15-0cb0-4cb4-a5ac-10210d160cf6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1597635627,ExpressionUUID->"90c99b1a-52f4-4c3b-ac07-87b88eb03db8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellLabel->"In[3]:=",
 CellID->501635503,ExpressionUUID->"a0f670ae-fc36-4294-8fe9-5820e486e4c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"0"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"1"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"+\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->553239788,ExpressionUUID->"5755fb77-7c2b-4232-9157-153bd59cdcf9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"+\""},
           "RowDefault"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"+\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1844409053,ExpressionUUID->"4b9e4cce-d514-456a-ae5b-231324041f90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gen", ",", "vec"}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"LindbladConvert", "[", 
      RowBox[{"opH", ",", "opL"}], "]"}], "//", "Normal"}], "//", 
    "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"{", 
   RowBox[{"gen", ",", "vec"}], "}"}]}]}], "Input",
 CellLabel->"In[4]:=",
 CellID->1865696334,ExpressionUUID->"9ac540e4-6572-4533-9b34-45e3439193cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "-", 
           RowBox[{"2", " ", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"1", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox["3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "+", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], "0", "0", "0", "0", 
        SqrtBox["3"], 
        SqrtBox["3"]},
       {
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]]}], "-", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"0", "\",\"", "\"+\""},
            "RowDefault"]], "+", 
          RowBox[{"2", " ", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]]}], "+", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"1", "\",\"", "\"+\""},
            "RowDefault"]]}], 
         RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], "0", "0", "0", "0", "1", 
        RowBox[{"-", "1"}]},
       {"0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], "0", "0", 
        FractionBox["1", "10"], "1", "1"},
       {"0", "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]]}], ")"}]}], "0", "1", 
        FractionBox["1", "5"], "0"},
       {"0", "0", "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], 
        RowBox[{"-", "1"}], "0", 
        FractionBox["1", "10"]},
       {"0", "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], 
        RowBox[{"-", "1"}], "1", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"+\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}], "0", "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", "1"}], 
        RowBox[{"-", 
         FractionBox["1", "5"]}], "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]]}], ")"}]}], "0"},
       {
        RowBox[{"-", 
         SqrtBox["3"]}], "1", 
        RowBox[{"-", "1"}], "0", 
        RowBox[{"-", 
         FractionBox["1", "10"]}], "0", "0", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            SubscriptBox[
             TemplateBox[{"\[CapitalGamma]"},
              "RowDefault"], 
             TemplateBox[{"0", "\",\"", "\"-\""},
              "RowDefault"]]}], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], ")"}]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {
         FractionBox[
          RowBox[{
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "+", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], 
          SqrtBox["6"]]},
        {
         FractionBox[
          RowBox[{
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"-\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"0", "\",\"", "\"+\""},
             "RowDefault"]], "-", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"-\""},
             "RowDefault"]], "+", 
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"1", "\",\"", "\"+\""},
             "RowDefault"]]}], 
          RowBox[{"3", " ", 
           SqrtBox["2"]}]]},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"},
        {"0"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->2083745664,ExpressionUUID->"1740c2ba-8feb-4c89-b16f-9e7510e61228"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"10", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellLabel->"In[5]:=",
 CellID->260219023,ExpressionUUID->"8f5a9fff-381e-487b-8da0-6f421bbd0c4e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.008644`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1019848997,ExpressionUUID->"51a2b1b5-3de9-4748-8968-7abb0ce87874"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", "t", " ", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"10", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",
 CellID->1542313529,ExpressionUUID->"9411986a-bedd-45d8-af1c-a06b5c5996a7"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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
YauaSdLdLiW0/0JLp9LYDGtO78Vv9BP5PHd5WbezGeYyVJNthpXQ+rQ8reFw
MwxMvZQ6OqGEIR1+WSbzzdAky5uqM6uE93Yp6h5fa4ZKuxBZhUUl7GcwrSUz
EP2S/Pc13y8lPGnLV0LZToWUIWcFhjUldHLitf5G1Fu02EjGj02CrX6n3BMh
+snqlPIgvTKuPvXwrCLOmyvdOmplrMqo66ua+oP4flnx5eS+5lLGa2FTf+aI
fj1qJqkexa+Mr24X89w5RgUydesuVwlltEEO9/uOVJBk8ys+J6uMH/c+i970
pALP4e+7Dykp44lzcR38d6mwWt+hLbtLGdvzN2T0XhH17vH1t7+2MjaNSArm
FVJBXLI2vwOU0S7l79J8HRUO+BUq3j2ojDlLIp5N81SwVsic6DdVxgmT13Ee
dC3g1vkqWeOUMiblv96Y5yfe86QnQmPnlTGGpHXOfD9xHxkI7dSxV8avNXeP
HDnXApTQwMgnV5Qx4ehfHkHPFpgZu85s4KGM5XaJ+3ZntIBOzLG1l6FE/K4X
mmNFWuGYkUnxn3Bl9JM8++6ETivYLYPb8Shl7NE4Lzhq0QphR9RmaF4oY1BW
cWVofCv007L1ni9SRqv3D6yHFNpgMZsxuqRMGYdaJhIMTduAwWrjOHulMh7b
TVL28mgDleK5horPyhju64BGNW1w68qXd6JDypi2cyVd92o7RPJXe3iMKyP/
ZyVKf3Q7pNWUkb/OKKP0vmqVPdXt0CSW8cbvF6Ef8rlxi3XAjraQmD5mFfxv
qlb8e18HVOoYecfsUiHOP7FMX/cuoGet2sP7QAV19h+uVF/uBY3Cdi2uCBXk
aRjZQaPQB3aWU9rsUSrIVX3lV6d1H9S8Yd+7LUkF+3313e9/7oMgI+t9G/kq
eP9fKrfly35gCPh7YLxXBd3oJm7cMP4GGnLsh0YGVfC5a8LQdt9vYNckeXhw
TAULW3/MHsn+BjUiB4/2LKhgdZe0fAn3IAS9e37iK50qrsfwW3n1DALD8i7L
IkVVdB9jLupKHQKN2ANW+WqqiMtNSVHvh8Bu37lzORqqyPfy0vG/1CGoCQ86
/0ZPFSm/PhUUrA1BkHLbxYQTqhjsPc/55MAwFLZN2MWeUUWfuOShA1bDMOaz
Zv/Milg/+tciynkYDBskLj92UMUcyUemw4+HgdHB1emujyoGXr3SytM2DJqs
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
eGQ34JY9qaGvk7vhf7KiCfk=
          "]]}, Annotation[#, "Charting`Private`Tag$29436#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1:eJwUV3c8lu8Xlqwke+8tr/WaJXJOSLSVpD2sEiVfiVJUkiRkb5KIZGWTiOzt
JaG89sxIhIzf8/vr+Vyfc59zn+u6z3nuc0tcvXXCmpaGhqaDgYbm/9+qmy8r
zj95q+elcmBjc3MWCk1Pj/wueQJX1hb3dm/MQmxz7M+akmAweeQQrbA2Cxf/
BBwMi4yFrrSz0at/Z4F9x75zOSVvgKoWv7j/9yzMie15FZn2DqR8IJ51ahba
1NRrPCM/gGKzbtapwVn4Lhm2oW6YDZmjji7C3bNgkh4UmVLyERID91haNc5C
sWaAhpB6PgRU2oupfJ4F0ucXLf5phRDgkOTyMGsWoox97GglS+Ddj8t2Zgmz
wNzuRe8S+QlafB4LfPSfhbIP2OrMVA57pV72xdyfBZffZbHKhhWg0nbLhNt2
Fkbvl+xOLKmEwNTItHztWYgr12Y4/7cKXC98ezgmPgvm9IUdPOrVEGY/FZfN
MAvV/rk3n6fVgt7qaL9o8ww87FDTNRitg6ubanvrMmdAiz9727pEA/CZ7WYR
CpyBlNcfkhwjm+DBqZqvVYdn4PKoghOpsxmsKt8Jy8jPgB9Pp5gTUytk59Df
3ks3A4ZnT/5SMGwDmRx+h3f5vyB36JhPfEkHvIsb0Z1h+QXsDGy33M9QYOYV
2/2Q/mmw39l86sxfCvhrUmwFs6dB2uGwFJd6F4iOZ/b2Hp+GkCXjMu+0bjiv
8Eu188kU3Nmm/8ch8gdY0TqfWi2dgHaFLb0Hd/0EcqV26zXPCVA+Wl4h1/kT
km/XXBc0mID/TOJrHJmo4MylpH61ehwU/EVCSYYDkFMV1bb/6xhE8wmS40qG
YMgk/oJ32gjMRZUfInMMA4dmZVnEpREwErW1/WIzDJYl+rInuEfgt3Ru3CjH
CBwUeLP7p/swHFQ7ukPl2ijkU2bmTx0agtXDjyc/cxN5vNvQvT1CheOtOxlO
2E2AyTXpZN5IKiSfbJEY/jwBHzeSz/86TIUTZ4XPMN2YBE0wyY6264dU2/ya
4xVT4J01EXCV6wdYPJ5MGnCYAZGL3nQB/t2QQf+q/L/KGbDxEqn8QdsNdM93
9dELzII7q3mYves3yArw4iJVzcK4icmjO7Zd4HWUbZ/2yzmwJc8/O29OAZXA
waO0hXPwpEzuUmtnB/S05Z1vGJyDspPzoR3mHUA+dd71wu55yKKcEH5/oR16
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
npL1dD16tj3XpWFq1bRN3HMi6KdOtYIFNEzyOJDlkCKCXCUTg/uLaDjT+2DK
3zOi//9fl19uQMOihrBDq5KIvlVRH68b0nBT04XfugkieJ+a36yzlIZLmZse
ZMQSvQPaitKW03Cd0MD3Npn/e1ZPJCub0rAz/Mgtd+L3TLQWhZ6g0PDj21ZK
3kHiT76tc5mk0dC/q/zOGeIPShr3M/czaXjCKfqfehDR/2rW3E9sGp6L37qV
s1MEvx2/9r5GGl5f6r95xxYRPDSc88TJgoalC2eG7nUmfkrKIrfJkoYvB0Q5
8+2I/ypO9a+yoWEx82BUIPGvT+KrbKjrCN+pauEz6CKI2frW+LYdDTOS/gk9
l4lAbjrja+ZGGmqt85oqSfzEi2GvNjUXGs55lrXLdQbRtya+NHETqXeG066t
ckTPoK7wCA8a3nrx7soZsl80WyKl3P1p+FCytehqnRB29byTnLaLhkE+a8ae
PhBC9chGybLdNKxMXdJxqUAIPopGEqp7aXil5fB4wlmyf9cI/j49TMOB8Onb
7roKYW3t8t9GKTTM7k3scerthMttF351nqPh0ZUtXtXkvjHaP+XX8XQahkX+
YmvVdEK6ZPdY7yUaxv/QTK3P7oQ33LjvKXk0lLdZedPVuxMiH4g/j1fRMGVV
932p92Q+16/9nFdDQ+f6XZfLugSwsLPsk9NT0l8LmotzmgTwYixxpLCe1Fv3
N8+sWAAaFOaHbW00pAYzRvIiBbDTIve9agcNJTKyvJJCBFDtqPK+qpP001Oz
6EZy/m4PHhzW6KEhK32Gw2Z7Adw/aj9cK6bhu7/fuaWWZD6fqRgKHqAhl7bT
PZQtgKI7Z982DpN+uVHylkrmt3T1xOCBDzQ0XnT1KYfMa+cmv8FFn2ho3132
o4zMo/zu1jetX2i4QX2o6AaZZ38/mL858o2GsbGZBjOmCsB+PG/AeIzU9+4J
z9//OiBXXm1A+IuGovtpU71+d8DP2Uf6T4zT8F7Lnkbrb+Q+veR9n9kkDXOX
3XUqG+mASwynPrEEHQ3kJRxuDXfAl/9qxKek6Vgc3edr+KYDLFyMxCxZOi5o
8pOmiTsgzTetd0iOjjLp0YxX3eQ+HirZm6pAR/Zczenjwg7gHA/oWalMx4Ik
5fRyQQecSRW8/qRKnhvadsp3kPv01VWvL86kY7TMF9G3dnLfLmIfmatOx8CJ
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
yvO8vwmB6zAr+WcX4bNu8emnm4WweMTnguFXc6yLf3zzD6MTciWCxl99I/VI
YgvGZnWCntpB97Axcyx8LKln+Y3ME3aSTu040SPQI6rnjgBU48tytshy8bFk
xOIVhgL4tXDqrTNzueiYF8oINu2AY9SsO9N0uBjrbXNqoUYHKFvRi6N1uWgz
+cNl+QQfFvr5Pdi3iIvlMgnz1j3ng/3N589dl3PRreWKoGQrH7oeeDbyVnDR
I3lz0rI1fPB98bPZhsJFjsHeX5Jkvkd8WNzBYXKxaG/GyjJJPuQtjXuja8FF
B6Z580bip8y4usMZllz0yvqsknmW+In15R9mWHPx9+5UZ05EO7QHDo/KrOOi
/zN59VjHdpAotpZ858zFL1XHL7Kl28GVNk3n7k4uStz1e1uyrw0GrK7MN9zN
RdZKrr3b9jbY48JcdDWQiwqZ5yvsN7ZBzIEdxuf2cbHvkWPJUmobFD1sYIVH
cvGAzdr9yX9agd24lTt6lIvLgheV5X9shbqu3yt3HePiS40dzUq9rdA9sWTN
ljgudiQrLb9b2wpycNJlZTIXVb9VbnNKaYUUO73ND1O5eCNgk8Lt2FbQ8Xro
YXaei43ZLV3WEa1AiXrvsyiTi938nII1vq3g9dRm37TrXFTp2im9ybwVPrT1
h0XnkXoGbPn00KwV9r85eGg8n4sbF9mccDNshcQpt6JHCrm4u45SYafZCuX/
KZzlPeBiRnQh5+8YDx77rzRLreSiz61c2Y2fePAiPozv/IiLo8yLB74M8qC7
cWB2dy0XDcNfCsb4PBj8OLvy8nMutiVelvVs5sEnJXuPrS+4qFfiGjDtOQ8k
7Ctz3rZw0drvL0PvAQ+mBY+uvtnKRfXKnW6ni3kwI9lgaBefi4UpafM4BTxY
2J5q9FVE6r85WcUxmwdLf7xouveaixpWTcYPL/CApi4ZtF/MxU/PqQOe53iw
xnV3yfggF3Nuat/zTuCBY/hV5+phLiqqb9d8dIIH7heEv45+4KJt8uNCl2ge
+FSoXLT4xMUeqq+lcSQP9nRbmst+5eL0/8qaOAd5EPb3UG/9Ny4uCNaE+P08
OKpTHJUwxkUnz2+np+/lQbKXTp3qBBdXXKi6yQ/gwcWojf5tk1x8IVgbOn0n
D3JzTsqnSQLOYttsjvfjwe2nNQWuMoCTC7qumfvwoOzN2Pq5UwH3jOpmLdvG
g0dTln59PQ3QQZZ71n0rD+r1t6VkKwImPdpY99yTB7z/MqjbVADPlS86G+TB
A5F/i2DRDEBHblm4yxYeDMRPOTisBhj0eZ3WYXcefMxna93SAIyqMZ/Vv5kH
PxqDq3fPAdS63iERS/DkxxteJtqA/NQdhwIInqrcI/VtHqBv0/YFKQSrLle7
VqoHCJom1eMEz7G3+e/AIsB8o2+mN0j8BcFH37EMALPCh3akkfWNk8sS/hoC
au6zWvuC8KPd+7i0Zimg8qk1jyy8eADteq+iTQBN9e3uSHvzwPqHa4ilGeC+
J1mzFLbzwEH9tJocDdD7R+Cczb48cKM/K3vBAMzpWPT2uz8PtrmOu55iA4oO
L84R7uJBQPiKcTsuYLFUV5h8IA9CL/hdmrESkBdx/UxcCA8iKy4B3wLQhJKs
7UT0i+1u6ztvRb5nzAkJJvqe+Tstxm0N4M6Vc9/3EP0zdFBf2xZw/dTtfZeP
8SAH9tf3rgcct3h6rziOByVR/Yo+GwHTxOmbu1J4UJWjWbjYBdC5fEjmWwYP
6p6ud3i/CbDPJN10O+nXzikV5wI9AelSRn9d7/CgT/8r3dQb0IfSc7a3lAfv
/1ss+r6d5BubfPlZFQ+++2+JuO8H2D5scEOxjgd/41N0Du4E3KU6y7SM7Kf/
AUC1FqA=
          "]]}, Annotation[#, "Charting`Private`Tag$29436#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6], 
          Thickness[Large]], 
         LineBox[CompressedData["
1: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

          "]]}, Annotation[#, "Charting`Private`Tag$29436#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probabilities\"", TraditionalForm], None}, {
        FormBox["\"\[CapitalOmega] t / \[Pi]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, Ticks -> {Automatic, Automatic}}, AxesStyle -> Large,
     FrameStyle -> Large, ImageSize -> Large, PlotRangePadding -> 
    Scaled[0.025]], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Large, FrameStyle -> Large, ImageSize -> Large, 
                    PlotRangePadding -> Scaled[0.025]], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellLabel->"Out[6]=",
 CellID->404464197,ExpressionUUID->"5ab1b60f-fc63-4902-8187-d10d32a08594"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladSolve"]], "paclet:Q3/ref/LindbladSolve", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "6a80188d-df08-4218-81ff-bff5c881138a"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "0b753600-bb02-431a-a165-4219b73d6db3"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladBasis"]], "paclet:Q3/ref/LindbladBasis", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "61ba0128-797a-41e0-89fd-5341c5988bf5"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladGenerator"]], "paclet:Q3/ref/LindbladGenerator",
            "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "bb889c85-7994-4239-b126-c9a16d6f99e3"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Supermap"]], "paclet:Q3/ref/Supermap", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "2f7c403f-d5a8-4a7a-800f-4cfcab9747d1"]
       }], "SeeAlso",ExpressionUUID->"035a08b6-5d76-4f3b-a497-0c9ba409dba7"]}
     }]}
  }]], "SeeAlsoSection",
 CellID->964959827,ExpressionUUID->"fbf6400d-ac45-45b1-b2a1-9edc9cbcfe5b"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTechNote.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TechNotesSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Noise and Decoherence"]], 
           "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "a7655877-c961-481b-b26d-1edda8d98168"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Computation and Information: Overview"]], 
           "paclet:Q3/tutorial/QuantumComputationAndInformationOverview"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "345eb5d4-baba-411a-9a04-349084921aae"]}]}
     }]}
  }]], "TechNotesSection",
 CellID->283310245,ExpressionUUID->"5ab68768-1849-494b-9653-973b2ec0da6d"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Dynamical Process of Decoherence"]], 
           "paclet:Q3/guide/DynamicalProcessOfDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "e3e38195-282b-4544-ac5b-59db0a697fab"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Computation and Information"]], 
           "paclet:Q3/guide/QuantumComputationAndInformation"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "9c510791-4ded-4257-87df-409b2ac95227"]}]}
     }]}
  }]], "MoreAboutSection",
 CellID->624042316,ExpressionUUID->"925321fe-6db1-476e-8ea4-6a52e90e19a5"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "H.-P. Breuer and F. Petruccione (2002)"}]]]], 
             "https://doi.org/10.1093/acprof:oso/9780199213900.001.0001"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "3d4a92a6-b27a-4bd7-8beb-7d0a83848689"]}]],ExpressionUUID->
         "f3c79b95-0886-4168-b219-6c473357548d"],
        ", The Theory of Open Quantum Systems (Oxford University Press, 2002)."
       }], "RelatedLinks",ExpressionUUID->
        "a796142a-1259-4917-b652-427e448c92b2"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "C. W. Gardiner and P. Zoller (2000)"}]]]], 
             "https://www.springer.com/gp/book/9783540223016"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "aa12c440-5ea8-4688-b977-c0b036f3710e"]}]],ExpressionUUID->
         "dca3a014-1cf9-4b3b-99b9-915b633e7404"],
        ", Quantum Noise (Springer, 2000)."
       }], "RelatedLinks",ExpressionUUID->
        "c1ea13bb-5b69-4291-bcb7-e1766be5971e"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "Mahn-Soo Choi (2022)"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "12a2b509-97a3-4d85-8e4c-5c3353984cbf"]}]],ExpressionUUID->
         "16fb74c3-ccab-4d9e-93b0-ad712c0dacd9"],
        ", A Quantum Computation Workbook (Springer, 2022)."
       }], "RelatedLinks",ExpressionUUID->
        "b4bee28b-1da3-4c95-af72-752e1dddb246"]}
     }]}
  }]], "RelatedLinksSection",
 CellID->2116556711,ExpressionUUID->"78dccecc-971c-44e8-88c3-454ed253de26"],

Cell[" ", "FooterCell",
 CellID->2049512869,ExpressionUUID->"f5a8c7b9-60ee-4bc7-afa1-eb5f2306ddae"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"NLindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, "ExampleSection" -> {"0" -> Open}, 
    "NotesSection" -> Closed}, "NewStyles" -> True, 
  "CitationPopupData" -> $Failed, "ShowCitation" -> False, "RootCaptions" -> 
  "", "Metadata" -> {
   "built" -> "{2022, 8, 15, 8, 35, 1.185120}", 
    "history" -> {"13", "13.1", "", ""}, "context" -> "Q3`", 
    "keywords" -> {"quantum decoherence", "quantum master equation"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Q3 Symbol", "language" -> "en", "paclet" -> "Q3", "status" -> 
    "None", "summary" -> 
    "NLindbladSolve[{a, b1, b2, ...}, init, {t, tmin, tmax}] finds a \
numerical solution to the Lindblad equation characterized by Hamiltonian a \
and Lindblad operators b1, b2, .... NLindbladSolve[tsr, init, {t, tmin, \
tmax}] assumes that the Lindblad generator is specified by Choi matrix tsr.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "NLindbladSolve", 
    "titlemodifier" -> "", "windowtitle" -> "NLindbladSolve", "type" -> 
    "Symbol", "uri" -> "Q3/ref/NLindbladSolve", "WorkflowDockedCell" -> ""}, 
  "SearchTextTranslated" -> ""},
CellContext->"Global`",
FrontEndVersion->"13.1 for Mac OS X ARM (64-bit) (June 16, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]], 
    CellID -> 1553944780], 
   Cell[
    StyleData["Input"], CellContext -> "Global`", CellID -> 1601286293], 
   Cell[
    StyleData["Output"], CellContext -> "Global`", CellID -> 553662247]}, 
  Visible -> False, FrontEndVersion -> 
  "13.1 for Mac OS X ARM (64-bit) (June 16, 2022)", StyleDefinitions -> 
  "Default.nb"],
ExpressionUUID->"b88c3357-d2e0-49f3-9a77-b020646b1dba"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[14937, 403, 1389, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"bf5dc2a7-ad22-44da-8e3f-e4ab70ef1241",
   CellTags->"PrimaryExamplesSection",
   CellID->223457562]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 250083, 5576}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 7270, 175, 57, "AnchorBarGrid",ExpressionUUID->"5429d7a2-41aa-403a-b266-7d76b8830c6a",
 CellID->1],
Cell[7859, 198, 106, 1, 23, "ContextNameCell",ExpressionUUID->"7168bd13-26e0-488d-a1ca-be3cf615ff5e",
 CellID->1861585604],
Cell[CellGroupData[{
Cell[7990, 203, 1197, 32, 60, "ObjectNameGrid",ExpressionUUID->"3f2c5905-0899-4d65-ae5d-e21b404073d1",
 CellID->979993285],
Cell[9190, 237, 2990, 85, 192, "Usage",ExpressionUUID->"955c3fa6-35e0-45d2-9247-fbb75733dd81",
 CellID->325754926]
}, Open  ]],
Cell[CellGroupData[{
Cell[12217, 327, 1899, 47, 37, "NotesSection",ExpressionUUID->"a20b1552-902b-4b29-8107-bc066c3f609e",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->1695052152],
Cell[14119, 376, 691, 21, 70, "Notes",ExpressionUUID->"e109e126-545a-4427-a75c-4611572bb771",
 CellID->1027225079]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[14937, 403, 1389, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"bf5dc2a7-ad22-44da-8e3f-e4ab70ef1241",
 CellTags->"PrimaryExamplesSection",
 CellID->223457562],
Cell[CellGroupData[{
Cell[16351, 444, 1368, 36, 31, "ExampleSection",ExpressionUUID->"de3d15c7-9844-455e-bfa7-c1181f74a58a",
 CellID->1849829578],
Cell[17722, 482, 145, 3, 29, "Input",ExpressionUUID->"b0c9355f-4347-48dd-b98d-8c2b8c344554",
 CellID->615462090],
Cell[CellGroupData[{
Cell[17892, 489, 660, 19, 66, "Input",ExpressionUUID->"5cb3e7fd-e6cf-4afc-a58e-042571c9c4d3",
 CellID->383286299],
Cell[18555, 510, 1569, 55, 82, "Output",ExpressionUUID->"4b1943fb-f191-4477-b50b-06e0acf41edc",
 CellID->1163061591]
}, Open  ]],
Cell[CellGroupData[{
Cell[20161, 570, 288, 7, 48, "Input",ExpressionUUID->"8e5655a8-d8d5-4a5e-8042-bbe324179a03",
 CellID->575047188],
Cell[20452, 579, 646, 18, 66, "Output",ExpressionUUID->"6a4edb1a-c4b2-41d2-a59e-89d443c1c83c",
 CellID->1669179460]
}, Open  ]],
Cell[CellGroupData[{
Cell[21135, 602, 686, 18, 66, "Input",ExpressionUUID->"bf53bafd-fd0e-461a-b287-eb2aee7f9a10",
 CellID->1820491489],
Cell[21824, 622, 1736, 54, 57, "Output",ExpressionUUID->"93cf1496-9fcd-4dea-a7fe-b2bc8a8ac69c",
 CellID->1394439337]
}, Open  ]],
Cell[23575, 679, 1123, 28, 174, "Input",ExpressionUUID->"b97850ee-f27c-4659-bfd0-e867eee7b80d",
 CellID->309037009],
Cell[CellGroupData[{
Cell[24723, 711, 191, 4, 70, "Input",ExpressionUUID->"bbbc8e91-1157-4072-9d29-7922b66ad3e2",
 CellID->222257030],
Cell[24917, 717, 885, 22, 66, "Output",ExpressionUUID->"39e25023-1c28-441b-af4f-3403bc85d2de",
 CellID->1677804088]
}, Open  ]],
Cell[CellGroupData[{
Cell[25839, 744, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"b7ed2e39-cece-4f7a-a7f0-a35946e8f820",
 CellID->1200765697],
Cell[CellGroupData[{
Cell[26107, 753, 389, 11, 70, "Input",ExpressionUUID->"b6acc0cc-3585-4605-972a-73957e5046c7",
 CellID->435145815],
Cell[26499, 766, 851, 26, 82, "Output",ExpressionUUID->"0dbebf21-cc18-4ec0-9072-92445ad5674d",
 CellID->943084244]
}, Open  ]],
Cell[CellGroupData[{
Cell[27387, 797, 268, 6, 70, "Input",ExpressionUUID->"a8f2a853-970f-47fe-967b-5230cd15ad54",
 CellID->1196829607],
Cell[27658, 805, 687, 21, 66, "Output",ExpressionUUID->"77f0fb34-176a-463b-af18-a3acb056fbdd",
 CellID->693259531]
}, Open  ]],
Cell[28360, 829, 843, 21, 70, "Input",ExpressionUUID->"36d552f0-94a7-494a-8e5b-ceeb13e71dec",
 CellID->1273375212],
Cell[29206, 852, 795, 25, 70, "Input",ExpressionUUID->"49a28250-ae31-4264-a0ff-791899a8b1e9",
 CellID->374788519],
Cell[CellGroupData[{
Cell[30026, 881, 1204, 31, 70, "Input",ExpressionUUID->"07c7a5b8-08cf-4b92-9fd0-84c73936bcea",
 CellID->667061092],
Cell[31233, 914, 6519, 134, 394, "Output",ExpressionUUID->"1cc75e35-96e2-47dd-9b42-f627a5474cdd",
 CellID->1186739723]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37801, 1054, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"19e7d564-a3b0-402a-95cf-5d016f0c0304",
 CellID->1586259128],
Cell[38047, 1061, 133, 1, 70, "ExampleText",ExpressionUUID->"b9487c0a-3c12-4f9b-9871-3d07bea94add",
 CellID->692904445],
Cell[CellGroupData[{
Cell[38205, 1066, 345, 9, 70, "Input",ExpressionUUID->"2135986b-33b6-4ca2-bcad-1ea6b401b2d7",
 CellID->1425866839],
Cell[38553, 1077, 667, 19, 100, "Output",ExpressionUUID->"32a11069-e5b8-4fac-ba60-28d11fd49896",
 CellID->1610597569]
}, Open  ]],
Cell[CellGroupData[{
Cell[39257, 1101, 598, 16, 70, "Input",ExpressionUUID->"8310bfd1-7d9c-434c-8da5-7b062c872233",
 CellID->1104129648],
Cell[39858, 1119, 1876, 65, 100, "Output",ExpressionUUID->"807923c3-a3a5-452f-865d-2d9ec929f588",
 CellID->899549971]
}, Open  ]],
Cell[CellGroupData[{
Cell[41771, 1189, 1063, 28, 70, "Input",ExpressionUUID->"4fbf3ddd-d517-496e-bcc5-8a81c0fb3dab",
 CellID->252233040],
Cell[42837, 1219, 1822, 56, 87, "Output",ExpressionUUID->"dc24cd70-1223-450e-857c-adbd56c43b75",
 CellID->1111348201]
}, Open  ]],
Cell[CellGroupData[{
Cell[44696, 1280, 1068, 28, 70, "Input",ExpressionUUID->"eaf2653f-2406-40c6-b52d-98548403c1c9",
 CellID->1792714312],
Cell[45767, 1310, 183, 4, 37, "Output",ExpressionUUID->"fc88b9a6-9f65-4e8e-a8eb-e40c9f3a7832",
 CellID->2096161748]
}, Open  ]],
Cell[45965, 1317, 343, 10, 70, "Input",ExpressionUUID->"a813b530-f337-4c42-b1ea-dc1797cbaf97",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[46333, 1331, 613, 15, 70, "Input",ExpressionUUID->"cbcb4296-78b5-49f8-8035-ebcac8d0ce4f",
 CellID->1239593903],
Cell[46949, 1348, 13660, 253, 403, "Output",ExpressionUUID->"b4c46b62-6915-4e7c-ab1b-118acdd8c11e",
 CellID->207179694]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60658, 1607, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"bf7fe9cf-e683-405d-a8ed-38355ca84e97",
 CellID->1261705519],
Cell[60904, 1614, 276, 7, 70, "ExampleText",ExpressionUUID->"84a8bb94-3738-4fdd-998a-a676c410b0b6",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[61205, 1625, 383, 11, 70, "Input",ExpressionUUID->"c815928d-30dd-4306-9226-763c59a5b978",
 CellID->427878852],
Cell[61591, 1638, 430, 15, 65, "Output",ExpressionUUID->"94bb4553-c54a-49e9-abe9-e8e394b47098",
 CellID->411596753]
}, Open  ]],
Cell[62036, 1656, 201, 5, 70, "Input",ExpressionUUID->"36708342-88a8-45d9-ba11-abaf2e30af68",
 CellID->1686455809],
Cell[CellGroupData[{
Cell[62262, 1665, 582, 15, 70, "Input",ExpressionUUID->"7ff2ca08-e5c0-4c88-8805-fedfe21494b0",
 CellID->1773608757],
Cell[62847, 1682, 842, 32, 40, "Output",ExpressionUUID->"13048497-3ef8-4e37-bcfe-c3bfe9429177",
 CellID->2076444501]
}, Open  ]],
Cell[CellGroupData[{
Cell[63726, 1719, 1247, 31, 70, "Input",ExpressionUUID->"d7546a56-0010-41b9-99ea-dc75f1899826",
 CellID->813112276],
Cell[CellGroupData[{
Cell[64998, 1754, 698, 21, 70, "Print",ExpressionUUID->"bc16abb5-8102-4e80-9745-3750cea4d2cf",
 CellID->1784536049],
Cell[65699, 1777, 1393, 40, 70, "Print",ExpressionUUID->"9ae2fba8-4170-46d8-9936-cbb6e03a216d",
 CellID->940761541]
}, Open  ]]
}, Open  ]],
Cell[67119, 1821, 611, 18, 70, "Input",ExpressionUUID->"942a0c5e-92d4-4678-9f8b-c07198769f23",
 CellID->1408697964],
Cell[CellGroupData[{
Cell[67755, 1843, 1204, 31, 70, "Input",ExpressionUUID->"b6b8f868-4683-4b1b-9c7e-17ccfd969eed",
 CellID->743762978],
Cell[68962, 1876, 6541, 134, 394, "Output",ExpressionUUID->"4963cefa-eeef-490f-a1ec-e9eb2834f640",
 CellID->1420327328]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75552, 2016, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"6c6086ea-f898-4f31-a961-60cb0a91dddd",
 CellID->818700002],
Cell[75797, 2023, 201, 4, 70, "ExampleText",ExpressionUUID->"13ba2c7c-eb30-497d-a664-288462e86380",
 CellID->1536645940],
Cell[76001, 2029, 182, 4, 70, "Input",ExpressionUUID->"4ca10a4f-b2ee-4c7c-a385-d972758e4d74",
 CellID->1470681252],
Cell[CellGroupData[{
Cell[76208, 2037, 343, 10, 70, "Input",ExpressionUUID->"739a2fe6-9326-442b-94ff-66da68834ea1",
 CellID->963207285],
Cell[76554, 2049, 418, 13, 65, "Output",ExpressionUUID->"704aa0b2-20df-4e16-978a-595ce7b3f04e",
 CellID->47070641]
}, Open  ]],
Cell[76987, 2065, 197, 5, 70, "Input",ExpressionUUID->"72746c94-eb8f-45f8-94a2-3c469ac8962c",
 CellID->1701417680],
Cell[CellGroupData[{
Cell[77209, 2074, 578, 15, 70, "Input",ExpressionUUID->"7f2f8310-1d19-4fd1-abde-fb6d3f77b38e",
 CellID->682224499],
Cell[77790, 2091, 747, 26, 40, "Output",ExpressionUUID->"60596c10-8c69-4d66-9aec-460ce7145be9",
 CellID->540576344]
}, Open  ]],
Cell[CellGroupData[{
Cell[78574, 2122, 294, 7, 70, "Input",ExpressionUUID->"e6aeb91b-7ae8-4033-ad9d-1b00cfa9aa0d",
 CellID->39881190],
Cell[78871, 2131, 1104, 39, 40, "Output",ExpressionUUID->"aeda520a-62a7-4b3e-993f-44b7524cefbb",
 CellID->865973765]
}, Open  ]],
Cell[CellGroupData[{
Cell[80012, 2175, 1193, 29, 70, "Input",ExpressionUUID->"2b945f9f-46b5-4a50-a135-88017bc822d7",
 CellID->719143774],
Cell[CellGroupData[{
Cell[81230, 2208, 698, 21, 70, "Print",ExpressionUUID->"786b3b9c-5c0b-4166-bfce-ddc1d91b79df",
 CellID->1767555474],
Cell[81931, 2231, 1394, 40, 70, "Print",ExpressionUUID->"250cde94-6c5e-40c7-b072-2a619113a548",
 CellID->1163562567]
}, Open  ]]
}, Open  ]],
Cell[83352, 2275, 606, 18, 70, "Input",ExpressionUUID->"c31fd6fe-1698-40ff-8b20-2a118e097b9c",
 CellID->1210483635],
Cell[CellGroupData[{
Cell[83983, 2297, 1205, 31, 70, "Input",ExpressionUUID->"107570e0-ad6c-4a96-9b77-4fdb3ba9d23f",
 CellID->1754552550],
Cell[85191, 2330, 6540, 134, 394, "Output",ExpressionUUID->"9b396dac-1dbb-4db3-a98f-69181bbd2236",
 CellID->821265604]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[91780, 2470, 243, 5, 70, "ExampleDelimiter",ExpressionUUID->"a2f05ac8-0c37-4cf8-af27-ffdbffdccb74",
 CellID->1593892289],
Cell[92026, 2477, 175, 2, 70, "ExampleText",ExpressionUUID->"5e0ea816-f129-452d-b8c6-f8a03fac6208",
 CellID->210970783],
Cell[92204, 2481, 181, 4, 70, "Input",ExpressionUUID->"13506f15-fa70-4351-9b7c-a2fe5ae160d1",
 CellID->290448684],
Cell[92388, 2487, 221, 4, 70, "ExampleText",ExpressionUUID->"d7a3efa8-58dc-4273-b9b5-9e187d427d3b",
 CellID->340702357],
Cell[CellGroupData[{
Cell[92634, 2495, 927, 27, 70, "Input",ExpressionUUID->"7199ca15-0cb0-4cb4-a5ac-10210d160cf6",
 CellID->993111197],
Cell[93564, 2524, 821, 24, 98, "Output",ExpressionUUID->"90c99b1a-52f4-4c3b-ac07-87b88eb03db8",
 CellID->1597635627]
}, Open  ]],
Cell[CellGroupData[{
Cell[94422, 2553, 1401, 36, 70, "Input",ExpressionUUID->"a0f670ae-fc36-4294-8fe9-5820e486e4c7",
 CellID->501635503],
Cell[95826, 2591, 1535, 64, 41, "Output",ExpressionUUID->"5755fb77-7c2b-4232-9157-153bd59cdcf9",
 CellID->553239788],
Cell[97364, 2657, 3536, 108, 75, "Output",ExpressionUUID->"4b9e4cce-d514-456a-ae5b-231324041f90",
 CellID->1844409053]
}, Open  ]],
Cell[CellGroupData[{
Cell[100937, 2770, 476, 14, 70, "Input",ExpressionUUID->"9ac540e4-6572-4533-9b34-45e3439193cd",
 CellID->1865696334],
Cell[101416, 2786, 10308, 311, 225, "Output",ExpressionUUID->"1740c2ba-8feb-4c89-b16f-9e7510e61228",
 CellID->2083745664]
}, Open  ]],
Cell[CellGroupData[{
Cell[111761, 3102, 1540, 39, 70, "Input",ExpressionUUID->"8f5a9fff-381e-487b-8da0-6f421bbd0c4e",
 CellID->260219023],
Cell[113304, 3143, 183, 4, 37, "Output",ExpressionUUID->"51a2b1b5-3de9-4748-8968-7abb0ce87874",
 CellID->1019848997]
}, Open  ]],
Cell[CellGroupData[{
Cell[113524, 3152, 706, 17, 70, "Input",ExpressionUUID->"9411986a-bedd-45d8-af1c-a06b5c5996a7",
 CellID->1542313529],
Cell[114233, 3171, 125148, 2123, 405, "Output",ExpressionUUID->"5ab1b60f-fc63-4902-8187-d10d32a08594",
 CellID->404464197]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[239635, 5304, 2900, 78, 70, "SeeAlsoSection",ExpressionUUID->"fbf6400d-ac45-45b1-b2a1-9edc9cbcfe5b",
 CellID->964959827],
Cell[242538, 5384, 1172, 29, 70, "TechNotesSection",ExpressionUUID->"5ab68768-1849-494b-9653-973b2ec0da6d",
 CellID->283310245],
Cell[243713, 5415, 1147, 28, 70, "MoreAboutSection",ExpressionUUID->"925321fe-6db1-476e-8ea4-6a52e90e19a5",
 CellID->624042316],
Cell[244863, 5445, 2927, 78, 70, "RelatedLinksSection",ExpressionUUID->"78dccecc-971c-44e8-88c3-454ed253de26",
 CellID->2116556711],
Cell[247793, 5525, 99, 1, 70, "FooterCell",ExpressionUUID->"f5a8c7b9-60ee-4bc7-afa1-eb5f2306ddae",
 CellID->2049512869]
}
]
*)

(* End of internal cache information *)

