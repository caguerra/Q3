(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    447069,       9420]
NotebookOptionsPosition[    425787,       9000]
NotebookOutlinePosition[    428485,       9065]
CellTagsIndexPosition[    428361,       9059]
WindowTitle->NLindbladSolve
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell["Q3 SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "101ea175-4e09-4b9f-b69c-2b68d5a0a84f"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "b8f45774-0d8a-4057-a94c-a90e1fcecec4"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "f7038df3-810c-4176-98d1-d49d82de5ea8"]
         }],ExpressionUUID->"95b47214-7c97-49c3-9c98-a7d64619496b"],
         StripOnInput->False],{
        "\"LindbladSolve\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladSolve"], 
         "\"LindbladConvert\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladConvert"], 
         "\"LieBasis\"" :> Documentation`HelpLookup["paclet:Q3/ref/LieBasis"],
          "\"LindbladSupermap\"" :> 
         Documentation`HelpLookup["paclet:Q3/ref/LindbladSupermap"], 
         "\"Supermap\"" :> Documentation`HelpLookup["paclet:Q3/ref/Supermap"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "047a6bfd-37e7-4b50-b9ab-cbef4690ada1"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "cbfe275b-7a7d-4fd7-8b77-4c77d142cd21"]
         }],ExpressionUUID->"f71bd219-cd14-49bf-85b0-0c37f15333f3"],
         StripOnInput->False],{
        "\"Dynamical Process of Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/DynamicalProcessOfDecoherence"], 
         "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/QuantumInformationSystems"], 
         "\"Quantum Information Systems\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/guide/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "532493a7-5e25-4284-bcdd-c0565168225f"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Tech Notes",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "5fe9a106-63c1-436d-a73a-87698978571a"]
         }],ExpressionUUID->"2fec3831-6829-466b-92c8-0df30b9f05ec"],
         StripOnInput->False],{
        "\"Quantum Noise and Decoherence\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"], 
         "\"Quantum Information Systems with Q3\"" :> 
         Documentation`HelpLookup[
          "paclet:Q3/tutorial/QuantumInformationSystems"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"Tutorials"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "a291eefd-ed13-42e7-9669-dbcc1fd6420c"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            AxesStyle->Large,
            FrameStyle->Large,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}},
            PlotRangePadding->Scaled[0.025]]],ExpressionUUID->
           "b6af2b3e-26c8-40ff-a948-ceff03dab160"]
         }],ExpressionUUID->"5e63814f-86fb-4eea-9364-cb2ea811a7e5"],
         StripOnInput->False],{
        "\"Q3/ref/NLindbladSolve\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{Cell["Q3/ref/NLindbladSolve"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/Q3/ref/\
NLindbladSolve.html"], StandardForm]], "Input", TextClipboardType -> 
                 "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$27747], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "Q3/ref/NLindbladSolve" <> ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "781ec9b5-8e1e-47ef-b229-84f377d44f19"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "15b9b597-426e-4657-bf3c-f20e69cc6cf8"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"036c5b25-5798-4eaa-af4f-ebf899dbe590"],

Cell["Q3`", "ContextNameCell",ExpressionUUID->"ede81de9-05c3-4ddb-bea1-bf3c4f4f0905"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "NLindbladSolve", "ObjectName",ExpressionUUID->
      "2eb590f0-af26-4490-af92-5e75cc66723b"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"80f2e325-8071-4b67-96fc-2b1bafd707c6"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "158f2d8a-ac7b-49e2-9a77-0e3f8f91f227"]
    }],ExpressionUUID->"0b1e50f6-3b86-4a24-900a-b47bb7feb1b6"], Cell[BoxData[
     StyleBox[
      GraphicsBox[InsetBox[
        StyleBox["\<\"UPDATED IN 13.1\"\>",
         StripOnInput->False,
         FontFamily->"Source Sans Pro",
         FontSize->17,
         FontWeight->"Bold",
         FontSlant->"Italic",
         FontColor->RGBColor[0.968627, 0.466667, 0]], {Right, Center}, {
        Right, Center}],
       AxesStyle->Large,
       FrameStyle->Large,
       ImageSize->{125, 24},
       PlotRangePadding->Scaled[0.025]], "NewInGraphic",
      StripOnInput->False]],
     Deployed->True,
     Magnification->1,ExpressionUUID->
     "feb4cc59-be55-46e6-9ee5-d977ae63792e"]}
  }]], "ObjectNameGrid",
 CacheGraphics->False,ExpressionUUID->"0f7d33ad-155d-42b9-ae02-27abe4fa5222"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          StyleBox["a", "TI"], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["1", "TR"]], ",", 
          SubscriptBox[
           StyleBox["b", "TI"], 
           StyleBox["2", "TR"]], ",", 
          StyleBox["\[Ellipsis]", "TR"]}], "}"}], ",", 
        StyleBox["init", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["t", "TI"], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["min", "TI"]], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "e3cce9da-853b-42b5-b59d-2a9df653a32f"],
     "\[LineSeparator]finds a numerical solution to the Lindblad equation \
characterized by Hamiltonian ",
     Cell[BoxData[
      StyleBox["a", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "89526bbf-d5ac-4098-b24f-04b073785b85"],
     " and Lindblad operators ",
     Cell[BoxData[
      RowBox[{
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["1", "TR"]], ",", 
       SubscriptBox[
        StyleBox["b", "TI"], 
        StyleBox["2", "TR"]], ",", 
       StyleBox["\[Ellipsis]", "TR"]}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "72f6ed72-34ff-4269-a781-c687c04803f0"],
     "."
    }],ExpressionUUID->"4f3cf6fb-7821-40cc-ab6f-6253e8ce44f0"]},
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
         "Q3 Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       RowBox[{
        StyleBox["tsr", "TI"], ",", 
        StyleBox["init", "TI"], ",", 
        RowBox[{"{", 
         RowBox[{
          StyleBox["t", "TI"], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["min", "TI"]], ",", 
          SubscriptBox[
           StyleBox["t", "TI"], 
           StyleBox["max", "TI"]]}], "}"}]}], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "a1873e72-2d09-42a0-81ad-44accd0ce8e0"],
     "\[LineSeparator]assumes that the Lindblad generator is specified by \
Choi matrix ",
     Cell[BoxData[
      StyleBox["tsr", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "8cd4988a-6ff2-4c44-ad01-0b504e68f32d"],
     "."
    }],ExpressionUUID->"1810ed4b-3ec1-4962-940a-acd6d9377a57"]}
  }]], "Usage",
 CellID->325754926,ExpressionUUID->"955c3fa6-35e0-45d2-9247-fbb75733dd81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
    ExpressionUUID->"09ab0347-d309-487a-a34f-aa44a1743581"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"3b7cbcda-986d-43c6-8650-eb5d032eb3af"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"1918e459-ee29-4fcc-83a3-4945abb4ed68"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"7278dec3-5e6c-4496-b7f7-eb760eb2838a"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->786260313,ExpressionUUID->"fea85c3a-3a19-4dc1-aa96-d712f8ba4b6d"],

Cell[TextData[{
 "Internally, it uses the ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NDSolve"]], "paclet:ref/NDSolve"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b50d2539-c5f4-48b3-8717-1c211f2e0e9d"],
 " built-in function and hence takes all options to ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NDSolve"]], "paclet:ref/NDSolve"},
   "RefLink",
   BaseStyle->{"InlineFormula"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "61becdea-da61-43f7-89ed-42b1f1b12d8c"],
 "."
}], "Notes",
 CellID->1027225079,ExpressionUUID->"e109e126-545a-4427-a75c-4611572bb771"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "8384b59b-5353-4786-bc6f-2695bcca7474"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"2c37862d-1066-4ef5-a1bc-25aaaacd2b57"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(7)", "ExampleCount",ExpressionUUID->
  "0fd617b2-6b46-43bb-aa4e-bd0606378685"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->1210200600,ExpressionUUID->"1faa2074-57d5-4600-99ca-6d6b9bae4885"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<Q3`\>\"", "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->1927565408,ExpressionUUID->"3caf7e7c-5428-42e8-b414-2f98997e8a9f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "904a9920-c1cf-49ac-9e07-e801b4c9eb2c"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"c6a068e4-55de-40d9-8e4a-58f88bbd26ef"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",ExpressionUUID->
  "8c98adb3-0175-4c3f-92cd-9ab0d26e3b3c"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1023863463,ExpressionUUID->"9400927b-1584-48c6-ac21-0f978cf6d2c0"],

Cell["\<\
The basic approach to solve the quantum master equation of an open quantum \
system is to work in the matrix representation.\
\>", "ExampleText",
 CellID->356455765,ExpressionUUID->"79066edb-c309-48fc-bbca-93c51a3810bb"],

Cell[TextData[{
 "We consider a two-level system, the simplest non-trivial quantum system, \
the dynamics of which governed by the Hamiltonian of the form in the \
computational basis. Here, we put  ",
 Cell[BoxData[
  RowBox[{"\[CapitalOmega]", "=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "b2a4762e-18ea-4045-b0ac-4063e039d63d"],
 " (the transition frequency of the two-level system) and ",
 Cell[BoxData[
  RowBox[{"\[HBar]", "=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "8df53f3b-c842-4b2c-ae9f-e1609302ae7b"],
 "."
}], "ExampleText",
 CellID->1494233086,ExpressionUUID->"cffeba89-4220-446a-8753-8b069811acb7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{
    RowBox[{"ThePauli", "[", "3", "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->575047188,ExpressionUUID->"8e5655a8-d8d5-4a5e-8042-bbe324179a03"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "2"], "0"},
     {"0", 
      RowBox[{"-", 
       FractionBox["1", "2"]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {
     1, {{0, 1, 2}, {{1}, {2}}}, {
      Rational[1, 2], Rational[-1, 2]}}]]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->414053057,ExpressionUUID->"7a096921-ad36-4429-8b7c-11cd9a83b771"]
}, Open  ]],

Cell[TextData[{
 "Define quantum jump operators. Here, ",
 Cell[BoxData[
  SubscriptBox["\[CapitalGamma]", "\[PlusMinus]"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "71b01234-3065-40c1-a006-e6749b475d61"],
 " denote the relaxation rates between the two levels."
}], "ExampleText",
 CellID->91943295,ExpressionUUID->"979b4492-1236-4452-a7c1-f91af1dfdcfd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
      RowBox[{"ThePauli", "[", "4", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
      RowBox[{"ThePauli", "[", "5", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1820491489,ExpressionUUID->"bf53bafd-fd0e-461a-b287-eb2aee7f9a10"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma]["+"]]]},
       {"0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma]["+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma]["-"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma]["-"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->1758548617,ExpressionUUID->"bc79ce5f-18e7-46d2-9a88-44e8f1526763"]
}, Open  ]],

Cell["Set the initial state.", "ExampleText",
 CellID->1167074253,ExpressionUUID->"7913fa14-81ba-48b5-bdd7-c7238f04e012"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"ThePauli", "[", "0", "]"}], "/", "2"}], "+", 
    RowBox[{"Dot", "[", 
     RowBox[{
      RowBox[{"x", "@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ",", 
      RowBox[{"ThePauli", "/@", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1096154981,ExpressionUUID->"423b2ddd-19d7-4177-b6f3-5f1bf05ebe30"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       FractionBox["1", "2"], "+", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}], 
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "-", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}]},
     {
      RowBox[{
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "1"},
          "RowWithSeparators"]],
        $CellContext`x[1]], "+", 
       RowBox[{"\[ImaginaryI]", " ", 
        InterpretationBox[
         SubscriptBox["x", 
          TemplateBox[{",", "\",\"", "2"},
           "RowWithSeparators"]],
         $CellContext`x[2]]}]}], 
      RowBox[{
       FractionBox["1", "2"], "-", 
       InterpretationBox[
        SubscriptBox["x", 
         TemplateBox[{",", "\",\"", "3"},
          "RowWithSeparators"]],
        $CellContext`x[3]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->36604006,ExpressionUUID->"09d7f001-39ce-4c54-b65e-372a59c898b9"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->90190346,ExpressionUUID->"cf005c3c-50a6-452c-9457-5ad7817ebec1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "\[CapitalGamma]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], ",", 
         RowBox[{"x", "[", "2", "]"}], ",", 
         RowBox[{"x", "[", "3", "]"}]}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{"0.2", ",", "0.3", ",", "0.1"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], ",", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], "=", 
       RowBox[{"{", 
        RowBox[{"0.3", ",", "0.7"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NLindbladSolve", "[", 
       RowBox[{"matH", ",", "matL", ",", "init", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"tmin", "=", "0"}], ",", 
          RowBox[{"tmax", "=", "10"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->309037009,ExpressionUUID->"b97850ee-f27c-4659-bfd0-e867eee7b80d"],

Cell["Check the solution at an instant of time.", "ExampleText",
 CellID->636146379,ExpressionUUID->"f4c19bb9-7e9c-49ff-83b8-da837c2bba5c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"rho", "[", ".2", "]"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->222257030,ExpressionUUID->"bbbc8e91-1157-4072-9d29-7922b66ad3e2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5456192316716985`", 
      RowBox[{"0.12343116422838438`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.30199294000776056`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.12343116422838438`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.30199294000776056`", " ", "\[ImaginaryI]"}]}], 
      "0.4543807683283016`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[5]//MatrixForm=",
 CellID->588485986,ExpressionUUID->"6c82e9b3-72ca-4ce2-934c-79c343171d23"]
}, Open  ]],

Cell["\<\
To study the effects of relaxation, we examine the expectation values of the \
Pauli operators.\
\>", "ExampleText",
 CellID->806986877,ExpressionUUID->"0587d224-e401-46a6-9b9a-7e3eec5e0c5d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"avgX", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgY", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "2", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"avgZ", "[", "t_", "]"}], "=", 
   RowBox[{"Tr", "[", 
    RowBox[{
     RowBox[{"rho", "[", "t", "]"}], ".", 
     RowBox[{"ThePauli", "[", "3", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->374788519,ExpressionUUID->"49a28250-ae31-4264-a0ff-791899a8b1e9"],

Cell["Plot the expectation values as functions of time.", "ExampleText",
 CellID->1485662799,ExpressionUUID->"3287064d-8849-4dcd-be6e-086ee49a1102"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tmin", ",", "tmax", ",", 
        RowBox[{"dt", "=", "0.1"}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega]\[VeryThinSpace]\!\(\*StyleBox[\"t\",FontSlant->\"\
Italic\"]\)\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*StyleBox[\"X\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket], \
\[LeftAngleBracket]\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket], \
\[LeftAngleBracket]\!\(\*StyleBox[\"Z\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->667061092,ExpressionUUID->"07c7a5b8-08cf-4b92-9fd0-84c73936bcea"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw10gkwXHccB/Alri2atXbdx+5SNaLEMZNMUv4/5Ki2pqloqJGmqCMUdZUI
kRJHQoVYHUcyKSKIdSZKSbw6Iq7F1qoYaSI6ExaprCPRoTS6P7+ZN2/ezO/7
+b/35sv1i3APkKfRaAFvr5377hQX7cwkkd1/Ja8tcyI+KRDjcz+ppNe4WReN
EHu7nRkj8nHzN6jcXrKbm3zUvxhN7hOZNk0qTgj0s45W4/5fpOXfML3jkEAF
Be7MC6L5t/9leVYtJctLSBTzx5+y6W2UcGhnFolnksvoDKOLknmviFrJNxas
0F7cl5JYVu5JVe0BSuavkO5Wl7M2ekLMrxInccunYedH8LzXRC4skhNbOore
OpHcEbYufShC7x8SrNg5a1UgQm+DCO8P5WbVi9DbJIf7HUYK80TobZEDqS6/
qzuJ0KOBc0WOa0P3KO7TgDJlHnIyHkVfDtpqhEGTTcOYl4duji4ndmkIz9sD
M+v6ebTtAfQUYBUex1Ut9KGnAB1pv3hqUrvfrwip/PikIyk96ClByeeuojyH
LvSU4S7n1AduUgo9FXCfqzj0NKYdPRVYS+p7ZslsQY8OD6gpmpm4Cb13wEzF
nxaSWYueKmzyraTXxBXoqUHtwweVb+xuoKcGm5AYeSX7Knrq8NhlYsIjMRS9
d2HwXvpUqmYy9mEveJ27pTE8mod9YYCkI4HX1VhMZPsMuB1uTQrsS4nMZ0Am
17R8O+kW+T9upwH7LlxTWj1Yif3TgJa0dsFASDV6TLjHTpOKdGvQY8L+Ao3E
ADcBekx4NDEtvK5ei++jCU9oxU9N/WvR04Q2xp/uZp616LHg/VXL/fQVAXos
OP3E28Ifdj0WiCXGXw1+VIMeG77syFzqYd9Bjw2n63vDixqq0NOCiOf2y+68
SvS0oEkas5wbXYGeFsh5jEZmCcrR04YCeo3BprgUPW3Q/XZfBHPuJno6kK9c
19TIuY6eDlRPrZX1nilETwfsfIfPWTTw0dMFiaPvWLh+Hnq6MG6uUth6Mgs9
PYhZPuDo8fASenogEM7M/2aVhJ4ebNt6TX9WGYmePmgrNtcNqvqgpw97tup4
4yVHsS8G0NcWbkifD8Q+GMDxMWlwsmM09scAuGsBPiV7E7BvhsA26vFIWEjG
PhmCt3meXWtoCnpG0MxmB7aHXULPCPR7xgLraenoGcHH9UEiL4sM9IzBUVWq
dFiagZ4xLAS/Z3PKJxM9DrhY/mxtHp1JyfrFAcWD/OVQh0z0ObBldDOf0b2b
5wB9Ts6XoZaB53Gg/LvLP5zhpKPHBbuc6NkB5TT0uPB146T5Sn8qely4nf1y
wzQ8BT0u2Fp8wffbuIje27yuVen3ry6gx4N4W2e/zvHz6PHAlfOMud4Yjx4P
3oT0eOdfjUWPB1NKOp0v46LQ4wG/eK1s9kU4eiZAKTRckTLP4v8xgRMpVay7
F/3RMwGJjadQEOuDngkElFmRY3x39EzgedSijdsfzuiZQvKcTXP1MQb1H9hY
xM8=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw10gswXGcUB/AlnrHqsXaxnmu3pWpMuoImId9Jo5LooENlPEbTUCsIibJL
gygNFRpvxTZCEiQekaVEwtqNFp3KGiUeVeKZKK205CGlNI3scWbu3PnmnvM7
3535s4JOeYUoUiiUkFfP1nu7uHZbNUeEpVt1h6jKkmfcg7fPPxMx15n7m/cc
2f267z7pdTUOpmlsfx8jT6I56R/mzBK5Nk0SUzXPDc/PYP8c8bzf7fVEf4aE
8rZqnuS7WV6UWk3j/CI5W+g54Ll/kvTJtmqJ9IecENQrTKC3TH7S3GXpUz2G
/StEwBMcPu4wiv5TwnA5pfdu+xDOPyPlQ/TkIOdB3LdKXk5P0ArO96P3D8mu
jHcYE/Wit0YoQ1remxvd6P1LGlz5+2XxnehtkItLU4fW/dvQ+49MmPGsIz9o
Qo8CBRxaVOyZKuyngKDkXFnLJ9noK4B7c+G9K+ScVD6vCOKn61M9MRVS+b4d
EBgX7sbMrZXKOSWYjlxhiZoapXJPCWgRm42TCS1SuacM+4psLgiu3UZPBQS9
x5i/7m1HTxW6He19Ljt1oKcGnleNPitslqCnBo+bSvkBdVL01OHjPWUsS/pd
9HZCT7hpQo3JXfQ0YKEzi3tjQYoeFRQ0xL8POknRowLJ7Kp1f1+CnibQ4+I1
83Z0oPcGFFHzqIuZ2/fTAsYVDzWP2TvoaUNa2khrIG37f7TBfNn3DFjeQl8b
Tp4UUnLeapa+HrfTgY+KNwOOGzbhPh2ozr9+xFBVhJ4u2K9LjtIe16GnC8Y2
q94l49fQ0wV13vibFQ+v4n1o0Dhg5tatU4EeDfxaq8YPjpSgpwcDh5lNoX/n
oacHXNfZQatn6ejpAedes/rNDT56dPhxb1ugPf25RO7RAXq+2AzpiMG8MOAH
8efRPrdTMU8MkI2Kbb9MycT8MICT0qpicykX86gP81XJ0dS4AsyTPvAqfV2C
+ovQM4Cy6j9Hd9cXo2cArIwNz1paKXoGoBzhyi+nCtEzhLrEheHKS0L0DOGC
bFUsGxCixwSOVqLL2QYhekyo7GzJCnIWoseEd5535Tp+XYqeEYgoqbvaCkvQ
M4KVCOv1jKhi9IxB33C8T9vkW/SMYS27ISzyeiF6xuD1fa1ppEEBeibQNxRH
DYrNQ88ErJLs8vnpOeiZQpJTr88NxjfomUKeg52NdVUGeqZQmsKfKnZKQ88M
NtY8qOHzKeiZgYRovth3NAk9czgvWtfqYscReb7MQcQ8TV8+EI2+OaSJxjq7
+aE4bw6Tp3tGbAP8cZ85HOGqLHKlzuixYKnCt9o46yDmlQV9Nbccb+7xw/yw
wK/8K+UTscGYNxb4zD7QUAwPwzyxIMfq5aP3UqIwfxaQUe8P3cei0bOAhx3D
kghGDHoW8F35zkjnsFj0LEDVquyPjkA+ehYwOXj5wYs1Pnps4HhU8RJcBJhX
NtguqHq+/eos99gwNP1pBZsiQI8N7Y8alGqStz02HFps+0uxNxY9Dvzi4tTC
m4+R/g+mSLkp
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw90g9Q02UYB/ABC1YCwRjInw32hwLu4MBACuJ4H/9gw0NN0eTMSQQTkVZE
UJolEEPUG2DA2CDphHIhOwKhDjC7eUTSAnYIyraMsPhTCFksBPlzkMj78Nz9
7r333uf7ed577yd48519UmsGgyF9/K2uWKrK1dKTqidrOzkcH9d3aWcH3euJ
9sMXjqW+3krCQldrgIwc+cRe3qWh52aSmce1rMwkkTXtHpnmtT6MPVmrW+sf
ISqDbSzxbNalHl2tcRKXsaV82Oeabi0/QRq8uwpZV2/oentWa4pMRv/OaZ3/
Qbfm/UscR8+LpZabtH+avK3Zz2+q1VP/P8KKO8E95dxD8zNkZ17ZsFWMgc6b
JdGyHdwsQR/1HpGI9DmFL+sW9eZJ4J9uDfdMt6i3SArq2/N1yn7qLZFow3Ti
ZRig3jJZWnBxEd8doB4D2MMRWaGpt2k/AyRR3VaGsdvUtwKrH20OHE64Q/PW
ELWHy2HeuEPn2YA8ObHRwBukHhOYrJZlbeYg9ZjACHzg875ukHpPgWJib9U0
00g9WxhbkvP6thmpZwf+HVc2tXxkpB4LcnOP5wQ2GanHgsWF09W634zUexru
R3aHjLJM1HsGli3Xgm2DTdTbAMEJZx0L95qoZw++PNlxXYaJevYwwAw6tKIw
Uc8BbiZt6SvWoOcI2Y3jfY3fo/csxBonw6v70XOCfRvm+xVj2O8Ei25/BDXO
ou8EC655y8G2Zt2TeKgzpHjU7HiRY6bznIH5WlHDX3wz9digea/tQUqgmXps
kM3PSfThZuqx4fMgogoBM72PC7BbfzU0i9FzgTDX+CvSV9HjQNnQK3aSg+hx
wBI1o6mXoMeBgKaa1iPJ6LnCodHZocJj6LnCLwIJhMrQcwPLXMPkW++i5waa
i5E1JBs9N+gucN/87Qn0NoLFb7Jg8BR6G4GXLy/RnkbPHSIWii+9nIeeO1jv
9oguykfPHerk44maAvQ8IKy+WKooRM8DOsvT/bafQ88T5myyOP3n0fOE7F6x
T6QCPU94tGh3P6cIPS/o8I1s1hSj5wUxoijZ1RL0uKDsFXfVXkCPCz0d7X4f
f4oeF3rD0zq2lqLHg+sLvkUPS9HjwebMLw6oytDzhp8qRG0B5eh5w6bvkgO/
LkfPG2xO5tg+r0TPB9TS7g9Klej5ALPuqHpGiR4fdmnzknZV4P/FB3aGuK26
An0+SA5Wp41XYJ4PKbsngv1VOI8PAV9GfJOsQk8Al+XOxZUq9AQQo60Q/6xC
TwAZPRcSZ1XoCeC6fnC7txo9Adi81CnZqkZPCHUlX9klq9ETgmLbGWWuGj0h
3F2qif9MjZ4QZM+5nGlZ94QQ0huQrl/3RFBb1Rk5pMb3EcHUWI/fP+ueCM46
cN5YWfdEYDKFOThWoicC/7SR/V6V6PmC3d9TCX6P9/8DC6Trvg==
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw10gkwXHccB/Alri2atXbdx+5SNaLEMZNMUv4/5Ki2pqloqJGmqCMUdZUI
kRJHQoVYHUcyKSKIdSZKSbw6Iq7F1qoYaSI6ExaprCPRoTS6P7+ZN2/ezO/7
+b/35sv1i3APkKfRaAFvr5377hQX7cwkkd1/Ja8tcyI+KRDjcz+ppNe4WReN
EHu7nRkj8nHzN6jcXrKbm3zUvxhN7hOZNk0qTgj0s45W4/5fpOXfML3jkEAF
Be7MC6L5t/9leVYtJctLSBTzx5+y6W2UcGhnFolnksvoDKOLknmviFrJNxas
0F7cl5JYVu5JVe0BSuavkO5Wl7M2ekLMrxInccunYedH8LzXRC4skhNbOore
OpHcEbYufShC7x8SrNg5a1UgQm+DCO8P5WbVi9DbJIf7HUYK80TobZEDqS6/
qzuJ0KOBc0WOa0P3KO7TgDJlHnIyHkVfDtpqhEGTTcOYl4duji4ndmkIz9sD
M+v6ebTtAfQUYBUex1Ut9KGnAB1pv3hqUrvfrwip/PikIyk96ClByeeuojyH
LvSU4S7n1AduUgo9FXCfqzj0NKYdPRVYS+p7ZslsQY8OD6gpmpm4Cb13wEzF
nxaSWYueKmzyraTXxBXoqUHtwweVb+xuoKcGm5AYeSX7Knrq8NhlYsIjMRS9
d2HwXvpUqmYy9mEveJ27pTE8mod9YYCkI4HX1VhMZPsMuB1uTQrsS4nMZ0Am
17R8O+kW+T9upwH7LlxTWj1Yif3TgJa0dsFASDV6TLjHTpOKdGvQY8L+Ao3E
ADcBekx4NDEtvK5ei++jCU9oxU9N/WvR04Q2xp/uZp616LHg/VXL/fQVAXos
OP3E28Ifdj0WiCXGXw1+VIMeG77syFzqYd9Bjw2n63vDixqq0NOCiOf2y+68
SvS0oEkas5wbXYGeFsh5jEZmCcrR04YCeo3BprgUPW3Q/XZfBHPuJno6kK9c
19TIuY6eDlRPrZX1nilETwfsfIfPWTTw0dMFiaPvWLh+Hnq6MG6uUth6Mgs9
PYhZPuDo8fASenogEM7M/2aVhJ4ebNt6TX9WGYmePmgrNtcNqvqgpw97tup4
4yVHsS8G0NcWbkifD8Q+GMDxMWlwsmM09scAuGsBPiV7E7BvhsA26vFIWEjG
PhmCt3meXWtoCnpG0MxmB7aHXULPCPR7xgLraenoGcHH9UEiL4sM9IzBUVWq
dFiagZ4xLAS/Z3PKJxM9DrhY/mxtHp1JyfrFAcWD/OVQh0z0ObBldDOf0b2b
5wB9Ts6XoZaB53Gg/LvLP5zhpKPHBbuc6NkB5TT0uPB146T5Sn8qely4nf1y
wzQ8BT0u2Fp8wffbuIje27yuVen3ry6gx4N4W2e/zvHz6PHAlfOMud4Yjx4P
3oT0eOdfjUWPB1NKOp0v46LQ4wG/eK1s9kU4eiZAKTRckTLP4v8xgRMpVay7
F/3RMwGJjadQEOuDngkElFmRY3x39EzgedSijdsfzuiZQvKcTXP1MQb1H9hY
xM8=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw10gswXGcUB/AlnrHqsXaxnmu3pWpMuoImId9Jo5LooENlPEbTUCsIibJL
gygNFRpvxTZCEiQekaVEwtqNFp3KGiUeVeKZKK205CGlNI3scWbu3PnmnvM7
3535s4JOeYUoUiiUkFfP1nu7uHZbNUeEpVt1h6jKkmfcg7fPPxMx15n7m/cc
2f267z7pdTUOpmlsfx8jT6I56R/mzBK5Nk0SUzXPDc/PYP8c8bzf7fVEf4aE
8rZqnuS7WV6UWk3j/CI5W+g54Ll/kvTJtmqJ9IecENQrTKC3TH7S3GXpUz2G
/StEwBMcPu4wiv5TwnA5pfdu+xDOPyPlQ/TkIOdB3LdKXk5P0ArO96P3D8mu
jHcYE/Wit0YoQ1remxvd6P1LGlz5+2XxnehtkItLU4fW/dvQ+49MmPGsIz9o
Qo8CBRxaVOyZKuyngKDkXFnLJ9noK4B7c+G9K+ScVD6vCOKn61M9MRVS+b4d
EBgX7sbMrZXKOSWYjlxhiZoapXJPCWgRm42TCS1SuacM+4psLgiu3UZPBQS9
x5i/7m1HTxW6He19Ljt1oKcGnleNPitslqCnBo+bSvkBdVL01OHjPWUsS/pd
9HZCT7hpQo3JXfQ0YKEzi3tjQYoeFRQ0xL8POknRowLJ7Kp1f1+CnibQ4+I1
83Z0oPcGFFHzqIuZ2/fTAsYVDzWP2TvoaUNa2khrIG37f7TBfNn3DFjeQl8b
Tp4UUnLeapa+HrfTgY+KNwOOGzbhPh2ozr9+xFBVhJ4u2K9LjtIe16GnC8Y2
q94l49fQ0wV13vibFQ+v4n1o0Dhg5tatU4EeDfxaq8YPjpSgpwcDh5lNoX/n
oacHXNfZQatn6ejpAedes/rNDT56dPhxb1ugPf25RO7RAXq+2AzpiMG8MOAH
8efRPrdTMU8MkI2Kbb9MycT8MICT0qpicykX86gP81XJ0dS4AsyTPvAqfV2C
+ovQM4Cy6j9Hd9cXo2cArIwNz1paKXoGoBzhyi+nCtEzhLrEheHKS0L0DOGC
bFUsGxCixwSOVqLL2QYhekyo7GzJCnIWoseEd5535Tp+XYqeEYgoqbvaCkvQ
M4KVCOv1jKhi9IxB33C8T9vkW/SMYS27ISzyeiF6xuD1fa1ppEEBeibQNxRH
DYrNQ88ErJLs8vnpOeiZQpJTr88NxjfomUKeg52NdVUGeqZQmsKfKnZKQ88M
NtY8qOHzKeiZgYRovth3NAk9czgvWtfqYscReb7MQcQ8TV8+EI2+OaSJxjq7
+aE4bw6Tp3tGbAP8cZ85HOGqLHKlzuixYKnCt9o46yDmlQV9Nbccb+7xw/yw
wK/8K+UTscGYNxb4zD7QUAwPwzyxIMfq5aP3UqIwfxaQUe8P3cei0bOAhx3D
kghGDHoW8F35zkjnsFj0LEDVquyPjkA+ehYwOXj5wYs1Pnps4HhU8RJcBJhX
NtguqHq+/eos99gwNP1pBZsiQI8N7Y8alGqStz02HFps+0uxNxY9Dvzi4tTC
m4+R/g+mSLkp
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw90g9Q02UYB/ABC1YCwRjInw32hwLu4MBACuJ4H/9gw0NN0eTMSQQTkVZE
UJolEEPUG2DA2CDphHIhOwKhDjC7eUTSAnYIyraMsPhTCFksBPlzkMj78Nz9
7r333uf7ed577yd48519UmsGgyF9/K2uWKrK1dKTqidrOzkcH9d3aWcH3euJ
9sMXjqW+3krCQldrgIwc+cRe3qWh52aSmce1rMwkkTXtHpnmtT6MPVmrW+sf
ISqDbSzxbNalHl2tcRKXsaV82Oeabi0/QRq8uwpZV2/oentWa4pMRv/OaZ3/
Qbfm/UscR8+LpZabtH+avK3Zz2+q1VP/P8KKO8E95dxD8zNkZ17ZsFWMgc6b
JdGyHdwsQR/1HpGI9DmFL+sW9eZJ4J9uDfdMt6i3SArq2/N1yn7qLZFow3Ti
ZRig3jJZWnBxEd8doB4D2MMRWaGpt2k/AyRR3VaGsdvUtwKrH20OHE64Q/PW
ELWHy2HeuEPn2YA8ObHRwBukHhOYrJZlbeYg9ZjACHzg875ukHpPgWJib9U0
00g9WxhbkvP6thmpZwf+HVc2tXxkpB4LcnOP5wQ2GanHgsWF09W634zUexru
R3aHjLJM1HsGli3Xgm2DTdTbAMEJZx0L95qoZw++PNlxXYaJevYwwAw6tKIw
Uc8BbiZt6SvWoOcI2Y3jfY3fo/csxBonw6v70XOCfRvm+xVj2O8Ei25/BDXO
ou8EC655y8G2Zt2TeKgzpHjU7HiRY6bznIH5WlHDX3wz9digea/tQUqgmXps
kM3PSfThZuqx4fMgogoBM72PC7BbfzU0i9FzgTDX+CvSV9HjQNnQK3aSg+hx
wBI1o6mXoMeBgKaa1iPJ6LnCodHZocJj6LnCLwIJhMrQcwPLXMPkW++i5waa
i5E1JBs9N+gucN/87Qn0NoLFb7Jg8BR6G4GXLy/RnkbPHSIWii+9nIeeO1jv
9oguykfPHerk44maAvQ8IKy+WKooRM8DOsvT/bafQ88T5myyOP3n0fOE7F6x
T6QCPU94tGh3P6cIPS/o8I1s1hSj5wUxoijZ1RL0uKDsFXfVXkCPCz0d7X4f
f4oeF3rD0zq2lqLHg+sLvkUPS9HjwebMLw6oytDzhp8qRG0B5eh5w6bvkgO/
LkfPG2xO5tg+r0TPB9TS7g9Klej5ALPuqHpGiR4fdmnzknZV4P/FB3aGuK26
An0+SA5Wp41XYJ4PKbsngv1VOI8PAV9GfJOsQk8Al+XOxZUq9AQQo60Q/6xC
TwAZPRcSZ1XoCeC6fnC7txo9Adi81CnZqkZPCHUlX9klq9ETgmLbGWWuGj0h
3F2qif9MjZ4QZM+5nGlZ94QQ0huQrl/3RFBb1Rk5pMb3EcHUWI/fP+ueCM46
cN5YWfdEYDKFOThWoicC/7SR/V6V6PmC3d9TCX6P9/8DC6Trvg==
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {-0.3999727600491529, 
             0.6058720974236856}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {-0.3999727600491529, 0.6058720974236856}},
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw10gkwXHccB/Alri2atXbdx+5SNaLEMZNMUv4/5Ki2pqloqJGmqCMUdZUI
kRJHQoVYHUcyKSKIdSZKSbw6Iq7F1qoYaSI6ExaprCPRoTS6P7+ZN2/ezO/7
+b/35sv1i3APkKfRaAFvr5377hQX7cwkkd1/Ja8tcyI+KRDjcz+ppNe4WReN
EHu7nRkj8nHzN6jcXrKbm3zUvxhN7hOZNk0qTgj0s45W4/5fpOXfML3jkEAF
Be7MC6L5t/9leVYtJctLSBTzx5+y6W2UcGhnFolnksvoDKOLknmviFrJNxas
0F7cl5JYVu5JVe0BSuavkO5Wl7M2ekLMrxInccunYedH8LzXRC4skhNbOore
OpHcEbYufShC7x8SrNg5a1UgQm+DCO8P5WbVi9DbJIf7HUYK80TobZEDqS6/
qzuJ0KOBc0WOa0P3KO7TgDJlHnIyHkVfDtpqhEGTTcOYl4duji4ndmkIz9sD
M+v6ebTtAfQUYBUex1Ut9KGnAB1pv3hqUrvfrwip/PikIyk96ClByeeuojyH
LvSU4S7n1AduUgo9FXCfqzj0NKYdPRVYS+p7ZslsQY8OD6gpmpm4Cb13wEzF
nxaSWYueKmzyraTXxBXoqUHtwweVb+xuoKcGm5AYeSX7Knrq8NhlYsIjMRS9
d2HwXvpUqmYy9mEveJ27pTE8mod9YYCkI4HX1VhMZPsMuB1uTQrsS4nMZ0Am
17R8O+kW+T9upwH7LlxTWj1Yif3TgJa0dsFASDV6TLjHTpOKdGvQY8L+Ao3E
ADcBekx4NDEtvK5ei++jCU9oxU9N/WvR04Q2xp/uZp616LHg/VXL/fQVAXos
OP3E28Ifdj0WiCXGXw1+VIMeG77syFzqYd9Bjw2n63vDixqq0NOCiOf2y+68
SvS0oEkas5wbXYGeFsh5jEZmCcrR04YCeo3BprgUPW3Q/XZfBHPuJno6kK9c
19TIuY6eDlRPrZX1nilETwfsfIfPWTTw0dMFiaPvWLh+Hnq6MG6uUth6Mgs9
PYhZPuDo8fASenogEM7M/2aVhJ4ebNt6TX9WGYmePmgrNtcNqvqgpw97tup4
4yVHsS8G0NcWbkifD8Q+GMDxMWlwsmM09scAuGsBPiV7E7BvhsA26vFIWEjG
PhmCt3meXWtoCnpG0MxmB7aHXULPCPR7xgLraenoGcHH9UEiL4sM9IzBUVWq
dFiagZ4xLAS/Z3PKJxM9DrhY/mxtHp1JyfrFAcWD/OVQh0z0ObBldDOf0b2b
5wB9Ts6XoZaB53Gg/LvLP5zhpKPHBbuc6NkB5TT0uPB146T5Sn8qely4nf1y
wzQ8BT0u2Fp8wffbuIje27yuVen3ry6gx4N4W2e/zvHz6PHAlfOMud4Yjx4P
3oT0eOdfjUWPB1NKOp0v46LQ4wG/eK1s9kU4eiZAKTRckTLP4v8xgRMpVay7
F/3RMwGJjadQEOuDngkElFmRY3x39EzgedSijdsfzuiZQvKcTXP1MQb1H9hY
xM8=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw10gswXGcUB/AlnrHqsXaxnmu3pWpMuoImId9Jo5LooENlPEbTUCsIibJL
gygNFRpvxTZCEiQekaVEwtqNFp3KGiUeVeKZKK205CGlNI3scWbu3PnmnvM7
3535s4JOeYUoUiiUkFfP1nu7uHZbNUeEpVt1h6jKkmfcg7fPPxMx15n7m/cc
2f267z7pdTUOpmlsfx8jT6I56R/mzBK5Nk0SUzXPDc/PYP8c8bzf7fVEf4aE
8rZqnuS7WV6UWk3j/CI5W+g54Ll/kvTJtmqJ9IecENQrTKC3TH7S3GXpUz2G
/StEwBMcPu4wiv5TwnA5pfdu+xDOPyPlQ/TkIOdB3LdKXk5P0ArO96P3D8mu
jHcYE/Wit0YoQ1remxvd6P1LGlz5+2XxnehtkItLU4fW/dvQ+49MmPGsIz9o
Qo8CBRxaVOyZKuyngKDkXFnLJ9noK4B7c+G9K+ScVD6vCOKn61M9MRVS+b4d
EBgX7sbMrZXKOSWYjlxhiZoapXJPCWgRm42TCS1SuacM+4psLgiu3UZPBQS9
x5i/7m1HTxW6He19Ljt1oKcGnleNPitslqCnBo+bSvkBdVL01OHjPWUsS/pd
9HZCT7hpQo3JXfQ0YKEzi3tjQYoeFRQ0xL8POknRowLJ7Kp1f1+CnibQ4+I1
83Z0oPcGFFHzqIuZ2/fTAsYVDzWP2TvoaUNa2khrIG37f7TBfNn3DFjeQl8b
Tp4UUnLeapa+HrfTgY+KNwOOGzbhPh2ozr9+xFBVhJ4u2K9LjtIe16GnC8Y2
q94l49fQ0wV13vibFQ+v4n1o0Dhg5tatU4EeDfxaq8YPjpSgpwcDh5lNoX/n
oacHXNfZQatn6ejpAedes/rNDT56dPhxb1ugPf25RO7RAXq+2AzpiMG8MOAH
8efRPrdTMU8MkI2Kbb9MycT8MICT0qpicykX86gP81XJ0dS4AsyTPvAqfV2C
+ovQM4Cy6j9Hd9cXo2cArIwNz1paKXoGoBzhyi+nCtEzhLrEheHKS0L0DOGC
bFUsGxCixwSOVqLL2QYhekyo7GzJCnIWoseEd5535Tp+XYqeEYgoqbvaCkvQ
M4KVCOv1jKhi9IxB33C8T9vkW/SMYS27ISzyeiF6xuD1fa1ppEEBeibQNxRH
DYrNQ88ErJLs8vnpOeiZQpJTr88NxjfomUKeg52NdVUGeqZQmsKfKnZKQ88M
NtY8qOHzKeiZgYRovth3NAk9czgvWtfqYscReb7MQcQ8TV8+EI2+OaSJxjq7
+aE4bw6Tp3tGbAP8cZ85HOGqLHKlzuixYKnCt9o46yDmlQV9Nbccb+7xw/yw
wK/8K+UTscGYNxb4zD7QUAwPwzyxIMfq5aP3UqIwfxaQUe8P3cei0bOAhx3D
kghGDHoW8F35zkjnsFj0LEDVquyPjkA+ehYwOXj5wYs1Pnps4HhU8RJcBJhX
NtguqHq+/eos99gwNP1pBZsiQI8N7Y8alGqStz02HFps+0uxNxY9Dvzi4tTC
m4+R/g+mSLkp
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw90g9Q02UYB/ABC1YCwRjInw32hwLu4MBACuJ4H/9gw0NN0eTMSQQTkVZE
UJolEEPUG2DA2CDphHIhOwKhDjC7eUTSAnYIyraMsPhTCFksBPlzkMj78Nz9
7r333uf7ed577yd48519UmsGgyF9/K2uWKrK1dKTqidrOzkcH9d3aWcH3euJ
9sMXjqW+3krCQldrgIwc+cRe3qWh52aSmce1rMwkkTXtHpnmtT6MPVmrW+sf
ISqDbSzxbNalHl2tcRKXsaV82Oeabi0/QRq8uwpZV2/oentWa4pMRv/OaZ3/
Qbfm/UscR8+LpZabtH+avK3Zz2+q1VP/P8KKO8E95dxD8zNkZ17ZsFWMgc6b
JdGyHdwsQR/1HpGI9DmFL+sW9eZJ4J9uDfdMt6i3SArq2/N1yn7qLZFow3Ti
ZRig3jJZWnBxEd8doB4D2MMRWaGpt2k/AyRR3VaGsdvUtwKrH20OHE64Q/PW
ELWHy2HeuEPn2YA8ObHRwBukHhOYrJZlbeYg9ZjACHzg875ukHpPgWJib9U0
00g9WxhbkvP6thmpZwf+HVc2tXxkpB4LcnOP5wQ2GanHgsWF09W634zUexru
R3aHjLJM1HsGli3Xgm2DTdTbAMEJZx0L95qoZw++PNlxXYaJevYwwAw6tKIw
Uc8BbiZt6SvWoOcI2Y3jfY3fo/csxBonw6v70XOCfRvm+xVj2O8Ei25/BDXO
ou8EC655y8G2Zt2TeKgzpHjU7HiRY6bznIH5WlHDX3wz9digea/tQUqgmXps
kM3PSfThZuqx4fMgogoBM72PC7BbfzU0i9FzgTDX+CvSV9HjQNnQK3aSg+hx
wBI1o6mXoMeBgKaa1iPJ6LnCodHZocJj6LnCLwIJhMrQcwPLXMPkW++i5waa
i5E1JBs9N+gucN/87Qn0NoLFb7Jg8BR6G4GXLy/RnkbPHSIWii+9nIeeO1jv
9oguykfPHerk44maAvQ8IKy+WKooRM8DOsvT/bafQ88T5myyOP3n0fOE7F6x
T6QCPU94tGh3P6cIPS/o8I1s1hSj5wUxoijZ1RL0uKDsFXfVXkCPCz0d7X4f
f4oeF3rD0zq2lqLHg+sLvkUPS9HjwebMLw6oytDzhp8qRG0B5eh5w6bvkgO/
LkfPG2xO5tg+r0TPB9TS7g9Klej5ALPuqHpGiR4fdmnzknZV4P/FB3aGuK26
An0+SA5Wp41XYJ4PKbsngv1VOI8PAV9GfJOsQk8Al+XOxZUq9AQQo60Q/6xC
TwAZPRcSZ1XoCeC6fnC7txo9Adi81CnZqkZPCHUlX9klq9ETgmLbGWWuGj0h
3F2qif9MjZ4QZM+5nGlZ94QQ0huQrl/3RFBb1Rk5pMb3EcHUWI/fP+ueCM46
cN5YWfdEYDKFOThWoicC/7SR/V6V6PmC3d9TCX6P9/8DC6Trvg==
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {-0.3999727600491529, 0.6058720974236856}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]\\!\\(\\*StyleBox[\\\"X\\\",FontSlant->\\\"Italic\
\\\"]\\)\[RightAngleBracket], \
\[LeftAngleBracket]\\!\\(\\*StyleBox[\\\"Y\\\",FontSlant->\\\"Italic\\\"]\\)\
\[RightAngleBracket], \
\[LeftAngleBracket]\\!\\(\\*StyleBox[\\\"Z\\\",FontSlant->\\\"Italic\\\"]\\)\
\[RightAngleBracket]\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\[CapitalOmega]\[VeryThinSpace]\\!\\(\\*StyleBox[\\\"t\\\",FontSlant-\
>\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.3999727600491529, 0.6058720974236856}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[7]=",
 CellID->91518771,ExpressionUUID->"308aabb4-e296-438e-8e3e-a785f21c5a4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "b4a4e403-87db-486f-9f46-6df858cf097d"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->818700002,ExpressionUUID->"6c6086ea-f898-4f31-a961-60cb0a91dddd"],

Cell["\<\
Let solve the same problem as the above but in operator expressions.\
\>", "ExampleText",
 CellID->1536645940,ExpressionUUID->"13ba2c7c-eb30-497d-a664-288462e86380"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1470681252,ExpressionUUID->"4ca10a4f-b2ee-4c7c-a385-d972758e4d74"],

Cell[TextData[{
 "Take an effective Hamiltonian. Again, we put  ",
 Cell[BoxData[
  RowBox[{"\[CapitalOmega]", "=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "ecac05bc-5b10-4035-8d3b-daedb7c5750e"],
 " (the transition frequency of the two-level system) and ",
 Cell[BoxData[
  RowBox[{"\[HBar]", "=", "1"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "6f86508c-f0b9-4ed7-9aef-d5a40ad7ffd2"],
 "."
}], "ExampleText",
 CellID->1467300503,ExpressionUUID->"320c91e9-0c10-47a9-a527-2a23ea58cf72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{"S", "[", "3", "]"}], "/", "2"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1701417680,ExpressionUUID->"72746c94-eb8f-45f8-94a2-3c469ac8962c"],

Cell["\<\
Take the quantum jump operators that are responsible of particular quantum \
decoherence processes.\
\>", "ExampleText",
 CellID->853328879,ExpressionUUID->"83744f30-8e56-4e97-9c8e-92f4b68bb446"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->682224499,ExpressionUUID->"7f2f8310-1d19-4fd1-abde-fb6d3f77b38e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[4]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"S", 
       TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""}, 
        "RowWithSeparators"]},
      "Superscript"],
     $CellContext`S[5]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->343295758,ExpressionUUID->"8b1a536d-d912-4654-bb30-bff58da05bca"]
}, Open  ]],

Cell[TextData[{
 "It is not necessary, but for more detailed analysis, it is useful to \
examine the ",
 ButtonBox["Lindblad generator",
  BaseStyle->"Link",
  ButtonData->"paclet:Q3/ref/LindbladSupermap"],
 ", a supermap generating the quantum master equation."
}], "ExampleText",
 CellID->250174039,ExpressionUUID->"d48beeb3-ad16-4b08-b033-d0843af98bb4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spr", "=", 
  RowBox[{"LindbladSupermap", "[", 
   RowBox[{"opH", ",", " ", "opL"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->2049576294,ExpressionUUID->"de1d4c9a-2691-4cc0-b677-3baed30d0722"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LindbladSupermap",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Hamiltonian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FractionBox[
                   InterpretationBox[
                    TemplateBox[{"S", 
                    
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""},
                     "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    $CellContext`S[3]], "2"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Hamiltonian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  FractionBox[
                   InterpretationBox[
                    TemplateBox[{"S", 
                    
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""},
                     "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    $CellContext`S[3]], "2"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Damping operator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    InterpretationBox[
                    TemplateBox[{"S", 
                    
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""},
                     "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    $CellContext`S[3]], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    
                    TemplateBox[{",", "\",\"", "\"-\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["-"]], "-", 
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    TemplateBox[{",", "\",\"", "\"+\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["+"]]}], ")"}]}], "+", 
                    RowBox[{
                    FractionBox["1", "4"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    
                    TemplateBox[{",", "\",\"", "\"-\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["-"]], "+", 
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    
                    TemplateBox[{",", "\",\"", "\"+\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    InterpretationBox[
                    TemplateBox[{"S", 
                    
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"+\""},
                     "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    $CellContext`S[4]], " ", 
                    SqrtBox[
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    
                    TemplateBox[{",", "\",\"", "\"+\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["+"]]]}], ",", 
                    RowBox[{
                    InterpretationBox[
                    TemplateBox[{"S", 
                    
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"-\""},
                     "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    $CellContext`S[5]], " ", 
                    SqrtBox[
                    InterpretationBox[
                    SubscriptBox["\[CapitalGamma]", 
                    
                    TemplateBox[{",", "\",\"", "\"-\""}, 
                    "RowWithSeparators"]], 
                    $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Q3`LindbladSupermap[{
   Rational[1, 2] $CellContext`S[3], $CellContext`S[
     4] $CellContext`\[CapitalGamma]["+"]^Rational[1, 2], $CellContext`S[
     5] $CellContext`\[CapitalGamma]["-"]^Rational[1, 2]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->1293792627,ExpressionUUID->"1d063328-e5bb-447a-9295-94bb15edd700"]
}, Open  ]],

Cell["\<\
Take a look at the way the Lindblad generator acts, say, on the initial \
quantum state.\
\>", "ExampleText",
 CellID->737505602,ExpressionUUID->"e0f5409d-2866-426c-b16f-30c2b7620047"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"out", "=", 
  RowBox[{"spr", "[", "in", "]"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->2128525977,ExpressionUUID->"bebaed2b-22dd-4915-93a0-cb7845a97c35"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Y\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[2]], "2"], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"X\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[1]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      InterpretationBox[
       SubscriptBox["\[CapitalGamma]", 
        TemplateBox[{",", "\",\"", "\"-\""},
         "RowWithSeparators"]],
       $CellContext`\[CapitalGamma]["-"]]}], "-", 
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]}], ")"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   InterpretationBox[
    TemplateBox[{"S", 
      TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"Z\""}, 
       "RowWithSeparators"]},
     "Superscript"],
    $CellContext`S[3]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      InterpretationBox[
       SubscriptBox["\[CapitalGamma]", 
        TemplateBox[{",", "\",\"", "\"-\""},
         "RowWithSeparators"]],
       $CellContext`\[CapitalGamma]["-"]]}], "+", 
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]}], ")"}]}]}]], "Output",
 CellLabel->"Out[5]=",
 CellID->1126587871,ExpressionUUID->"79ccb434-99da-40c1-a22d-ba019bebe34d"]
}, Open  ]],

Cell["Set an initial state.", "ExampleText",
 CellID->967918059,ExpressionUUID->"ba67a6a7-ed2e-4b6b-b879-9c228c6ef111"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"in", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"in", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->963207285,ExpressionUUID->"739a2fe6-9326-442b-94ff-66da68834ea1"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     InterpretationBox[
      TemplateBox[{"S", 
        TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"X\""}, 
         "RowWithSeparators"]},
       "Superscript"],
      $CellContext`S[1]]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->325360972,ExpressionUUID->"a8d9bc5d-9cf2-41f7-a782-0df4810b2893"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->896810696,ExpressionUUID->"754c90be-0d18-499d-a73c-601db1e986c1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "rho", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"spr", ",", "in", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->719143774,ExpressionUUID->"2b945f9f-46b5-4a50-a135-88017bc822d7"],

Cell["\<\
For a physical interpretation, it is useful to get the Bloch vector \
corresponding to the density operator.\
\>", "ExampleText",
 CellID->118915418,ExpressionUUID->"a1f4544f-663b-4de6-a25d-ff4af3bc188c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"avgX", "[", "t_", "]"}], ",", 
     RowBox[{"avgY", "[", "t_", "]"}], ",", 
     RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Elaborate", "@", 
        RowBox[{"rho", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"S", "@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[8]:=",
 CellID->1210483635,ExpressionUUID->"c31fd6fe-1698-40ff-8b20-2a118e097b9c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega]\[VeryThinSpace]\!\(\*StyleBox[\"t\",FontSlant->\"\
Italic\"]\)\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[9]:=",
 CellID->1754552550,ExpressionUUID->"107570e0-ad6c-4a96-9b77-4fdb3ba9d23f"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw10nlM02cYB/CqFKor42opUKAHMAg7HMcfyILv4wRN50DYxmQTxr2qQLnK
IbCA4jCRKTSCLYedI3IEBMYhZ2s92CYBshEuRaGOyzBw0kJUwjU7Hp7kl1/e
vM/zed+8+fIi4r+I3k2hUKLffrr/Tm1u6UpNSkt01Unk87ayS4JJXPeSjH7l
0VthT4m7m66GSESGuT/Ffxz3HxPpj8JIGe8R2daekb3SugcLkyPYP00UW5/n
PywcIsLvdTVHbFrXMwVkEOfnSZUXO6x0eoAM9OtqkazcH1maC+lFb4m4ZGkF
7qs92K8hHuOf9XSr7qK/TIyaavzE4k6cXyHtlZ+Ua9VNeN4r8nzPmZjUskr0
3pCG/qCAG2wJeqvkfW6UU8dkhmrbWyMxSvFjtmu5attbJ8VpKfU9ldWqbW+T
uDiHXV2h/KrC5wMtvfN8rqwF+ylQ5JfPXy5vU237u0A9yFIwzTpxfjfM2Xhn
rlK68bw9UBM40tgVp0BPD3LktWWCcCV6etC7xlwTzCjRo0LkHUnd7JYSPX1g
O9LM5UolegYQyJkx/MBRiR4NRPQm7+AjCvRo4PvxM58X9t3o7YV7XzH+Te3f
ud8+WEgpWPI90oHeO9D+ERmOLWtDjw5amcOd6OFW9OgwX9Vxwn+1GT1D2PI/
1dJq0oTeu2Dcc4+6X9CAnhEoNDZrNQm16BmDKP7L9IjKKuw3hoy0VyP1mgr0
jcEoUsTbVMhV/4+7mcA6R27xzXMpnmcCgzHeb7LiJeiZQpKvi7HX3Tz0TCGF
GpQeapCGnilUutDiuMGH8T5mUFt/OVl6KAHzYAZ9buqDlpk5mBcG5NxwVk2M
XcQ8MaDtZWZIhccVzBsD1ncPGbIGJZhHJhz9cGrjtmERekzw5Wwsjo0Wo2cO
LM8DJ+iuUvTMwWi24M9fHGTomcPESbpxSYcMPRb8Iy+cDNbK0GPB7fc4t1Tj
MvQswKx6Kvq3szL0LIC1j3ZOMiZFzwLy2pLavdevoWcJr6Nf2C6+LEbPEsbU
F/1Cu4rQswLP8bkAz8ir6FmBK3cu9IFGgp4VmNTe1DyJLUSPDfbV+ycM2i6j
x4aK8jPTwguX0LOG+FGHlOXjO+9nDRKj4w9v8i+gZw0FstNl6dRz6NnA0KOU
U39RstCzAe+piIUr7qno2YJjc1wEozkBPVuQLvvEaKlC9GzByV+ublR8ix4H
+nbJWezZQ+hx4ODZQT0nfS/MCxeCuH0N5cOBmC8uJNFSZzzCwzE/XOA3/JBX
TxVi3rjgN5CtaRuPwTxxgXlSP+zwbDx6PEjLdVhxvpaIHg+Uq1rWsadJ6PEg
icop2OhNRo8HfVnZ7tNRYvR40Kj3qXijWYweH0IS7xe3dInR40O2Fb/m+nkx
enz47u9SRoaJGD0+RM4eKzEUJaP3dv31ASfmz0no2UFXQP6oQ10i5t8OckUa
arMsAT07UPvQf2p9IkLPDkrm6C2G4bHo2cH1rN87U/pPo2cPUZN/vPZyEqr+
A/rwxqs=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0n9Q03UYB3BAbIAYCOPnxtgPoLJxIuAJpHweEZ2WiCBQA1mLBVtcHK4I
CUEEYQcYigYSP2q4+LENUkKBAGFYCCcNGEWYXtwB8kNLpZiCQlHRHv/pufve
9773eZ7X8737vFlxyeHxJkZGRvH/Pmvv/1dF+Vq1k3Jq/PKFUCUxfN8kYyms
kgyTNuLrs1Y/kj7v5UNCXg+e3yaTnnZFTeJeYlAmSEQaJUIy04/9dwlb+Q6J
uzFAxAlrNUtSvywwmdo4iPP3iUgrUQr7hsigdq0ekHPdVdORS8Po/U4suW36
dZE67P+DeInkMs8UHfp6Ev1GJT9coMP5x2TPBm5ej6MO9y2SBP1RTmPYc+8p
oVQuz4y/NITeM9LF4w2ou7XorZD70dH2Cczv0fuTjF0dyTB78yZ6q8S6N3PW
+f1+9IxAvPdMco3kBvYbQaCIZNAiv0PfGFYC9o+/5X8d503gaUp3MMO/G/et
g9MFXqU5Fh3omcLy+Dzr/EILeqYwefkV48qVr9FbDzYxPXWmsY3ovQDcqHvO
19xr0aOApyL8wExnFXpmMBnU7LrLtRg9M5C7BbfZ2n6AnjlI//ZpX2SnaQye
BVhYnWgrW39WY/A2wOLrIp+fZss0Bs8SPKyjDl7bJtcYPEuQfjzaqmtXaAze
RohNbynTHq5F70VIPHqJlZVUj54VbOX0WfZZqtCzBv+u27ci/NTYbw2+Oyc+
r1xSo28NzNHFLmV4g+a/cZ9NEOz0cPq3sAbctwnk/el691U1ejZQFZsof034
3LOBDD/xcXq2Cj0bGPoqt07xnhL/xxYafi35LJNdj54tlKae5NOu1qJHhX6H
kYYijxr0qHCp6V27omwFelRYPZ7VekBbjZ4dnK8XCDi0L9Czg3Mf6iNdyirQ
s4cjj5K+GXUoQ88e/Kiq7fn1n6JnD1fiH7tzQ4vRc4CEZxpaqmcheg6gDK2T
68xz0XMEiy5vSWFmBnqOEPDD/LBrgxQ9R1DpissnVAL0nCD/iXH8QsV2vH8n
+LkliiP7SIR5cYbYnTUeNDsp5ssZFkNuqfn5xzA/ztCgfLvzgX0m5o0G08Ir
E31TJ9GjgWUNh98xmIMeHSLovyR3HspFjw4DvDkFQ5qHHh28/5LkjfnK0HOB
Jt2dXoFChp4LpHlPCRU9MvQYMDdQydRekKHHAG+ni+oArgw9BtQESRv5+Xno
ucL8VvZMcXMueq5Q7D8ifLn5FHpMuEObOxF4JocY8sWEjpKg3XUh2egz4Vvd
voHJh1k4z4T9j7ZcLmBm4j4mUN2iGeOB6eix4EihcWHR4WPosWCzV+1JoSQF
PRaMBO0xD5JJ0WNBZrXzXqvEJPRYwDc3FactidFjw9ktqzsu9sShxwarfacj
y+Qx6LHBdUF0ShEdjh4bNjvq+7hZu9FjQzW/+cndQhf0OMBKDaE7HdyGeeBA
KaXVLCCbh/nhQI7V9cbipDDMGwfuRbxKYcdEYZ44IByOy1J9Eo35c4Oq2ood
PIpA8w9cIagK
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntMU2cYBvAjAuOiXAuWq70gDmEgAywo8bwwYRbqgqUiSDBMrptDxYXM
hQ1hTC5yE2hpu7C5uTEdgTluA5Kl5VJoC3ViXFIgceGSkWwjE3BAhVEm83v7
x57k5OTLeZ/fe3Jy2BcuC7PMKIrKenHt3P+fz+Q76afnQrOjoz9uVL48a2l5
bHzMk7o7ytCQnTymR2psVPE3W8nzKXqm9KIwcPYH5Utlhj7qvkadPNBN5ufp
aGP6xoRbrzIneycL9Be+6erU0X7S/52+90SuGgz+SflAt5NFem/t2OEjFxTE
W6KT0u2utwYOkPllOuTQsQEmY5D4z2izvGOdHfODpP83/bbO/mjl7SGyb40+
e2f6u2L+MPEMdE4LPyF+fph4z2n/GH7R+5dUxNukv40JaklbVBHvH1peNUcL
zo8Qz0gPjYpCM0ZGiEeB/4a2s5UzSuYp2Dq+PuH4wSjxd0FYnH7iyvAo6ZvB
drPxXJWVmuzbDZtjk8FOb6qJZw5Ln0ZNtVxXE88cEmdqk/SdauJZQMmwZZXf
rJp4lqAoaTzubKsh3ivAV1hYUsEa4lnBnPiuPiFRQzwrCAsflqZd1RDPGtYK
DcaCWg3xbKCBV7kxexc9W5CG8yRzCvT2QPJ21y+dj9HbA6fvMxkVC+jtheVT
gtyGdfTsYD5/sn/LUks8eyja3Zu8zNASzwFW4l91qGdrybwDRKyHJ2wFaInv
AKW5raGJPK3yv3qIIwhVZantoCX7HCErJaCNy0fPCVzCusfHE9BzgrjMp/n9
Z9FzAv2BtBhjGr6PM8S2R2S0ZqDnDB2xtSJdLnoMqDrzRkh+HnoMSNEIN77J
R48BzqGC5KsF6LlAWKqXx/w19Fwg571pW+oj9Fyh6eGfnEdF6LmCT3zdl2kl
6LmCYlcx1VaK3j74Oe63I0M30NsH7yYlilvK0WPCXzRv5VwlekwQMPy6Fm6i
x4Tlwja1oBo9NzDURepu1aDnBlGirw09tei5Q3CfNSjr0HOHrfrVk/dvoecO
7U4r1yrq0fOAWM8H24IG9DzA/gT7kbEBPU/oSZrqvd2InidoM157K1iMnidc
Kau07hGj5wWZZYWRARL0vODZarGrTIKeN3isHvz+uQQ9bxjUF26ebkLPG1Jq
rOa+akJvPwh97AL/aEJvP+jNC2X+UvRYECKa0GZL8f9iwXhKaXKzFH0WTE9a
PNRJsc+CVVHJPYMU97FAJ1k8w5Khx4bLEkXkCRl6bBCnqvoyZeixgVnd4fWJ
DD023Hga8WOzDD02fO7npe42eRxY9C2vGTN5HHhHWB31q8njgI2v2GXJ5HEg
svcwj5Kjx4GgcmrCTo4eFw7xN8w95fh9uFB1Ps9wUI4eF7oCKjSvy9HjwlZW
Un2kyeNCX8HAxRiT5wPeQR9eOvXi/C/Rh+NJ
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw10nlM02cYB/CqFKor42opUKAHMAg7HMcfyILv4wRN50DYxmQTxr2qQLnK
IbCA4jCRKTSCLYedI3IEBMYhZ2s92CYBshEuRaGOyzBw0kJUwjU7Hp7kl1/e
vM/zed+8+fIi4r+I3k2hUKLffrr/Tm1u6UpNSkt01Unk87ayS4JJXPeSjH7l
0VthT4m7m66GSESGuT/Ffxz3HxPpj8JIGe8R2daekb3SugcLkyPYP00UW5/n
PywcIsLvdTVHbFrXMwVkEOfnSZUXO6x0eoAM9OtqkazcH1maC+lFb4m4ZGkF
7qs92K8hHuOf9XSr7qK/TIyaavzE4k6cXyHtlZ+Ua9VNeN4r8nzPmZjUskr0
3pCG/qCAG2wJeqvkfW6UU8dkhmrbWyMxSvFjtmu5attbJ8VpKfU9ldWqbW+T
uDiHXV2h/KrC5wMtvfN8rqwF+ylQ5JfPXy5vU237u0A9yFIwzTpxfjfM2Xhn
rlK68bw9UBM40tgVp0BPD3LktWWCcCV6etC7xlwTzCjRo0LkHUnd7JYSPX1g
O9LM5UolegYQyJkx/MBRiR4NRPQm7+AjCvRo4PvxM58X9t3o7YV7XzH+Te3f
ud8+WEgpWPI90oHeO9D+ERmOLWtDjw5amcOd6OFW9OgwX9Vxwn+1GT1D2PI/
1dJq0oTeu2Dcc4+6X9CAnhEoNDZrNQm16BmDKP7L9IjKKuw3hoy0VyP1mgr0
jcEoUsTbVMhV/4+7mcA6R27xzXMpnmcCgzHeb7LiJeiZQpKvi7HX3Tz0TCGF
GpQeapCGnilUutDiuMGH8T5mUFt/OVl6KAHzYAZ9buqDlpk5mBcG5NxwVk2M
XcQ8MaDtZWZIhccVzBsD1ncPGbIGJZhHJhz9cGrjtmERekzw5Wwsjo0Wo2cO
LM8DJ+iuUvTMwWi24M9fHGTomcPESbpxSYcMPRb8Iy+cDNbK0GPB7fc4t1Tj
MvQswKx6Kvq3szL0LIC1j3ZOMiZFzwLy2pLavdevoWcJr6Nf2C6+LEbPEsbU
F/1Cu4rQswLP8bkAz8ir6FmBK3cu9IFGgp4VmNTe1DyJLUSPDfbV+ycM2i6j
x4aK8jPTwguX0LOG+FGHlOXjO+9nDRKj4w9v8i+gZw0FstNl6dRz6NnA0KOU
U39RstCzAe+piIUr7qno2YJjc1wEozkBPVuQLvvEaKlC9GzByV+ublR8ix4H
+nbJWezZQ+hx4ODZQT0nfS/MCxeCuH0N5cOBmC8uJNFSZzzCwzE/XOA3/JBX
TxVi3rjgN5CtaRuPwTxxgXlSP+zwbDx6PEjLdVhxvpaIHg+Uq1rWsadJ6PEg
icop2OhNRo8HfVnZ7tNRYvR40Kj3qXijWYweH0IS7xe3dInR40O2Fb/m+nkx
enz47u9SRoaJGD0+RM4eKzEUJaP3dv31ASfmz0no2UFXQP6oQ10i5t8OckUa
arMsAT07UPvQf2p9IkLPDkrm6C2G4bHo2cH1rN87U/pPo2cPUZN/vPZyEqr+
A/rwxqs=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0n9Q03UYB3BAbIAYCOPnxtgPoLJxIuAJpHweEZ2WiCBQA1mLBVtcHK4I
CUEEYQcYigYSP2q4+LENUkKBAGFYCCcNGEWYXtwB8kNLpZiCQlHRHv/pufve
9773eZ7X8737vFlxyeHxJkZGRvH/Pmvv/1dF+Vq1k3Jq/PKFUCUxfN8kYyms
kgyTNuLrs1Y/kj7v5UNCXg+e3yaTnnZFTeJeYlAmSEQaJUIy04/9dwlb+Q6J
uzFAxAlrNUtSvywwmdo4iPP3iUgrUQr7hsigdq0ekHPdVdORS8Po/U4suW36
dZE67P+DeInkMs8UHfp6Ev1GJT9coMP5x2TPBm5ej6MO9y2SBP1RTmPYc+8p
oVQuz4y/NITeM9LF4w2ou7XorZD70dH2Cczv0fuTjF0dyTB78yZ6q8S6N3PW
+f1+9IxAvPdMco3kBvYbQaCIZNAiv0PfGFYC9o+/5X8d503gaUp3MMO/G/et
g9MFXqU5Fh3omcLy+Dzr/EILeqYwefkV48qVr9FbDzYxPXWmsY3ovQDcqHvO
19xr0aOApyL8wExnFXpmMBnU7LrLtRg9M5C7BbfZ2n6AnjlI//ZpX2SnaQye
BVhYnWgrW39WY/A2wOLrIp+fZss0Bs8SPKyjDl7bJtcYPEuQfjzaqmtXaAze
RohNbynTHq5F70VIPHqJlZVUj54VbOX0WfZZqtCzBv+u27ci/NTYbw2+Oyc+
r1xSo28NzNHFLmV4g+a/cZ9NEOz0cPq3sAbctwnk/el691U1ejZQFZsof034
3LOBDD/xcXq2Cj0bGPoqt07xnhL/xxYafi35LJNdj54tlKae5NOu1qJHhX6H
kYYijxr0qHCp6V27omwFelRYPZ7VekBbjZ4dnK8XCDi0L9Czg3Mf6iNdyirQ
s4cjj5K+GXUoQ88e/Kiq7fn1n6JnD1fiH7tzQ4vRc4CEZxpaqmcheg6gDK2T
68xz0XMEiy5vSWFmBnqOEPDD/LBrgxQ9R1DpissnVAL0nCD/iXH8QsV2vH8n
+LkliiP7SIR5cYbYnTUeNDsp5ssZFkNuqfn5xzA/ztCgfLvzgX0m5o0G08Ir
E31TJ9GjgWUNh98xmIMeHSLovyR3HspFjw4DvDkFQ5qHHh28/5LkjfnK0HOB
Jt2dXoFChp4LpHlPCRU9MvQYMDdQydRekKHHAG+ni+oArgw9BtQESRv5+Xno
ucL8VvZMcXMueq5Q7D8ifLn5FHpMuEObOxF4JocY8sWEjpKg3XUh2egz4Vvd
voHJh1k4z4T9j7ZcLmBm4j4mUN2iGeOB6eix4EihcWHR4WPosWCzV+1JoSQF
PRaMBO0xD5JJ0WNBZrXzXqvEJPRYwDc3FactidFjw9ktqzsu9sShxwarfacj
y+Qx6LHBdUF0ShEdjh4bNjvq+7hZu9FjQzW/+cndQhf0OMBKDaE7HdyGeeBA
KaXVLCCbh/nhQI7V9cbipDDMGwfuRbxKYcdEYZ44IByOy1J9Eo35c4Oq2ood
PIpA8w9cIagK
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0ntMU2cYBvAjAuOiXAuWq70gDmEgAywo8bwwYRbqgqUiSDBMrptDxYXM
hQ1hTC5yE2hpu7C5uTEdgTluA5Kl5VJoC3ViXFIgceGSkWwjE3BAhVEm83v7
x57k5OTLeZ/fe3Jy2BcuC7PMKIrKenHt3P+fz+Q76afnQrOjoz9uVL48a2l5
bHzMk7o7ytCQnTymR2psVPE3W8nzKXqm9KIwcPYH5Utlhj7qvkadPNBN5ufp
aGP6xoRbrzIneycL9Be+6erU0X7S/52+90SuGgz+SflAt5NFem/t2OEjFxTE
W6KT0u2utwYOkPllOuTQsQEmY5D4z2izvGOdHfODpP83/bbO/mjl7SGyb40+
e2f6u2L+MPEMdE4LPyF+fph4z2n/GH7R+5dUxNukv40JaklbVBHvH1peNUcL
zo8Qz0gPjYpCM0ZGiEeB/4a2s5UzSuYp2Dq+PuH4wSjxd0FYnH7iyvAo6ZvB
drPxXJWVmuzbDZtjk8FOb6qJZw5Ln0ZNtVxXE88cEmdqk/SdauJZQMmwZZXf
rJp4lqAoaTzubKsh3ivAV1hYUsEa4lnBnPiuPiFRQzwrCAsflqZd1RDPGtYK
DcaCWg3xbKCBV7kxexc9W5CG8yRzCvT2QPJ21y+dj9HbA6fvMxkVC+jtheVT
gtyGdfTsYD5/sn/LUks8eyja3Zu8zNASzwFW4l91qGdrybwDRKyHJ2wFaInv
AKW5raGJPK3yv3qIIwhVZantoCX7HCErJaCNy0fPCVzCusfHE9BzgrjMp/n9
Z9FzAv2BtBhjGr6PM8S2R2S0ZqDnDB2xtSJdLnoMqDrzRkh+HnoMSNEIN77J
R48BzqGC5KsF6LlAWKqXx/w19Fwg571pW+oj9Fyh6eGfnEdF6LmCT3zdl2kl
6LmCYlcx1VaK3j74Oe63I0M30NsH7yYlilvK0WPCXzRv5VwlekwQMPy6Fm6i
x4Tlwja1oBo9NzDURepu1aDnBlGirw09tei5Q3CfNSjr0HOHrfrVk/dvoecO
7U4r1yrq0fOAWM8H24IG9DzA/gT7kbEBPU/oSZrqvd2InidoM157K1iMnidc
Kau07hGj5wWZZYWRARL0vODZarGrTIKeN3isHvz+uQQ9bxjUF26ebkLPG1Jq
rOa+akJvPwh97AL/aEJvP+jNC2X+UvRYECKa0GZL8f9iwXhKaXKzFH0WTE9a
PNRJsc+CVVHJPYMU97FAJ1k8w5Khx4bLEkXkCRl6bBCnqvoyZeixgVnd4fWJ
DD023Hga8WOzDD02fO7npe42eRxY9C2vGTN5HHhHWB31q8njgI2v2GXJ5HEg
svcwj5Kjx4GgcmrCTo4eFw7xN8w95fh9uFB1Ps9wUI4eF7oCKjSvy9HjwlZW
Un2kyeNCX8HAxRiT5wPeQR9eOvXi/C/Rh+NJ
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {-0.19999092001159452`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {-0.19999092001159452`, 
            0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw10nlM02cYB/CqFKor42opUKAHMAg7HMcfyILv4wRN50DYxmQTxr2qQLnK
IbCA4jCRKTSCLYedI3IEBMYhZ2s92CYBshEuRaGOyzBw0kJUwjU7Hp7kl1/e
vM/zed+8+fIi4r+I3k2hUKLffrr/Tm1u6UpNSkt01Unk87ayS4JJXPeSjH7l
0VthT4m7m66GSESGuT/Ffxz3HxPpj8JIGe8R2daekb3SugcLkyPYP00UW5/n
PywcIsLvdTVHbFrXMwVkEOfnSZUXO6x0eoAM9OtqkazcH1maC+lFb4m4ZGkF
7qs92K8hHuOf9XSr7qK/TIyaavzE4k6cXyHtlZ+Ua9VNeN4r8nzPmZjUskr0
3pCG/qCAG2wJeqvkfW6UU8dkhmrbWyMxSvFjtmu5attbJ8VpKfU9ldWqbW+T
uDiHXV2h/KrC5wMtvfN8rqwF+ylQ5JfPXy5vU237u0A9yFIwzTpxfjfM2Xhn
rlK68bw9UBM40tgVp0BPD3LktWWCcCV6etC7xlwTzCjRo0LkHUnd7JYSPX1g
O9LM5UolegYQyJkx/MBRiR4NRPQm7+AjCvRo4PvxM58X9t3o7YV7XzH+Te3f
ud8+WEgpWPI90oHeO9D+ERmOLWtDjw5amcOd6OFW9OgwX9Vxwn+1GT1D2PI/
1dJq0oTeu2Dcc4+6X9CAnhEoNDZrNQm16BmDKP7L9IjKKuw3hoy0VyP1mgr0
jcEoUsTbVMhV/4+7mcA6R27xzXMpnmcCgzHeb7LiJeiZQpKvi7HX3Tz0TCGF
GpQeapCGnilUutDiuMGH8T5mUFt/OVl6KAHzYAZ9buqDlpk5mBcG5NxwVk2M
XcQ8MaDtZWZIhccVzBsD1ncPGbIGJZhHJhz9cGrjtmERekzw5Wwsjo0Wo2cO
LM8DJ+iuUvTMwWi24M9fHGTomcPESbpxSYcMPRb8Iy+cDNbK0GPB7fc4t1Tj
MvQswKx6Kvq3szL0LIC1j3ZOMiZFzwLy2pLavdevoWcJr6Nf2C6+LEbPEsbU
F/1Cu4rQswLP8bkAz8ir6FmBK3cu9IFGgp4VmNTe1DyJLUSPDfbV+ycM2i6j
x4aK8jPTwguX0LOG+FGHlOXjO+9nDRKj4w9v8i+gZw0FstNl6dRz6NnA0KOU
U39RstCzAe+piIUr7qno2YJjc1wEozkBPVuQLvvEaKlC9GzByV+ublR8ix4H
+nbJWezZQ+hx4ODZQT0nfS/MCxeCuH0N5cOBmC8uJNFSZzzCwzE/XOA3/JBX
TxVi3rjgN5CtaRuPwTxxgXlSP+zwbDx6PEjLdVhxvpaIHg+Uq1rWsadJ6PEg
icop2OhNRo8HfVnZ7tNRYvR40Kj3qXijWYweH0IS7xe3dInR40O2Fb/m+nkx
enz47u9SRoaJGD0+RM4eKzEUJaP3dv31ASfmz0no2UFXQP6oQ10i5t8OckUa
arMsAT07UPvQf2p9IkLPDkrm6C2G4bHo2cH1rN87U/pPo2cPUZN/vPZyEqr+
A/rwxqs=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0n9Q03UYB3BAbIAYCOPnxtgPoLJxIuAJpHweEZ2WiCBQA1mLBVtcHK4I
CUEEYQcYigYSP2q4+LENUkKBAGFYCCcNGEWYXtwB8kNLpZiCQlHRHv/pufve
9773eZ7X8737vFlxyeHxJkZGRvH/Pmvv/1dF+Vq1k3Jq/PKFUCUxfN8kYyms
kgyTNuLrs1Y/kj7v5UNCXg+e3yaTnnZFTeJeYlAmSEQaJUIy04/9dwlb+Q6J
uzFAxAlrNUtSvywwmdo4iPP3iUgrUQr7hsigdq0ekHPdVdORS8Po/U4suW36
dZE67P+DeInkMs8UHfp6Ev1GJT9coMP5x2TPBm5ej6MO9y2SBP1RTmPYc+8p
oVQuz4y/NITeM9LF4w2ou7XorZD70dH2Cczv0fuTjF0dyTB78yZ6q8S6N3PW
+f1+9IxAvPdMco3kBvYbQaCIZNAiv0PfGFYC9o+/5X8d503gaUp3MMO/G/et
g9MFXqU5Fh3omcLy+Dzr/EILeqYwefkV48qVr9FbDzYxPXWmsY3ovQDcqHvO
19xr0aOApyL8wExnFXpmMBnU7LrLtRg9M5C7BbfZ2n6AnjlI//ZpX2SnaQye
BVhYnWgrW39WY/A2wOLrIp+fZss0Bs8SPKyjDl7bJtcYPEuQfjzaqmtXaAze
RohNbynTHq5F70VIPHqJlZVUj54VbOX0WfZZqtCzBv+u27ci/NTYbw2+Oyc+
r1xSo28NzNHFLmV4g+a/cZ9NEOz0cPq3sAbctwnk/el691U1ejZQFZsof034
3LOBDD/xcXq2Cj0bGPoqt07xnhL/xxYafi35LJNdj54tlKae5NOu1qJHhX6H
kYYijxr0qHCp6V27omwFelRYPZ7VekBbjZ4dnK8XCDi0L9Czg3Mf6iNdyirQ
s4cjj5K+GXUoQ88e/Kiq7fn1n6JnD1fiH7tzQ4vRc4CEZxpaqmcheg6gDK2T
68xz0XMEiy5vSWFmBnqOEPDD/LBrgxQ9R1DpissnVAL0nCD/iXH8QsV2vH8n
+LkliiP7SIR5cYbYnTUeNDsp5ssZFkNuqfn5xzA/ztCgfLvzgX0m5o0G08Ir
E31TJ9GjgWUNh98xmIMeHSLovyR3HspFjw4DvDkFQ5qHHh28/5LkjfnK0HOB
Jt2dXoFChp4LpHlPCRU9MvQYMDdQydRekKHHAG+ni+oArgw9BtQESRv5+Xno
ucL8VvZMcXMueq5Q7D8ifLn5FHpMuEObOxF4JocY8sWEjpKg3XUh2egz4Vvd
voHJh1k4z4T9j7ZcLmBm4j4mUN2iGeOB6eix4EihcWHR4WPosWCzV+1JoSQF
PRaMBO0xD5JJ0WNBZrXzXqvEJPRYwDc3FactidFjw9ktqzsu9sShxwarfacj
y+Qx6LHBdUF0ShEdjh4bNjvq+7hZu9FjQzW/+cndQhf0OMBKDaE7HdyGeeBA
KaXVLCCbh/nhQI7V9cbipDDMGwfuRbxKYcdEYZ44IByOy1J9Eo35c4Oq2ood
PIpA8w9cIagK
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntMU2cYBvAjAuOiXAuWq70gDmEgAywo8bwwYRbqgqUiSDBMrptDxYXM
hQ1hTC5yE2hpu7C5uTEdgTluA5Kl5VJoC3ViXFIgceGSkWwjE3BAhVEm83v7
x57k5OTLeZ/fe3Jy2BcuC7PMKIrKenHt3P+fz+Q76afnQrOjoz9uVL48a2l5
bHzMk7o7ytCQnTymR2psVPE3W8nzKXqm9KIwcPYH5Utlhj7qvkadPNBN5ufp
aGP6xoRbrzIneycL9Be+6erU0X7S/52+90SuGgz+SflAt5NFem/t2OEjFxTE
W6KT0u2utwYOkPllOuTQsQEmY5D4z2izvGOdHfODpP83/bbO/mjl7SGyb40+
e2f6u2L+MPEMdE4LPyF+fph4z2n/GH7R+5dUxNukv40JaklbVBHvH1peNUcL
zo8Qz0gPjYpCM0ZGiEeB/4a2s5UzSuYp2Dq+PuH4wSjxd0FYnH7iyvAo6ZvB
drPxXJWVmuzbDZtjk8FOb6qJZw5Ln0ZNtVxXE88cEmdqk/SdauJZQMmwZZXf
rJp4lqAoaTzubKsh3ivAV1hYUsEa4lnBnPiuPiFRQzwrCAsflqZd1RDPGtYK
DcaCWg3xbKCBV7kxexc9W5CG8yRzCvT2QPJ21y+dj9HbA6fvMxkVC+jtheVT
gtyGdfTsYD5/sn/LUks8eyja3Zu8zNASzwFW4l91qGdrybwDRKyHJ2wFaInv
AKW5raGJPK3yv3qIIwhVZantoCX7HCErJaCNy0fPCVzCusfHE9BzgrjMp/n9
Z9FzAv2BtBhjGr6PM8S2R2S0ZqDnDB2xtSJdLnoMqDrzRkh+HnoMSNEIN77J
R48BzqGC5KsF6LlAWKqXx/w19Fwg571pW+oj9Fyh6eGfnEdF6LmCT3zdl2kl
6LmCYlcx1VaK3j74Oe63I0M30NsH7yYlilvK0WPCXzRv5VwlekwQMPy6Fm6i
x4Tlwja1oBo9NzDURepu1aDnBlGirw09tei5Q3CfNSjr0HOHrfrVk/dvoecO
7U4r1yrq0fOAWM8H24IG9DzA/gT7kbEBPU/oSZrqvd2InidoM157K1iMnidc
Kau07hGj5wWZZYWRARL0vODZarGrTIKeN3isHvz+uQQ9bxjUF26ebkLPG1Jq
rOa+akJvPwh97AL/aEJvP+jNC2X+UvRYECKa0GZL8f9iwXhKaXKzFH0WTE9a
PNRJsc+CVVHJPYMU97FAJ1k8w5Khx4bLEkXkCRl6bBCnqvoyZeixgVnd4fWJ
DD023Hga8WOzDD02fO7npe42eRxY9C2vGTN5HHhHWB31q8njgI2v2GXJ5HEg
svcwj5Kjx4GgcmrCTo4eFw7xN8w95fh9uFB1Ps9wUI4eF7oCKjSvy9HjwlZW
Un2kyeNCX8HAxRiT5wPeQR9eOvXi/C/Rh+NJ
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {-0.19999092001159452`, 0.4999999999999999}},
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\[CapitalOmega]\[VeryThinSpace]\\!\\(\\*StyleBox[\\\"t\\\",FontSlant-\
>\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.19999092001159452`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[9]=",
 CellID->772655300,ExpressionUUID->"8aa000d7-57cb-4104-a924-3dd1bcf1ed0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "\t", "ExampleDelimiter",ExpressionUUID->
   "8d9fab8a-32a6-4a72-b094-f4c811f17846"],
  $Line = 0; Null]], "ExampleDelimiter",
 CellID->41024298,ExpressionUUID->"fa4a4346-a737-4192-a213-51ec662afac6"],

Cell["For more examples, see the Scope section below.", "ExampleText",
 CellID->2030943859,ExpressionUUID->"58d45311-6956-4681-b9e3-49c363ae81a9"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "7fe8fff0-7d3f-43ee-a9a4-f912b5cee917"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"45ebd832-1c4a-4185-9af2-903e47110e7a"],
 "Scope",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",ExpressionUUID->
  "58aa892f-f586-4233-b93a-dc36066dfea0"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->658283247,ExpressionUUID->"8b9d9e15-520e-49a2-80b4-b1a419285c41"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"72b28419-831a-4a8f-8262-5b636b900de4"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"b1c9972c-0d24-42ac-99ab-775fc1ac41c8"],
 "Bosons (in operator expressions)",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "8179e9a2-8bc4-4057-9fbd-dc5d832845fa"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->2027114915,ExpressionUUID->"a1818b99-b83c-4554-93c1-4cfda3d16983"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Boson", ",", "a"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->2123643361,ExpressionUUID->"926ff3b3-054b-4fc7-8ca2-844db153354d"],

Cell["\<\
Recall that for boson, many calculations are based on the truncated basis of \
Fock states.\
\>", "ExampleText",
 CellID->1488964689,ExpressionUUID->"facbae36-f431-42e6-aff3-c29979a38cfe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Dimension", "[", "a", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Basis", "[", "a", "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->895755187,ExpressionUUID->"dcf6e3c7-c0e8-409f-bba2-eaa4e7e3c1aa"],

Cell[BoxData["6"], "Output",
 CellLabel->"Out[2]=",
 CellID->389833257,ExpressionUUID->"ce4d1ad3-95af-4967-87e9-ed7e1652bd03"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["0", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 0|>]], ",", 
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["1", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 1|>]], ",", 
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["2", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 2|>]], ",", 
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["3", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 3|>]], ",", 
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["4", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 4|>]], ",", 
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["5", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 5|>]]}], "}"}]], "Output",
 CellLabel->"Out[2]=",
 CellID->2102427049,ExpressionUUID->"87f41dd9-150d-4187-ad5a-8c59a7ee5775"]
}, Open  ]],

Cell[TextData[{
 "We consider a single-mode boson, the dynamics of which is governed by the \
following Hamiltonian. Here, note that we set the natural frequency ",
 Cell[BoxData["\[Omega]"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "722d146c-8a5d-4ed9-b088-8bcff04eedb9"],
 " of the bosonic mode as the energy scale (",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[Omega]", "=", "1"}], ")"}]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "7fc4e3cc-e377-499f-a712-41967698c83f"],
 "."
}], "ExampleText",
 CellID->1435577874,ExpressionUUID->"86697d90-b91d-4093-8fe3-e8a3fdf13667"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H", "=", 
  RowBox[{
   RowBox[{"Dagger", "[", "a", "]"}], "**", "a"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->33819131,ExpressionUUID->"e294904c-131b-4ee0-9995-19b83caf3603"],

Cell[BoxData[
 InterpretationBox[
  TemplateBox[{
    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
      InterpretationBox[
       TemplateBox[{"a", 
         TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", "\"\[Dagger]\""}, 
          "RowWithSeparators"]}, "Superscript", SyntaxForm -> SuperscriptBox], 
       Q3`Dagger[$CellContext`a]], "a"}, "RowWithSeparators"]},
   "RowDefault"],
  Q3`Multiply[
   Q3`Dagger[$CellContext`a], $CellContext`a]]], "Output",
 CellLabel->"Out[3]=",
 CellID->779975624,ExpressionUUID->"6f38d052-8588-4f4c-b631-4094f9f7ad91"]
}, Open  ]],

Cell["\<\
Set the quantum jump (or Lindblad) operators. Here, \[Kappa] is the loss rate \
of the boson.\
\>", "ExampleText",
 CellID->1146070088,ExpressionUUID->"7fd26954-5213-4857-805d-4ba9c4536c67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ops", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Sqrt", "[", "\[Kappa]", "]"}], "a"}], "}"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1478894648,ExpressionUUID->"dc73a1e6-8905-4d1a-a8eb-8c1a1682dce4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", " ", 
   SqrtBox["\[Kappa]"]}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->946768929,ExpressionUUID->"bba261bb-069e-4bbe-b775-d079ad86d138"]
}, Open  ]],

Cell[TextData[{
 "For later convenience, set the ",
 ButtonBox["Lindblad supermap",
  BaseStyle->"Link",
  ButtonData->"paclet:Q3/ref/LindbladSupermap"],
 "."
}], "ExampleText",
 CellID->1263746977,ExpressionUUID->"d6705b89-3de8-40d5-994e-6e6e2efb01ab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spr", "=", 
  RowBox[{"LindbladSupermap", "[", 
   RowBox[{"H", ",", "ops"}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1921324442,ExpressionUUID->"02cfb947-16c6-4de9-a59a-a25c71c8bc17"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LindbladSupermap",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Hamiltonian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   TemplateBox[{
                    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
                    InterpretationBox[
                    TemplateBox[{"a", 
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\"\[ThinSpace]\"", "\"\[Dagger]\""}, 
                    "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    Q3`Dagger[$CellContext`a]], "a"}, "RowWithSeparators"]}, 
                    "RowDefault"], 
                   Q3`Multiply[
                    Q3`Dagger[$CellContext`a], $CellContext`a]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Hamiltonian: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  InterpretationBox[
                   TemplateBox[{
                    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
                    InterpretationBox[
                    TemplateBox[{"a", 
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\"\[ThinSpace]\"", "\"\[Dagger]\""}, 
                    "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    Q3`Dagger[$CellContext`a]], "a"}, "RowWithSeparators"]}, 
                    "RowDefault"], 
                   Q3`Multiply[
                    Q3`Dagger[$CellContext`a], $CellContext`a]], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Damping operator: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{
                    FractionBox["1", "2"], " ", 
                    SqrtBox["\[Kappa]"], " ", 
                    SqrtBox[
                    InterpretationBox[
                    TemplateBox[{"\[Kappa]", 
                    TemplateBox[{"\[ThinSpace]", "\"\[ThinSpace]\"", 
                    StyleBox[
                    "\"*\"", FontColor -> RGBColor[1, 0, 0], StripOnInput -> 
                    False]}, "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    Conjugate[Q3`Private`z]]], " ", 
                    InterpretationBox[
                    TemplateBox[{
                    TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
                    InterpretationBox[
                    TemplateBox[{"a", 
                    
                    TemplateBox[{
                    "\[ThinSpace]", "\"\[ThinSpace]\"", "\"\[Dagger]\""}, 
                    "RowWithSeparators"]}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], 
                    Q3`Dagger[$CellContext`a]], "a"}, "RowWithSeparators"]}, 
                    "RowDefault"], 
                    Q3`Multiply[
                    Q3`Dagger[$CellContext`a], $CellContext`a]]}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Jump operators: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"a", " ", 
                    SqrtBox["\[Kappa]"]}], "}"}], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  Q3`LindbladSupermap[{
    Q3`Multiply[
     Q3`Dagger[$CellContext`a], $CellContext`a], $CellContext`a $CellContext`\
\[Kappa]^Rational[1, 2]}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[5]=",
 CellID->1357973238,ExpressionUUID->"c7ad452c-2d2e-4fee-9912-71f4138a0b7a"]
}, Open  ]],

Cell["Take a coherent state as the initial state.", "ExampleText",
 CellID->1758493117,ExpressionUUID->"90547ede-f138-4106-8a42-8440c251487c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"in", "=", 
  RowBox[{"CoherentState", "[", 
   RowBox[{"a", "->", 
    RowBox[{"1", "+", "I"}]}], "]"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->872056809,ExpressionUUID->"657a472e-bacb-4094-ba81-a4a6bc556a21"],

Cell[BoxData[
 InterpretationBox[
  InterpretationBox[
   TagBox[
    TemplateBox[{
      TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
        SubscriptBox[
         TagBox[
          RowBox[{"(", 
            RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], DisplayForm], 
         TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
       "RowWithSeparators"]},
     "Ket"],
    DisplayForm],
   Ket[<|$CellContext`a -> Complex[1, 1]|>]],
  Q3`CoherentState[<|$CellContext`a -> Complex[1, 1]|>]]], "Output",
 CellLabel->"Out[6]=",
 CellID->1355104732,ExpressionUUID->"66265e82-d84a-41b1-b57a-0673b6e6ac43"]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["CoherentState"]], "paclet:Q3/ref/CoherentState", 
    "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "2ef20744-faab-4aa3-bb38-85d1dccced15"],
 " represents the exact coherent state (without truncation). ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NLindbladSolve"]], "paclet:Q3/ref/NLindbladSolve", 
    "Q3 Package Symbol"},
   "PackageLink",
   BaseStyle->"InlineFormula"]], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "997db4e2-b7f0-4a39-b35a-1b550ec36c9b"],
 " internally uses the truncated basis, which is equivalent as follows."
}], "ExampleText",
 CellID->1549353694,ExpressionUUID->"d9d9ed12-99d6-4b25-986c-360643d059a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"in", "=", 
  RowBox[{
   RowBox[{"CoherentState", "[", 
    RowBox[{"a", "->", 
     RowBox[{"1", "+", "I"}]}], "]"}], "//", "Elaborate"}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[7]:=",
 CellID->1698761760,ExpressionUUID->"59bf8e52-7be3-4027-99dc-aac3dd1d9691"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   InterpretationBox[
    TagBox[
     TemplateBox[{
       TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
         SubscriptBox["0", 
          TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
        "RowWithSeparators"]},
      "Ket"],
     DisplayForm],
    Ket[<|$CellContext`a -> 0|>]], "\[ExponentialE]"], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    InterpretationBox[
     TagBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["1", 
           TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]},
       "Ket"],
      DisplayForm],
     Ket[<|$CellContext`a -> 1|>]]}], "\[ExponentialE]"], "+", 
  FractionBox[
   RowBox[{"\[ImaginaryI]", " ", 
    SqrtBox["2"], " ", 
    InterpretationBox[
     TagBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["2", 
           TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]},
       "Ket"],
      DisplayForm],
     Ket[<|$CellContext`a -> 2|>]]}], "\[ExponentialE]"], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "\[ImaginaryI]"}], ")"}], " ", 
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    InterpretationBox[
     TagBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["3", 
           TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]},
       "Ket"],
      DisplayForm],
     Ket[<|$CellContext`a -> 3|>]]}], "\[ExponentialE]"], "-", 
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox["2", "3"]], " ", 
    InterpretationBox[
     TagBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["4", 
           TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]},
       "Ket"],
      DisplayForm],
     Ket[<|$CellContext`a -> 4|>]]}], "\[ExponentialE]"], "-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "\[ImaginaryI]"}], ")"}], " ", 
    SqrtBox[
     FractionBox["2", "15"]], " ", 
    InterpretationBox[
     TagBox[
      TemplateBox[{
        TemplateBox[{"\[VeryThinSpace]", "\"\[VeryThinSpace]\"", 
          SubscriptBox["5", 
           TemplateBox[{",", "\",\"", "a"}, "RowWithSeparators"]]}, 
         "RowWithSeparators"]},
       "Ket"],
      DisplayForm],
     Ket[<|$CellContext`a -> 5|>]]}], "\[ExponentialE]"]}]], "Output",
 CellLabel->"Out[7]=",
 CellID->1259049814,ExpressionUUID->"affb71f0-100e-4b08-b32f-72b0ed69bd0a"]
}, Open  ]],

Cell[TextData[{
 "We refer with ",
 Cell[BoxData["$\[Kappa]"], "InlineFormula",
  FontFamily->"Source Sans Pro",ExpressionUUID->
  "9619dd9f-acea-4bf7-82e4-dde776eaeee0"],
 " to the loss rate, the main control parameter of the problem."
}], "ExampleText",
 CellID->2074410624,ExpressionUUID->"1432b424-98bf-46f8-9263-393c56f883b0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$\[Kappa]", "=", "0.2"}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[8]:=",
 CellID->1057833732,ExpressionUUID->"8ac20578-2d5a-4929-922a-254f8ea74e5b"],

Cell["Now solve the quantum master equation.", "ExampleText",
 CellID->562547614,ExpressionUUID->"7a5cc424-0dfd-47d9-92a3-824d2058d18a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Kappa]", "=", "$\[Kappa]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"NLindbladSolve", "[", 
      RowBox[{"spr", ",", "in", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "20."}], "}"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[9]:=",
 CellID->2141903858,ExpressionUUID->"f03d5771-b3cb-43ad-a952-4cd00dc66b66"],

Cell["Check the solution at an instant of time.", "ExampleText",
 CellID->1979396892,ExpressionUUID->"da3634d1-d504-4558-baa1-d9a17054e846"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", ".2", "]"}], "//", "Matrix"}], "//", 
  "MatrixForm"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[10]:=",
 CellID->709766745,ExpressionUUID->"33a24e99-436c-4ce0-bc51-9fdb216493a5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"0.1492489340401418`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.16912176651137925`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.11211271214374482`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.07745114854980861`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.18318918187710106`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.02934013285135099`"}], "-", 
       RowBox[{"0.15643737972557717`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.07664078045654787`"}], "-", 
       RowBox[{"0.07891231641525423`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.0617855850348318`"}], "-", 
       RowBox[{"0.013466655033232088`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.16912176651137925`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.11211271214374482`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.28414565161478017`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.22979580123753712`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.15233421143206927`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0859197793837043`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.20321938710330376`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.02810954788857568`"}], "-", 
       RowBox[{"0.14987603164897795`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.06107238704971834`"}], "-", 
       RowBox[{"0.06288245859422598`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{"0.07745114854980861`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.18318918187710106`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.22979580123753712`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.15233421143206927`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.2731163155207643`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.18025710884725965`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.11949445916015258`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05820627312862691`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.13767079096709575`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.015838862970412412`"}], "-", 
       RowBox[{"0.08445046091571298`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.02934013285135099`"}], "+", 
       RowBox[{"0.15643737972557717`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0859197793837043`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.20321938710330376`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.18025710884725965`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.11949445916015258`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.17595507280977138`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0997064919101951`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06609655317646213`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0267789752797603`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.06333824580860985`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.07664078045654787`"}], "+", 
       RowBox[{"0.07891231641525423`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.02810954788857568`"}], "+", 
       RowBox[{"0.14987603164897795`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.05820627312862691`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.13767079096709575`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0997064919101951`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06609655317646213`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.08572632731434437`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03972631414624898`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.026335020794579136`", " ", "\[ImaginaryI]"}]}]},
     {
      RowBox[{
       RowBox[{"-", "0.0617855850348318`"}], "+", 
       RowBox[{"0.013466655033232088`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.06107238704971834`"}], "+", 
       RowBox[{"0.06288245859422598`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{
       RowBox[{"-", "0.015838862970412412`"}], "+", 
       RowBox[{"0.08445046091571298`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.0267789752797603`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.06333824580860985`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03972631414624898`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.026335020794579136`", " ", "\[ImaginaryI]"}]}], 
      RowBox[{"0.03180769870019798`", "\[VeryThinSpace]", "+", 
       RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {6, 6}, 0., {
     1, {{0, 6, 12, 18, 24, 30, 36}, {{1}, {2}, {3}, {4}, {5}, {6}, {2}, {
       1}, {3}, {4}, {5}, {6}, {3}, {1}, {2}, {4}, {5}, {6}, {4}, {1}, {2}, {
       3}, {5}, {6}, {5}, {1}, {2}, {3}, {4}, {6}, {6}, {1}, {2}, {3}, {4}, {
       5}}}, {Complex[0.1492489340401418, 0.], Complex[
       0.16912176651137925`, -0.11211271214374482`], Complex[
       0.07745114854980861, -0.18318918187710106`], 
       Complex[-0.02934013285135099, -0.15643737972557717`], 
       Complex[-0.07664078045654787, -0.07891231641525423], 
       Complex[-0.0617855850348318, -0.013466655033232088`], Complex[
       0.28414565161478017`, 0.], Complex[
       0.16912176651137925`, 0.11211271214374482`], Complex[
       0.22979580123753712`, -0.15233421143206927`], Complex[
       0.0859197793837043, -0.20321938710330376`], 
       Complex[-0.02810954788857568, -0.14987603164897795`], 
       Complex[-0.06107238704971834, -0.06288245859422598], Complex[
       0.2731163155207643, 0.], Complex[
       0.07745114854980861, 0.18318918187710106`], Complex[
       0.22979580123753712`, 0.15233421143206927`], Complex[
       0.18025710884725965`, -0.11949445916015258`], Complex[
       0.05820627312862691, -0.13767079096709575`], 
       Complex[-0.015838862970412412`, -0.08445046091571298], Complex[
       0.17595507280977138`, 0.], 
       Complex[-0.02934013285135099, 0.15643737972557717`], Complex[
       0.0859197793837043, 0.20321938710330376`], Complex[
       0.18025710884725965`, 0.11949445916015258`], Complex[
       0.0997064919101951, -0.06609655317646213], Complex[
       0.0267789752797603, -0.06333824580860985], Complex[
       0.08572632731434437, 0.], 
       Complex[-0.07664078045654787, 0.07891231641525423], 
       Complex[-0.02810954788857568, 0.14987603164897795`], Complex[
       0.05820627312862691, 0.13767079096709575`], Complex[
       0.0997064919101951, 0.06609655317646213], Complex[
       0.03972631414624898, -0.026335020794579136`], Complex[
       0.03180769870019798, 0.], 
       Complex[-0.0617855850348318, 0.013466655033232088`], 
       Complex[-0.06107238704971834, 0.06288245859422598], 
       Complex[-0.015838862970412412`, 0.08445046091571298], Complex[
       0.0267789752797603, 0.06333824580860985], Complex[
       0.03972631414624898, 0.026335020794579136`]}}]]]]], "Output",
 CellLabel->"Out[10]//MatrixForm=",
 CellID->430755806,ExpressionUUID->"7b2408e3-a561-4873-a3e7-1892b19fb249"]
}, Open  ]],

Cell["\<\
Among many physical quantities, here we examine the average boson number.\
\>", "ExampleText",
 CellID->1489671399,ExpressionUUID->"764ea818-4d34-4b5e-b346-76893d2c6c24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"avg", "[", "t_", "]"}], ":=", 
  RowBox[{"Chop", "@", 
   RowBox[{"Tr", "@", 
    RowBox[{"Matrix", "[", 
     RowBox[{
      RowBox[{"Dagger", "[", "a", "]"}], "**", "a", "**", 
      RowBox[{"rho", "[", "t", "]"}]}], "]"}]}]}]}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[11]:=",
 CellID->1578131396,ExpressionUUID->"6285dfb7-07ef-423f-bddd-932256c21aa9"],

Cell["Plot the average boson number as a function of time.", "ExampleText",
 CellID->985059299,ExpressionUUID->"b8ac4abf-3fe2-488d-a507-8145f841e4e1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EchoTiming", "[", 
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"avg", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tmin", "=", "0"}], ",", 
        RowBox[{"tmax", "=", "20"}], ",", 
        RowBox[{"dt", "=", "0.5"}]}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", 
   RowBox[{"DataRange", "->", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tmin", ",", "tmax"}], "}"}], "*", "0.2"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Kappa]\[VeryThinSpace]\!\(\*StyleBox[\"t\",FontSlant->\"Italic\"]\
\)\>\"", ",", "\"\<\[LeftAngleBracket]n\[RightAngleBracket]\>\""}], "}"}]}]}],
   "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[12]:=",
 CellID->83848475,ExpressionUUID->"bfa68467-0cf2-4ae5-b0b6-fcd03d6bf26c"],

Cell[BoxData["0.838148`"], "EchoTiming",
 CellID->58119711,ExpressionUUID->"23ca1bb6-bbdd-4754-ba2d-31d279065725"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQO7HXkU3H/9s581EwR22r88KrdlDvsfKP+k/asH
qpqHY37amxiDwGX7jmyGT08+fYPK37QvXKj8/9LhL/YQ0x7Ym73/8OzLyU9Q
9Y/tGzdt7Ldi+GifngYCz+zniXXkyh15B9X/0v6e16n02dde2589AwJv7KM3
zd6SbfASat4H+6WRATuPnnoGVf/RvkGb16x1/hOo+Z/tVz/v7JRe+Qiq/4u9
3XOuksZHD6D2fbP/x7UyK6TvHtS8H/Zl77aceL/0NtS8n/Yel0WPJbLchJr3
237RB75lbxZdg5r3x95tVdPTsuorUPP+2a+ekjeruuMS1DwGh+6mGf5/jlyA
qmdwOMtiVPQi4hzUfEaHiROEHGeWnobqZ3JYmsB3bcmNE1D7mB0c7k+zjaw+
BjWPxUGpesK85eFHoOaxOOTsNtwqknEIah6rg9HC4uOrlh+AmsfmcHLNifs3
lfdBzWN3uM0sbTPddTfUPA4H08fPY03W7oCax+HQzSnJxh2yDWoep0Pnqf+f
xEy2QM3jcuhWVy575r4Jah63Q/ynssaerg1Q83gccifLCGi8Xws1j8fhlIq8
2kvR1VDzeB0mMzPc4G9aATWPz0GYc14bo+4yqHn8DvoXfEuPCCyBmifgoN7i
VPVBfZE9AJZRIrI=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[7, 360]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQO7HXkU3H/9s581EwR22r88KrdlDvsfKP+k/asH
qpqHY37amxiDwGX7jmyGT08+fYPK37QvXKj8/9LhL/YQ0x7Ym73/8OzLyU9Q
9Y/tGzdt7Ldi+GifngYCz+zniXXkyh15B9X/0v6e16n02dde2589AwJv7KM3
zd6SbfASat4H+6WRATuPnnoGVf/RvkGb16x1/hOo+Z/tVz/v7JRe+Qiq/4u9
3XOuksZHD6D2fbP/x7UyK6TvHtS8H/Zl77aceL/0NtS8n/Yel0WPJbLchJr3
237RB75lbxZdg5r3x95tVdPTsuorUPP+2a+ekjeruuMS1DwGh+6mGf5/jlyA
qmdwOMtiVPQi4hzUfEaHiROEHGeWnobqZ3JYmsB3bcmNE1D7mB0c7k+zjaw+
BjWPxUGpesK85eFHoOaxOOTsNtwqknEIah6rg9HC4uOrlh+AmsfmcHLNifs3
lfdBzWN3uM0sbTPddTfUPA4H08fPY03W7oCax+HQzSnJxh2yDWoep0Pnqf+f
xEy2QM3jcuhWVy575r4Jah63Q/ynssaerg1Q83gccifLCGi8Xws1j8fhlIq8
2kvR1VDzeB0mMzPc4G9aATWPz0GYc14bo+4yqHn8DvoXfEuPCCyBmifgoN7i
VPVBfZE9AJZRIrI=
             "]]}, "Charting`Private`Tag#1"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 4.}, {0, 1.9361029865141137`}}, 
           "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
           "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[7, 360]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 4.}, {0, 1.9361029865141137`}}, 
          "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[7, 360]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[7, 360]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQDQO7HXkU3H/9s581EwR22r88KrdlDvsfKP+k/asH
qpqHY37amxiDwGX7jmyGT08+fYPK37QvXKj8/9LhL/YQ0x7Ym73/8OzLyU9Q
9Y/tGzdt7Ldi+GifngYCz+zniXXkyh15B9X/0v6e16n02dde2589AwJv7KM3
zd6SbfASat4H+6WRATuPnnoGVf/RvkGb16x1/hOo+Z/tVz/v7JRe+Qiq/4u9
3XOuksZHD6D2fbP/x7UyK6TvHtS8H/Zl77aceL/0NtS8n/Yel0WPJbLchJr3
237RB75lbxZdg5r3x95tVdPTsuorUPP+2a+ekjeruuMS1DwGh+6mGf5/jlyA
qmdwOMtiVPQi4hzUfEaHiROEHGeWnobqZ3JYmsB3bcmNE1D7mB0c7k+zjaw+
BjWPxUGpesK85eFHoOaxOOTsNtwqknEIah6rg9HC4uOrlh+AmsfmcHLNifs3
lfdBzWN3uM0sbTPddTfUPA4H08fPY03W7oCax+HQzSnJxh2yDWoep0Pnqf+f
xEy2QM3jcuhWVy575r4Jah63Q/ynssaerg1Q83gccifLCGi8Xws1j8fhlIq8
2kvR1VDzeB0mMzPc4G9aATWPz0GYc14bo+4yqHn8DvoXfEuPCCyBmifgoN7i
VPVBfZE9AJZRIrI=
          "]]}, "Charting`Private`Tag#1"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 4.}, {0, 1.9361029865141137`}}, 
        "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[7, 360]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"\[LeftAngleBracket]n\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\[Kappa]\[VeryThinSpace]\\!\\(\\*StyleBox[\\\"t\\\",FontSlant->\\\"\
Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.}, {0, 1.9361029865141137`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[12]=",
 CellID->1860407039,ExpressionUUID->"84d703ce-0786-4177-9f54-ce6c7e98561e"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"4032f747-1322-470d-955e-cf6779f3492a"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"e2419d0c-71f6-4782-9a82-40e5717e53ad"],
 "Two qubits (in matrix Representations)",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "90539fad-98b2-4430-952c-f191a2b1da8b"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->500994773,ExpressionUUID->"8a44ae67-d262-47a5-8f34-00799d5ca643"],

Cell["Let us consider a two-qubit system.", "ExampleText",
 CellID->692904445,ExpressionUUID->"b9487c0a-3c12-4f9b-9871-3d07bea94add"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"DiagonalMatrix", "@", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->1425866839,ExpressionUUID->"2135986b-33b6-4ca2-bcad-1ea6b401b2d7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "0"},
     {"0", "0", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->2119225150,ExpressionUUID->"70878398-2c62-4a70-8850-8d4ffc80f038"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"B", "[", "1", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"1", ",", "0"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"B", "[", "2", "]"}], 
     RowBox[{"ThePauli", "[", 
      RowBox[{"0", ",", "1"}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "opH", "]"}], "\[IndentingNewLine]"}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1104129648,ExpressionUUID->"8310bfd1-7d9c-434c-8da5-7b062c872233"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]],
       $CellContext`B[2]], 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]],
       $CellContext`B[1]], "0"},
     {
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]],
       $CellContext`B[2]], "0", "0", 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]],
       $CellContext`B[1]]},
     {
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]],
       $CellContext`B[1]], "0", "0", 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]],
       $CellContext`B[2]]},
     {"0", 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"1"},
         "RowDefault"]],
       $CellContext`B[1]], 
      InterpretationBox[
       SubscriptBox[
        TemplateBox[{"B"},
         "RowDefault"], 
        TemplateBox[{"2"},
         "RowDefault"]],
       $CellContext`B[2]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 2, 4, 6, 8}, {{2}, {3}, {1}, {4}, {4}, {1}, {3}, {
       2}}}, {$CellContext`B[2], $CellContext`B[1], $CellContext`B[
       2], $CellContext`B[1], $CellContext`B[2], $CellContext`B[
       1], $CellContext`B[2], $CellContext`B[1]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->1297369626,ExpressionUUID->"b50e7e93-88d9-49d1-9d3a-18df0b1b56b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"opL", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"SparseArray", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"3", ",", "2"}], "}"}], "\[Rule]", 
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "opL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->252233040,ExpressionUUID->"4fbf3ddd-d517-496e-bcc5-8a81c0fb3dab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["+"]]},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 1, 1, 1, 1}, {{4}}}, {$CellContext`\[CapitalGamma]["+"]}}]]]], 
   ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0", "0"},
       {"0", "0", "0", "0"},
       {"0", 
        InterpretationBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]],
         $CellContext`\[CapitalGamma]["-"]], "0", "0"},
       {"0", "0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {4, 4}, 0, {
       1, {{0, 0, 0, 1, 1}, {{2}}}, {$CellContext`\[CapitalGamma][
         "-"]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->308166912,ExpressionUUID->"eb97ab67-84e1-414a-84e8-e64a193444a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"B", ",", "\[CapitalGamma]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"B", "[", "1", "]"}], "=", 
        RowBox[{
         RowBox[{"B", "[", "2", "]"}], "=", "1."}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", 
        RowBox[{
         RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", "0.5"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->1792714312,ExpressionUUID->"eaf2653f-2406-40c6-b52d-98548403c1c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.009335`", ",", "Null"}], "}"}]], "Output",
 CellLabel->"Out[4]=",
 CellID->654467592,ExpressionUUID->"cd243c68-c4c2-4c37-ab41-f46705a5311f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"\[Rho]", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10", ",", "0.05"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1112511420,ExpressionUUID->"a813b530-f337-4c42-b1ea-dc1797cbaf97"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"Diagonal", "/@", "data"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"DataRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) \!\(\*StyleBox[\"t\",FontSlant->\
\"Italic\"]\)\>\"", ",", "\"\<Probabilities\>\""}], "}"}]}]}], "]"}]], "Input",\

 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->1239593903,ExpressionUUID->"cbcb4296-78b5-49f8-8035-ebcac8d0ce4f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
YTBf5FuLyP8ATvBp6w==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
aoprsL6JcCD9k1vfxFryX0GLV4U=
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
5vcf0D3GOyYIqCL/AxZraOM=
      "]]}, 
    {RGBColor[0.922526, 0.385626, 0.209179], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], Thickness[Large], 
     LineBox[CompressedData["
1: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
Wmfdp6eayV/343js
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"Probabilities\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) \\!\\(\\*StyleBox[\\\"t\\\
\",FontSlant->\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0, 0.9999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->842623757,ExpressionUUID->"dcea9ef1-d0d3-4a7d-bf89-850eb19f4e26"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {5., 9.}}]],ExpressionUUID->
  "15d0da2b-90af-467c-be74-99f3e962b570"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"2e5e69e0-c0d2-4e36-91b0-6bc4016979bf"],
 "Qutrit (that is, three-level system)",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "9994d627-02c0-4a88-bcb5-a6ddd641db1e"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->919177322,ExpressionUUID->"0a982c17-3567-493a-b866-dcc88b1938d5"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->290448684,ExpressionUUID->"13506f15-fa70-4351-9b7c-a2fe5ae160d1"],

Cell["\<\
Consider a three-level atom with the \[CapitalLambda]-type level structure. \
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "ExampleText",
 CellID->340702357,ExpressionUUID->"d7a3efa8-58dc-4273-b9b5-9e187d427d3b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->993111197,ExpressionUUID->"7199ca15-0cb0-4cb4-a5ac-10210d160cf6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->186140174,ExpressionUUID->"d1265b81-da55-4237-8d37-dbe7cc7cfa42"]
}, Open  ]],

Cell["\<\
Take the quantum jump operators responsible for the relaxations between the \
excited level and ground-state levels.\
\>", "ExampleText",
 CellID->1749085405,ExpressionUUID->"4d9b71a9-fd3d-49c9-8cbc-a8637a9e071b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->501635503,ExpressionUUID->"a0f670ae-fc36-4294-8fe9-5820e486e4c7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{0}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{2}]], "\")\""},
      "RowDefault"],
     $CellContext`A[2 -> 0]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][0, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{2}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "0"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{0}]], "\")\""},
      "RowDefault"],
     $CellContext`A[0 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "0", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][0, "+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{1}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{2}]], "\")\""},
      "RowDefault"],
     $CellContext`A[2 -> 1]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][1, "-"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"(\"", 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "2"}, "RowWithSeparators"]}, "Ket"], 
         DisplayForm], 
        Ket[{2}]], 
       InterpretationBox[
        TagBox[
         TemplateBox[{
           TemplateBox[{",", "\",\"", "1"}, "RowWithSeparators"]}, "Bra"], 
         DisplayForm], 
        Bra[{1}]], "\")\""},
      "RowDefault"],
     $CellContext`A[1 -> 2]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "1", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma][1, "+"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->260142160,ExpressionUUID->"bb6a5591-7db2-48c5-b4b6-a08ff5375bd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][0, "-"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "0", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][0, "+"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"-\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][1, "-"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         InterpretationBox[
          SubscriptBox["\[CapitalGamma]", 
           TemplateBox[{",", "\",\"", "1", "\"+\""},
            "RowWithSeparators"]],
          $CellContext`\[CapitalGamma][1, "+"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->2080061475,ExpressionUUID->"cef04260-ec35-44b3-9113-254423ab1dff"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->319696590,ExpressionUUID->"aea6a6c4-8772-47d3-82fd-5848f33d6ffb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoTiming", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rho", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", 
           RowBox[{"10", "Pi"}]}], "}"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->260219023,ExpressionUUID->"8f5a9fff-381e-487b-8da0-6f421bbd0c4e"],

Cell[BoxData["0.008325`"], "EchoTiming",
 CellID->643332421,ExpressionUUID->"aafd0870-76f9-4bdf-8cc3-acd1e38970a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"rho", "[", "t", " ", "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"10", "Pi"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega]\[VeryThinSpace]\!\(\*StyleBox[\"t\",FontSlant->\"\
Italic\"]\)\[VeryThinSpace]/\[VeryThinSpace]\[Pi]\>\"", ",", 
      "\"\<Probabilities\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1542313529,ExpressionUUID->"9411986a-bedd-45d8-af1c-a06b5c5996a7"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvfd3W8t595t17/vD/fH+C3et2I5PHNuxY6fZzusSx3795thJjpPYyevT
RXXpqB3J0lE7KpQoqktUo0iRaiRFsUjsvYlN7L0TBEmQIAmikCBAFN1tw549
BECUjZm9wWc/n8VlHwEzz4zmO5o9X+4p/98Hu/510//1J3/yJ3v/H+F//vX9
T7+/Z8/7h/7t/xX+8Mude7fE7Pz4o5/u3PdxzMd7/uaD/1v48E+E/5n5H7//
vz95gyAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAIgiAI
giAIgiAIgiAIgiAIgiAIgiAIgiAIgiAqxul0Gn+PyWSSp0SbzSaU5XK55CkO
QRAEQRAEQRAE2dA8f/580x+Znp7mVIrBYEhLS7tw4cL+/fs9ZW3evPnTTz+9
detWR0eH4J05lYsgCIIgCIIgCIJsaMbGxmJiYohv1Wq1zIuwWq2ZmZnbtm3b
tD5Hjx6dmJgIGipABARBEARBEARBNhbMrQcCEqPRePjwYbrnMPetKysrp06d
CqXTbtmypampKXA0tn2b378U3v8GN2LNsU1gROYdfyNG5h0fI8sZfyNG5h0f
I8sZfyNG5h0fI8sZX/7I6FuRUDCbzUePHvUyj2x9q9PpvHLlSmi/a/kdW7du
HRkZCRAQfSvv+BsxMu/4GFnO+BsxMu/4GFnO+BsxMu/4GFnO+BsxMu/4GFnO
+OhbkShkYWHhxIkTvs6RrW999uyZV/wjR44UFxePjo4KBVVUVFy8eNErwYED
B+x2+3oB0bfyjr8RI/OOj5HljL8RI/OOj5HljL8RI/OOj5HljL8RI/OOj5Hl
jI++FYk2urq6PvnkE1/Tyta3WiyW7du308HPnj0rfEincbvdjx8/9qpDYWHh
ejHRt/KOvxEj846PkeWMvxEj846PkeWMvxEj846PkeWMvxEj846PkeWMj74V
iR5WV1ezsrL8OlbmvjUnJ4eOfOrUqfVepNIHGgsInnq9lOhbecffiJF5x8fI
csbfiJF5x8fIcsbfiJF5x8fIcsbfiJF5x8fIcsZH34pEA263u7Gx8dChQwFM
K0PfKhjP3bt305G7urrWS+xyuY4cOUInbm1t9ZsSfSvv+BsxMu/4GFnO+Bsx
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
kEtPm9nWMCzWXC2U9JWw8k4++Y6419jkvdpW8TG8e2SONPKnNyrpr1xu96az
ReTbKb1EHdWA4joiTEAdIYFqwgB1hAQkNdG3Il44nc4rV66EaB4Ftm7dOjIy
Enm5RqNxz549oZcrUFIS6G2U/H3b2HpVPPy2OV7m0gU2x4p+x7JslxZkQLNA
gpy4V8e2hmFhXxgg7TmV/qOw8upyxb3GK9PeV9kqPoZnVw0GeKl94VET+bai
ReI+ZTWguI4IE1BHSKCaMEAdIQFJTfStiBfPnj3zsodHjhwpLi4eHR3VarUV
FRUXL170SnDgwAG7XaJL8uB2uy9fvuwV9vDhw42NjTMzM2azeWBgICUlxdcy
T05OrhdT/r5t7kkVr1+pPSpz6U6Xi5idd0/kuQK+jA6Abt5C4uy9Us62kmFh
1VaR9pzJ+++w8s6V7SB5l4ayvb5VfAynnWlVq/di+5zqIfLtvZwORWq4IVBc
R4QJqCMkUE0YoI6QgKQm+laExmKxbN++nfaGZ8+e9TrOV/CYjx8/9rKQhYWF
kZTb1tbmFTApKcnXC/f29npV79y5c+vFlL9vLw3nEq80V7ZT5tIXLTYm+yKX
rKskzqazRQxrGC6W/jTSnvOV+8LKa6g/Ja7Z7rjj9a3iY/jW8+LNrb4rgelV
xL9NqFakhhsCxXVEmIA6QgLVhAHqCAlIaqJvRWhycnJoV3jq1Kn1XqQ+f/6c
TvnJJ59E8srVK9rJkyfXOzS4oqKCTrlly5bV1VW/KeXv21ZtNfFKs/m/kbl0
7ax5vS2TYeF2u+kjgxxOuW8+IhhbrlDrri+ElVfwqiSvof5zr2+VHcPnFq3U
bwYKfd+ML6+IvzoQtLCv8jq4e6MD6VmsZlBHSKCaMEAdIQFJTfStCEEwnl7H
InV1da2X2OVyHTlyhE7c2toquWivRcKdneseYyu4qs8++4xOPDY25jel/H3b
pu8Qrw3Nelvm0ntG54nZOZX0KpJQ2+JKSKhF8wqrGobLQs1h0p7mntSw8i4N
55C8+tLtXt8qO4a/7tMFVYo+YmtYG+pBymoD0rNYzaCOkEA1YYA6QgKSmuhb
EcLg4CDtB48dOxY4fU1NDZ3+7t27kov2OpHJbDYHSJyYmEgnrqqq8ptM/r7t
MGmIV5p8+g8yl97YM02czpW0iMaogzeqSKiJGROrGobLbNHH4n24Y+EtRF+Z
biB5dbnveH2r7BhO35CbWtDtN831jBaSprTZ+zxkxAOkZ7GaQR0hgWrCAHWE
BCQ10bcihMLCQtoPpqenB05vMBjo9Lt27ZJc9M6dO+lQRqMxQOLU1FQ68Xpb
a+Xv22vubXnwdZlLp+9dvf8iontXTye9IqF6RudZ1TBcprPeJu1pmw3vbf6q
aVz8HcKT73p9q+wYfiXtdYBDmTy8qB1mpSZgID2L1QzqCAlUEwaoIyQgqYm+
FSEkJCSEuEiYcPjwYTrLwsKCtKJPnjwZetGxsbF04uZm/3eMyt+33W63JvGL
xC65Xf636HKCvlolo6w/klC0sWrsmWZVw3DRPvob0pgOy1RYeV0OK8mruf9l
r6t+lR3D6TXAo1P+f0XTMaQnaY7fq5W5hhsFSM9iNYM6QgLVhAHqCAlIaqJv
RQj79+8P/aWnBy+r293tf9FjUO7cuUPHOXfunMvl/zigvr6+TWvRarV+UyrS
t7Wpf0XsktMq65vKlPxu4nQK60cjCZWY26n4IlW3y6m59wXqlwD+T98KwMSD
r4tarKz5jYqCY7jN7lhz5pLD/5lLBvMKSfbxmUK31FuNYAPpWaxmUEdIoJow
QB0hAUlN9K2IB4fDQZvBrVu3hjJVTktLo3OVlEi8fqW/v9/Ljebk5PhWYGFh
4eDBg3Sys2fPrhdTkb49lf4j4pVWF4flLPrms1bidGo71r3WNhTSS/tJqOyq
QVY1DAvH0gxpSe3Db0uIMJXxYxLBvrDmBbSCY/jo1CJp2/3XAh37vOWceFeO
3rAsWw03EJCexWoGdYQEqgkD1BESkNRE34p4MJvNtB88cuRIKLkEo0rnyszM
lFyBS5cueVnXuLi44eFhz/U6BoOhtLR0x44ddIKYmJje3t71AirSt3U574hb
Mmda5Cz6XGojsTkdQ/pIQhW8GiGhHhb0sKphWNjnusTDmTN/JiHCTN5/kQhW
7ZpbUBUcw2vatSEen3WK2mXcNjArWw03EJCexWoGdYQEqgkD1BESkNRE34p4
0Ov1Xp4xlFyNjY10ridPnkiuwMrKyvnz5zf5Y+vWrb4fCqa1vr4+QEBF+vZs
4YfiEbiaUjmLPnKrOuiuyRChvVVCZhurGoaFVVMmXoZb8J6ECHPln5AIlsE1
v1FRcAxPK+0LcRty0gtxtXZe3YhsNdxAQHoWqxnUERKoJgxQR0hAUhN9K+JB
o9HQrvDKlSuh5GptbaVzJScnR1IHm82Wk5OzZcsWv+6V5tSpUwHetHpQpG/P
VexdzyvxZtfFMmJz5hatkYRqH5wloc4/bGRVw7Cw9D0lLTlfdUBCBEPDGRLB
2J5Af6XgGE6feRV4OXdRwxhJeSe7XbYabiAgPYvVDOoICVQTBqgjJCCpib4V
8eC1w/TmzZuh5Orq6qJz3blzJ5I6GAyGrKysmJiYoL5VsNXDw0F2j66X9zVP
+rK3E6/Uk3+Ca1levP95HrE59Q3NkYR6WVpPQu27XMSqhmHR+/Igacm+3L0S
IvTkHxcjZG+nv8rMzGRTy/DZHV9I2vZlSX2AlM8L60jKA1eKZavhBkJBHRGG
oI6QQDVhgDpCYiOqGcACRGI0EDCMjo7SvSI+Pj6UXF6n+16/fl1yBQTj7HWL
a1AePXoU4PAoRfq2seUK8UqLry/JVq5t1Uk8zgenCiKMNmtYJtE+uVzGpIbh
slB7lLSkuVvKe/yl4RwSYa5sB/3Va4V+9+hyuz88VUDadska6JDkBZOVpNwc
WyRbJTcQSumIsAV1hASqCQPUERKQ1ETfinjwenN6+/btUHL19PTQuRISEoLn
8Ud7e7vvJtajR4+mp6e/evWqpaXl5cuXN27c8LWuycnJ692Yo0jfFhwW8UoL
dcdlK3feKHqcXRcj3Vdrta2SaB+dKWRSw3DRl2wRdwqP5kuIsDJVTyLMvPgP
+iulxvC5RVGmreeLg6YXGp+kNy3ZZKjhxgLSs1jNoI6QQDVhgDpCApKa6FsR
D4ODgxLenAp+08tFSijaarXu3r2bjhMTE5OVleVwOLxSDgwMHD582Mu6lpX5
fyGoSN9eGswS3/FV7JGt3PFpIzE4hxOqg2cIxvuf55OA690xyhVdrngy84qu
SUKE1cVhEmEq7Qf0V0qN4V3DetKqJxPrgqY/cruGpB/QLARNrzYgPYvVDOoI
CVQTBqgjJCCpib4V8eB1LtPly5dDyeW1BD0tLU1C0S9fvvSyoi0t694gY7fb
T5w4QSfev3//6qqf9ZaK9O01p+AWfihbud0jc8TgnH0Q6JjlENlxoYQEXDBF
dMqTNKbSvi/ehGsclRDBZTeTCBNJX6G/UmoML20aJ616Oyv4UUvXM8Q7eata
J2So4cYC0rNYzaCOkEA1YYA6QgKSmuhbEQ8zMzO0GYyNjQ0lV01NDZ0rNzdX
QtF79uyhgwQ93GliYsLrzGGhGr7JFOnbtpnXxCvpct+RrdyG7ilicK6lM7g3
9tDNKhJQozNFHjBcJpL/grSk4EAlBkn6c79BlBrDHxb0kFbNqR4Kmv5ZeT9J
n14a6NIcdQLpWaxmUEdIoJowQB0hAUlN9K2IB5PJRDvBAwdCunlEMKp0ruLi
4Fv2vDCbzV4vW4WaBM315MkTOktqaqpvGkX69qphUFybmvFj2cotaRLvTEl6
2RV5wDPJ4pHC3SNzkQcMC9fqMmlGzf23JMdZ89J2UbwCVakx/MKjJtKqjT3T
QdPTF+ky+XUEMCA9i9UM6ggJVBMGqCMkIKmJvhUh7Nq1izjBmJgYpzP4rsbk
5GTaP7569SrcQkdGRugIhw4dCiVXU1MTnevixYu+aRTp287lWWKUtA//WrZy
syoHicHJKGPwYk5wSSRgQ/dU5AHDwmHSkGacfPJdyXF0ub8UN8lON5DPlRrD
91+rCOst9uCEgaQ/covBtmVgQHoWqxnUERKoJgxQR0hAUhN9K0KIjY2lzaBe
rw+aJS4ujs4yOTkZbqFeDvT06dOh5BIKonMdPnzYN40ifdvtsFEvCr8sW7mp
Bd3E4BTUS9kN6kXSyy4SsKRpLPKAYWGbaRGXW2f/i+Q4+pKtJM7SyEvyuSJj
uMvtpk+7WrF7Hzvmi2nJRtJ/rNDBztEMpGexmkEdIYFqwgB1hAQkNdG3IoSU
lJSwXp46HI5t27aR9Dt27FjvSpoAeN2kc/Xq1VByTUxM0LlOnDjhm0apvq1J
ekvcU+mQ6USjhMw2YnBq2rWRB6R3Vj6vHIw8YFgsjxWJx1sVfSw5zkLdMb+X
wCoyhtN3FW2LKwkx18fUVTjmZTvXGm44ID2L1QzqCAlUEwaoIyQgqYm+FSFU
VlbSZjApKSlweq+rc+Lj4yUU6rW/9dNPP3W73UFz1dfX07nu37/vm0apvq19
9LfEKzmWdPIUGvewkbibtoHZyAMWNoySgCn53ZEHDAtz7yPShvPVIS0d94ux
9RqJs9gURz5XZAzvHZsnTXr8Xm2IuQ4nVJNcw5OLXGsYOcI/3uXxUkPDaWPb
DYeF+/JySM9iNYM6QgLVhAHqCAlIaqJvRQhGozEmJoaYwZ07dy4vLwdILxhb
2jxmZWVJK3f//v10nL6+vqBZ7t27R2cpKfHz9kqpvj317CfEK9kNMr2pPHa3
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
OpwuEu3dE3kul5tJJcPC0HiWOlvparjZp9J/JJ7pNB/p63tOz2KhnQ/eqKJN
q+dnZ3zp0soqjxJVDqQ5FYJqwgB1hAQkNdG3KkhxcbGXFZ2ZmSHfLi4u7tu3
bz3T6uHgwYN2O+698o+yfXt1cUTcUJn+Q06lyHBJjRCWFCEUx6MID26Xk7SY
8CP8kW38qYx/IsHbarLYBl+PD04VkNazrTL4G209X0wCLprDOBOJFfqSreJd
NkPZ4WafLXhf3MI8VhRhZTg9i+m18V4/jwp7eJSociDNqRBUEwaoIyQgqYm+
VSkmJiZ8fWhXl3gkbEpKSmDT6iErS6YZ+IZD2b7tXNaz3crnlyO3a8iMenTK
yKOIsWmjPHsqnSsLYoulfIN5/JkX/0nid1Q8YB7fl6WVVdJ0H58pZBLztwnV
JKYgDZOYYTGd9Ta1B7k13OwLdcfEq446EyOsDI9nsd3h3BZXQhr5dlZ7Wql4
NNmHpwqMFhvzQlUOpDkVgmrCAHWEBCQ10bcqxfXr131NaF1dnedbh8Oxe/du
+qtdu3aVlZW9evXq6tWr9Ofbt29fXcWla35Qtm+7HTbx7eH9L3MqZc/lcjKj
nllY4lGEfnGZFLH7UhmPIjyseUOd9gPm8fUlW0j8zlIGl4cGZWrOQppu39UK
JjHPpTaSmO2Ds0xihsVEyl+Ka7mXw64AfT+U4GEjrAyPZ3FV2wRp4U1niyzL
9lWHk17v/bwyjCtrkVCANKdCUE0YoI6QgKQm+lZFWFpaiomJoe3nvXv3xsfH
SYL29nYvSzs6Our5yu12p6Wl0V91dChzk2OUo3jfpo+gEWwsjyI2x4pHx1is
XFaML3N4aegX28xr6orVd5jHn6/5LYnfXXiWeXxf+sbmSdN9fv8Vk5i3s9pJ
zMrWCSYxQ8dlN4u/jUl6SxiLwo2wPFognldW9FGE9eHxLBaU8j1Au7hxjP7t
jSv8vzgSAEhzKgTVhAHqCAlIaio+t1cnQhcKvNY3NTWVTnDx4kX6W7vdTm99
ffz4sYx13zAo3rfpg4Ccy3rm8QXX8C61847TKT2/K+WkWIrT5eJRisDyeClD
R+PLYlMcid/78rfM4/vS0M3+SCv6Ot2c6iEmMUPHPt8rvhPP+EcpEea6xAjP
fhJhfZg/i+cWxRObhR/9H4/SstocH50pJJ/3jM6zLVflQJpTIagmDFBHSEBS
U/G5vTrJyMggrvPAgQO+C30PHjxI+9ba2lqvBNnZ2eTb69flWPS44VC8b6+9
1YX95ar09slNZyM94iYAW6izgExLvDb3WQYyqAtW9jGPb+pMJPH7sncwj+8L
/ZIu+WVX8AwhUFg/SmI+yOtmEjN0lsdLxN8tFLwnIcKai3ST/yLC+jB/FufV
jaz3ipx+052cx0ZNxAOkORWCasIAdYQEJDUVn9urk8TEROI6BQ/r9e3U1JTX
ImGDweCV5tWrV+Tb06dPy1XxjcQmH2SugC77X8QTbPTtzOPLtvN039UKUpBu
PtI7N9eD3vloqGffpS2DmST+QOa7zOP7klHWT9oti9GmyPquKRLzanoLk5ih
Y+pKEnen1hyRFmTiwdfEdQjWiF5cMn8Wn0ysI81b3DhGf9U2MEu+2hFfKmGN
NLIekOZUCKoJA9QREhtdTWUn84gAfbZSeXm517dFRUW0QCdOnPCN0NXVRRIc
PnxYllpvMBTv27P5vyHzc6uW/Um843Kd9Hv0Ti0paFi7yKkUeh2vse0G8/hW
TTmJP5T2r8zj+3Ivp4O0W9lrDZOY9J5ZwWQxiRk6hvrTokbtCdKCTGf+jPp9
TkR789k+iy3Ldnrh/YJpzTVDDqdr01lxO/nIJK9/CCpko8+pEBpUEwaoIyQg
qan43F6dxMfHE9dZXe3tOC5evEj71mfPnvlGqK+vx/etgVG8b+tLt4lXVY7m
M4/fMypamNPJHG9Wpc+w7Rxiv1HXA31ukrn3EfP4ttk2En/40Y+Zx/cl/nEz
abfmXh2TmLp58YzivVe8f+XFmzWXtw7nSgxStInVvwu2z+KGbvFd9hF/vwi6
ltFCEmRX4anCzIA0p0JQTRigjpCApKbic3t1Qq8TfvnyJf2V3W7funUr7Vt7
e3t9I7x48YIkuHXrllwV30go3rfnqw+R+bml7ynz+IIVIrPoS0+bmccnXKem
6/VdU5xK4W3zV03jJP5oyt8yj+/L8bvie+rBCe+l/tKgj3f+iOfxzn7RZf2c
urxV4nNw7RWu9yKpD9tncWJuJ2nbtJI+3wT0FTmnk9gcEI28gTWnQlBNGKCO
kICkpuJze3WSm5tLXGdCwprldm1tbbRp9Xs9q9PpPHLkCEmTnp4uY903DIr3
bUODuKjS1HGXefyqVnEWfSeb/f5ZQtILcT5f2jwePIMkZl7+mjTXyiT7FbD0
HS7j9/+ceXxfPrksXvrJ8HbdD04VkLA2u4NV2FCgj8h2LE1LC2LquCNukn11
MpL6sH0W0/u4u0fmfBPMG8XTht//PN+26mRYupqBNKdCUE0YoI6QgKSm4nN7
dUKv8o2JiZmf/8PhJIIhPX36NO1br1275pu9qqqKTlNaWipv9TcGivdtY+s1
Mj9fbI5nHr/glXj26cPCHubxCWmlcty9Mp35v0hz2ee5/HU0iX8m3qjr5HUw
MuHD06LBXGFnMHdfEu3w7B8vapEBt8MmXt6a+CW3S6JrWxp5SeLoi2MiqRLD
Z/GCaYX2pPZ1PCntbbuGea2ZVxuQ5lQIqgkD1BESkNRUfG6vTmZmZmjjeezY
MZ1OZ7FYHj16tGktjY2NXnmLi4s3b95Mp5mYmFDkbxHlKN63zd3J4nuluuPM
4z8rZ39crV9e1A6Tgp4U+1m1zoTJx38nvsuzSHyXFxjto7+hXhey2XC6Hlab
gzSaYGAZRj5GLT8eYrT8OBRWjWOk9SaffFdyHNtsK4kznfV2JFVi+CymN7d6
3YBDc59aeyD8A2RVusqBNKdCUE0YoI6QgKSm4nN71XLt2rVNwdi5c6fdbvek
X1hYyM7OPnHihFeaq1evKvsXiVoU79uWwedkfj5XsZd5/JT8bjKFLmoYYx6f
UP5aQwpKzO3kVIom6S3SXC6HlUcR05k/pV7p8jLgHmYWlkijfXKZ5S1F9HFP
r/v4um+alalXpPV0uf8uOY5jaYbE0aZ8M5IqMXwWpxaI/5r8bm71UNsxSZKd
4XkYmqqANKdCUE0YoI6QgKSm4nN71TI4OBjUtwpGlaRvbGz0m2Z4eFjBv0U0
o3jfXh4vEddDFrGvTEJmG5lCC9Np5vEJjT3TpCBOd4YKRlVcg3r/LR5FvPHe
QlvLqRQPgxMG0mjH77Isi8f1OqFAX4A7V75Lchy32625/2XxdxSr0pc6M3wW
04dotfTNrJeMvjT5o9MFLhfe4soASHMqBNWEAeoICUhqKj63VzMlJSUxMTHr
mdbjx4/TJzKNjY35psETmQKgeN9emW4gk/OZl79iHj/+cROZQrf2rzvTjpzu
kTlS0NkHDTyKcCxNi+/gHvE67Jc+snhpJI9TKR4E70MaLf4xy9Oe00vF9eFy
3sZibL1OWs/QeC6SUFNp3yehVg3S/wqsnsWrDuf7n+eTVjUtBdr7vCO+lKQc
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
oPiipDWVijqaykAdRyWhpNGUydr+Daerqys6OpqjxcpcqSYQ5oJMnm1jw1Hi
OTxLmybQavlhKe+6k8Iob55EjSYXEzumdFsN4GDo66TEsrBQuRW1uDZRQlw+
PYdqCAzP3HyeVrUdBnPPPdRdS03+xaZFAkOb7Qu8farFvIvj8wmEplpsuObR
xtMCg2SJ41qZgamD/XzvXWaN76czkdIToaQ1lYo6mspAHUcloaTRlMnaXoVh
aGgoPT391KlTUVFRfrbq4cOHr1y5kpaW9vz5c4/HE2lNXw9k8mzDIpXmnrtE
ZObWjqDVck4tsbok7DT2aFGjcTldpMQ6TS9Q/8w++jEpsSz4lIulUA3kclor
6qiuET1x+et4vN4Nn7bC/LipTQtLzWfwA9x9h6zw+bL38R7CVBXf28W8i2F+
7N7xBcFytlysEJmUmDhwqyHoiSo8jSU1KYlBSWsqFXU0lYE6jkpCSaMpk7W9
CsTpdC4tLWm12rGxMea/Docj0hq9lsjk2V7uvBnKYU8wD0tBqCnl2p2IzmGY
JreVlFi7vhOHTxb8npRYFkytF1GLy123ics/Ho9ro4zNLBGXj9h2qRI1ZFqh
VTx0sWY3DocczSUr3PD0sJg9BDHv4p0xVaj39EbhaaVhEViy9aEEoyv8I+7V
gZTAC2BdV13BH6TX0A8lralU1NFUBuo4KgkljaZM1vYqKsSRybO90p+MlojG
Zx8TkQldHOs7qSfgXQeWJSWYCMiqqUH9M1/6HimxLJh77mLH1+azxOXvvVZD
xCAKy5Hb9aghjc5MqRUYDmzVEi66ZGq/gnd1Oq7xvV3wu9judKOueze6RMxp
9e2cLiSqtkMjWA4p3Daj5v5b7FHDLoseugq7rRE2t5W0plJRR1MZqOOoJJQ0
mjJZ26uoEEcmz/bqaC5Oa1O7j4jM2Mx2tFQmW0qVhZn5FRopaCxjebh/avaQ
EssCTLVqqD9EXP6mc2Wooyw2J3H5iLNJTaih/heLlFqZffxfqLtIFSBGwIM/
Q8M/+d4u+F0MH+Z912qECVknBzjtZ1UOiRFFBMtYPurSubxfh7pMl/9bcIye
I6WGgShpTaWijqYyUMdRSShpNGWytlcqXgDLRyKR5m+x2+1mszki0bUWi2V1
dZXvXTJ5ttemKtH6cKGCjErnkqUwWPwwmq2o0Z0xvEMRQ2Hue4DPo5+fJCWW
hbXJcjAiUWSFu9we1Esbooupfj1vPO5AbT3vI1+Idp3p5K/ggzkbYbdnOBbz
5R/yvV3wu7gDOL1fSG0RJmQdGPd9/VGHGFFEWKzdBwITYkJdZuq4BvaLdkmp
YSBKWlOpqKOpDNRxVBJKGk2ZrO0VSVJSEsytdPkyjm3U6XQCat+EYniYWFES
P5aWlrKyshjNDxw4sN7W5s2bDx06dOfOnZ6eHrfbTaldRnJvb29ycvKRI0e2
bt263vSuXbvOnTuXmJjY1cUpKZBMnm3bbBPOkVL0VyIyP7rbgJbKE7MSlUOy
O1w4deqZUlJiTe2xYjxFBQALkhKvA2JasaFe2napkqxwP5KK+1Bb5c2TNJrw
uKzYofTB54jLt8+D6Oa83/C9XfC7uKwZZ+ROfNIrTMg6Y9NLSNSxO0/FiCLC
TNq3UZfadCFLytrnu9BlM6nfiGwmZCWtqVTU0VQG6jgqCSWNpkzW9ookPj4e
WpdnzpxBH01PTxO0WxkTkrjyVqs1Jydn27ZtLO0eP36c+UOINz02Nnby5En2
P/nKlStarZZdziZ5PNuOxX7stpf7KyIy90kVQenHu9ElqF2Xm8zJu/H5SZza
tC+RiEx2HMZh1OJs9s/ICp/Wm2l4UwcFppUmWFEX4jRPob7SZvyAuHzXihbL
T/8u39sFv4tTS/tR1z1pHBcmZB2zxY5EfXi2TIwo8ThNY6g/p5O+5PW4Ql3p
9binU/4Ne4AbBFawJYKS1lQq6mgqA3UclYSSRlMma3tF8vrarTab7fTp01ya
3rJlS2srsdSyDGVlZRz/6qioqI4ONq+8TfJ4tn1W/pk/JCITlt5gls1EZHJh
K2h3eZVMu9CtkXi62qC4LDp80pT2bbLCByYMqIvOJD4nK9yPqtYpUoeGobDr
2/F5aP7viMv3uu34PDfhba+X32aI4HfxlYw21HXN/UEyF/ECRjST+l4IY2Uw
Dftdl21kv3ihcrPEW0ahUNKaSkUdTWWgjqOSUNJoymRtr0heU7vV7XZfu3aN
e+tbt2598eIFkaZLS0t5/eE7d+7U60PWx9wkj2f7k/SeyB/v60Rk0jj35MKB
G7Wo3blF3hHHQZkv/wD1z5qGWNgsCx6XjZ7va8vAHOqia1l03xQStLU2UUIv
Fngd5kuB42fX+NVRFfwuhqmYX2hNwoQgjgG//RGNUaQ0MSzW7MKmaLjCrIyt
ige3crM0GgZFSWsqFXU0lYE6jkpCSaMpk7W9IikqKooGpKamoo+MRuOpU6ei
CaHRkCy+kJ2d7WceHjt2rKKiYmJiYmZmpra29sqVK34XHDx4UHyR2bGxMT+x
UVFR9+7dY36/urrK2KctLS0nTpzwu+bkyZNOZ/CUrTJ5tr1uBzhR+ox4gZTi
TLkAS1WSqkwKa02yhOORZSrhc6hRj5Oko3V1Gz4DTSikcgaKGJzEZ7un6Zzt
rgyk4KxZjR/RaGIu5+fYW3Wxn9e9gt/FH57FJ6Qra2LnLpggq6F7RqQ0MWjT
v4c60z7fyX6xwzCAt9QeflMaDYOipDWVijqaykAdRyWhpNGUydpeRSYwFuL2
7duhYXju3Dm/XL5erzc9Pd3PfiwrExXY5Xa7/WzSbdu2DQwM+F3GmKiBTYfy
FpbPs61JfAdbSS6rSGlGM878s4NcXl8uXExtQU33jPE7GgvF7OP/xmbL0igR
mWGZSP4GatS1SjITb379GOqiR1W0EqatA4u5HLxZR6MJU9tl1FHLdLJmzZds
QE1Yp2t53SvsXcwYqmQjUpmBph1ozAUYLDyd+HmvJ0wNJq/XM538ZXSLc3lS
EjWDoKQ1lYo6mspAHUcloaTRlM/aXkUOFBQUQJPw9OnToQ5Sc3Nz4ZV79uwR
c+RaU1MDpW3dunVwMGSekMuXL8OLk5KSgl4mn2d75uG3gCfkvEhp2gVsrRyi
Y62E4iY4V2oiVHgFpj91WUJ6fZPlxcP/BBlp/LdHxPCwbAB1UclzMv7zoYAZ
gbZcqKDRhOHpYRx9PJRBpYm6/biJ4Sxe9wp7F0/MmlC/HblNIHdWXec0Eng7
O8wpJz0s409QT3JMXQ43DaSJLg+KktZUKupoKgN1HJWEkkZTPmt7lYjDGJ67
d++GJmFfX1+oiz0ez7Fjx+DFnZ3CF2x+aaDy8/NZLp6YmIAXHzhwIGgRB/k8
27OPfoIPNUxibZlRUHfj5P1nRDTkyIMnvajpqrYpIjJ9D6NtRGSGZSzz19g5
eZakh+2d3C7JXEY9Hi9qi/lh/km8ifmyjTj6eIrK4b6p9SI+0u28yeteYe9i
GBcck07ANX0IOGx/fK9RvEBhLDWdQj1par3E5RZYxdXYcIy2hqFQ0ppKRR1N
ZaCOo5JQ0mjKZ22vwguLxTI2Nvb06dPHjx/PzpI5+RodHYX24Mcff8x+fUND
A7z+3r17wtrV6/VQzr59+2w2NvuFsVIPHjyIro+KivLzZF5HPs+2Lv+3OOhs
oVuktO7RebRIvviwhYiGHMmqHEJNFzaMiRdINUUSC6OP/4rNsYkSgpIvPcSu
1F0jYs/Ww7KFQoZniC7vNyBeklPdZL6s9CeBENrjvO4V9i4ufvYCdVpKCb+I
2qBA131KB99c0BX+CT/Vk5zUsM48RbfM5fyCtoahUNKaSkUdTWWgjqOSUNJo
ymdt/0bBWGpbt27d8gkPHjzge7vL5dqxYwcy3Bobyezw+9WgefToEfv1S0tL
8Ppdu3YJa7eoqAjKKS0Nn2toaGiotbV1cHBwenqaUcPjCZJTVz7Ptr7k7ziC
T9sgUlpT3yxaJN98zFYJiDhPGsZR05mVQ+IFuix6nBmGdEkaFoZzP0Ttrgyl
E5T8MYXUVSwculmHmpuZXyEuX5v+fezFvULl+NgnZTHPrLbC3sWMrYo6jbFh
BUjww+v1bjxdimSu2cIEltLgVT3WxC8Al3tOxX08jhXN/bc+vestj4NMknC+
KGlNpaKOpjJQx1FJKGk05bO2f6OAdXBu3brF93bGTIuKikISCgsLiWgVFxcH
7UcWJ2HE0aNH4S1Go5AaEH5ld0ilR5bPs71QuZXg6R7MWPuATtVOyZp2LI2i
npl9/N/iBXJkqHAP9k3tjiMoee+1GtRFeiPJTMVBOZP4HDU3MGEgLl/zgGRK
saDYdG2oCV3B73ndK+xdfBUUb20ZEFu8dZ2DYANhSmcmIpMXDuOQsC2g2eyf
YZ/5uWZ6GrKgpDWVijqaykAdRyWhpNGUz9r+jUKk3Wqz2aChl5KSQkSrAwcO
QLHLy8thb/Ezdfv7hTjdHTp0CEnYvXt30MNTAcjn2TbUHwKZZ8KcYoflSSM+
9MyoCJm9igbwqPcGiaNeH5ul8I/iBXJkoPg4anep5RxByZvO4QIrFvrnbtcf
4UxZzf1kTDCEx27G+WmTvkRWOMJpnkKtaDN+wOteYe/io3eeok4bF128dZ3L
aa1IZtugjohMXjATCz62Lucx9RnqDqAbzT3x9DRkQUlrKhV1NJWBOo5KQkmj
KZ+1/RuFSLu1tLQUWouwMqxgXC4XlLl169agyY78yMrKgndVVlbybddqtUIJ
t2/fRh/Nzs7m5ubeuHHjxIkThw8fjo2NzcvL6+jo4GJQv5TTsw3zpZj7EkRK
y6rCQaYFTwkEmXKnd2wBNX0hlUBo7ZqmCvXMfPkH4gVypL8c5wIy1B8iJdbl
9qD+eTe6hMs3SCSJRX2oxcrWSbLCnaYX+DQ860dkhSM8LiuMcebVacLexZvP
l6NOMxEKCk4qxgNRSjmPdFCMjR+B9FY3uN+4MpCKblys3klPQxaUtKZSUUdT
GajjqCSUNJryWdsrkkePHl0JxsmTJ5Gltm3btqDXBOXixYv//Oc/N/nCnn2X
IysrK1DmsWOccksyhiq8Kycnh2+74+PjUEJmZibzS51Ox/ylm0LA2NRVVVVh
17fyebZN7bE4z6foIphJNE0VdsZncAERInlTV0dz8Zq5dp94gRzprbqFD6cq
okiJNa3g/DzbLvHewxFAds0IajGndoSscNtcizSn4dPJX0ENuW08goIFvIut
difqsfdPl5LaWyCe64kvMPmbdZpHeSz7fKcEuxPsKGlNpaKOpjJQx1FJKGk0
5bO2VyR+5VAp0draKl7VhYUFKPPSJU5lFFpaWuBdGRm8Kzx2d3dDCYWFhY2N
jdu3bw/7V8fGxrIfvG6SzbNt7k3AXqlNp0VKu53diVbIz3q1RDTkiM6wipre
f71WvEBzXyLOJfv8pHiBHOmpTUbt6p/8mZTYab0Z9c/hWwQKg4alomUStZhU
FD4gnRe+GZO2kBUOmX38U9SQwzjM/UYB7+KZeVz++MCNWr63h8K3tg6BCZkX
Xo8L1pNyW3lEOr/K6Z3wNo5idpDP7hUWJa2pVNTRVAbqOCoJJY2mfNb2isTp
dAYej5Jl165ddjsBVzeNRgPFXrvG6Viws7MT3pWUlMS33ebmZighJiaG+9++
b9++oBVw1tkkm2d7dTgLe6U+PSxSGoyk6xrRE9GQI2aLHTW99SKBeh+wfKSp
PVa8QI50NeBz3rnsn5ESOzCB63ieSSRZFjYUPhHHjwgnl14ZSMG7Co0fkRUO
0Rf/DZ8VzjzlfqOAd3HXCC4jdT6FWBqiidllJPbIbSm2LCAO4wiOEU7/Lt/b
53J+DlIzSVpaax0lralU1NFUBuo4KgkljaZ81vZKpaenR7hRGo69e/eSyr47
PDwMJcM4Uxb6+vrgXfHxvNN61NfXs/yBBw8evHXrVlZWFvNfWLMVwVJFaJNs
nm2fc6uqbSKlnXqAU8iOaIQkcBaMX/ymeIHG59Eg8pd3QSjBdD6vEJZ8lR14
6HYtS4rXRP+LRWwpJzWRFW5qv0LQv52FxRqc3nl1lEesgYB3cVUrzol9r6CH
7+2hWF1zILEfnC0jJZYjlrE8HCdetpHv7Yu1+9DtK/3JNDRkR0lrKhV1NJWB
Oo5KQkmjKZ+1vYK5efMmARsVsG3btqNHj967d0+nI5a4cmJiAjYRExPD5a6h
oSF4F/OX8m23vLw86N+4ffv2ujr/KK3q6uqtW7f6XclY3EElh+q9dsnpqX2A
loVjmb8VKW13DM5YW1bTRERD7rx3qhi13tTcJlLaSM57qGf6KmKIaMiF3OxM
1O5UwmdIiU3MwYlqLzyoISWWBeYBQC0yDwZZ4cN5m1Av9ZedJSscMlSwCzU0
UHyM+405OTl824pNrUU9diu9ju/tLGw8XYIkP33WSlByWIYKdqMOHCzcz/f2
gZKP0e3DuR/Q0JAdAeOoIlvU0VQG6jgqiddxNFmMIL6GhgpfXC7Xmi/wcPPq
1atrnHE4HJSSlPqdnN69e5fLXQMDA/CuuDjepTCfPHkS+EwePHhQrw/uAavV
anfv3g0vPnbsmNvtDrxSPs+2faEb57fJ/x+R0nZdqUbLY8MylZKaLOyMqUKt
G81iW58v/xD1zNpUFRENucBMiTAe0ONcIyI2v34Mdc6jKh5xmoIxrWLPbeKZ
oBYqsN26NlFKVjjE3HtfWJhzO/895FsgPLyhe4bv7Sz8Mw7vWrwgVF6HI/Ml
G1AHWl4U873dpm3EE1Teb2hoyI6AcVSRLepoKgN1HJWEkkZTPmv7NwqRdXBo
MDo6Co1BjienflmVBMS3+tX0Waerq4vllurqar/rZ2dnAy+Tz7PtNI3jjJ2P
fiJS2odn8Xmr1U69Qqgfh2/Vo9Zn5sWmcNEV/gkH1umky2bDzOHa9O+hpl2r
ZCqfPiwbQJ1TIkkxFOi5veFksYfoppau4A9gdNoISvbDMl4IHOm3c79RwLsY
utkPTPDIXxSWKxltSHLLAOFauuzMPPwW6kCnifeD57Ya0O2axHe8HhcNJVlQ
0ppKRR1NZaCOo5JQ0mjKZ23/RjEzM4NsLo6RpLTxy8sUG8spSY7fUX5WVhbf
dmtra/2M0LAd4vF4Tpw4AW9pawuyqJbPs+1em8fRlA+/JUaUx+OFdooEFUL9
iE54RjC6djb7ZyCRLOEyLiwwz+1czi9w04YBImLv5HZROstjYfMFXI10Zc1B
ULI284fYGlqeJCjZD9tsE2pI/+R/ud8o4F28+yp2V9AbLXxvZyGlpB9JLn4m
XQnXAKsziPNJWLTp38Vfh6VR4kqyo6Q1lYo6mspAHUcloaTRlM/a/k1Dr9fr
PsFiIbl2EgyjD7QEz58/z+WuhoYGeFdhYSHfdpuamvzs1paW8Akt/QoMBW1X
Ps+2x2VFa8LpxM+LEbVqxelfNp8vJ6Uhd8hmM55J+w4+9LQQC9YOCzOH64v+
ig8TZ8nk/r30sAV0zjwRmWE5cKMONapdIFnEZDrxC9iVmmZ5FKdpDDgk/Jj7
jXzfxR6Pd0M0DtB2uoSYeKEoeR6ZEq62uWbUe3N5vxYmZL7sfexpPF5AVsOw
KGlNpaKOpjJQx1FJKGk05bO2V4ksZrMZWoIHDx7kchdjMMK7Kip410bp6ury
s1tnZsIfVPlVz7lz507gNbJ6tjUJn0HLQq9HuHPvwtIaWhvvia0mqCFHbufg
I8XGHrHVYxkrHltGLulidZk5fKFyCwjeJJAbmeHje42oc8ZmlojIDAt0fB2a
JOb46nFa4CkeKbHB27Iv442d5C9zv5Hvu9iwbKUXDuxbwpWiW7UfKwOpqPcW
6/YJE2JqvYiEmFo5Fe8miJLWVCrqaCoDdRyVhJJGU1Zre+XhBbB8JBJS2u7a
tQtZglFRUUGTHfmRlJQE7cfnz3mfW01OTvrZrQ5HeF/H8fFxeMvZs2cDr5HV
sz2T8jW0LHTbhLvXTs3hMpFH7/CodEmKpOI+pEBFy6QYUV6XHVtGCZ8lpCAn
mDnc8PQIan11KIOI2L3Xaij5oLIQm9lOI6zSaZ5C/aPN/HdSYkOhefA5sINh
43gX33fxiMaI+up4fCN/NdmYmDUh4f+Mk+67aWz8CHWduTvIDh4XLGP5SMh8
+QdkNQyLktZUKupoKgN1HJWEkkZTVmt7heFn012+fBl9pNPpNpEjVCEYvpw/
fx6KXVhYCHvLpUuX4C1aLe8DOMZKZWxkKMRsNoe9a3BwEN4SNBpXVs82DBV0
mYWX3B2cNKC18ZlEMt6tvHhcPYwUyK8XFQdHMOyXL8wcvtRyAbW+3M07D3ZQ
Np3DKbMsNolSZiUU9qJGq9qmSIm16ztwjtn835ESGwptxvfxF2RlmuNdfN/F
TX2zqK+IF9g1W3BuZ+ZJICucBf2TP6Ous2pqhAlxGIek3KbwQ0lrKhV1NJWB
Oo5KgtJoTs0tZ1QMXs1oi8vpqu3Q2J0kQ29CIau1vcKIj4+HttWZM2fQRzCf
sHh6enqIKJySkgLFhj08dblc27ZtQ9fv2LHD4/EIaPfYsWOw3dHR8NZQXV0d
vIXRPPAaWT3bc7m/xGlPFoXHvrUP6dDamJkrCGrIkeJnOIgvrXxQjCjn0iiO
anz8U1IacoGZw83dd1DrSy3nxMuEqX3fjS6RLGUW3EnIqyOWUWdtshzn+C2n
/lXS5f8Pas6u7+R4F993MXx6U0vJh6B+cKYUb1xYJdq4gL4crhWB2cC8bgeM
ZfA4VskqyQ6vcWS+WQMThoqWyWe9WrKJyFSIoNo7ykAdRyVBfDQdTve9gh70
vlv/2XWlamBikWxDgchqba8wXju71c8YTExMZL/er3ROTEyMsHb9OopLUmLm
GnjLkydPAq+R1bOtL/oLzgI01yxYTkP3DJoi7uSyVQuiRG2HBinAzFpiRNn1
7fhEr/APpDTkAjOHrw5lotYNTw+Ll2lasdGLnWShrHmCRjqglcE00D9HSIkN
hU8l30muCcf4vosZW5Vqyt9Dt3COrKm5ZeLyA4FOC9NJXxSzWzL7+Kd462Be
0rmF+zjOzK8cBXVyN54plTJ1swoXVHtHGajjqCTIjqbN4YKlJeDPu9EltMvA
yWptrzBeO7t1eXkZuuzu3LlzbW2N5XrGsIVq5OXlCWvXr5jO/v377XY7y/WM
Vnv27IG3jIwEKaEiq2d7oXwTXpZPVQmWU948GZGcpQiYfEakp6VVU41D6so2
ktKQC8wjtzZZhs8TKzeLlzmtN6OeOXyrXrxAjjzv1aJ2bz7melIZluXO6zhR
T9vl8DeIA4YbMyYzx7v4vouZJxb1VXN/kKLPIoHZttuHpMiPbdM2Anfu/xEj
aqFqG474Hn5ESkMucBzHKZ056nx54EqJxtG5imBUe0cZqOOoJAiOptfrhcXK
A3/eO1UyNk0xL6Ws1vYKo6ioKBqQmpqKPjIajadOnYomhEYjPF7Sj8uXL0N7
MDc3N9SVOp1u8+bN6ErG4NXrBVZFcTqdMCUUw6NHbKsm5lN48eHDh4OeMsjq
2V6s3YvWhJZRgQY+Q379KJocHleTiWvmRf+LRaTAuWThB8cMTD/gPKi1e0lp
yAVmDofVQ/RP/ixe5sBEZEKP+8YXSI0IxPjsY2xI9ieREhsKU1sMNpM7rnG8
i++7+Hg8Tvg8SuHFmvgExxqXN08Slx/ISn8yPhav55QEPhSm9ljsOd8cJNMd
PbiMo8Xm3BNbHWqlVNtB7CWoIhLV3lEG6jgqCYKjCSu+re/SP+vVppUPbgC/
3H212mqnFSkjq7W9SsRpbGz0O8ytrAzi8cgYrQcPHoSX3b17N6jAtra2esD8
fPCilpmZmVAaYwWHiq7t7e3dsmULl3NeWT3bPlbAQJBoXI6klw9SdXQMy8Qs
Tmh87G6DGFGMNYT6xPjsBCkNucDM4TARzVz2z8TLJHgSzYspHT7nPXKb2Dkv
PH2zvCgiJTYUzJcCPwyNH3G8i++7ePvlStRXhmXydZcKno4h+enior85Ymw8
jpMJ9wSfhDnCjDLwf3iflIZc4DKO931jqWLS27ZcqED//PBsmdEsXSEtFRZU
e0cZqOOoJEiN5sLS2kaQxuF4fAOyTxt7tHCKpucQKKu1vUrE8Xg80dHRfqZr
YWEhrE0zNja2d+9ev2tCnfn6HaSWlQVPs2m1Wv0M4U2fBLrC3MKMboyJ6nfN
gQMHLJbgBUdk9WybWi/h7LVdtwTLgYu3iBwx6I0WpMDeawKTl66z3HENH7G1
XyWlIReYOdxlmUOtz6R9R7zM6rYp1DMJhb3iBXLEaMZxtYxdRkqs/sn/EonI
5sjaRIkAt21e72KX24M2hJn/Yf4pSFM2ngGf7RuPOojLD0Rf9FccgKARHoDw
8lVK4WGQUvg/CCnIibDjODO/Ajfz1x2DmV8y5ir6ZVxOBOL9VQJR7R1loI6j
kiA1mjDWZvOFcr/tX3iwsiG6mJmiiTTqh6zW9ipywK806jpbt26NiYmJi4tj
7MTAT1kyKXG0W19+cpDqVxBnvd0bN26kpqZevXrVT9Q6zF2hBMrq2fbNXntB
sBxmMQwC9OgGvwdldc0BZy0xopaaTuGjor4EUhpygZnDPS4bal3z4B3xMuFZ
W1bVkHiBHKGUx3j20Y9R/zhNY0RksmDTteI4zQKuSbp4vYsXTVbUUTtiRJl4
oRiewvVhT9wjXB82KDMPv4WHySyqCpLXbdckvI1TCrukO74MO44w4RXz/2jP
obodp4ljfigtk1R4odo7ykAdRyVBZDTHtSY43zZ0+6evd7jc+6/XoguuZlKp
eSGrtb2KTKiqqgq0EENx584dlvI33O1WhpaWFhgzG5aiIjb3RVk92yuDD7Eb
ZMMxwXIupLagOaF3LHyBXeK4PdhK2nCyWIyVZKjbj/PAjGQTVDIs63O4JvEd
vEp3sqUg40Ja2UCkXLg3ncPJalatZCqDTCd/BXWO224iIpMF5/IkOOz7Ice7
eL2LR6eXgHcTFaPSxzQmd/YdCo/dDPdevB6xtfNms36EBIop18UX9nHsBRHc
zE/HME545fF6j97B6YXv5nXTV1YlDKq9owzUcVQSREYzJh0nHjxxvzHo8q9z
WA+n6ymdOfAakchqba8iH2pra7du3crFaHU62YKvedmtDH19fYEOw4Fs27at
rS3MTo6snm3LeAHOQVSzS7CcE/dwYpmxGYoZ21jYdA775llswkPvfXMsS1c4
5uWnc7g2/btIAdeq2MNrZs2MuqW+a5qEmlyBO5xziwQqb3pddmwQJXxWglq0
HscqanE68Qsc7+L1Lm7uxwHIsZlUlmRuj2dDNH5lO110i7Db5zvJxmjDr6Rl
LF+8QI6wj+MxYJl+eNb/DQJLWr93qmR5lS0XvYoEqPaOMlDHUUmIH82Z+RVo
kLLUaT15H5fIuZ1NrMYBQlZrexVZsbCwEBcX55cECXH+/PmxsfDeg35+xTU1
4SMi7XZ7QUHBoUOHgrbLGMKZmZmMbmHlyOrZtmpqQM4T4TVfDt7E/nKzCwQs
FAHArJ4LS8KPKX0jKFsIahiW9Tl8Lufn+HTJIDaLDtyK7BgWmFtbGCdBJbUR
jVG8QNeKFp9+pn9XvEAuTCd+Hh9/Ozg5fPJ6F5c24UK3ycW0DhN3XcHfDr0x
eOg9KVZHc3BQcNU28QJNrRdxyHmbwHrcAmAZx9U1O1wsJRX3+V3g9XoP3MD7
NoUN1H3aVdhR7R1loI6jkhA/mjC5CrPkYLmya2Qexi4trdhENu2HrNb2CiM7
O/ugJLx4QdEp0Wq1dnR0lJeXP378mDEYKysre3t7Q6UFJgizGpmcnKyvr3/y
5El6enpubi7z/wMDAzYb16+ArJ5tn/C9wj8JlrMDJEQ1kZ4NOAId86bmlgXL
mcv+GTYbjZLW9Fmfw2FOG9tsk0iZcI+RiPHInaugmFrbIIGyofaFHnyQl/dr
8QK5oM38IQ7VXJ7kcguvd3EaSBnxpGFcoJbhgNXYWXakiQCzvRGpsetjCFdu
FS+QIyzjyDzPMDDB5nAFXlPWjHckGBuWoqIqHFDtHWWgjiNVPE6LVduwNlFi
X+j1esknCfRD5GhabE6YRpi9OjmzeocZCXLrRsU0HYis1vYKIz4+Pqy/KxF6
enoi/bfKEVk92z5VV3J+LljOxtN46rA76XohhuJMUhNYmRsEy/Fx07VImmNq
fQ5fqNyCHZUnSkXKhIc+syScdbkDN0Jr2glkmbZqqrF7QOl74gVyQVfwB7yN
oGvlcguvd/HNx52olxp7tELVDMPtbNzK0y7/tBVkgbWKVkdD1trmjn2hm6zj
MUdYxvE6yEQXqrzUqtXxPpgYIxVAobKOau8oA3UcKeFx2ZZazk8nfgGmdKBd
bE7kaFa0TKIJdm9sjSdc6FBVKy6vsCe2mmyokazW9gpDtVsji6yebR/Hy4wf
CBTimzmWrIbcuZpJ5nTPxy9UdFokXqzP4Yanh/GyfyhTpExYTdJskTTILqtq
CDWdX0/AT3J1OAv1jKHugHiBXFio3Ay2ETg93rzexacePCey38JOViUeizzS
+8x+zOX+EvWYXU8gjMg/0RP9U4B1Qo2jzeGCO3Xj2pD5waB5+7BsgJqmKuFR
7R1loI4jDdxrC3Dehj/GZyfopZIQOZrQy67gafg1htXu+gCcz5J94cpqba8w
VLs1ssjq2fbYl3HameSvCBPCWENoHthysYKshtwhkoDoVdENkPmHrIZhWZ/D
l1rOIR3M3XfECPR4vbC+pDt0hm0alD5/gZpeL20pkuWu26hnxJRt4oWx8SPU
6MpACpdbeL2L98bWoF7SGWgdiMN95vsFdGfm6aQvoh5z28i4ps88/Cb2gliR
KL1YqHFsGcCptNirRUN34t1Xq+moqcIJ1d5RBuo4EsfjWIHhUYE/S02nKTUt
ZjQ1OjMO1ojmGqF2J7cL3UU207us1vYKIzMzc7ckcMmP9AYiq2fb63GD2ekt
YbtqeqMFzQP7WFdxVHkICr4wFpMwIe61BdQhzFKZrIZhWZ/Dl7vjcHhg60Ux
An3K2p4XVdZWAI09WtQ6kfR9xufR2KLvlai0rqnjGt+kQNzfxcw37r1TJdjH
PliYJBG6RnAVgAupFLONuSx68VthgcBsadaZp6TEshNqHONy8Mono4Itc5rD
6f7gLM5zznIyq0Ib1d5RBuo4EmehIgpaqdr0782Xf6B58A78pWU0j0bTYkYT
OhFdTuMUwsPQ/2IR3cVMzgTj2mS1tldRIYjcnu3ppC9ht1iHkOOeidllNA98
dLeBuIYcya0bRWpk14wIE+I0jaHemH38X2Q1DMv6HL4ylI69YRv+KUagzrCK
+mT/9VoyWnKmZwwXuDyf0ixe4GL1TvwalaoeyspgGh6Op0e43ML9XQx9Fahu
LGj0eGv6wI06eg3Z5ppRd+nyf0tKLHSeX+lPJiWWnaDj6PF4t1zEvvdhc53d
AK7CzEKLjqYq4VHtHWWgjiNZVkeyoX06X/7heniUwzgMc31MJ3/FZSGQXNEP
MaMJXZWe93JNDeHxendfxdn1m/tnBSvgh9zW9ioqpJDbsy0+DRHcvzqXLDb/
rWBg9s6UEoFeqXZ9B151F/yBrIZhWZ/D1yZKkA4iy4iMTS+hPjlxr5GQmlyB
GxpH7xA4I/PJtKyV6M9Zm6yA73Qut3B/F0/O4S46crtehJphWLM5UUMbz4hN
9sUCjEFerNlNSqy5+w6It/qYlFh2go7jKPhObblQwZix7EKa+mbR9YduUdwx
UGFHtXeUgTqOBPHYzTOp3wA7jf/jdeEkGA7DIEzTtFC1nbgCgkdzfMYE32hB
M7qHIqMC5/C//qhDmAKByG1tr6JCCrk927OP/xvNS44lIQlbYAxXbGbE3ikN
3TNIjTu5XcKE+Ba0fZ+shmFZn8MZiwzpoC/+mxiB0DuUuyMNKQzLVtT6zpgq
8QJ9nlWjREdXdn0n3wNE7u/izmE8QBcf0i0WvOlcOWqLXoaupZYL2K26PZaU
WJ/dg5INpMSyE3Qcc2pHsPd7Tvh5Zs3mhK7gYkpLq4hBtXeUgTqOBFlqPotP
VBO/4DRP+V2wMpAKT2PtesKdL3g0Yf24G4/52Z4vtNjm/eBMqYOQq7Dc1vYq
KqSQ27MNy3wIS/5Z3zVNKc6dFx1D2AS4ktEmTIhlLA+cFu0hq2FY1udwx2I/
0mEu91diBBKx5QXDvA5Q68zSXbzAmdSvo55xW+kWIUW4VqZx4E/G97ncwv1d
XNUmXbqkI7frUVsTs8ILHLMDqzgx3yZSYp1Lo3gUMv+dlFh2go7jSVAJl/l+
cZFzLhmX6GJGnLSaKpxQ7R1loI4jKdxr85pEHMS63HU78Bqv16vL/x3eSC/6
K1kdBI/m3mvYSbhlgLejIHQVZq/6yh25re1VVEght2d7vvRdkPBEiKdiWRN2
0CWSNlYYQ1NGpMapB8+FCVnpT5beHRGxPoe7Vmb4GkqhgBl9H5ZGoAwHzDlv
tTvFiPJ6XGDj9y2vR6IywR6XFbf74HNcbuH+Ln5cPYz6J6dWYFA2Ry6ntaK2
xBSKYmcu5xd4H2ye2FbJJ4m+30KSoTMbPQLH0eZwvRuND085ZrAsahxHt1zN
FLilpiIS1d5RBuo4kgIetjIrjVCTqk3XBo9cmX8S1EHYaMJMwhvPlArIZ8gs
h5CE+Hwypy1yW9srDC+A5SORRORPkz9ye7YXq3fg8xFBNaZzgeMc7bU3CzDz
jOBQweXO68DL8QpZDcOyPod7HCvYdSfpS2IEQrMov55u1c6g7InFu5rz4jwk
YaJaiVM9Tyd/GTXtsYc/qeT+LobFm2o7NOLUDENiUR9qq6x5gkYTzLQPyx+7
7STT52ozfwi8xIcJSg5F4DjCVGOHbnINVoWrrKjz5WFDYlVooNo7ykAdRyIw
ywz4XlsZTGO5GJ5uLFSQXMEKG01mMYN3AgU51w1MGJCEbZcqPSQMFrmt7ZVE
UlISrLJ6+fJl9JFOpyNYv3V4WIqlxWuH3J5tw9MjaEZaHcoQIIFIARrxwGjK
XVcElkpcajqNekOySiuI9TmcWfxrEt7GR0se4ceUiU96sYNiawQcFI/HNyIF
xmdEWTE+7tM5vyClIRdmH/0YNe00hS/vxf1dfD6lGfVP9+i8ODXD8KQBn/ql
lVE5fHdZ5vDeQsrXyAqfL30PCV+boJhaChE4jrDyQmJRH0c5zDeaWRrhL4Ja
DScSqPaOMlDHkQjmvgd4rk77jtfN5sFim2uBzk6uFU7xEVwQNpon7uF1RX2n
kHLebo9n83mc8GFsZkmAED/ktrZXEvHx8dC6PHPmDPpoenqaoN3a00M3XOs1
JbCjIqsP9BUx99wTIOFefg/6+tcJmkOIYLXjjKkfni0TJsRQdwBb8SOPyWoY
FjSHwxR/YgI5YQ0OgvneuXPpYQtSoGtEL0aUdaYeZOb5BykNuQCLh9pmw2fM
5v4uPnSzDvWPRm8Wp2YYnvficroEkyhCmM5BHaXL/x1Z4bB673J3HFnhQQkc
R7heau7nEVR183EnurGwQa1sHgFUe0cZqOMoHo/HA8uzLnfdCnuLLv+32BVN
XFl5iIDRNFvsGz6dS5mf5VWBMSNwThZcOVFWi3kFo9qtkUVuz7Z4z9hrWe1i
AuRJ4fV64WwmzBlvoWITPtOZrCCuJDtoDp999BNwwDcuWOC5ZHyc1/9CokRG
kDu5XUiBp12iNmlXR3NQnyzW7iWlIRcWqrZjX/rxJ2Gv5/4u3nSuDPXP6ppD
nJphGNHgAHBKRZFWhzLojRHMbGmoO0BWeFD8xtHmcG2IFrheqmnXoBuJ1DJW
4Ytq7ygDdRzFY+5NgOenbqsh7C2rI49hnI7XTeZtJWA0G3vwBuzx+AbBTfvK
IfBClNvaXkmodmtkkduzbe5LRNOR8flJARKgr2Pf+AJxDbmz+QJ2/FgRZAXo
n/wZn6zNSb28RHO4b5Jn4UdjR+88RR0yOUcrhSwLMFl98TNRPuTmnruoT5aa
z4S/gRzGZyewT0Lfg7DXc3wXQw+BjaepO74umrAj/Q4SZYkCWWo5h/fwO66R
FQ7rQ+kKpait7DeOsFA19+DWdfRGCx7rM6Uut4eopirhUe0dZaCOo3hgrgBt
5n9wucXjss2kfBVEahAoEPBS0GjezobnpMKjEc0WO5KzgcS+sdzW9kqiqKgo
GpCamoo+MhqNp06diiaERkM3zchritye7dWRbJGnGD4xjBEN3doHUqMzC0UB
EuZyfg5yv0hUIRSB5vD5sveRGlaNwFhdhl1XcFokxmwhpCYPChvGkAKZlaL6
k7FVsfHYfYeUhlxY7rzJy0WK47t4dmEVdc7+67VitQwHYytBhwQaptNCRRQ4
mC4gK9y1Oos3/FO/TlZ4UPzGMbcOJwNJKOzlKw1WXhjRGMmpqcIJ1d5RBuo4
isRtN4PDVh7RYTBSY6GczDqW72h6vN4tFytwXOq0qLjUc8nN17Laazs0RjOB
1ZHc1vYqKqSQ27O9NlmG56LKzQIkHLhRi6aRucVV4hpy56O7DUiTiVkhFrQ2
/XuoN1yrUvs8ozl8sXYvXv+PCi+CuRGUobHxzxUvHuaNgBS4ly/KAWOxdh8I
Pc4mpSEXVoez8N5O/cGw13N8F8PzuzOJAis38WJnTBVqcUFceuegzGb/DPsJ
LBD2t6GarDgofuN4MRUHawtweoc+82qIq/So9o4yUMdRJLBIvSbhMx7OFeVg
akRNwmfdNgK5jPiOJrOuQ7Po5gvlRPIAk0Jua3sVFVLI7dm2aZ+huUhf/DcB
EmCqTMEx8kQQH845nfgF1Bsep5ATWzGgOdz4/CRwTE0UJs3hdKPeeO8UGa8e
vrQP6ZAOMemi6r7Nl2zAZ9DT/Lw0RbKmqUJNz5e+F/Z6ju9iGF9zK7tTtJrh
OXEfu0YMTRE+8vN6PbCKvcdOPs0UdIcgWBw2FHAcGas5CuSf1Bl4b9DBPZzL
aa1ENVUJj2rvKAN1HEUyX/4BiLg5x+teuDMprPyEH3xHM618AM2iN+hkFxSM
3Nb2KiqkkNuzbV/oxVFjeb8RIOH90/hQz+HiundHA5EZorxuB9yHpKEhO2gO
N3Vcw46p7bHCpBnN1OMZwwJzAZ28/0yMqLmc/4tduBf7SWnIBftCD2p6Lu/X
Ya/n+C72KUxTPihazfDA/NLPerVkhfv68X6DrPB1Fiq3YD+EMeF+CByB46hd
WEFdt+WikIxt0C38VRVXOZ0UvAmo9o4yUMdRDK+qwz/4HAiG4hcfutx1Cx9z
lPxdvD58RxNuHhY1Ck9ZSQO5re1VXn6SOttgMAwODnZ3d09PT9tstkhr9Foi
t2fbuTyBJqLZrB/xvZ0xVCN+qIe4V4Ar8tR28A6vdlsX8cL74TdpaMgOmsNX
+pOQJsZnJ4RJ0+jNqDeO3K4npyYP5haJhXDOPPwWduG26AgpyAnXKihLmvad
sNdzfBenlPSjzpGm8HEaKLXMWM1khfsUwSmgkjdpqeUC3s8hnfcpEDiOT7tm
RJ6Wen0js6Yplz1S8UO1d5SBrMZxcNJwO6frwI3avddqmJfs9ax2pzuSW/dh
gU7Cs49+wvd2uFzUJLzNJRExO7xGc3XNgeZPGWYJkNva/o3F5XLV1dXFxcWd
OHFi69atfhmD9+/ff+HChcTERFnNJDJHbs+2SGNteRXnZNt2qZKGhtxJF5e9
1mkaFzOliwd9jyyj+OWyWLNHmLSBCYPE4ZOBrFrxiybqfLlgOa98UBPeRn3i
9TgJKhm+dbcdHsR7w52UcZwPoXtAU58U1XXLmiZQi0nFfWSFwyhgwQ9tmCaG
MnET9GshwXFkugt1XW6twGJ/VzLakJCadjVvoaSoqxRlIJNxtDlct0BiW/Tz
wdmyTnGVyqkCK/2Z2mIESJjL/SVwFc4UqQ+v0Sx+hj2U3o30KUkgclvbv4G4
3e6GhobDhw9zrHpz/vz5iYmJSGv9GiC3Z9vrAmvyB+/wvV1nkDQnKjv59Th7
7eNq3gnS7fpOcGD0exoasoPmcKumhldAZVBaBuZQbzAmEjk1efCqqC4oeSk4
h63basC7KylfI6skF2AJgLCbzBzfxSfvP6MXbRqUVvBIMDYUWeGm1kvAuf0q
WeHr+Bzp5v+ORhMQOI4wa3r36LwwgTC9dnx+NyE1VTghE3tHRSRyGMc1m/Pj
e43/CDBa/2VSRRfPRjRBZSg8LitMQeAwDAgQAl2FxWcV5jWat7JxnMtBnpXI
JEBua/s3jfHx8aNHjwqo2RofH7+0RCDJmIKR4bOtSfgsPsly80us9EKL07uJ
qQFNhIqWSTHHSdbpWvHWohjQHE7Egq5ux3lgBJTtIMX2yzht19KKwOACh3EY
H4U//m+yGnKBaZR7TBDHdzEsjCKsbBNfxsG39didp2SFL1bvwPvwdBI+uyzA
YZv+9gUaR5fb896pEtR1ZovA7HODkwY5r7uUjRzsHRXxRHwcPR4vrFkf9Gff
tZpVq9h6oMRZmyxH86c284fChMB38XTiF7wuUak4eY3mqQfPUQ/n14+KaZcG
MlzbvzksLy/v379fgNG6zuHDh02mSBbxlDkyfLZnUr/B/SzJD1jL41xyMyUN
OQITtN7O4Z1u1DKWDxwdd9PQkB00hztNL4DH8o+FSSt4ig93ssTVThXDkdv1
SA2N0Jg+m7YRp4Mo+itZDbnANIoUsGrD7M9weRd7vV5oCjmcUkRFmVZsqMUt
F4QkF2JBl/9b1EU2HZV8uUyn+aYsXqbRCgKNI9yd2xMrvJ6y3eF6NxoPuvhK
9yrcibi9o0KEiI/j4+phaKIeu/N0cNIwMGmAVcaYn6uZhB1axGOoP4Qmz6Wm
04LlaDN+gN+G4nL7cx9Nu9MN35hGs+wS7Mhwbf+G4Ha7L126FNQg3bZt27Fj
x2JiYu7evcv89+jRo1u2bAl65YkTJ5xOSQPQXiNk+GzPZv0IzUJO8xSve1tl
4IyK6BrRI2UE5E5ZGUhB/WB89jEFBcOA5nAft9jUrwuTJjLalxRnk5qQGsKK
EzFYxgvwlkL1DrIacmGxZhdSIGwmWy7vYrMFB4ZvviA88pcXHl9j2U7UWIau
1PQSZ83RLBHrBxrHqtYp1Gk3HosqvgBrTAv2N1YRQMTtHRUiRHYcJ2ZNMPIl
OuGZ/dPC6F6vF5Z4Zn4aewjnbBcDox7MbWibbRIsyth4nNRKifto9o0voI49
cKNWTKOUkOHa/g0hOzvbzwhljNOUlBS9PkikOfNFmJ2dvX//flRUlN9dhYWF
0iv/WiDDZ3su79fYB3KRn3ttXec0mkzu5dNdRobFp+pKAu+qK8udN0SmLBAJ
msO9HicOOk54O2wioKDE53ej3mCGiaimPGDW+UiN5n6B2YfMfQn4Rfn8JFkN
ubDUdAopYO65x34xl3fxlC4y2Z73xtagdufIBWF57Gb8xCa+I+yJ5cJCRRTe
QBh/QqmVddA43geJykUWX0gqAvmd6mTn6vbyk+zZaxMllhfFfPcwZY5qtyqD
CI4jM63BsNadMVV+IQMutwdmLdh+udJqd0VKWz9gxcPp5K94PcIVgxFV2owf
iNGK+2jCY+4Ixj2xIMO1/ZuA1Wr1O0K9efOm0Rg+Ycjc3FxMTAy8cevWrRaL
FBFbrx0yfLahD6Rtll/i2dLnL9Bk8rBMSJg/QWbmcY3FQ7d4u68sNZ3Btknv
fRoasgPn8OnkL2N/SMeKAGkweWn7kKSFYyBwoV7RMilMiKn1IuqN5a5bRBXk
xHJ3HPawaglTq53Lu7hrZB51y4XUFkJqhud0Ig4REnz8HYhjsU+aAOSlZvwl
Xe68Sa+hl2Acj915SqrT6rvwRl9MOhVvasG41xYWqrbj/YdXYf7vuswKyXus
2q3KIILjCAORmJ/esYXAa3QGy0ZQ0V5AfkhKMLMl+l4zX3Mxorwu+3TiF7gn
fGCB+2jCNxfx4uNEkOHa/k2gqakJ2p6nT592OLgG4NhsthMnTsDbGxsbqWr7
miLDZxseYaxN8nNZzKkdwccHQstDkMJoxuF7O2Kq+N5uqD+IE8sMP6KhITtw
Dtdm/jv2ulwRcloanYA3foclSVcbFPiE5Ah9QnyHJoushlxYHcnGjsq1+9gv
5vIuru3AWbOkTC17O6cLtcvYUKTErk2UYGOn/ENSYgNZGUhFDTFPBb2GXn46
jn5JmUSmW4F7axEvHAZxmsa06d+DRuu/4hRSvmqf74y0dgRQ7VZlEKlxZOYB
6KzCEi+QC155H5wtW5FHGLuu8E8E36EL5bieznJ3nGA5HEfT6XK/D3YDDMtW
wS3SQ4Zr+zeB9PR0ZHXu3LmTy0krZHFxcdeuXUhCfHw8JT1fa2T4bBvq9uMJ
jWci0IelA2gyKW2KcCEku8OFlNl4ppTv7WLsdyLAOXwu91eCnbfXOXizDvWG
dkHIiS0RRCZ5Xme+7H08NBreOxLisU7XYbus5B/sF3N5F+fWjUZkTz6ragi1
m0fOT9XcfQc4ckeTEhuIdeYpakj/5H/pNfTy03GcnFtGPSYmKdM6Ho+XWcrK
bQHmti5q078faLQi09W5/NoXuVPtVmUQqXGsByFR750qWTCthbqSWYfsAFn0
5XDk+iqOAxRAF59/YGUoncg8zHE0h6dwCNje2BrBzVFFhmt7yWj9BGGfiiQu
Lg5ZnTdu3BAg4f79+0jChQsXiGuoAGT4bBufnUBT0Ep/Eq97YRBlfeSCKBEw
XSffaqH6or9gf+m5CORGhnO4vvj/IWXCJrANyrZL+NW5vCoqWb0YmvpmuexR
s6PL+w3qDfs870zR4nEs9iMF5nJ+wX4xl3fxgye9qFsqWyfJaMkBmGKIYJSQ
seEo9rHvSyQlNhCneQrbU2nfodfQy0/HEYbwx2YSWDNDh7fWgTnxAkXi9Xr1
JX+Hhupc3q91hX/w+U3uL71uWRwbCUa1W5VBRMaR+Y4cuIH3gZOL+9mvL2ua
QBdvPl9uc0Q4ynVtopT7+4sLsCSZJuEzwkKZXnIeTVj5+k5uBBYAXJDh2p4s
/zI/7W2BPywf+XxKgcuXLyOr88kTISkvamtrkYRjx44R11AByPDZNrXFgJAx
fvsVVzNxEGXbYMSCKBFbL1YINtaY+RwfcRoGKWnIApzDYaCZ5UUxX1HMexam
PeRrwhMEVko6myQwh6E2Ax8GCfOaFol7bR6bSw+/yX4xl3dxTHpkvjidwzjn
9sWHxOJq50v+Ic2BuNfjYpZJqC2Pi+J55fo4ppT0kz2hTgOJvrOqIlagCrE6
/AiaqMaGY17vq+nC1B4Lf7/ceT3SmopCtVuVQUTGEU6b750qCesmYXe64VJE
yp3JoDBfavRFDpufgSOzILX72pTAkAeOoxmT3oo6s6ZdphH3Mlzbk4XdOOX0
Q4Hbt28jqzM3N1eAhK6uLiQhOpqit9jriwyfbXNPPJ7Tms/yuvcMqHIyMMGv
9isNDtyoRfrwTZcKPeVcqwIz34oBzuHwAGtlMI2vKIvNifph07kyomryQ0Mi
ca7mAaja6QzpoEWPV+YSXsO/5fWwVZDh8i6G9VDGZpbIaRoGmMdYQO6yUMBa
Wg4j3Th337Yo+uCtj+MZcDzaMRwkrz5foAfC+ZQI17z2OFZnHn4Tu/wV/23d
aF1nsWY3+mg68fMuS+RPhwWj2q3KICLjyHxP0Xf2bh6ndAQwscPhW9JljA/K
bNZ/YvetmadEZC41ncabXUKr4XCsdb75Qrkcgp7YkeHanjAiLFZ6rsIZGRnI
6rx48aIACcXFxSI9jRWPDJ/t1aEMNP8Ynh7hdS/MtDk5t0xJQ+7ANPXjMyZe
904nfREbRw5iJUK4A+dw3wy6t/mKml9ak0k8yNIKTpa1/bKQXVmPYwUsnr9A
XEOOwOW9e42t8iaXdzEMgJIyyHF1zYHa/fAsmQ0NxoqX7AyUYb70XbzPP1lB
r6H1cYRLpoUlAnsmeqMFCYw6X06vZhAXljuvwy+Xa8UnUafHboY1H/m+HWSF
arcqA+nHUWdYRV9Y5meK2zrHtGqH+dwimBrRtTKNN10fvONx2YiItWpqkNjZ
x/8lTAiX0YS57JjZOLITJgsyXNsTRpZ2a09PD7I6t2zZMjHBLxWD2+0+cuQI
klBUVERDydcdGT7blhdFaP5ZrN7B696913CGPWY9RklD7lwAhb+DpqkPhW/J
1M/Q05AFOIebe+4KPgRneKE1oX746K6Q8FhSuNwepMm70SUCXjowpFGb+R8U
dOTEXM7P8THfIlt8U9h3scfj3QAWQhJ7cW88gxMzWmxO8QJdKzPAifpb4gWy
Y3z2MWoubC1dMTDjaDRbod8CqSUTtIWZVTERmQJ4ddia8lW8P9ZxLfCa1eEs
ODH6GbavEardqgykH8eMCuzYf+oBj0KBsHZ5BKvbw6+wvvhvpMR6nBZNwmex
i5pFiC8Kl9Gsace59+VWOwwiw7U9YcR4CFPzE2YMz/379yPD88CBAyYTjxOr
zMxMWAfHYIi816gMkeGz7ZMrtfRdXvduuYCDOOSQ7x2+KZr7efj6uq0GvPZO
/QY9DVmAczh81xjqD/EV1TO2gPpByvKgQdl0Dq/SLVbehpJd34G6Qpf/Oxoa
cgGGcFpn2Py+wr6L4Rm09MVQYIKRab1ZvEDbbBMeoII/iBfIjrk3AfunNR6n
1xAzjt2juMzuyYRnpCTD7bUI1iI09+GenEn5WlAnE6/HPfv4v/AeWtNp6fUk
gmq3KgOJx9Ht8UDfGF7f1t5x/Bb+8GyZPULZmRZr9wLfLZLVz2FtHctYngAJ
XEbzbh5O/lnYMCagFWmQ4dqeMLK0W19+8hRB2zM6Onp8fDzsXYzBm5WVBW9k
/klJw9cdGT7bPnYBz2WnmPy9NEgoxGlaq/nE7ztN49jp5dGP6WnIApzD1ybL
kT4LFVF8RTGvV9QPt7IjXH5x/3UcdCzgdGltsgLvq9CsDcrOYu0+pAZ7uaiw
7+KJWXwafvQOmWgj7sBYLcYuEy8QJvZZrNkjXiA7a1OVgvfZeMGM45PGcdRX
iU+IpV9+XD2MxD4sHSAllhderxdGvQU9bF0HFi+eTv6yxxl5vxoBqHarMpB4
HLtGcEamqPPlDidbZgM/PF7vrivV6PaG7hl6erIAE3fY9SR7z9R+BQQRHBYg
gctowvXDUOTcrcMiw7U9YeRqt74MODZluH79+sTEBGOcBl5sNBrLysqOHz8O
rz9//rzTScD9TJHI8Nl2LI2COIX/5n4jrJf6Af96qTTIrMTlKZ80hN9yQdjn
OyN+qAfncNtcM/btefJnvqJg1dSwSftpc/L+M6TMiIb3e8c3/lrIy5EIS81n
8SKftdJ62HdxB8hOeTlNasene/k9wvZ2QgFXL6a2GPEC2XEYh/F8lfUjeg0x
4xiX04X6imBS0PYhnTDPQ4LYtI3YATjxHbct5BfT63bMpH0Hb9oMZUqpJylU
u1UZSDyO1x9hD64H/Heu4A5VRJKwucwavOmU+Hmy1aygp42wEJ6wo2m22FEH
vneqhNe+gcTIcG1PmMjZrWlpadtZ2bZt26ZgREVFHT58+NKlSxcvXoyNjT19
+jTzz6BX3rp1Kz4+Xq8nkHpRecjw2YaluLTp3+V+o9GM3R13xFAsfsEdWOcr
q5JHjQkxztKkgHM4XJzPZf+Mr6hckMwwu4ZuftewXMnANV+YFTvf25c7b2Kz
qPUSDQ25YO65x9FbMuy7uBoE7NwrkDruCSa6ZJZV4gUu1uzBRs0wdU8bj3MN
Rlyy53YWAzOO/4zDeecIZlYxLOOw2Q/PlnkikWlksXonPiWv28d+san9KtjW
+600GpJFtVuVgZTjuGZzvn8aZwMQkPh9bhHndNoQHYFC6tAZRl/yd7LCvS47
TPUvIPid1x7vx/cahWoqBTJc2xMmcnYrY1EGNTaJ09MTsTh0OSPDZ9vjWMU7
cklf5H6jdgHneTt0k1hNDTFUt00hlRIKeeyOWsYLgK/jLnoasgDncJdFh0PP
0r7DVxQsOlnWzC/BGnEY0wwpU9vB+4DP+Pwk6gpzXwINDblgGcvj+ISEfRdn
18BdBYqVXILCDAFqnWNNB3Z0hX9APWObleL0cCbt22CxRKueb0trG8wIKiA0
mwVY3pFvxS7xuO0muOC0zYUJgWdWpJr7b6HrHYbI+DaLQbVbZYXHaVkdylys
2T1f+q6hbr9lLN/r5mTTSTmO9Z3T6Et64EatMCHHQMmzqtYpogqGh+lb7CbU
Sb7Gh77or0i+ZZR3iGvY0cyqwh50qaUR9hxjR4Zre8Koduubigyfba/XC9ck
3M8vxqaX0JRy4r4stsKa++eQStcfdXC/cWUgFfUA1WQvLMA53OOy4UOlB+/w
FXUb+Dc29kQ4BWgWcN4ueMo7rwI8GGKWNzQ05IJV24A3rov+ynJl2HfxfWDI
V7VJvZLpBTm7ziY1iRcInUjpWZEQXeEfsc2lpTXzlNfiQOBdV6rJCr8IUjM9
75O6WvTK4EPsa80tnH++7H3gb3CGtobEUe1W+WB5UQzLin3qaPrvXL7LUo4j
zJ+WWyvQbQnGyBOZb3mhzfgBnip15GNSTO2xIIqHd52ssKN5JqkJ9V6T5PMk
L2S4tifLv2rZqHbrm0dgR0Vao1dMp/wbmnw8dq5lWGHS2ouRTlq7Th/I4Hcu
mUc4iY8zattlehqy4DeHwwMRvjUxLz7EL1wiuXfEUPzsBVLmYRnvkxp98d9Q
PzDGIw0NueATVskaBh72XXw5rRV1SMeQ1PEU0E1i//VakdJeuYphr923vR4p
cmYu1oEcWUMZlFpJK8AHJcTDkOFmTkbFIFnhYdE/+V98CsOtPPTaRAn0APF6
I5+Fjxeq3SoToKUT8PPWykAq++2SjePKmmNDdDH6ks4KdYqAtdQZgVKWXYAV
yjSJ73A80eYFDJMXUMWVfTQ9Hu8HZ8tQ7y2apCt0zhEZLubpEdZutZub4m7F
3Lp5ibjdmpeXd1QS+JZ/fUOQ57MNN+WYuY7jXc39s2hKufmYx+EmPWCm1mN8
6pYuNZ/Bzqg0i0Ky4DeHa9O/iwfFMsdL1PH4RtQP4zM8qlnRoKF7BikTl9PF
9/a57J8BB0WpV/gIn0pJKV9juTLsygp6jo1rpR4dqx2nU3v/dKnImqRO0wt4
YkJKSXaWO67hs7+WC5RaufYQ57HkFSzPBegZInHCFpjQgPuE73XZp5O/AlyL
I5BkRgyq3SoHzN13QhutKApjN4sEycaxDjgJH40TlfX96B0cJl/fKYVHyjow
EzjByq2QV9kGEj6DWnFbF3ndzj6aGp0Z9dv2y1IXjOOLPNf2JAltsU6OllWV
pcbdjjl+/HhGWlzgBf+yeVVeT+T5bM/l/EKAaQDTy/AKJqWH3mhBKu2NreF+
o6H+ED7BoZ9bJih+c/hczs/xoBj5LZv3XatB/cD0CVE1eQOLYAo4l4ceZe61
iJ0de70eTcLbSBOWxIxhV1bbQUFAozkCe8hR53FFXbNF1Ca8daaeo/s0QSyj
ONZ4oWobpVY+uo2H6TnpKqs6A56ptlyoICucHXNfIuo9XoXP4DF3pIIpBKPa
rRHHqqnxMVET3zG1xTC/ND47AadW5mcldM5qycYResXk14+KEZVXN4pExaRT
rAbih6H+IHarCF3oSiS6gt+jVtYmSnjdyz6aNWCFeTVTun4ThjzX9iQJbbfe
vXPl+Kc8q89U7VaFIc9nG7qNhc3RgSgCgRvSu7oFZdXqQCoxi3PuNy5UbsZz
72QZPQ1Z8JvD9UV/EXy6AQ0Tpk+IqsmbF1qBh+Av161Fn+DrSBbY8kkHFPoE
PKzv04ZPe+MfEap6fOR2PVJgYpZrXEBQVgbTUJ8wyyRSGrIDS07P5f2aUitb
L+BUotN6M1nhXq930znsAmdYlm77AqZSMffySHQG7Q5t+ndFntRLjGq3Rha3
1QB3IKdT/s2+gJPCfbL9hed5TcJnnKvBgxmlGUer3Qlzss3Mr4iRxsweSNTG
M6WSFXPRZv5QAgeJpZZzeDvr+Ule97KPJszoWNjAOzOGxJBa2+fWjUr8w1Wz
0Hbr4mzt3FRVavJNxm6dmagg7iesElnkabfOl3+ArTYN14o2sDZZfr0sZhXG
KMCxJCeLuReYgGs526zUyRPW8ZvDBZvSbo9HWCdQYsGEA3x2X+WX34a7d64E
zOX+EiljXwjpYMD+Ll5awdWjtl2KjO8TPEoQUJkIstRyAW/pd14npSE7busi
XgAnf4VGE8zCFXURs4Klsb1w6sFz1ETHsERhzh77MvTr45VHy+u2Tyd/GX8F
5nn7/EcQ1W6NLIu1+LCeeQIDzShT22V45LpQHnylJM04Pu/Vou/mgRsEaiXs
BR5Q0mSccFn0uD8ffM7rolWCh1kx4l3E3F/xupd9NA/fwvurAxP8PJClh9Ta
Hv3Jkv1w1Sxc2qWbNy5FR59wr7WodqvCkKfdCiswWsa4JjNPLsbFVipaJmkq
yANhR41zOf8XeEpHpsqD3xxueHpYmOsyLNW95aKkLohBsTtwQOXG06W87nUs
jaJOEJD2gSzzpe8iZayakF7o7O9iGIJ99I6osCnBJD7pJfXNXazegZ/S0VxC
CoZnOumLqF23jVhlVcTYDE6WziyfiMt/6VusisemtzhgOae5nF/wvR0m9za1
XqShISVUuzWC2HRt0CZd7rwZ9LK5vN8A2/btoNEx0ozjzccd6Lv5qIpAqTK4
WGL+X7zAsFheFKHO1BX+iV5Dr7bC8OC+5XHwOJtmGU2r3Ykck5j/sdqlyPgn
hjfcbrUuP//4+PGE+9do5BOWBr1e7/G8ZvkGpUGedqux8TgOLQmX0A9xJ1dG
xVYQe2OFhHZqM74PziAi87f4zeHQ/cbcc5e7nFlQ61xw1TmybDyDXS5tDh4v
INtsE+oE/ZM/09OQC7AW3urwo1CXsa+sOkEh9UsPI5OFu+DpGNJBpIe/Lv9/
sKMChToLoYAh+dDhkBQwK8sNOknnYHVIyaK34D6DqS2G7+2W8SdgH+mnNDSk
hGq3RhBdAS7xPJf7y1BZx92O1emUr6Ir50vfDbxGgnF0uT2bzuHdbyKJDWGS
h73XeGTeEMyrqGGptpjgbMyyoxsIy2j2v1hEPXbkNpWdQ7K84XbrSH/R8ePH
K8tSXiO7lbFSLRaLVqstLS09ceKEWgcnFPK0W02tl/BeaHccx7ti0tvQky+Z
n1tYYLLWiVmub5zppC+hHuC1YUgQvzmcGQhh750RjRH1wMn7z0irKYTdV6uR
SgtLa9xvhJvG9DLwcMTHJzZ09RD2lRXMZnYvPzKTJMzwfPNxpxhRMGbNtcov
67UYoBe9ZbyQuPy08kHURYJLN7IzNbeMmtgTS7g+bFC8HifMCWxf4P34MXOj
JuGzEd/iE4Bqt0YK6Ef66qnTsw2EX+6mwK0wCcYRVtPbEVNFJI7b4XRvPI03
b2cXBFbV4c5c7q+ALUl3ejE++xisVS5xv5FlNOHm6v2C18CaeJPjW5mfitIU
xm5lrNcI2q16vT4tLe3s2bNHjhw5cODA3gD27Nmze/fuXbt27dixY8uWLWr9
Vo7I026FJtJSy3mOd51OxPFZQ5MGqhpy51xyM9KKeQFxucXrcUH3pEjlG/Gb
w1eG0pFWhoZ/cpcDT/Ri0mWRw+0joZVfVvqTUSdEPIWpuTcBKxM6AQX7yoox
glBXPK4m4IEmgIEJA9IhOkH4zsarIgj4i/NZKWt6wsJVodwOxQArILcMULHH
XW4PzP1isVLPOWaba0adNpP2bWETHUwFwMxRxJWkhGq3Rgpd/m/x3mPl5rDX
64v/H/axCajeIsE4Qgd+goUSYFaBkucvSIkNyqv9JZDnymMXlXwvLHB7Wf/k
f7nfyDKaVzLwsUhth4aEmnSR59qeJKx26734q4zdajU9i4jdajQa4+LioqKi
Ak1RXqh2a1Dk+WyvDD7EC/KGoxzvOhqHq5JN6Qjn2xTM9Uc4MqW5n9OCUybJ
f/zm8LWJEmFHjU+78GnanVxZ5E6BVkDXCI+sFKb2K3gjl1omf45YxguQMovV
O0Jdxr6yegBiSytbJ8lryQFYLopvpiyIT/Rx1o8IahiWlYFUvKtDIY/xrivY
Q0C7QMsBAxZ2HJigvvUHHQYEdxoswcnFDJEJqt0aEeBWieZVQbfwrgt2fbvv
kavPcleCcdx/HRdu7iTnSFbRMonEnkumW/7YOvMUO2Zn/4xqWy/9SkInvsNS
JM4PltHcdgmXIdOQTudOA3mu7Qnyr1o2wQxSp6X55MkTN65fDJO7iQ42m+3j
jz8WabGqdisL8ny2fRfkOznetSdWoPMnVRIKsV1Q3c5pm865PBGp5TfEbw63
aZ+xbDuzUPL8BeqBh2WRyTHlBwyFZsxq7jcaG47iwx3OkdeU8BmRor+Euox9
ZQW969sGReXyFYzD5UY6bIgu9ngEOhhYNdWoQ+ZL/kFWyTBNg4UZ8cBnCZIJ
r3M3rxs1VNo0QakVBEyIbXnBOazJF4dhAAmZTv5yZEtTcUe1WyPCfPmHAnY5
5ks24LsqfJZMtMcRFlZ+/3SpnVzNmvmlNTirUE00ZGqPFXASIQZtxg9Qi/Z5
rrEnoUYT1iD48GyZ4DeUlMhzbU+QoHbr2GBxW1N2VXnq8ePHb928zPx/T0e+
xHZrYWEhEaN1x44dY2OyKIwiN+T5bMOgkvnS99DvvV5v68iDe2U/v1Py49re
Sy63Dd61WU5FQhEZFTgw7UnDOJdb7PNd6M/X5f+Wtoah8JvDHYv9eMs095fc
5Tyqkl19orSyAaRS8TMeLlI+xYB41jQnDsfkxuwrq+Px2GV6bGaJgpqcgLvZ
RrPA4qErAyn4/O7pEbIasuM0T6GmtenfJSt8fAbnfKaUTHidsqYJ1BBjw9Jr
6KVv8SDN/bfcdoHZZpiXAixkTK8uJFlUu1V64IawJlxkK8T3lPYt5suOPqI9
jmXN+Ct5MZVw3ryDN+uQ8I4hiilB9CV/Rx0oTZr3xZrdqEVz732Od4Uazeb+
OdRRZ5MiU5eQL/Jc25MkmCl6/drF477E370aeNm/bF4KOJ3O3bt3h7JD/f7J
4kg8MjLidktUWPm1Q57PNkxTryv8A/p9Xd/lq/lfRT/5TbtQSBTzPyhLOfMj
nw2xwgYczp9ZGSSRfiDw7Ga+ZANlBUPiN4e7VrR4ZZ7xfe5yYJWTqrap8DfQ
R8CgrKMr/CNYIUcm+y7CbTOCk6aQZUPZV1Y7Y6pQVyyaBBqM4vExn6cFms8+
QaahE1XRwOtxahLeRq17XLbw93Cmvgtn+r3+iEoy4XVgoDHtokgwFbAu/3di
RBnqDiBRvNKwRBDVbpWepaZT+JEr+D2ve2FU7FLTGfR72uMIQ1rKSLtAPAT7
t0nFfWSFI7weN8wzCa1+esA9zIXKrRzvCjWa6SAtHq8FQwSR59qeJOw+wKw/
9OzW0dFRPwv07t2709PTdrvd4/Hs3LkT/V6n0zFmi8VimZycLCoq2rdvH7yL
knrKQJ7PtsM4jA+SPo2G0C31QaN1/Wdw+l/eZdCV7sOzZZHT3Z/qtimkGMek
CnBFxxK3SBu/OdzjWMVWUtIXucu54RPhO0taTSHUdghMojub9SP8/jVxOj2n
BzPpaRI+g/QJVcmdZWXl8Xo3ROPdHnoOqGGJzWwHD4nAvEPM+gT7nY4XkNUw
LNrMH6LWHUsk659Cn43sGirJhNexWCVySGYwNPyTlLEJJ8y53F+R0pAqqt0q
MR6XbTrl38D8wC/pNyw0PJPyNTTZUh1Hv6y/c4uEs/7Cajj0StRBT62Zh9+i
1Apbo2nf5nhXqNGEOT9b6aTFI4481/YkEWG30vMTLi4uhuZnRkYG/PTGjRvo
o7IyHztldXX15s2b6FPGwmV+Q0NDBSDPZ9u1Oguc7r63/su85zsC7dakqt+t
H7kalq1oYtl1pSqi6vvAWGpIsRvczkp801Ido61hKALncB8riXOug3PJTagH
+l8sklZTCB1DMMUxj+kLlu0Q7NlIEObbgfQJVQSEZWVlWrWjfthysYKamuGB
OTN5eW5D5vJ+DZwARdXTEcB8yT+wD/kUySkoJh1n/nzeR3fnB5aI0tDMbge3
gKzaBjGimG8izFbqXuOUtj2yqHarxFhGgeH58Jvc31/reN32mdRvBDq7Uh1H
2lVW7Q4XTCHOLKKIN/HSN2fdQuUWGk0E8skh7xfBy5FTFougo+nxeD8ABd8p
9RJx5Lm2J4ks7dbk5GToCbyy4pNEsaKiAn0aGxvrd6/L5Tp79iy6IDs7m4aG
CkCez/YnWdPR0d6XmN+sWheu5n8NWKz4/2cWX001M/Mr0oSA8aUXFF87n8Ip
9mq567Yc3N4C53BYHJP74hAmKZ2ao5sAnyOj00tIpRP3GznexSxd0J/PmPCR
qk8E8bHU5oPnamZZWU2Ckp2RraXO2KpIk9TSfmFCZlK+Cp5PHmmiiWBsOIZa
N/clEJS871qNNLbkS99yDw3dPFKW8cK1ChJ+PvicxyV2Kagr+D0+ShvNI6Ik
VVS7VWL0xX/Djr4tFwRIWGo5j92MC/+4/kuq4wh38yj58Z5JwrvK9Z3TNJpY
rN2LJ8aeezSaCAqskMXR/SboaGr0ZtRFOy5XklaTFvJc25NElnZrXFwcMjzj
4+P9PoVexPv27Qu8fXFxcfPmzesXbN++3Wp9PTZJJEaez7bX68Grmvv/h/ln
53gaMlQf1v6luO0w+mdV96tgkxGNEc0tJ0WUgCTOCy3OqfLRXU7HCkst58A8
f5e2hqEInMNnH/8Ue8ly9oSEJTwiGEEJ0RlWkUr7OO9jw8X2TNp3qGrIkfmy
jWHP+FhWVl0jeD+feNIPXjT1YbeEa1lCloJws+tV7QPJdxXMPfHYTeLZx6TE
OlxuFLnP/A/zT1KSg5Jdg+v50sv+vTqai/qKSPplmLDUULdfvEDaqHarlLhW
ZuCKQliIB8y9hoRQHUdYAadrhErepPx6nOrhdg6VKnWzWf8J3GCke+xNbZfB
hHyCyy1BRxNGFV3JoFj0kyzyXNuTRJZ265UrV5Blmpfnv4NqNpuhFzHzz0AJ
t2/fRhd0dcmicKTckO2zDR0yPfblx41RyFBtH0ud0Degf8aX/fSlr0fN5TQZ
RTTD2pQcXX0MT49gf6ShTNoahiJwDvfJSqTj+q3fCHxsbA6Kyfa5A+P4Np3j
Gg3tWOxDfz6vjMr0MDw9DB6VjKDXsKys4BuZdv5YduAJ+PF4IV6jDsMg6gqW
7Mr0WJssQwrMl71PSqxGh3f7ue+xCKZtUIeaO5dMK3OmTyYlEnWQbXMtSKA2
nUfWuEih2q1Sstx5HR+VFvwh/A0hgIe2665Q9MYRbq6SrYADgRMvjcNEWIxe
k/DZUEkYaADLos3l/ZrLLUFHE5Y4l0lBBC7Idm1PDNnbrbW1tYEX7Nq1C10w
ODgYeAHzEKIL0tLSaCj5uiPbZ1ub8X0051hNY9cKvokM1WXLjNvjvFn0ffSb
heXR571aNLfcypY6tI2F1TUHUmzz+XIut8D0MhEsthI4h8Pidxwj+GBpzvdO
RbhwDMLr9b4bjeN6nNzOsKzTddgwiVyeZwizdkIqMWuzoNewrKzy6kZRJzyq
GqamZnhgfPq2S0KWT2uTFXh0QPEsyfAxnB/9hJRYeBIdk059Rw7us225QCvk
GU7vRPJye90OzYPP41fGjKiAWQlQ7VYpYb6PYff3uACDZLXp3/d6PfTGsaJl
UgJnGLfH8+HZMtTQ7ALhVDBrU5V4x0Bc2nC+uG1LwGT+DJdghKCjeQwEOvWO
vwax8+vIdm1PDFnarXfv3g2VeWmdM2fOoAsqKoK8Yaenp1liYFVeyvjZnsv5
OZpzxsYykYmaWPmb9QsKmnejX3aMP6wCaXsTn3BK2ysNHo8XKbbhZDEX90W4
qWvTRsznOXAON9Ttx2//EU4x40azTZ6xIYwySDGOBUNXR3PQn79Yu5e2hlxY
6U/CrlCNx4New7KySizqQ53ALJNoackB5msCMxtz3EmAmPsegK74iIaS7MCE
25oHn2PWtETE5tZix9308iDbs2RhJqhN5/A6lkYSEuhvOZ34eb4ZckIx8/Bb
cvt6sqDarZJhX+gBX8x3PHbhEeIe5xos6WKbbaI3jjHpONK89LnAVHVcuJzW
Su8tYGq9iLprqekUWeFhgfsVXPbHAkfT4XTDLW6L1UlHU/LIdm1Pin/VspGZ
3ZqamoqszqysrMAL7t+/jy5ITEwMvMBgMKALTp2S+ivzWiDbZ1tX+Cc04dS3
HsXRrF2n1y+AEa+FLfueNIyjuUVuBbY2nSvnNe/N5f4K/e2ORYE5asQTOIcv
NZ1Gipl7OWWegTkNIpv5x49/xoFsUdxy3cAARljCL4JYXhQjlUJVqWNZWV3N
xEujlkin94eZbPVGC9/bYXFGc/cdGhqGBSYuC5XemS83H3eibqnt0BCRyc6p
B7joQ+cw+ai61aFM4LfwD1Ji50vfw2dhGT8gJZYSqt0qGbCss/h8tot1+5A0
w9MjlMbR5fY5Bp2ZXwl/j1BKnuOceMJyC7CgL/oL6i7LiyKywsMCd9q5vBQC
RxP6Ue+/XktFSzrIdm1PCha7ld2kxZ9SANbBOXbsWOBBVWFhIbrgxIkgYdcT
ExPogqNHj9JQ8nVHts82TDiTVfVHZKIOfVqwdd40hH55t/QnWVVDaHopeCqv
GIQ9sXhBPr+0FvZ6bea/g9UvlRR/XAicw5c7byDFTG0xXIQMThrQ334m8TkF
NQVyLrkZKdbHzfkH5sta7o6jrSEXYFgfSnHpB8vK6uN7jagTmBc0NTU5Ac2l
gQkD39sXKqIiuEBaR1fwB3AWQ+Zph15qIxojEZnsJBfjLKb59SQL0a4D84su
d90mJXZlOAsfq91/i5RYsljtrt6xhcYebU7pM6v9tTm7ea3RZvwAPRji426s
M/VI2kzKV9tbOdUI4At8b+6MoVvXbwpkld96sYJgRjuvxzWd+AW8mFmVuno7
LCm4ULk57PWB78qypgnUObflFIAWFtmu7YkR+iA1gnYrzBjM0Nnp/8y0tLTA
CwwG/6VOZWUl+vTixYs0lHzdke2zvVizZ322mbr/f24WfhsGt65f4PG6bz75
Hvp9whOcea+qdSqyyvsBV54Ts+ELwfjmpKJb9oKFwDkcFmIL5ZXqR+vAHPrb
YzNldMQAj7Ge93I6GvNxkx5+RFtDLjhNL5BKs1n/GfQaFrt115Uq1AkLpvA7
KlS5lY1HREAFlrncX6KuCFUSiDbQIiOSUY1ZQ8LSgStrZFxq2YHZuq5zKznN
C2hHEMwv6nHZYBVX5/IEKclEsFidycX9G0/j0WT+/35B99CUFHsRbyz2hW7s
lJ70ReYhESmQscWgW0VvNRXXjkdVw+g5ic+nmzHP4/VuPo9dwgie7cJMhtr0
75ISy0MBwwDeZEj7dtjrA9+Vt3O6UM8wNiwdNakg27U9MWQZ3+pyubZt24YM
z61bt7a1+TSk0+mg3Xrt2jWPB4cU2Wy2ffv2sTsSq8j22WbMovXZpj/xbWSc
xpX8CF7zqOED9NGNnHg0vTzjZoZIxrlkXCKt/8Ui+8VejxueGpCKkhNA4Bxu
GS9Eui1W7+QipLodr4HvF/RQUFMgsDReWTOn9xF0RLRqqmlryAXfSsdfDHpN
KLvVLzkV7QIrYcmsxC4TAo754G6P2xrmW0YJWI3F1Epgp3TRhNNVbTorUVoz
WLqLuGuca3UWz2+J75AKbl1nvvRdsvsGpJjSmaEbvN+P3DZalQQsurpQtZ2I
TOOzE0jmSM67RGT6cTwee8I876N+TAmrNhMMcV0ZSAGdv42UWO4wqynmtQi8
18KsDAPflbAUUcRdkngh27W94klJSdnky5kzZ+rq6tbtU+a/R44cgZ8mJSXN
zc0x6zGNRnPy5En4UXFxcaT/Gjki22cbJUptSP0cMk5zn/lMffV9V9BHMY+O
oOmFUqUzwVzLake6hY0ihEnwplP+TRoNgxI4h1tnniLdOCbULWzA5eGy5BR3
DOvWZVVxUmwu79f4nGghklVjIMziH5/OO4OEhYayW80WO+qBzRc4ZbqmCsyf
mVDIL7Wax27G35rEz1PSMCywLCmRRXLv2ALqk0PXaWX39cPhdMMcWVY7ydpV
lrF81EX6or8QlMyw3B2HN9Zq9pAVLhjGaIXnWUF/cmtHIq0mDwzL1oKnY5fT
Wk/ef3Y1o630+QtpPAEEAIuHkgofgNEZkw++SHbv5eUnNQg2gGeDmajJyg+k
FIS4EnSxQF5zmlcJMe6TEssLfdFfuT8Afu9KWC/v3egSB51SRJSQ7dpe8Swu
Lm7evHlTADbbv5w9qqurAz+NiooK/GXQQjkqsn220QqkKP3zyDhtHLgBrxma
KUEfXXr0NzTDDMvM8+p+QQ/SraY9TGYVmGxTm/lDaTQMSqC9AxMz6vJ+w0VI
evkg+tuLGoVUe6cEdIa8l8/pIFibjot3uFZ4O7JSAkZDMw9P4AWh7FZYGPTw
rcinzOoc1iN9+NZ9gP5gs49/SknDsNj17UgNjhUD2SlrxtFV5xOkO+I/dKsO
tUs2qNbYcBQfSbdfISj55av+7wB+ibKo4mpase264nPSuie2+lZ256ZzJfCX
zKpYu0Ax9w4pXG5PVuXQe6d8lGd+PjhbVvL8BcHQSCI4Fvvh4X7QbT0BeL2e
mbRvA98bwlWVm/txcM2xu1JUdJqYxSGu2y5VkhpHZgEDIgLIRxxwgVdCY793
Zd843jY8eucpTTXJI9u1/ZtARUWFnwW6Zw/eR7Xb7bt37w60Uv24coXw+1Ex
yPbZRgH1aY++hIzTYa3PqZDB/AJ9dDnnh2iG0egjFhMalIwKbLs9CWe7QduQ
yNJXMIH2jgCbOj6/G/3tdZ0RyzEVSMcQtpI4lsXUPAAnmxyKwUmDruD3SCub
LkjIRii7tXt0HttEKVSyi/AC2tGM3cTr3ogXb13HvbaAj32TvyJeICxUdDdL
ur2F2yDWuLJ1kqDk2eyf4QX/DOGloNfj9MkDE7mkdv/Sx+tlvlnQvntYOsCY
fi9fJcNsg/EjzM/Bm3V2B8mjbeKsrDlO3G/8h6/FCn9iM9sjHm4AMbXFYP+H
iiiCklEcE/NjqD9IUDJDQmEv6lJpiiN4vN4o0iGubusi3jR48Dmvm/qpcVDg
q4F5V7Jf7PeuLHiKnbL4ugBFHNmu7d8QCgoK4BHqmTM+FShaWlqCnsnC49fp
aRktmGWFbJ9ty3jB+lQTl/MVZJwyhiq8xuN1Xy/8Fvr0vdOP12eYRZNcbIp1
4OwX1lcW+uLqS/4ujYZBCbR33HYT32U5DJxpH9JRUFMgYyC//cf3GsNezyWS
NCIsVG5GigXNlhnKbq3vnEY9cCc3MomMIKtWBzy+4XWvuS8BdUJEircioN3k
tomNhzqbhE2bR8XSlXIuahynsWCDE4gm4f+z9x3sbRzX2n/GJW5x3H0d33Q7
iRM7ubmOk5vkk2xLVu/FKpRVKFKiSFESRVKUKHZS7L333nsnxd7AAgIgCYLo
gL4Bl5o5WCyARdtdSn4fPHqo3dnZMztbzplzznteMmjW3dUzBix+vT6S6fb+
HUIlyO5Hv0fFA3gX9VRCLjL0i87v409YO1AotbB2mLXfzUetegNvnAw0iNI+
ITGio1lu7FklasQ9z8a9bTS4kxoaFiCwS4jhLsBysW5ZqtqYLGFvMHoOcC3R
rvlM+1bCOnHc1CBzIwSr2z8/mJycDAgIoOzQ8PBw2t6+vr5Dhw4xGq3Hjh3r
6OAnPmFbQLD3tnK6Er1nxiJfwGZpUM77eouvQ3zlP3CD/TdDqTfMhkpY9QXK
26bw2y8qz44SqBjPJ0vEbuKRcA6W9o7RaICMnUaD/aV178gGPHZBxW8vShVY
MKQn2G2vXZ0USPw2DXDlX94fa9nAmt0Kl1MEUvJ4NyhZiMxY9gdKG73xRVjr
eeA5Ce1iPuMzEhrnchL04Ztl+IKU13DnE4d5tWxWdVhCOV3h6WASSI0lqT3n
iVOwhHxDA9Nar8c2GUD4JX4qYUTKDq5KHTkKnd7gG90I5Tx2uwJ915C0BQ3j
+/1LBWh9a1dGocFi0LgzDBt9+yCrsBsjB+aX1/GV3OVbxJn/Gs0jPm9wmht0
ZsiIxW+587nkX5J38pKtWja0b+WRQMK3z7LIu3AgWN3+eYNMJquuru7tZdD8
p6am7t69C92yx48fv3fvnlQqxK+AcCDYe1u10IZeMp0xL2OzNK6CoTxlYdt5
3OB4yCXqDWMQWJZNU5+I/RdBPpRI9K6689xIyAhGe2c27h3iTlLaL7J5JoQk
ygkqgUul0RHvnm+R3fYwdZHH1WNLrHbexYKttAZYNrBmt8IynQJh+IdplQ7p
CeLSPcSxMs4nBZ9ZGdmxXFe62lARVpBvrha2tnmEt58Rq+tqqDwbDO55o8Jc
M2kDQ8l116Gaq8enEKV94olTsERC0QC+hnuuF0tWzaKA8FOp0eq/By/Jc/dq
hOOvxICpLjs20wrg4rB0TUlzxXJAgWsXkKRrqfhbt/ePvs6eWCGB9HT+CY6l
+buCCRFhET8YUOZ6h4t5/7AdCMQZliuPklXNvkgbLeG3Urqmgu9AAT6VtiFY
3f5H0KBUKmdmZoaGhn40V1nC0kPNt0Rb0MhG0EumGpAJF7SesWzW8jgCNzgf
sX9TQ+CfGZUG6Lywm0gIv7aylhvcSMgIRntHlPIbLJ52ZdyyAQ3oC4jHvrLO
T4aLNcBainZJU2HUk7hEKI8JwvpQElGfahieEWt2K6S5bu63Q3PNDZCehkXq
GHaAFXw+409u9HK6AlmzL5ZktTPEla7GQD2as6E1NurwegLQ1euuFafFvH+C
5QX3kLvSYNBuTEe+7NDamiewvKKE5EVFjfRXJZzNoSkpNPrcWIjELRiclEDx
fGOatBZOwDWF+mRQJW6zz6+E97f9Qs6XJBBlKNHt/cOMntn499hEH7EBzKyx
vG08B4PBiHQnfGrRsksx/JuZ5q/h66NT8Pl9kffHYEmWKw7baAmfyvahBXw1
vCO5y9FwBcJU5n/Ej3AvBHtv6xQL6CWTB8iEG4cYCnyPzlfiBlfiv6Til7iX
1jag/nkx3A49IIyuWev2SE1zlmDUkyELkHrRVsjNk01aElhQgyIkEQ5gGtGi
1A7VpJkfnNf4Qxo2psttuxWs2TtXIgQXwg0JSRzS3s2Lt/JjqlCQD8SDZQSX
CFvqumfx1QhKaefYbg0AawiN7qiIjVRZWLNJt+4pVXYh+2/A0WM/lMITgBzy
J+5UWr76aLP5ELQ/GFCmEgxBk3RNCdce0TvTWgD/zOIaXAkMSbPzdfAozLIa
TXaT+0vjGQ262bi38SlU824I40f3yZ7rJFdihluGyZuPWvGp7RY+sA1IL8k7
s7da3E2ESbIlDHwqU8uH8dVIAJnp2wWC1e1/xI9wEYK9tw1aBXrJJKW8QciE
ZxmoWqTyCdzgRqqJUvh8mODoyhckJJXyZJAdznxkE+F37PpQEjcSMoJRT0aW
EUnqmbazRKAAgY7oc+wZMZ3HpYeEG3PUXknx1c5g2+G4fMGMgDrzc8sG1uwd
h8x2bgCL6iaVsq1cZlCv4iswE/26RyW0CzNetbx/utIVVJzSKoY5tltTyoec
mAsbMNMePanKypqvkZAVe5UvPAFk60Fna103Q80s2myurqu/A8ndObWjXAlr
BxfD67BUO68UDNlc4CpqImWbdnDIKWSJ9aFkfA8sZP/NQ2eRVJ8Cd5qP6x1C
z/vhwHLXO3QIeXWEjS0swyWmPvYuTg5g1GtgLQD9xpK1lvCphEzgblm44xiC
1e2fZxgMBolEMjg42N3dPTMzgyu6/giHIOR7ezrypYfpb2KzdGmFQXfSG7R3
st+lGtzKenund5ZPdCP3otqGfIMQpe67YSeMWVx2QCBZIYx68nLVSWJW26Pr
hNxHJ+64ucid64AMina5jqUNl0GOTBQ3ErKBTjFPwtUefWjZwJq9A1VrgRTg
gB5G9v4aWKVRlPZ7j0poF2a1ohJ/7kpXMJC7vmeOY7sVFpF0S5mktb5oblTZ
jakyspLDRykxWLT6dHAVI9+C5WxmVj3GR+2/UWo3c4EDwPqV6Hc7yU6GtcFg
vBhOFgO97tfyVdFVXEIS3le7Qj10Fpg84hayvvRKslT1IIvrfIcRwLHvYtwa
+5RSbrCQS4LGNyatLqHjpxLdt5BUbUEiiHVdhyBk3f65gk6nq66uDgsLu3z5
8oEDB2ix3KdOnbpx40Z0dDTH3/dtDSHf2zNxb9/JegvbrRorRcOjyr7Abfbe
iEDGCMdy2oXeYIBL1rY/5bCOg2qOz6wKxufIjLjV3vdo3JEAae4BY/PshkUh
TRsP3EW+HffCtJiMI+IiXzIa7UQkUlgHaynCSQmHmXRXWKcUQe3REwQsDsEU
DRv5EpbHqHM+yw+yVKFHiePv2oKE8Joe8C91vUP4BCEb1vUOrUGvksEnwhPV
dmxArdHBUpjWilZbzuaGSrvvBjnQbqVvDnDkFuFT/dq7cH3D/s0M6X34clQZ
dCqYXKmRDnvsRMqpyFfAiVxlZb8MQoAaOL90Or1hly+J9BavbDjd1VzyL/Bl
sU3hyw1kTYR2QNbiZ60Zfirh28+ur0GYELJu/5xAr9fX1dWdPXvWRp1WCD8/
v4kJQTBkChxCvrdHUn6JDdL7Bb+21iyr8RBudviOvxAqUVoCJq0obJbpmc/8
nHwHl/s5k9ASjHryakcQCZdtv2W7hx5ASHUjnjtqRJaAkZDZNXYC8xbz/yWQ
9QRLzMa/C4KgxLS9zLzQS3I89u9DqjkR0z7Esg0s1RHWYXLmxVsvelRCNphL
/hWWRysbca4Tg8EIHeLIqOHYbjUYjbAskXTN1YimucSPiSrrYe4sUfofSDqD
+2qUsEFVB6nZejCgzJLCiALjbGbXjMD7n19CALjqiH5xhWyr24RldOGjzoRU
c0/vD8stIQPKo+caSf2KOHZd42FTKLU7wQVf5YPYChaMru9x0nDWbyyRhaOo
V416ByqaeQiK8QI26Rv4qURjx9fBX3iqCxsIWbd/HjA2Nubl5cXSYoUIDw+X
yVyt/P5sQ8j3dmfWp9ggTar4ylqzyh4/3OzUvTOxBXzaetZw7DbJJUTK+ZPN
WqgD07nFHT/UDdyVK0mQKlyo1MmZ1+q5AaNmJR+IIzZCwyXbPTT0kpd/aDr/
i640wGysuEI7t40o7fccLOA7h/mMPxLZJHQGCcZ57AURgNdjmzgR0z6Qog41
N5Z6u7TxCnHk8Vq8lcJS4Q4SkzbtZJIajLE/fNNUloL7OKIroPhy12OXmG1g
NPt09KtGi0rc7oW07gJZXmsL9Oi5aLhwn1SESauw+qJgnE2FSguzXBkTYzkD
Utehw519xO+SbONrb7Lk0tzPdU0caZ0X+Eh5pNwSRn8JKe20kP1XV7pqGSCR
+V73+aHpSK8kweqRuXZqzVvDxkQRuSa5X7pXQuegWxdhkWaiXzcamIPw8VOJ
9AF8HdIrhfW5Zwkh6/bPPFZXV0+dOuWE0Urh7NmzKysrfA9CuBDyvV2f+xk2
SPNr91pr1jn2CDfzivzOhqrAI7yAMjM5v6rSrGU3HcNi38v/xaJsy9yAzKgG
NZ+lrpk1q7EcLN5yxRHbPZQ0k1J0AlxPaARmdYi9urpmPk0lb3wjjICGknKG
7jxlnEeYSXrPNQoO9+LoLYfZomAuG78p4RSg2ux0KnTX4yV8HXxjTAsL3Nut
sMJvVrWTjmMK5v6Of7hLQqunG80mp8v/l6dPhzE2S3yUO70LaDVbIazNJqz6
yiPH4ChIdUS/gQnH3njh2d3EBON8FNCz72lve0dT+XTEi2SpWWGHJ8EGIJu6
W5jQnED/+LLrcTiwFpis+Zp7JXQas4/+y24kG34qL0eQgO1ORyqyCQdC1u2f
bej1+oCAAEaD9ODBgxcuXAgMDHzw4AH618vLa//+/YwtL1++rNV6dnV3+0LI
93ZxwZ+wZVfbdNpas4mFWtzMO+F/Cxq4K3nGHjD8Bn0aHlX9G8tM/SJKPtPq
lEaDnnglIl7ki9SCAqNmBelSkblku4cMwDSC/vaMmM4DfqOvxdjyORoNOrN5
cVOpPnfBjCzrcRptL+M8QurIxBJ+dCRGXI1qdFRbns/4DASg9nhaQrtY63ng
urunqHEcX4eoPJPjg3u7taZzBstwO9kl3gBZkw9RZT1fllonnwPuldc87d7F
gKaHbRYja7MpXtmAtcN6x+hh/9wAVhF1Ih5jQaIwG8Uod6PQSAbI1Me8YdR7
NtoWzSPk/JEPPnK6K0jwzhcVs1qjg77yNYUzVw9WzrVBgsQxxGX7yTQNxDO2
oZ5Knd7wLajoxHslYucgZN3+2UZ6ejrNCEXGaVxc3OIiwwIIUvJFIlFERMTe
vXtpR+XmCohHRVAQ8r2dUfAHbNZ1tlhNW5OAUjh+Kb+p6nCp7piHAKlBKzsa
aUYr9Wt5HKlXSfGrdTbuHX5lZtSszKqu2OPqhP6akuZJj0jpAqYX17B4Z0Nr
bLSECTuzCe9zJiFLwJq/q91htL2M8wjjoLisbm8X90ByXE0Xqzj5mZifEle4
iv9CtDBMzmmeKGSr0iaIe7t1aoE8IC7yi5rVVJ10A8uTXZil03LCDKPW6vdc
J8RKXY+tltt4YnM2Q9I6cCe85NaJxISUBv0GJ50piByS1klGkcDdKFY7Q/C8
i8v2efp0aB7RKxc877uc6wcSAe3yLdJYSYvmALA8XNugw+5jo149HUW4qmwU
neEYcDlxufokYxvqqYTcYi6+93iEkHX7ZxhKpZLmQg0JCZFK7asl8/PzgYGB
8MADBw4oFNuPyJoDCPnejs3/DbbpRlqtFkfT6VW42a2sd5v6+MwJsgZIXfug
8J+MduuDok/VsjH8ahWl/IZfmRk1K93aNJYQUl4YjQa5clFnvrgdmk5UF+7Z
Ee1iZV2NxbPNmKqRDBJrPf0PnEnIEmu9gJio8QptL+M8BqcS3bixj+sENBuA
RUszWfjo9UoJcK/8lAMJ7QJ6fESpv3OuE18QoUFZQNzbrTq9AXJDyTec5Fcx
6tTTkT8BYfbO2EGOwqwSR89DDs4I8w4OB5YbDLaiZWzMJo0QaX6ZUz5khIfZ
5Gt1+WG9c53wNYqFnP8lwSfDKZ4+HZpHrWyERONEv2rQOkPDW9pCcmr4JQKC
VZwSiuhsCXahXuwAGoIbagO5C6r5FvBa/i1jG+qpLG+dwlcAfSi5FdNtELJu
/wyjqakJ2p4+Pj4aDdvvpkqlunz5Mjy8vt7J1++zDSHf26E5H2KbTtRiK0vi
ViZhHm4ZZEt7yCXgtyAo+7+xtJmNh0LyP8b/HR4m1bpdJHlwHYyalUEjJ2ZC
7JvUxrH56ofFJud4cN5HTUP3cXjzDcDs0cNhqBhL0OoT2dAzlXN1eNSLBf/m
Ukg2UIzlkpVki8qYjPPoDSh3nPOneAgV7YSONTzbPuusWtxNlhQy/sSBhHZh
0KwTPTbqFcvKRGxw6GYZvg5Uni8v9d1+eFDnesyqaqENLMdZZYZ3L+QD8cTv
VsrFZw7Wg7abn2h7NuHjGV/EKTOATK6CixWtA/NOdwVH4YQF5AQ2V7FItikH
zj5qHtFd7WI4wW0QmF3IawBMx9AilgQ9/o4evtbzkHyMKo97QkLnYNAppyNf
JveGmoH3hprNB1kkO1uYeWdsIGTd/hlGYmIitjqPHDnCxtMKsby8fPToUdxD
eHi4h+Tc1hDsva3WrmNrLijrLUkD3YsEEZD2P7hx86BQinpA5NSOUq/Bvf7h
0MeqUEvLu30B/dR3JOKocCe/MjNqVsgmNStPadBOLjXcyX4XDqpu4C7VGCq9
43NCpEc74F+KJbSRxgJpXpYrj3IpIRuoRE3ErLYgvWGcxxNBlXjgCxKuHTo2
AGsn2U46pqAYywPmiVX2No4xm/A+lkq37rA7e0OlxRcBGRHUigovditM2Myr
c7Ki6FpPOHl8qpgj9NwOjXSIxPbHv+tprgCFUgvNvelFO5R6tmezqU+Eu9rr
V6LWMNOfegLI4sanPh1c5UoVm0Ywin1oFFqPx76uj2SQhd+sv3j6dE+eziNM
35bUnHG0E73BACvlzdi7eTwKWNp7p3eBUu3YvccmjZQvzGd9gWVTzlRZNqBm
80wIKZw9JKRFXYcgWN2eA7Ruwrm9LiIsLAxbncHBwU70EBERgXu4ccPjXBAI
arV6bW3NYOCz7JpDEOy9LV4dwXbQw4w3JdVWeZkQriV+ixs3DNB5aYQAHHny
/f0TWNScZtNq5JykA28Jzf1oyrrjjGNY06ygTq6Sz4YX/94i5vmdBZnJRwCJ
JpZkzhcx9xzOhtawUTXNA3G9uZSQDbQrozbCyxnncRfgnXBUM/EoYG4dMq7t
tofJZUh75EBCNoDMJCqRw7Q2YyDGEmde82K3lreRkDm7nNvWwIsqazQaIDc7
ekY8ejrIYXWGBRGr7dnU6Q3Q4c4ZaQN6FcAU3cp2l86LRnEwgIyiutPjZd3E
5YfwjK90BHn6dE+ezqNK1EgWSRLedzTEYnhKiq8SVfSKX8DPoqOcWrMJH+BL
wW8BektI6y+S26P9tmUDNJsKsGaIzHYul4zcC8Hq9u7ClvmpbrP82dhlttcD
uHnzJrY68/LynOihqqoK93DhwgW3S0hBJpOlpKQgaU+fPk2da9++fWfOnLl/
/35PT49ez2l+fVtb26GnOH78uN2zC/beHl+owXbQo9Sf2vakXIw6jhtX9YRy
JiR74JVnn0dfYFEHpk13NfrGhRWSTN7OmK1QFmmdp+5YlrCmWYnSPsUv/6Zu
f8Zc3azGQ6glrEW4oRIipzeN59las5VWUqRvtUtwN5hBvUaCty1yPC3nUaEk
n2Y0R1yJyQpqrd7M1WjP3SOpO09sov5YboS0i+WqE1gqJ5LsYNX7oJSt6ePF
boWFXU7drXKuEzYVKDyBpeJdZBaGkjx6LljtlE1ett3ZTKsgid5OhGs6B1i5
DBnOrrMDwVE4nSrLEkaDFq5UqMVOlh91CNQ8Gg26mbi3yKkXHeMBS68kV+l+
Jv9VyaIBKZxDhQUh/QX6EgmNeH99JNN2PBuaTVjZnPsSTm6EYHV7d8G2ccrq
5wHcu3cPW52ZmZlO9NDV1YV78PZ2v5dEqVRmZGQcPHhwj3VcvHhxZsbjy4wU
kAV97NgxeHa7BYAEe293jycTIyj5dds1+E6GXsaNC9utMg/zCCr68eurGbey
3iFBwqqtEJTCtvN4Y/GjV7fWA1sD+JXZmma1kPsVJeFUxAsRhZ9gydPq90LT
dXmVqEBfexfyW9PHGiDppQ3mKEnN966YIRxgOupVLKFBa8ZBZzmPs0tyEAoo
uLh6GLwtXbNaAZPCYuH/I6Ff00Lhflxpv0MW9lv9HT0cavsp5UPURl7sVo1W
DwuaKNUOrz6Zl6R5HWn4npCTEdAXb41B1C2Qb2hg9RCR2H7gvd3ZXF5R7rxC
rjwHeRYGo/HU3Sp8Rhcr9lIwlfUBo/BoBKxqroE4PR99yM0XB88j5AFz9NsN
q4XW9/BPYNgAGMZ8oxvZH6gYzSIZKwX/8ZyEzkG7OkHeRbE/s7xD0GxmguJ9
VAGybQrB6vZugwsWq+dChZOSkrD95e/v8KcfoaCgwMVIYxtQqVQ+Pj42LFaM
/fv3ey6aGgM9g7du3aKdevvarbX9d6ApN5/5ubWWGp3+4C3SOK3uOy7lZAnK
bXHo1i0sZ1zF3/He/qkcvD0hdauox1oPzxnZVisMlu6hJOyIeRmLfTf3Q6Vm
Jbnma7yloisIv/8PBvAf+8QIs3IwTRPWmkHHzcZUOZcSssRc8i9ISOTaFNxl
OY+9IIfUieKMnsbFcJIW/XjaDq0BZETRyNygabsFihGiv4nLDzp6OGR7ru3a
IkjnxW5FOHePBA06ke0FE5BtLz+6HaqFVnzqueRfeu5EkEyMpY+GzWxCoqfI
XI+r0F2PCSHPtz5FztXutAT0RCcUe5CdySzJtPac504EgecRkuM5xDm/vqGB
pv2qAKqFSlaVWJ5dPkVa1m5380DcWx4V0jnMxr1DPpQW3ws0m5BMsq5biMUp
WEKwur3bIEi7taenB5p+ExNWtUpG6PX6c+fO4R7y8/PdKBvqPCgoiI3RSuHA
gQPj457lJSstLbU87/a1WwvazmILqDb+FRuE6ivr6u/8YnDjyBJBcIrSQFVn
O/OAxDNXdF/He1cVs8QAzHprUhh+PWualaTmDPXaz0l6nbi5286jXQPTuSQr
ufhz/P4/Eyo4px6F7JpRS8eWJSCfg1psn+SWe5glVC6YBcBYzmNNF8nFE0JY
Gg2w2HGjzfJJRoMeUkQadHacs5xBvdhJlNjMPzt6+PmwWnwFRmdk1Ea+7FbI
rmljbccapI3eTvuhXMRmKUkSh6Bbd54a1zZgukFOLatEWjazCQ3J3deKnXB2
OwRoYKJJd1e3zf3zcAFTp/cU+4co9bdkdXGyxENnoQHPoylZA7yLdGtsU4Oh
c/MCVwHhdgG5KewuHmKgdx2JfpkR4kd/qfhbEDqVStvb1tYG87sXJNu4eqZg
dXu3wZUIYY/FCSPb8NSpU9gEO3369MqKA6EyycnJ0IKTSNxJC5aenk6zEC9c
uIAsR2Rcz87OVlVVWbo+v//+e/Z1fBwFOikyjZ8luxV67tpjX56Ne9tay/nl
9Z3e2bjxnZz3DEZhZVUgrClMpUK947/Ecg7NFMAGD4o+xbu6o02EvRsTRXxJ
S8GaZiVrvka99u9n/AzLPL5gYo9Ra9fv5n6AN37nF0O9/69GORBrxCUqgaPk
YU6PtWZziR8RhUTOfxyXJcRl+4jONlEId1nOI7TWk8usWut84VHxABYvt86W
FaCTz5LIwIQPOJPQLsyryr7h0LEGoxGyZq0rt74afNmtxU0TrqxyLGT/D4+x
Cot5/8RnV4xme+IUq+tq6C+jihbZBZvZNBiMR28R86GibcruIU6DWlnFv8n5
VXf1rNXp990gtkDH0KK7ejY7y8o4nujpqFdpuRKeA5zHxYJ/YxnW+qJY9nAP
VDl3KJnUo0BPOsuXMMZmjTxShMigdtst5Easdt4lTvm687S9xZVkAcp2SXfh
Q7C6vdsgSLv1yeY7AVph3t7eY2P2qfiRwZuSkgIPRP91o1Tr6+uHDh2C/V+/
fh1thG2MRiOs40OhuNgjFCjIOKUVq30G7FaqHugWf1HUi9ORL1lrSYXg+qeT
KqhypUe+jK5gs1Ro3s0MUpF2RWGW9ZzbcpJQSyW8Mu0UDal7YU2zorLG+qJf
wgIH532k029FN2U2HsTbT4Z6UZ+A28meekW4CFirLjCROW5ks/TPT/DHzqjj
P47LEjBAi0ZPZDmPMfl9eNQlzZPcSckOkBwm2maGESwAtJD7JWcSsgGkiHGo
juSSbINRd+LLbh0CZKeOBk6ghwU+O8ic95CQ1rDSFojP7iGmO7j2dTGcrb+s
va3VoF7Tq2S20zAzq0eIM+6+B1liYMaEd2SDezuPKSAvnDvJHrmN13oj8EQv
FX3tiVMwAj6VyFYlIfHsynwbDMb9N0g6Pw6u4B3wrg5IaGFziHK21rlIaS5h
JmTGZ7S90Rkk0OV2kkCVFpYQrG7vNgjVbn1i4TZFuHv37sTEBCNTrlQqRbbh
xYsXYXs/Pz+75ptDyMnJgf37+PhYc6RmZmbClsePH/eEy5VmpD8DdqvBqCcl
QbPemqCW7zTMZBdUsp5v4p+xuSSSCjGS8+DNOCxhWMGvaXtbH0fhvZnJr5uS
9SRcFGq3AWt68vpQEhKvIuFVwB5MSvZ0jj3C2y/H/cOuK5NfID0Bf6cuWaG7
1KukxHcW9xbHErIEXEamRWNaziOscd8y4KngSacBFxNsq0zrwyl41IKqcY+w
kPUXErk9z0rxo9D1eAkPHwYq8GW3KtU67E9Ef6gcKQyhXmzHF0GUQn/pcQCo
porSfu+JU6Bb1KEg4fWRrNlHH05FbgUwz8T+TFy2Tzlbw9hYuqaEvFhjnmFn
QnMKwyMb++xUHDbq1XqlhP0K3jio6/TN1cL1DfdrQYv5/yILdwNxbu/fGuBT
Cdl0pyNfZuNwfDxNFoX2+5e6Ui3XvRAtE//7nuvFVAlp21hpv+XpNSLXsekU
fjpHES/S/PLXIkh4Q169k+WqBQJh6vbuBH9266NHjw7ZhDW23r179549ezYg
IMDf3//OnTvIeET/ZWwZGhoaHh6+uOgeHxwyPGmcvX19fdYaGwyGCxcuwMad
nY4RpNvFwMCANaN1+9qtcuUitn3uZf7MdnYSlT5zKfbf+JDhOY5yWxzC+fAA
LGFyzT7a3qmlJrw3Kv3NzfHaUR48DWt68sZEERIvJeUNLHDHaALeK5FP4O03
Mz7ccSUPzU5S6SBXUjuGRakCf6eO32Fmo9VIHwPV9xOOJWQJajFhK/zJvPC9
5TxeDCf0lcJZ4ceYWlhj6eCD3jT0N2cSsgHkF3UoV72wcRwPH7Lx8GW3IqBZ
wCINTbFNdkNY63lIFhaqTnhOQmtAeul05Euec/gq1VpkiOGLY5tJWLs2M5f4
MVCbzX6LBf/RyRl4YG6BVaYIzywA4vLiOzbrh1pLQdVvLCHbZD79D+B9+OlK
202dYsHuKeAtVO7ugGdkIZrlljJdRg+B9lTCi6MYy7F7eGo5YQ4PyxAW1QCs
IMyGzhouHShGsziQ0DmI0n5PVhRFZhlMhwOKnXvRCRDC1O3dCf7sVmRR2jC7
3IieHve88EdGRmC3ly5dst2+rq4Otn/48KFbxKCgUChw0ViEo0ePwozgPdvW
bp2X9mDbJ3rTiDP5H6XMRfGogJbzDw+QfNhR7pZb2cM3gUQCF7TcpO1ValZI
iu4mNZM1/zJnsKYnq+ab0XSEZpLk1qUVsxzJB0W/w7v2+ocLeelSqdbh79Qu
X+aEYlhegWNCVPbYmC4nYXLF38JdlvN4OLAcj3p5RShcRhiwvOxuK5NCYbny
OLAN6SQb/GKl/bY1D7htIFsVD7+okbD58Wi3wmS3wkYHCAZh2rV8IN5zEtrA
QvZfsQwbk25O1Wl6Wpgb/b4PsbXGgow7UfofrRmt1G827m30tqEdyAE709lQ
QhmdwVR81mjQrXaGzES/xix59KurHUG2Kxzl1JKcerfTHcDyK/MZf3Rv57ZB
eyqRFU8WaioOWzsKwwswsNl1c3OMkDTCal7QYOepNxXPjX6dl6UDR4GJJadN
1djv4e0UCQmOCtBoBUeT4hCEqdu7Ez/araxRXFwMu01NtaMsyWQy2B6Zlm4R
g0JYWBjsvKmp6fr163DLNrVbR+bKiGsy5Y2tlbEF5tssv34MvWdO3SP8w1W9
PFc+ZcTNNOIRruhMt2wQUfxH3KAn5hXuJaTBmp6skQ4PRL2IRQ3J/9hoNFuf
z2s9jfeeCP0BzU51J0cljJ0A5MBBZqxlA8VotkOqCC9Qi3uI5mZeNIo2jwaD
EUYeeo7e0xXsuU7WveXWowrNWJT5zgenwelSOEirx2PvHiGJsTzaraUtJOM4
JM2BkKHZhPfxReAr8UHW7ItlkDVddW/noYBUxwYhuU6xCAs2PQ0lfWkm5k36
xqhXNqbMqoYZjMZjt0n4Ynmrm52VAxPLUF2XyVW0BnqlZDHvH7YtbtOaXt4/
bbizxSskaxv9xLINNw5BXH6Ir7gL2lOpXurCkpgqhOptRURL10i5GfROxgxs
AgH0wgcm2lHy4cDnEn/OjYTOAcYmLZWQsokwP8Va0tA2gjB1ezdiq5aNdbN0
Y6VBLqn70W59YmEq2ggSxvDy8oKHSKXuCT9oaGiA3SLB0MZnw27tGEvAhk9O
0tYinnK6krExFWlzNOg6PiSv5RTHArPB7axfYwmruxjy3bIa9uMG9cnvci8h
Ddb0ZKSD1cW/gkVNb6DHPLePxuO9P0R/jWanfch+IBlfgIT/jFyga72R+DMn
bfTmXkI20CnmidfGnFmXNo/SNRUer2Dr6sKaoRMiqyFqaKSCXeFXL4FSOBYE
IDZwwJ/wtCwB9Z5Hu3V0lqSBnwxifg9bQrs6CXT4N40GfvwXyAwkE5H1hRt7
1ukNMC0UXSXGZgatAtYH2XRQvj6Q70VdELW4e6noa3PT9VXVfDPsIQuwM51n
Vx+WPWDZKctFCZ18TpTyGwsr9UXTigQIwKZ+otTf2YgZhgsy2TWsKGrZwKhX
z8T8FMugFnPKpUB7Ko1G4+yj/8LC2K4FA7mPBEi5P7skx+Lt9SuxnXtrlhFQ
cYQzIZ2ARjpMvpXx7+HtKWVDeLwJRTyzi7gOYer2boQ1u3VhuiI+NsTH58rF
TdwN8q8oiTeomCxcZ5GVleXFCRwt/2oNMC4XYXXVfuo9zdTt7+93XQyxWHz4
8GHcJ5KKIjR+NuzWmr7b2PApebTFX2GtigHFVbj/Zig+JKlmJ7fy2odKs4rF
C8x8r7Kd4W6s7fTGbQozPuJeSBqs6clIT8hNeg2L2jAYQmsgknbjvX4pv0Wz
MyzgVJFLD+0ke8pa/BjDigQFo0EHtUoYs0ebR8iR4lGGUlcQmGifOcqgUwLX
1ct8mUXWoFevEKst+jXbtLEY8g0NCVz3KYK6Io92q0anh1mcNjzgEOuP04hf
g0OKVxr0Khl8NAwaubt67h8nnspDN8usTfFyxWFo3C0Vf2vQqWizudYTDtvM
xL2lXSGRmTK56mtvcv3Z19O0i+UVM94nWs/6jSWam3g24QP5YAJ1DQ2a9fWh
pNlHH5qZrmmfoAvOeK4KYKadsRlT7RCUM1XQ08fyQXMXLJ9Kaf0PZJ2zzsvG
sYGJrfiCsKw1wyXQlYRraLZLI4lL9+BR85URwBJGowGSvWtXt5Qxn2iyrtLc
Lzi6QkchTN3enbDiRS0vjr908SIyXdEfmWnhV71NBmx7czpss2XzPh/Q6XTQ
Kjxw4ACblySN77eszFUfh8Fg8PPzY3T7Pht2a2HbOWz41Ma/YvtleC/DlHu1
+zrx8T0sFhwH++xyBxbPN+kzxmyRvv4wEh2dzX+kjQ09OS6dJLeOzNAzEHV6
9Z2c93CDb3zS58Ru0xXdDqg8MNYWlFSfwt84oSVRQsCYTOj1oM1j+9ACHu/N
RwJ9dcOqHNZSqzSyEaIt88FVaxez8e+SGWFHswb5Rb3MPWs82q1PTFxedViw
rsesyvpIas+RBZ/Ou56W0AbmM0hiKTJz3NUtvEshgxYEDEpEP3HpXmqBxXI2
oZlvuqXT/2DQEm879Irecx+BT1LpILnfzFex0NnnMz83s7gLd+pVdJMZWalL
hTtgs4XcrxjjY9eVGrj6MSFyT31PZBsSO7H+olv6ZA/LeYQU1sjMpyXRYKg0
um9BisrskhA/kfCuK2qy6voxeZnj3sGj1kgFVxOcBhjhsP7YlLSl0xt2+ZLp
kKwKjvbBUQhTt3cnrNitA925S7OV+L8FuVHIbs3Ljnxu7Va5XA6twgsXWHF9
I0MVHpWRkeGiGPn5+bDDR48e4V3Pht2aWrcbWz1tsS/bdnUh3XszPSSH8Bpl
v2swCsv50jORBkNnU8sZyovPDhPTOzznQ+6FpMGqv9VoDM56G4sqEzPku8VX
/gM3OBB4d00hxJqnFB7m9OCvVWX7tGUD+I1zo9LrdsBYRLXYKg8tzFqypmzz
jiLAqRtTwJyLoZyuABr1Do4lZAOz9Ns5VglTVR3EJxWS1gF38Wu3whKc6ZXM
FHk0iNI+BcN3c0lQhyBtuIQlkbXccFe3J+5U4mvSOcyw5KWTz87EvIFPPZ/1
hUG3lT3KOJtr3fehASipPYt3Qd8usv7c8kZVa/X7bpA45xpzFgJx+UEozHLl
UWvMS0aDVlx2ADa2Zj/eTiZxFI+K3RCKSY/LneU6gMRyHk0MRcCdp15kfmxb
BubxpTh1t8rjgjoFWErbRhF2s8jbuLc5dnk7gdWOIJpPfAyEIR29xVxZYHvB
Xbo9ulYc/9hKxo58qaQgFtmtLQ2pbowT3l4Qi8XQKgwIYMX/09LSAo9KSkpy
RYaJiYl9+/ZB2xnWhH027Naosi+w1dMX/dJTfcOPsTHOmglI/xgfta4Ucyyz
bVT1+mPZToedjs5nUMVXh1NvZ72Fm2l1PK/4WdOTZetTWMjQzJ9plhnGUtxx
Cbc5de8cm+pvfCGlnGS1MGZdQXuQcbACwVLRN1jOjalyvJ02j2kVpPJCJhN3
qBDQNmjfKSzvjyEaft15jiVkA+iplw8m2D/gyZNHJYPWZodfu7WuexYL5h9v
vxytWXRu5Eu0OokcQzFeQLyB2X9zS58w+2+XT5GaiX0ULnnNxL6pXSOUStZm
E94z04AAGdkCp4Orbb+pHEV5G1nCOuBfqtGRIaz1RZm5iUv22KYLRsbaYuH/
M5N8otCyGTTWjgSWu16u1CEeJE+AcR4hz7ms5TrjgWEZhKM7sUSgdeKmQUmy
/TdKrRmk8oE4eKtwLKQTgD7x+XRTeF5x04S1BcNtCnfp9vCh5ubHVjIWRqt+
o8X/hi+yW1fFtbzbrfPz821tbdXV1fn5+Tk5ORUVFa2trYODg3NzcwaDB+kx
p6enoVUYFMRqZaCzsxMeFRMT47QAarUaFoTdu3cvLW/32bBbg/M+wlbPWKTZ
spglMIWLb9Jn+KgFmRuSiN2IjAZSpufwHX9GTs61vujwDKvFZbiHNc3q8VwJ
FjIh9aeMS9xNg8R3fCVul4cldQlF4IMVV8hw25iR/7CoVMgXJLVniZU0lIi3
0+YxPLsbj7eqg8G/LARMza9iIa2lwsmafPB4V7vDOJaQDVa7Qon62uTD5hAq
eoT6NZnXxeDXbl2QrGPB9vmV2HWpwMJMC1l/4UZIa9Arl82MaHeUGMvb5LGn
foGJDEsryHCDyhithq+12TTolCJQA3Q24X1M0lvcPAGNPheZwGmGcFoFCQHS
LPdPR71CFPvMzw0sFlEN6jXI4DQb97ZOQU8SRKYxpAofmFh2ZQgIK63++Iy8
kL0zziOcenRNLBuguUMPEb4ObkxYdi/QTQI98tOLa4zNoLd9rTeCYyGdgEEj
n454EcuMbt1gUPQHPWh8C+gG/Gi3GlWtGanhyGhNT33gXj5hh4DM0qioqJMn
T+6xDrQ3ISFhaGjIEwbs8PAwPNe9e6xIWvr6+uBR4eHhTgsQFxcHu0I2O62B
E3YrI9r5Q3NrLTZ5grJJyt7j9P8wtt/vt5WVcDnun4TNqS6CY7Ft414eKWm6
xy/6QmiZZZvBvDNJKW8Qaqbae9zLCZGRkcG4Pb3iAqFuTnytryzIsk1mWRyg
ZvrMw5K6hIQckrh3NbycvrutderpB24q4oX2tmY+ZGSFwbzT+GFB9xLeTptH
r1BSTT6toIFzMVmhoYmYb99cLWhra7NsM5L6TzzevrK73AtpF33lIVjCkZQv
2RxyCBS+L6pogrusPY/cAE3Bd9dIcmJptZ0HYSiXuJyGsg9xIqMtjMf/EsvT
WxHueodn7hLKmuiMWvru1saJOBK/Opr8F9p+G7PZVZs+Ffky+PDtoLajh2KX
D5kC9OJyRf7UAsJH97V3QXV9C5Z8PP4X+OyT0W92NhSy7HNT8p+QUaf8r2Wb
axGEv/1GVKUrQ0CYiPs5eAkwfIk8DeZ5bKmH16GrLpO2P72wAV+EvdeLGN9v
AsHl+6TYd0SaxX3ebno1TEaTuOju2jTOZXQG4wlkjaW38uGBGyS5taC8yf7x
goENa8hpQwNim9qt2vXmlMQwZLTGRgdrFc282K0KhYLGymsXN2/elMmYee2c
xsTEBDxFYCCrSmHIiIZHhYTQ+VdZoru7G/bj6+ur19Njk54Bf6tkbRybPJFF
JEPKGiPl7mtbmp5X5Hf4wO4JAfHn6PRqLNitrHd2eucwVgeTNl5BZiBu2TT0
gHtRIdqteARymo9D1ix5f6xlm97RSTDk9/QGO/chj4CJY9di6DVAoadmNp7/
4kQ2IB+Ix6LCuFnaPMISM1MLzOvnQgD0R6xY1JR8YiLb+QyPVy3u5l5Cu9BI
BrGEjG4XenudfufTIaMfrfC9teeRM/gntGDZarvsVB1ayP0Kj10xXsCNhDZg
luLafM3F3tY3NJCG15LFZbU7jGhikT+B5MAUbM+m2eEgbRMyQf3woM6VIXhH
EtPpfiYheoLlbqdBoDJL0AKMFSNZtAa9o2LiuL9R4orXGD5f01GvusWN7iis
zeNSyXdYNsuUPUiqEJ0nUJIBCjAe6W4qQwCtRjJAPpGm5FYhFgS3BHwhzNf7
4THu8i0SZk1zR+Eu3X475rfKFmvC7gUiozUzLVy/0WK1pScxMzNz7tw5h4xW
CsePH2dTX5U9aJ7TBw9YWRYDAwPwKKrQqqNYXV09ceIE7uTgwYMLCwwhi8+A
3Tq91ExodSuIS2Uh538tG+sNBhJP+OAEKM4Syr3k1iBZGwPOx9/ssMLDsFx1
oiqB1EUtardFoc8BrH2RYfZxd/RLK+13LNu0DszfSP0VboaugIeFdR7TiySF
52xoDW2vmemRLjieaoiNyVKyyFOyG2+nzSO0B4XMl3XhAfGDjzDVJ4JFG3Es
paBg0G4A4+Vlo73VG3grnrhDL5PKu92aCaqIRtlUto16DbIj8NiFEF2P7C+i
pmZ+7mJv9T1z+FJ4WRST0qtkkJmHMUTc9mwaDfr5rC/AosevjTrTo7ooVcCV
jcFJJ2/74SlCWw3jPzfTRUn8pBNp40ajcTH/X8SQSXhfrzarv4w+2QcDSMgH
I4U7S6y038Yn4iut0to8Qnbo+Yw/wl3ILNp/gzjr+8ddDZb2KCZBygaaOMsE
gbU+Ut9cXEYv5i5YKMZysNgjKf+Lx+gTLbhCus5BgLq9m2HFGh3syb3m633l
yuXWxjQ7scQeg1QqtR0YbBuHDh2an3dbJaaRkRHYOUvPKc1P6lx+6927d2En
lZXMxd+fAbt1YDqPhKE2HCLf7rRPLRuvg3KHZ++T+qelnVe4l9waRkUVJNkz
/u9I1P3+pZbNloq/bYt9GbdMquGZIpXxi7zpO35nS8ist8YjXpA2XLJsVtE+
fSXuKzyWx3MlHhfXWaysq/EtdMBiXiCBw2LBf3iRkCXU4m6iKWV9gbfDedRo
9SD+tlDIxI+wBEND7xxtLzJU8WCRAcuLhGwwl/gxllO7Ymf1prmfsNYEJNC5
j3i3W3vHiKfs3D36Cg+EerEDj3ou+RecSWgDBvUqtMhcXOgISevElyK9kk4O
L2u5DjxQ7xjUDFENdmdTs9w3HfmSpc/uTjJ5LvwtbhKWCACuc8x7ZjRoYcGg
ueRfOsempV2bmol+zYbxG1tAvMaMVA8sIUr7BJ9lfSTT6X5cgbV5NJVvBsHe
8NnvGF6EXxy9JylZXIfBaNwLljot6/WIS0Dl1n7nyVs4hk4+h8WeiHz16yu5
1ABTyoRexIclBKjbuxdbtWyAHapZb8rNirx48eLdIP/56XL7xE2egV6v9/b2
trRGDxw4YJLt7t3ExMTc3NyEhISgoKBLly6h7ZaN0XbIuOsKaLxMd+4weJos
QQtBT0lJsX+MOZCVSjuvNYXzGbBbW0eisb1T1XmVKACPGErDLEoV+I16PjwY
H5jVeIh7ya2hbSQGC3Y+Yt8OU9UehsC5hZwvh6JexC3vFfyKe1EhGL/I4tUR
LOGDDJNPgZENI7tm9Fz4Idyycei+5+V1EtBlv/NKAY36GKlD+A5crjzGl5Bs
oFufB26OD/B2OI/weTl2W9Bs/7CyZHbNCG2vmZGe8RkvErIBJFndmLJTuTsL
ODQtq4Twbrcq1Vro7FOorH5c1nrCwVNznEshbWAh+68kfnU83+l+0BsDavJj
s+b+ROUytNqs0dSwmU1pozdZnIl+TSc3xWaPzMigq3RCtGK3HxrGQcmPHYAU
aLXrHgkPYF25iRHmXb2oWTbju4ND2OVbpNLYYiq2BvMg4VcYFwc4gI15hGzS
q53BeHtwKqEAimGqLCA0wBLn5a1TcJfRoIehBRqpQAnqGTGXSJKjz18L3QoA
YCpotR0hQN3evbC0W/NzTKVaN6u1RhUXxOLfyEABl3ZrbW0tzQjdv39/cnKy
XM5co1mhUGRlZR06dIh2VH6+8x8piMXFRditnx9zZRYa6urq4FHI0HbopPPz
8wcPHsSHHzt2bGXF6qfqGbBbq3oDsL3TOhxBvk3Rr1o2nhCRIJZLkY/wgfGV
/+Becmso67qKBTsZ6kVJi5RAWjNR6u+mIl4IAqVwVBo+0w8Zv8jDs8VYvMRU
U2lCpJlbNksoGjgeTNzf+a3fe15e53HAn0Rtraybhc5CDVzW5MuXhGxgNGih
rkjVrdDqlI0tVbjNEIgPvBLJZ0lNu4BFOsKz6emryO4gwWmle3mRkA1gFtVa
j528knvpxItnWUqYd7sVwet+LZawe2TJWjM0I8QFw64AEAeA3LOS2nNO9zMw
IbEROSlrvkZclok/p+J7LcFmNg0aOSQzx0GYPtGNWABGKmPbgJzVOCpStzaN
vrDk+tS49MZG7yJR2u9xbwu5X5ntNRph6du6bju50oxYaQ3A/S+VfOeKtK7A
xjyuD6eQtbWnOSYbKu0uH0IBNMqUASE0FDSQatq0GjFqcQ9YLH1fyAE8lliu
OIKFDw88sUPwuTMOQYC6vZthYYc+CLt1kQntzem0lls2rweAHoEzZ85AKywg
IGB52X4uwNra2oMHD+CBZ8+edQu9MOoZdvv996ze7chQhUeVljLEiNpAeHg4
zQwPsQ5k18OWQUFBeBdjaLEA7+381jPY3hmaKYDBNpbV2SCpzvW4Inzg/UL7
LCicIa1+Lxbs0K1blLTLK3Qqj9n499AYI9PfxI0XZHwuxjJ+kRuH7hNrNNHk
VpjP/LNls7CMrv0BYWAZ4SvLNsLB2VBCVUSj+ocsJXbtDt6BNAcSOLfyuLDt
3J3sd9H1j6v4+5zEpG809onwSBlJNoQDyN/ia5FzBIlrWJaY4QVmRWZrz9pu
fAFYhUNT9NIYQrBbYwr6sISp5fT4WAzqVfbUBSOUuDvVXD2xKJN/6XQ/sMYu
bUVFr5TMRL9ObPaBeGudsJzN9ZEM6AOlCJr6QMC2pcPXNgYnJfBYnFy5VLwL
GiC0pFQnADMsTA7uMbPaB7CK9A0W5YBpQMrhXDIhPVaMZrsordOwMY+mEsZA
e9HITEEjVR3TeOCMNBcCxBhw0B+6aRY0gr6JJLKCjzpErgAyGZYE/wWN7nCA
YyxkQoYAdXs3g0X9Vms/z9mtk5OTNCPRmpvVElqt9urVq/BwdxE0HT16FPe5
d+9eS0ZfS8TExEBJGhsdy/sODQ3d4w4w8kEJ8N5Oqd2F7Z0ZcQtUgSyTklpB
HfM7Ka0k9TL7beFw2EaUkMKy3/nFUNLSqFzRh5jKZkoBpXCQ2c6XzE+sfJEL
2s5i8arjX6F8CpbN/BNavvFJwy3v5n4oZJrBazFNloocBVhBHumQfEnIEpjL
ZTzihbjSv+DrvzkFH8wutxc2kpXz+CJh1TimYUFCQpqP3qKHNEvqzhPrQMBJ
VVB7X8j9u42W6A2w25c4YiyX/YVgtzaBdQ9vK/567co4HvJM7M+E8+AbdWro
UtSujDrXz/chpOwp+gDBXdCla3K26q36bljOJrorFnK/xH2K0j6l2L2uRhGX
6/VYOgu6jd4uhpPyN3g5aGOyxMzGtCABdg7i0j3ganxs0G7gXXNiORZjpzc9
ysUuVKJGco9Fv+5cHq5bYHsel4q/xXKutN9GW3yBrzyzmp7+IEzoDQZYdXd+
mfA2LxV9I8DICpbQSIex8MPhb+y4kn8tQtC5Mw5BgLq9m+GC3eq5OOGCggJo
IY6OOvaVEYvFR44cwT2kp6e7RSo/Pz9oDKKz2D0kICAAHjI3R+cYsY3nzW6N
LiP6tkQ+AUuZa1cnaY2rO2fw6/Rhds+Dok/wsXIl/ySWT0zvfC3l89qsCPP2
Tu9sStqBCTMb3KBeo8aYD0rh8JsWyvhFTqj6PyxeR8zmYnIUQ/z2D5tksAHp
H+PGqxsiz4vsJEJAzfFGcwogmJ+Iq1EIFksluylRs5Neh0Yr9Qsv/jS+iJC6
5NULl+T5ySbrJsym1OrMVgiXCneQeZkWrrKhWxcRN1bcOzZaLq8o8WD332CI
yRGC3SqTq7CQ31wtVGsZlm3Xh1NJAKeV4mV8AdoR1jJPbQNmiKMroFST3Ez0
Dp+JfRMspzAUCMNgP5ua5X7IKLXWG/nEPFZ5B2tWXkiDjB21yJycSyLsYYv5
/2IpmF1o16YgrTSNeR4Shhc1TTjU83LVSeLmqz7pLoGdgO15hO5ypMnAZxz9
0L3EmZwuAhJ5VbRtpbgaDdqZmDfAQhC92JPAYTQa0TsZy3/a92Fclku1pQQF
Aer2boYg7dbY2Fhsc/n4OBMJdv/+fdwDy5o1dhEXFweNQbvOU51OB7NTDx8+
7GjE8vNmt4bkE2NHpVldyPoLfrGoxT20xjDz4lHxQELVv/Cx81JBlEVbWZ8h
tkPWb7C0bYNmZrUpvWhzjNVmpXAu8CX2Eytf5JC8nxOW4MgtbcpyufvYbVNx
+asJf8WNJxeFm00JqyLSNKj59D+QQC8JnSpHaJDWeSE5e6Jfug2ypOEvKOMH
PFKkxPItrx0cv1OBpRUtmxVnFKX8mhaAJ0wg1QgGjtqgsYVx0YyuTCHYrQin
7lZhOQcmGNJ2JLVn8XghHY0QIB+IIwaaU/TgxaCcpV9cM9wFyYhmEz4w6BiK
DmM4NJvUc41d2Hql6bLDcrroSVHbYzdSqLSHbpICNDhREfqITaVm3fo0wSxU
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
D1ot6s6Qqcgf4Ac3pjjyHewKHtftffBBInh8buNgPacslNrhDHivswNf2DpI
UvG5Ca1plVB5RNHTogrODUx4yK8/m3Ur1GgNu691gM9uJbYqVFvVc1lsqTmA
KTSdHlV3jy7cuHSUn0UHsLA2BDXHlD0nptC8wO61nCRd2tFs+rkpPURMDDA3
escWWYVTat+G2iZUsqZwxe6OjnJ5TC+sg/DvXihYqjoGXVvvjbEvj1O4EotJ
4h5wAFM0V3RfXGk8AwKvNJ3lebCsZXLLHoz7OzwuSvihC8Ch+sF5v4W/M5Y1
c+XV8blVYAxPl0BtaXVbbFqe1ZCNpk0ce6ha4faCG52tgDKhBX8UxeFNFJCP
CwjmWpLisMInoYZ5LjbyXcFn77BQ3H4Cft78ls94Smp1i9jdZWHNkwyuvnHc
S3BzNMlyt9JwmmW6TkXdu1z3jXGVg4nFarVuTpXjNBnMtdomQvyUx3V7H3yQ
CB6f2w0DofABqusP4i+8qaiAV7s06FmiBy6r+Vw09UYNVO6IikdcYA5/k1nH
U5KsY9CX9pBflrfyBer2TeWgb/rnYkvNAZzTs6jta/7CtV3TFy6cxEYfT+EN
/TKnei81cps/QUeKHO616q5Qais1nMIJNyvb2bkCyW8CtcmZwlVg8ta2QRUI
/8X1kq3tXLqr8I19+c5xmgWVh+tJOuBzup7JjLlsSrW9MV7A86Baq993Iu/z
iAP8mxIyAOduTqrax/xxTbMlHs/BvSMsqcegtvDCLTYtz2rI2I7mIZ02mQ3X
c38DJR35A8gP7Akzrqp1oQZ83IyDl12Dz97BMFuMOHTa6U5gRj3NLV7d6y+P
kJzwjeNegiijqRlKUUT9mG29RnxvNvXPy7VfqbsjNQOJ6q7wpapj0wmP2hX7
vronyn0Z7niBbu+DDxLB43O7vOs8fIDaRuL4C+vnO+AFrwt+guiBBqMT7lPh
hqT70BnU0FZQ7qNOCiOv1Jrrf8iqHuEpjDNspjhOfSIisJuiUx6S/Pqx42dp
1hJidPAUtlqteLfcZJYpsTLOG8sZwkkMOuiCujsipWwQzI3UcjYvkKdSuC6v
j1PzofhZR8XIiIDwF6PKNyaKoGvzBa/alxeYW0c6xJQ9R42dxdapm/fSgFyt
Ey7rszGNHwTRbQT+wxrp0IFcR2Crp7iJOgl/GbqLdKtEk8evicG04VkNuaD1
SxCmqucKT8n8ls+9xKYAkEUG/5iu5ejBTi+FbcfdFMln72Bg956Q/N87pTQf
UBagXZ0/y5bT3B6+cdxLEGs0jaujc1nP25uu/Jfy1gObikpRBLjjBbq9Dz5I
BI/PbazkOA2sM6on4R3vCHn4jVN8BzEMsHPX+qa0PJzYprhZ8lf+whvjBdCX
wmt/v1XAFwxr61vLwYUrOnaVrSaxuP/D0zehOzO3f8dfnmgaUPma1kXG+N0i
tIDOhLUNjpCThWIaoqsd2zpjBYsjOI19bITD5fJaPpWlB1vAOxjJNW86KhaV
0w3ChyVXGbfSo39LdZj4G/vyOC+n06krOiwWE95fWlNWU2mTfuv08eoO5TuX
guHx2DK+bRPpgHPEQBaYr8NrYSD4k3bZI7r0H1Dh3EqvBzVkq9WCvdP5mbsw
42tM6T9lE5IHM8tddHoXuzi9cQBmtNv98tk7GJiHv0xAWLTRtImTcXvwWP87
OI5Wq3VqvrG2L6i86xzRDaRWq+SEiKNJ1kzNUAr52go0WhfL3zdvLIjV+h0v
0O198EEieHxu2xDwqpycR1j0azgm1D5BiT1ulf8b6nc/KIkfOK1nUhXHqRbG
en889CUt4OXrqXwJGbW6Raj5Rp4Tq1AUYKc4oojyFw7N6HzrRBp0RxF1H395
zF4rj8phthihxauZ93Om9cFhJvr59r7xRbA47FO4Khaa0Vjvk6ELDLD/NlH2
HBU7F0tjKpPz6rZS/ERSEjCLcYNV3mDagGq33Y9lPb/AGz5hhU+udd6gX/OK
j5w+rjeYDpynJNX+mQ+5T5vjAlLrqK/yyOxWKijlPI0y3ueXt7S2O97pbPQO
9ityPaghE6sZJAnO+y3/cZjeqMGHm96g1mJONpd3mcg74p/5ANSjN7pF7Cz1
aOoMa7K5srgJ8raSSYV2RQT9Mvktn8Ej8iRn58R3zW5dVI9gYsCr2ym/q3qu
8GfKu1sg+mhaLUbtaNZ8/iss2iWqLEX/ZKnyYxeS5jiFx3V7H3yQCB6f2zhz
xNxKD3/hrY2+iO/DK//FjQqn9afW7of6J+eFknm6BhwClt34IX/htfZr0JHY
q++cjWnkKczKpiqDWk7sboHHKwQX45qIZj4a/iNqGfFm68hq/AAqt88CKQUw
Q1dY4Z84yyhvPYB9UxdWN8DoOHyJLaRthU9K34Md1PUHQbt1/Q55m9+/SsmQ
iyu2ptZM8h+gd4ZFjhftRt7voGbNppgbv06ByYSJ9Tdf9CaIuj6QIKSG6Lye
8ylU9V1SC6U/EhHhhU9RAbYppuMK+mAUzt9q2m2FNX2BaKyDPKgh46iB3OZP
nJa/Xf0GlO+eSJNBQn5gJ+fWkVsu1xNbRndBp+b5VmynkGg0rVbLoLIotuxf
5HsRUfRMedf5FQ0fc4I3QLHQRHdl859w6iTMAC8akcV/kVpIR/hO2a1kpPAx
N75Sat+WOR+cFJBuNIlGtKmoUHeFLtefWKr5fKXhpLo7UjfTYDVJtbnkcd3e
Bx8kgsfndmTRM7D0rWrZ7Df2mIz+Bei0l6IKnZbHmU95kl2KAhtuZK5MKxg4
mvLGpaOfBTshQQ3J/72cZgXRBKC5Fc0kf+EvQ2uIZt4R8jA9r1zkc3vG3J4d
Y4miCs4NxWIL//GoxbRJd0Ejf0jUP4vF+uqJfLA7WJHU2we4sJPAfYArBbAG
3jPJnR7OaDLvQ8d8jU1biURtvKCHM+yfskmvs9wpbTds0TgYAU2Xd11QxtJ3
3LAiiCx0ZkHjF0ttirJ2uW0lzJfln/kAmQ9bp8DnimD+NPY6yYZgj76pbKgz
p+ljD2rI2A7tmcx0Wr5pKAJLLoOE/Igpe363x3mcKG73g3qahiLdEUmi0cRL
69Vv3SfkJI5zAZXdNMtbUfvXAp/aJrj+JTy4qPYMq/B3x25dWBt2ZLQyV0bD
Ee/hD3cNe2k0Pa7b++CDRPD43A7KfRTWPZ0Az6uxuMdBp41McK5BlaOgM6lz
lNcP3EDnI8H8hRfLjlAD/ILfoYtOjh3xVr/UDs8EOBOl3qjhL/zelVKimQ+G
3Ud5jXr5kszuivRJFGBC5rzmY/YFjKtj9jGVHwaUg90xvcCenDjn0ZpWKXUX
GCTXvAmNOvIfwElwPvAvY77Fq80XoYPk3/ZPYc/wAaXzyHERgYPc23uoHwIx
YIV7LF9JoYzE5xNFyNu+K8yvDULrTIAwZmQib7fJvGuNbhZFZcaW/ctTOhUx
EHD0sRC/X9VqP5QPzn1M4AmaRCDy2/r3OlnNeNA1kQr1ZDc592DngRSj2TNJ
veVZV8dYkujNiQXyvoCcjIO9QGQ2vAcPNg/dlE5CHuwlS4cHBtPGzeK/4hmV
03y0eTgqouhp/MfGwXBPS+oW9tJoely398EHieDZuY2jDolqIURHHUygQYhp
qbedlt9Vnh03YXuM6ERPUOW9BB3xO3d5n1+ehbf7aXXvQOWu5XEQDpw/KDD7
Ef7CZNReO7l1LtkTej/0aLn+BM8jPZPpUL/7zJxCQL6n0CInx+nmdA0Ir8p9
kfkjjhLtGGJnSsWu1IqFZsn7sA3sn7C8PsFZBifBIV1gvsXakUzo4EIRx1tf
2UNPPdw8S9ot4sr/A00PNZ+ichbvgtm4vCMRKvk6+uXGXr7syaIDkxFlNBwx
Wywf+tNNj9TyIRfqxPzkgdm/bGmRaY6xMDlfD2JElfxNyCNkTQhBPE5OA0Ak
BSZlEii/I8wje5xJTuQyRNeQVav9eHuBdZHP6/SSk3APj2BVo0CT/OFd+Zri
bYTb1W9IJyQP9pKlw4OK7gt4OrWOxDJ/1xnWsKMOmYGeTafrJvbSaPrsVh/2
Kjw7t7W6BVjxQvJ/L+SR7sT/glpbnMV3qMcAJ6Z06rvrJrJtuIyK+QvPpj0F
HfnkTChRbtVavkiHgtYvoPLeqSxRBWdjRTMJbfEkW2GwvmFglPOmYEqdN89r
cYyraqB+Yo+LKjs3SjpO8m8paAZv23MBRWZTVt7ipgnWI9gFXeoRYWC1WrBq
6kjHw0lwonN7mG+xYakPOshJ+Iy5a6R+UzBIpwKzH6E7AEWv01P7nl2coWDu
oLNJfzpyuVS7KR9VCHZ1ruy+VNE2BUPwxqkC/lebBzg6oKZR1kNwAA6pLhE8
MXKbj8FTwK7sEeD8RG5Sf5stRvwCbuhXXK5KXA2ZCIZ9oYmVWtZ5rncyE7vN
RBb/xQuZmvDopNYd2NWz65tzuMtC/LVEx16ydBxhO50BpddgfR2IFhda8Ae4
m1T9mqfkdB97aTR9dqsPexWenduL6mFY7gRmTGhOeBvU2ro8J764d2zPQaSO
tCIrNrTlNIpKGUejQQ+dTCD6rUKl5ilf1XOF6oES+0TZEiPv4y9MxGb087Kg
Z6jdWvg6zyPzqwNQvzxZSzBt9egsR4q01dar1I225TLzx6zqEbA+4gvZjH81
vQFQZ8NAiOR92NLTVNDijfwnHBWLyu0BsQvqx5hvsdWkx5xm9pTCo7MVUDn5
uaTtCQJmuArJf0IR+3Ma3Lq0C394g1EL9VzJeOAVv+yriS2yESPjRB6tw0nE
aqZbB3munzbiwNLimijx5HVRBuEUAfgsLL1evulkj6J2mtu3dSTGzdriKymR
4ISKTTMuHOJqyG2jcSAVuYZndpj2x1W1+O8NA6EiNioKMhqOoNGJ3e3j2wxU
sFfshPdeCuwlS8cRIpCTz/buh45VAH87tqdfmUfkdB97aTR9dqsPexWenduY
LUegn09V3Pug1nYUcITpsZtAXIXJNdK6EuE4neVtQlFH2CJGRnlJXvPLIvpt
79gizyM4631lt7S0/9jYdxrG1TO6wOjnARe/EJi+RKtbgvqD8x4XVXZuxJT+
E1qcXxu0L7BU+TEIrxnYOZBt6JkB68M/if1F6xxPhjqF04m4g5nlTmgxvuIl
R8Wwe3P7oAq+xZhSWD/PTj+EcwS7n55SOMbmqugmSdkLNLg1btfpeHBe4LfO
RZPux+b3CqlkTaMfmlpu6put7lDWdCrJj6ZQqXcVkZpUtY/+egXJ9LD1dMGy
mq3mCUdx+wmoNqvCeV5L0WEyGwKzHwYZhCe1wbmNgnIf9WCIK06FRj4HbtZW
2nEKamscjHC5HhE1ZINpA3tls9Yi7OEZlPPrTTfOiEWH2WLEJ8JL6t0lOL5j
u3lY3O4nhZD82EuWDic6xmj8xVXHyQpxrDH52t6lBE17aTR9dqsPexWendvD
M6XUPnKWOIZBbvTnoNkOFn7ttLzNkW7Zc+5KzIvrub+BtnSGNZ6SZt0K9GIo
7D5Gxa3vnuZ5pF+RC5Xnt3wmtuw2wC6jZZ1n+QvXdk0z8p84d4mGiOa9zPMI
+ahhphSiG4sqPgewdsQ5NKpc6n++qaxm/jiqXAUD5PMb1axHsLdzau0uIjFd
xqCyUMh+Ak6CM7OggW/xYtlhe9scoDOuQ+VOg5pFBN6QyS/5D936KH9vt1Xh
DKqHr15kfoGrSS2r62zL0WKxjk2v5tWNXU1sefdSCfxc+HrtZP7Jm/VZ1SPT
83yOEAxuIMPhzbPxNHluKccmiXC0jsRAtYkl77tTlWvArheRRc/s6lnsPaiS
nkqOE2RtwclkdQbnQ8kPnEA5xw1qJhE1ZPwGkW8Qy3tZb9Rgb/PaPmlJHnYF
PLtcyyY2hfaldzs/RcFesnQ4gfOj8eSOX14fx990p3FS3om9NJo+u9WHvQrP
zm3sS1bczsfkA0gMPwma7XiBc7XBhRBa10AUJGiIaEr8pzzG1VHoRVvII4yK
W9jAd0SL2VFSJLaScOLIxsEw/sK5taOM/EdPh9MIyhQnSgjRUqAJ9Ya0FDrE
UIW2iAHLWWY66TEQ3ri6k/1T823oLrnePMNOurSkHoVqGQpZqYEV1IruC5xl
WElwyH/hW7zWHkSJs+q+tn8Wb7xs6Jel6whGURt146zKpCfCmuFd57Ip7zoP
VR298QmM3eunCoj1mlo+lFk1HJ3Xczq64a0zhZy2qqOLjH54Vqd2k3uDBRMo
XU5/6BW/HOap96+W6Q1upVrGh9E3C/7jTlWuAcftFrZ9tatnc5opw7PUXO6O
gJmURLFrVCJVKJaGbLGYsJtB/cAN+zLYizg49zGDiR0j4CnUD4S4PLsYmMx6
nA1HNl53wF6ydOwxMkuT5JKrcyyZp3Bh23EoGV/p0B3Im7GXRtNnt/qwV+HZ
uY3T/NX0Bgh5JDiIpvNQ5L3ltLwLlMWugRhfwreOdbNN0Iua639gtNzbpQM8
j2A3zpiy50WVnQ1sSnRPODEf4gv7GPn3n0ymQxPzMydPoTCxmeUu8WTnAM5R
whlGbbWYsNs2TgW+H6XgZB3b4YDKwOyHZQilxEmdHMWCsZLg3EHf4o3JUnog
nsNhBGGPStk4YBMq/weNtsT8ECQ0b+w6STEmYTsR+8auLFOBV2hG58IqW+0n
vxW0eybpz1C4e9TdPMsrmimoOSjb4WGHdMioPwwCOMoX7AjYXMpt/kQiCfnR
M5kBMriZuYaByWzA1EwuH+CKpSHjmI5rOb/ilMdo2sT+AOQ1EaVp94FDp/um
clyrJLV2v/CvlejYS5aOPXDC4uu5j/EXXl6fwEbu9FK7PEKKiL00mj671Ye9
irftIGfrVT2Xqco67JwcmODUJZrecSbr30IeIestUjP43HfdgWqlD1qJK3dy
MrIxXgC9KLj2D0bLDc/kM99wTCiPu44oyKh/F9oam6viLxyc2g6K+mTkj3iY
fzBwOIzUNA6js5XQFifjkEk9BWJPJ9gcyB4Pq4HeDU6yjyCD0dQiAyRhH7aR
1fg+NOfIEYuVBOcO+hab1qf5NxaE1C86cAbnwZs7zFGzGa6cXysWmqGq2LL/
fhNeK/Q49XQBGeiA261hmZ0h6R0X4pqwrzXr2ueXRwrUdCphH6NzPBva/Trm
pZ1tqBK+bSiBsFhM2EpyJ/eoS61b8Ogsqcd29ThmeHbNC9R94K0esViJbpW/
AHVOuRowK5aGnIKsNp6YDpxb/Fa5oO+m1HAhLzAnmoYioRLO3NySYi9ZOizo
jOuY6b115JbTR/AXRP6xcB93+2h6UJn3wQfZ4Nm5jUk4eyedZxIxmS0f2zij
/klIKzhf9opm0m2puWGb2+Ugf+H1/jjoRVrA/xhF91I8X35Gi9WMueiJQiuq
+DaIq3gRGiLKJ3/hM9ENoNJPxNFUOMY1PrfnEkRv0uks162bwKkWSjpO2hfQ
TdeB2HPZNkpdUAq1yqs6FKwHbQ8onfxQ7gPnOZ1d7uYsw0qCc8f2W0zMVegp
MWNZz2I/W4H7SG5Cs0nd+IMyH0SUzq4wj+GggC0uIIu1rHXq48AKTvPz3Usl
11LaSponplRqUtK+tmX1Znnr1AeODVhyvXOh+L0rZcdCP4R2Pw078so2ixd/
OmbhwJRiMswxjLHZamg6MPuXu/UoIGsUjitf25iRSE4e3K5+HQTgJBJ3AaIQ
FIuiIWMnH/6NBfKi4ThfR6uHnJicbwB53ImzwN4OIflPyEYhzuBut3R4gBmZ
IoueEUK1hHcOA7Ieki3YRCzspdH02a0+7FV4dm5jDnwhSsXquu7gyUTMOCqk
lcSqV6CVmSU2japYIHY3tFLQ+iV/4bX2QOhF7NV3GB34y1Bupj4AptfQbM6L
JzsboQU0+NTpNvixoEpQ46fSnoN+6WYbeZ5qQJFNUlOFVPf6Q1uNg+H2BTQD
SY6YkFPKBqF39hw7tqfGpRL2YRvBeY9Dc8RG4yzDSoJzx/ZbrMqhxEcbk2yB
W0du0bObLjnYa7GeE51KM+Do5130McPOFfCOTM6pK9qm0iuGUssHtxIDDczZ
+/ryYGByif/o9qsoSib8wTU/Yg7viouYH9mN1CjuF5yGRhQUtX2DLQIXakip
fRtqEJ5DRywQEwaHbIsVR4/3wVymyBNFQ8aBNk4TlmU1fkDf7s4z7rfuJmr7
rvFvJwqExWrGb/3C2rCIQjqF8HGcWmgiiyr5ZBS1fT2gzDdb5Msu7RrwriyZ
aQKfikb7bO6nnZIZPrvVBx+8H56d27u1KBUq9at+2aDcTkXeI2RzFRsXfVPZ
YgjOgebhKGilqucKf+Hlum+gFzcuHWW03yOXnRg+sWX0OzIvGT8ni+zX6ef1
AIoAnS06BP3SjmTyPIVpOaVOIpPX8imaABxRVKvNNGh6tfUqvlXTqYTeXUtu
Yz1Y1nkWam4biZOwD9tudXgr29Hu99kYmyQ4d2y/xXjirbWxI8oxv3dGwxHp
+gLAzGypSfft7EfF7/poD5CI8tFMzfPtnOwWOr2pql1xPIzDgD2d8CztRWWO
uCc+ONNHXf91EWt2CnzUm1LjnEzAHnX9QTLvhGDg1MDBeb8Vq1qcjsrljFGi
aMh4gDrH+Thz7tiGSwTnPe5xuymp6lWQZ1DJZr3bFbBJLvU6zIKQcdRszuMN
nKvfHjHPSkzs4A5wjnX/rAcdbZPag/z+8KDURByiw2e3+uCD98Ozc9s24emE
0/L9E0tESxwKu4+St+hXnT4VVfI3aKWw7bgIcnOhsucStOLUxxJnJLl0wY/R
fl89kc+v8abVvQNNjKtqRRWfYkO/LFzZM5jMoL0T+ZcbKNuzuouPiBgTpabX
c8Scioik6tegLc4Ejovl71Ea26FUfGtEsQId/CKEnQoHb1ZInVQXJ8SMLH7W
UbHDl0tB4LmlrXBI/C3WDKVATxeK2O8+5kqNLfuXRB3BwG9NYfy9O1zHNU7c
FXiAKcU6xhJFFBWgnF9Prxjyi6x741TBjod/Go0CE67gCUTvFHXkkJndCDt4
CD9wwRifo57GPBmHJcLIDGVDdc3u5oTBtIEMkPuNpk0XKnFfQ8Z0cwFZD20a
nHwKiaGK2ZnI0LgpgDtgBbe6+dZgj1Z5NtwATsdxRTMVVvgnltHKXIHZDzul
j/AUMPdIZsMuUpJt6FfwyKpW+qQTUnT47FYffPB+eHZuE7MI1jch+dCb+maJ
ltgR8rDAIEoG8RUvy2Ai5bd+Aa04PdVV5b0EXTh32R8MDbVWz/NUAWqCaLOi
ik+xsIYy3jo7TVhY3QDh37tSSmxV6NdKA5/rF6axulX+gqg9YCOi6Gloi2gR
9gXmshy6N6/bpsJhbSwMKAugZneSOQoBToSUXPMmZ5kNnRGkfe1kPhO2ib/F
huUBRwxUBOQdhCaCcn4tXV8AmK62LnaHTFg3XedyhThVkNPUw27CYrWuavTK
hRlJfzR8uicno47JrMcRka452eIZRbRZUqfocvIAByM4yhvlGvBeqGuxou5r
yLV99CxboGVR2nmabhO5lHdGLChQ3lX3k4gtqcfoO5j7qMVqFkVIIeAfR51h
LbKYOmPYXwFZD7tMpCwdrFYLTlQ3NF20q8dtPNJl97JwBz671QcfvB8enNvb
REN0ARfyrSlrmSQKeW3w72kcnMr5OoN14/iK/4ohOwd2dRg6m/YUdOHC9Vtg
ayjn13mequq5Ak00D0eJKT2CbaJYJ9MDH0ceD6vVjlIv7oVSvi0CzeY8tCJp
Xt0tt2ekfpvMOvsyyriHKFuRhs0ec+A8dYReWrM5W5lZ6qBTS+KMdT2T6dCW
owDqESUdjs+Cd3by8bfYajEpon5MO6tVsWrARDrSkW8DMGdaV9Q9207Cjwgh
AHEE7AzpdPaKgumldmgxruJF0evfNKxC/YHZj8hGOzO73EUti2LXLQs8xMQG
F1FCp8hu+gia7pnkC1vYLXKbP6HzdiLV+QN2cF9Dji79B8ggMPBZudgKjwTn
/daDrsI4c2txu5/7FWLfADnpy/jHETPzkyu17sDQdDHmJNy+7l/RsBn/PAu8
qxCU+yjnR5MHI7Pl6OP+hKQckuLCZ7f64IP3w4NzewNtxQfnPS7kkcyqEaKQ
F137G+KWKXH6FGYXiZPMbsUkBk6DT7GhdDUqH2yN3rFFnqfwWVJlj1Reqf2K
XGjFKetI8/YJOHNdSWzRzTVTYt6s53geJN8yeeiRMWPtDS5uGYtxA0VM/9De
aPKLrIM+9thm5FzfnJPH+r6zFSoYDG3V9XMzWVV1KOyjcVnf4rns53len5iy
54RPYzdB1GYaSZ3x87GdY/pT7tSJE56GFvxRLFF5gAnZcqVJ/YD5uMQiF3IK
7HuZ1/Kpy/Xkt3wO9cgce4hNZpWokxkTIpV2nnahBjc15CUUNRCQ9ZDABEkW
qzkEuQpPzje4I4M7wOl7RCGdwDsJjnJbSwGecST9wvZpUfvX8HHBm5BXt+I+
/iKXvIJQ0nESZHMhtIos7NiVbmLedf8ZmeGzW33wwfvhwbmN4/WiSv4m5JG4
gj6ikGcE/JdGIw46T6E+hmKspPMTJkoytLK+yT7GwiAfr6nIe6AL15Obwdao
7WKnJsHom8pBFuXnYvdgB7uyjoubJkD4qJxu07oCuaE68ZkMLfiDwF/MHcwu
d6NdC47jMMPyEM2sdJvDsA3L7IQ+kv7iW0QPtD3MldANEkdudk+kcZZJLO4H
UVPLh5g/sr7FKygG2T7dDHZOGJE4ry7WvUPSdhL06Bfc4iohI2Kb8JTPgUEU
1PQFov0ESXiTkiQjm+JBQeuXyBBwnrrREdpH44Xvg4kIg1EL7fpnPiDuu4mz
niU6I/LlhJsaMl6ld/VRK24/4abF7T7YCZK0SvfrxCTPWY3vu1+hQDgaR7Ly
4C2CpOrXWKfbyTVvYtO1ZShKDnEFgIzOjbzfuWl1YstXat5FEeGzW33wwfvh
wbmN/euccvgzuJHWQRTyuKtvU07UzhtOn8KWi0TcILvi4DVvLtFUPrH3M8Y4
c+XXO0zAR0C+INBEau1+sTuxA0zI4JRgCqeJSa8ctpoNNmzPFj7fb5yNVDrP
ruHpEn59ZmOqFGSez99nXyCndhT6GJPHltNp8KxYwCcUjhzRLye0gKj1PTsO
z6xvsXY0C/qrymW7H5R1noFWpD4dG52toFsKyf+3tW+Q+mf3q40pex6qlYGx
M6fpY2hOolC1wrbj0ITUyY4BOJ/F9BKbSVs4ZrC/sduRjLtpl8YFO43T3y2w
FwcxwVzwbHdTQ06ueYNOCWdMwhhk6YAHQwuelDnbKQNMbkBkEKVOTMsQnPe4
bP1yNI44y09g9iP2trnRtBmY/Uu6AEoQYuAapuYbQSpiwLrmCjWFPI0965G+
K/jsVh988H54cG5jrVUgrcSFuCaikIdd/oCS/zQ6z0OHsyEQK8NtwTmA6UeC
cx/jL4y5cWZS/pRTQ82ixGI+ZzZMICkdwzz263Oqh+OzyIq2LavNJlZUy+fT
iGN/hGTvdQ2Ylp+TqEfdEwUCL9d8wVHDgAr6eC6Wfdp1u/p1qH+Ki6xYLGDy
7SX1KGeZjwMrQNTJOTXzR9a32LQ+Df1VRN1ntVVL8DlORfdFifpi31ZW4hZJ
uLon0v1qsSEpHX0Z4Fb5C9DcjDRmctNQJBoUMfmFHAEfVrpMmcvAZNZhnwSd
QS2inDzoGk+BRvMk8N/Gp2lCyPBZcEdDJr+hy5RZxIIIyn0UnvUI3WvbKF2T
c5qPilInMVSxb+qiekSUap2CcxyJPhCU82sQhjNp+J0tqvAc9JZJ7t8iEHjr
srj9G9cqYXmk3y2uwj671YfvIPR6vVqttlhESzovECaTybV2PTi3eyYzYFkT
GENxPKyGKOT+F78CxXup8mOnT+mNGrw37rbgHCB2BDQRXfoP/sKb0zX4wKu6
g2YIDUnnS2Kr1TkJ1RQFONPc5Hw9f2FmJ4G5Ooa2fH1nM/5KWbPm23meJd9E
aMg1bhMhwJlWmodu2hfAfrOcx/ezixrMmcy6i8383kkJrSS8Oc8ZzmYwmvd9
Kyf5B/kv83f7b/F0wq/oGC3YsKEOThdRW7LxA4n6wsDGZTHuXkXUj4WktXIK
nDO0pi/Q/Qr5gT0eNwSQorsAnFdX6qRRDDCBj/tbZNi0ly2mEqvfxPAXvX5M
xDe4S8LVO+5pyIPKQmg6tmzXFNPEVITHGwZCXBbDZWAB2kfjxaoWJ2rf1Rm0
O+AcR5xzObTgjzy8Rrnop5COfEM4iPmPmYTHVTUuV4Vdhcm/RRRSRJDlKL/1
i+jSf0YUPU00n8yKswJDxb0fPrvVBx6srKzcvn370qVLR48efXsbBw4cOHbs
WEhISFdXl9ksCSU7WV7IgpmQkODv7//ZZ5/t37+ftHvw4EE/Pz/SbmZm5uTk
pJB6PDi38WlLVc8VIY986F9OdPLT589Tx87CN4Q8iEPedkuOJwSKhWao/3a1
E5G0Ixkg/2L5e53D8zzHeRjbDMyScxlh/8CFtSH+wp/fqAbhJ2a36GcXiqkX
98Z4Ps+zdf3XoaH6Aef+3q4B60gDXKybWGDtGEcBk9ny6gnKnaUz2PzsOLxR
OiUQJ9W97uBAn/z+IOTHgRXwd3vNCqcPVvdE4Vs24cDl/xG5G7bAEV5NMT9c
qhYn+BETi0mdnAhvJTkaF/exqKY+kDype0VE68gtaNERebVw4A0K1/LAugCc
tVmKLJnVvf7ubI+4Y7cWtn3lTtM4I3BC5f9cFsNlhBZQy0jEA1+sUcgWSW0/
jsTwIUsBSNI2yhdtsc3yQb/pskWvO8LcSg8Is80kbHC5KhzWtMUqLGNyIiHQ
6hbT6w6BhFhULzn4dhM+u9UHTmxubqalpR06dOhtxzh+/LhCITLJ+cjIyNmz
Z3kaJSCWbHx8vFar5a/Kg3Mbf/cF7oe/daaQ6OSfn7lOSWsznRxuMsCJv6Ug
5MSnVDlNTo6A1d0ROMnp5JzaPneJI2DfGzdztTtCMPrmEnOJv/A7F4pB+FXN
FvPJcu1xZBNxnG8COsdvy7Afm4g4bZSLHGF6s2lPo8NHbj/PT4IqoZvjMzZn
gp3jyVC/y15VTqFa7YdWYsv+xVmmtmsahLya2AJ/t9esyLjQnZOyw/gW+ZpD
Q0493t1EKKLJ7bv5fcPKsCjVYtVLOnd6BmRGQVvSJUIymfVIub3fHWVSIHA2
avdPxLon0qC27MYPRZHQKa7n/kbSNX9AmQ/1u3AI7rLdarVaMQcg55rGD61u
CSnq9wvJnC4i1rTT0Pq1nF+JuPuKI6nDC58Sq1p+2I8j9oIOyf+9U0KwHJSt
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
1UX5LY/L0X3m98UsUx03wrLyRfqi+K/EgjsGqrRX2vvKxSsnSn5gZhCV9uHL
GXFUA3FUCdFUA3FUiUrRpG6Fqizdtmdd06JWyij4fbfHFahle/eIKFo3ZpaH
awGO4TbpNr//wzM7E6jl59IthX3r69O3/0U6alwnvzXZfm3+QbGnf9fjCjhF
JN1umH8azs3a7dorhdIJ2xXP9pgZRKV9+HJGHNVAHFVCNNVAHFWiUjSpW6Eq
S7ft4fGO+WN8t/7GoKV8U6asvPowrqHnwh9Kj1UNWBGLG9Vq/1723ZHfmnXN
aEW3eHfGOS6/23/th2L8kftpYVz5YnQNPhILPnj9O+/GXmUWfFO80jvcYGYQ
lfbhyxlxVANxVAnRVANxVIlK0aRuhaos3bZfD9wTtVJe1X8atDx85Ul4b8ok
DN/bIerKd3e3BGpW/jRdLLWm9Yj8Vv9Io3SG7d/Kb033PZi/I9Px/+a0vQ7j
yhfD43HLTzs9evMvxX+fKv3fJgdRaR++nBFHNRBHlRBNNRBHlagUTepWqMrS
bbuhI1eUS7fqdxi03JBZLurWF10jYVzDdM896Tze3/F8fZMiX01vCsRS8++v
kd96Ij2CtvBRsvzWQOG/SY9tja29hHwvKfnfk/evzzWg0j58OSOOaiCOKiGa
aiCOKlEpmtStUJWl23Zl437p4a1fBGo2OjEjitaf7rzhnA14GWwIPG5X99lv
zt836XWJ32byPXiP3Pgz+S35pky17afF6/auCvlg68xAOE9vXjznrP2L4u/r
itYTJX87G6By96XSPnw5I45qII4qIZpqII4qUSma1K1QlaXb9vUHG0TF1Np9
M1CzR819om79+Pi9sC9j+N5HCx4V9XjcWYXfnX9MzOT8Y2JOlvydeL3n3X8V
px7XTO+lvxDDvi328/ScqOseqpUvaz14/du9w0/Nd1dpH76cEUc1EEeVEE01
EEeVqBRN6laoytJt+/TtfxZFU/9IY6BmZ242ibr1QklL2JcxM/h0/sDoiV+d
nej12+xydbxYbVNngffFCfugeFGrAWdd097XRx/tkQ62/orjXfiXHRa9ww2X
qj7IvvFnedXx/SNNQfVVaR++nBFHNRBHlRBNNRBHlagUTepWqMq6bdvj8Ry8
/h1R9E07bIFafph9V9St9W0DViym7+oP5u/6+zDdb5v7rUfEaovrfu59sbWr
SLx4sfIn3hftPVVarSoGHL63w4o1R51K+/DljDiqgTiqhGiqgTiqRKVoUrdC
VdZt22NTfaLiyy7600DN5Itbf5xaNDnttGIxE2258w9y/fI3XTOjvm26h+qk
G/B+T6u7tRdv1m4XL95rydJecY62d5/+HTFaz/nvuh3jvqMpQKV9+HJGHNVA
HFVCNNVAHFWiUjSpW2HSzMzM2NiY2+1eKvNat213vn0gHan8caBm1U97LL24
1cszO9N99lvSIdfdvm1cbqd8ievASLPb49Iqbuni1jrHyIvuc9+Rzzqe7r1v
0ZqjTqV9+HJGHNVAHFVCNNVAHFWiUjSpW2FgZGQkNzd37969SUlJcV9bsWLF
5s2bjxw58vTpU5crnHfHDfu81m3b8kNwxGm3vo5cnX9y65WK5xYtRjP27Ph8
vXnyN5yj7b5tvnq4Say5svGA/PzZw0V/MvG6pOvL35LvITz29Kh1C446lfbh
yxlxVANxVAnRVANxVIlK0aRuhV92u/3KlSsrV66MCywlJaWrq2vhsaI0r3Xb
dvnTT0XR9/D5cb9tPB7Pqr2lom593jls0WLmvj7k2nPhu6Lk7L/2977Pcm3r
LpafhnO1ZqX4v1/d+IFcsSp8Waug0j58OSOOaiCOKiGaaiCOKlEpmtSt8DU9
PZ2WlmZQOQoJCQmPHj2KzXmt27Yv31shir723tt+27zsHhVFa3z6LZfF51dP
ddyQC8++/L/3eN6bcdY1LZ8qLP+rz/m194vWj7wXwCpMpX34ckYc1UAcVUI0
1UAcVaJSNKlboeNyuTIzM80Uj16JiYmvXr2KwXmt27aP3vyeKPqGxzv8tskt
axV1a1ZenUUrkQ2WrZLLz+5z33ba3sgNKhsP+Batp/J+U7qm9dfHGk9FYKlR
p9I+fDkjjmogjiohmmogjipRKZrUrdC5fPmyrkLcvn17SUlJR0dHd3d3RUXF
/v37dQ2Sk5MdDv2JqVGf16Jte9phkx976nbP+m226WCFqFtrGv0/VjW83I7x
3ry/fP+M318ZKl873nxm8kX+eNOXfdXbDl/7vffq1vzfrv3lwda+K9+fGXwW
gXXGApX24csZcVQDcVQJ0VQDcVSJStGkboVsYmJi1apVcm24e/du7UW5jcfj
OX/+vK6ELC4ujrV5Ldq2uwYfibrvbPn/8dtGPkn4g7Sb9hn/tW3YTffXyk9f
9f2nVakH839bFK2l5/7710dmv6PVtp4ABbiSVNqHL2fEUQ3EUSVEUw3EUSUq
RZO6FbKCggK5KkxLSwt0QPPq1atyy/Xr1y/mkKsV81q0bde/PCfdTDjFb5uc
wkZRt2bmRnR3MT1Q15XzPw1K15aTv3Lz/DcKz3+jPufX+q7+YKL1gmd2JpIr
jAUq7cOXM+KoBuKoEqKpBuKoEpWiSd0KQSsA161bJ1eFjY2NgRq73e7t27fL
jevr62NqXou27Vt1O0TdWtt+xrfBjNMVn35L1K11rQNWLMOA2zk1UPhv3ee+
Hah07bvy/dFHexzvmiO8sNih0j58OSOOaiCOKiGaaiCOKlEpmtStEF68eCHX
gzt27DBuX1VVJbf/4osvYmpei7bt07f/WdStXYN+7mlc9viNKFpX7S2ddVl7
J+FAPG7XdN8D25PD76o+HKrYOFz9c+2/p96UuuxDUVlPTFFpH76cEUc1EEeV
EE01EEeVqBRN6lYIxcXFcj146dIl4/YjIyNy+7Vr18bUvFZs247ZqQPXflfU
rTPOcV0Dt9sj35Ep73Zb2NeAxVNpH76cEUc1EEeVEE01EEeVqBRN6lYI2dnZ
Jk/WFbZt2yZ3GR4ejp15rdi2uwYfiqL1y7J/8G1Q+aRLFK0/3XljdHw67GvA
4qm0D1/OiKMaiKNKiKYaiKNKVIomdSuEpKQkuRi02WwLdtGVnE1NTbEzrxXb
dk3rEVG3ltR/rHvXPjO7Zl+ZqFtPXF8uj5VZclTahy9nxFENxFElRFMNxFEl
KkWTuhVes7OzciWYmJjo8XgW7JWbmyv3Ki0tjZ15rdi2c+9+IOrW5s7rundP
ffVMfvzNO5s97AtAWKi0D1/OiKMaiKNKiKYaiKNKVIomdSu8xsfH5Upw+/bt
ZnppBaPc68qVK7Ezb9i37RnneEbB74u6ddzeL79b/bRHFK1c2RrjVNqHL2fE
UQ3EUSVEUw3EUSUqRZO6FV6Dg4NyJbhnzx4zvR4+fCj3unDhQuzMG/Ztu6Wr
aP7i1tv/KL9V09j70503RNGadOiOw+kK7+wII5X24csZcVQDcVQJ0VQDcVSJ
StGkboVXZ2enXAlmZmaa6VVfXy/3ysnJiZ15w75tX66OF3VrdXOW98W3I1PH
rjXIR1o/SLv5um/hS3QRRSrtw5cz4qgG4qgSoqkG4qgSlaJJ3QqvtrY2uRI8
fPiwmV6NjY1yr2PHjsXOvGHctutauy9XnhZFq/bvYlnZ8YKn249WyRWr9u/H
Hxc9aOoL17ywiEr78OWMOKqBOKqEaKqBOKpEpWhSt8Kro6NDrgT37dtnpldr
a6vcKysrK3bmjQsg2BVOO2z7878tF607z/5QV656//0s7WZNY2+w4yPyVNqH
L2fEUQ3EUSVEUw3EUSVLMZqBvsNTt8JLdwTz6NGjZno1NzfLvbKzs2Nn3jBu
2/uv/I0oWvfn/07C3sO+RevWw5UdvZwevDQsxX04fBFHNRBHlRBNNRBHlagU
TepWeL148SKEI6cNDQ1yrxCub7Vu3jBu23svJYu6NSk7SVex7jxZU9XQ7XYv
/PgexAiV9uHLGXFUA3FUCdFUA3FUiUrRpG6Fl+7+SBkZGWZ6abkg98rNzY2d
ecO4bV+pLMi49uefF6z/4nrul0VNZ4ubL5c/L3n4+ln74MSUI1yzIGJU2ocv
Z8RRDcRRJURTDcRRJSpFk7oVXgMDA3IlmJ6ebqZXVVWV3Ov69euxM28Yt22P
h2OpSlFpH76cEUc1EEeVEE01EEeVqBRN6lZ4jY2NyZVgcnKymV5awSj3Kikp
iZ152bYRiEr78OWMOKqBOKqEaKqBOKpEpWjy3R7C2rVrRSUYHx/vcrkW7JKT
kyPXjzU1NbEzL9s2AlFpH76cEUc1EEeVEE01EEeVqBRNvttDSE9Pl4vBwcHB
Bbvs2bNH7tLT0xM787JtIxCV9uHLGXFUA3FUCdFUA3FUiUrR5Ls9hNOnTwd1
8HR2dnblypWi/erVq91ud+zMy7aNQFTahy9nxFENxFElRFMNxFElKkWT7/YQ
7ty5I9ePp06dMm6ve4TNvn37Ymre8G7bZIpKiKYaiKMaiKNKiKYaiKNKVIqm
Sj8LFslms8XHx4t6cM2aNVNTUwbttQJTrh/z8/Njal7qVgRCNNVAHNVAHFVC
NNVAHFWiUjRV+lmweHv37pVLwqtXrwZq2d/fv2LFCtFSKzwHBgZiat6lUrda
nYNLceV8JmqMbPX4S3Fkq8dn5EiOvxRHtnp8Ro7k+EtxZKvHZ+RIjh/5kalb
Iauuro57X2lpqW8zrXhMTk6Wmx09etTvgI8fP66UvH37NjLzzlG3Wj/+UhzZ
6vEZOZLjL8WRrR6fkSM5/lIc2erxGTmS4y/Fka0en5EjOT51K6LL7Xanpqbq
Ssjr1687HA7Rpr29fcOGDbo2nZ2dfgeUn3GjKS4ujsy8c9St1o+/FEe2enxG
juT4S3Fkq8dn5EiOvxRHtnp8Ro7k+EtxZKvHZ+RIjk/diqh7+fJlnI/ExMR9
+/ZlZ2cnJSX5vpubmxtoNJN1a9jnnaNutX78pTiy1eMzciTHX4ojWz0+I0dy
/KU4stXjM3Ikx1+KI1s9PiNHcnzqVsSCsrIy3yIxkCNHjhg8/sZ83Rreeeeo
W60ffymObPX4jBzJ8ZfiyFaPz8iRHH8pjmz1+IwcyfGX4shWj8/IkRyfuhUx
oqKiIjEx0Uzx6HQ6DcYJqm4N47xzX2/bAAAAANQQdEmD5WFwcDA7OzshIcHv
ZpOent7e3r7gILrze8vLyyMzLwAAAABgmbDb7XV1dbdu3crLy7t48WJpaemz
Z88C3RZYgXkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMvQzMzM2NiY2+2O
9kIA9blcLtvXtKRb5FBkbnSFMZSIltnZ2fAmEVkZLWEPJaJlfHx8eno6jAOS
lcBSNzIykpubu3fv3qSkpLivrVixYvPmzUeOHHn69Kn2fSzaC8QCBgcHC4PX
09MT7YUvd1evXo37pb6+vmC7k7mxI7RQkrnR5fF4amtrz58/n5GRsXXr1vj4
eC18iYmJH3/8sZZE165de/PmTbBjkpVREcZQkpXRpVWUNTU1J06c2LVr1+rV
q71JtHbtWi2UV65c6e3tDWFMshJQg91u1/YDK1eujAssJSWlq6sr2iuFkYqK
CoMIBnLr1q1oL3xZe/36tffLlVd3d7f5vmRuTAk5lGRuFLW3t+/evdv4o9bC
eu7cucnJSTMDkpXREt5QkpVR1NbWlpqaavxRZ2ZmanWoyQHJSkAZ09PTaWlp
ZnbICQkJjx49ivZ6EdDp06eD+P36S/yejSKbzbZt2zY5HOaLHTI3piwmlGRu
VLjd7pMnT5r/wDds2FBXV2c8JlkZFVaEkqyMlsuXL5v8tNeuXdvY2LjggGQl
oAyXy5WZmWl+n5yYmPjq1atorxr+7dq1y3woBX7PRsv4+HhKSoouHCaLHTI3
piwmlHNkbpTcuHEj2M9cyyODExTJymgJeyjnyMoouX//flAf+KpVq4z3tGQl
oBLfv2tt3769pKSko6ND2xVUVFTs379f1yA5OdnhcER74dDTds7a/jaoHb5X
aWlptNe+HA0PD3/88ce+4TBZ7JC5sWORoSRzo+Lly5crVqzQfaRZWVmPHj3q
6emx2Wzt7e1lZWUbN27UtUlNTZ2dnfU7JlkZFVaEkqyMis7OTt+PPScnp62t
bWxsbGhoqKGhIT09Xdfgww8/NLg0lawElDExMbFq1So5W3fv3q29KLfxeDzn
z5/XJXVxcXG01oxAent75RgdPHjwrTlOpzPaa192Ghsb169f7/drj5lih8yN
HYsM5RyZGw3at9wtW7bIH/uGDRtqa2t9W05NTZ06dUoX2atXr/q2JCujwopQ
zpGVUbJnzx75Y1+9evXz5891bbQk8j28/vDhQ78DkpWASgoKCuQ8TUtLC/Qn
JvkmmRrtexp/jIo1urNrbt68Ge0VwQ/tW01+fn5cYGaKHTI3FoQllHNkbjS8
evVKF6yGhoZAjd1ut+7r9Pbt232bkZVRYUUo58jKaLDZbPJ97TTV1dWBGn/+
+edyy88++8xvM7ISUIaWkuvWrZPz1ODydm1vr+3e5cb19fWRXC0WlJeXJweo
ubk52ivCezwez8OHD7du3RpnaMFih8yNunCF0ovMjTytDJE/8+zsbOP2w8PD
CQkJchfdoyTJymgJeyi9yMrIKy8vlz/zffv2GTTu7++XG69Zs8a3DVkJqOTF
ixdyhu7YscO4fVVVldz+iy++iMgyYZbuGg2Tj2xAZGi/QD/55JM4ExYsdsjc
6ApjKL3I3MjT3aelqalpwS66+5G2t7fL75KV0RL2UHqRlZGnOxSulbEGjbUy
U/dQG93Zv3NkJaCW4uJiOUMvXbpk3H5kZERuv3bt2sisEybJF9lt3bo12svB
e7SvPXE+1q1bV1dXd+LECfnFBYsdMje6whhKLzI3wrRvvKtXr5YjNTw8vGAv
7Uus3KWyslJ+l6yMCitC6UVWRl5FRcXx48c/+ugj7wHxt2/fGjTWQq+7g5Pv
s1zJSkAl2dnZcoaaeQaW7umEZn5BIDK0WMihOXLkSLRXhPf4FjtaAtpsNu2t
YIsdMje6whjKOTI3Glwu11dffXXmzJmsrKy0tLSUlBQzvfbu3StHqqamRn6X
rIwKK0I5R1ZG2+zsrHHRqtH2rnKMtBpWq2R1bchKQCVJSUlyenq/dxnT7QTM
nJCDyGhoaJBDI24ioe3/e3p6amtrvU8EMLhXPCwlFzv79u1ra2sTbwVb7JC5
0RXGUM6RuUuE9pV4zZo1cqRaWlrkBmTlUrFgKOfIyqXgwoULcox27tzp24as
BJSh7X7l3ExMTPR4PAv2ys3NlXvxnLLYUVhYqNvZPnz4MDU1VXd3Pi3Qu3bt
0uJot9ujveTlxVvsZGRk+F5LFVSxQ+ZGXbhC6UXmLgmVlZVyOLTojI+Pi3fJ
yiXEOJReZGWMKykpiXtfVVWVrg1ZCahE21HLuRnoVvA6WgrLva5cuWL1OmGS
7o+EmzZtijOUnJzMDRIjzPfbkVdQxQ6ZGwvCEkovMjf2aVXJxo0b5SjoHrpB
Vi4VC4bSi6yMWa9evTp8+LDu809JSdGqVF1LshJQyeDgoJybe/bsMdPr4cOH
cq8LFy5YvU6YtOAjOfw6d+4cZzpFXVDFDpkby0KoW8nc2Hf+/Hnd568llNyA
rFwqFgylF1kZUxoaGrTP9tChQ7rn1HglJSX5vQqVrARU0tnZKedmZmammV71
9fVyr5ycHKvXCTPsdnsIv2S9ioqKor385S6oYofMjWXB1q1kbuyrrq7WffK7
du3SnXBIVi4JZkI5R1bGnpMnTwb6wA8ePDg0NOS3F1kJqKStrU3OzcOHD5vp
1djYKPc6duyY1euEGc+fP/fdn2/atKmgoKC3t9fhcIyNjbW0tGi/UteuXatr
lpiY2N/fH+2fYFkLqtghc2NZsHUrmRvj6urqVqxYofvYte/DumZkZewzGco5
sjL26J7rKvv0009ramp8TxKeIysBtXR0dMi5uW/fPjO9Wltb5V5ZWVlWrxNm
3L59W7czT01N1X63+rYcGRnRPaVdk56e7nsDeURMUMUOmRvLgq1bydxYVl9f
732OpMz39i9zZGXMMx/KObIy9mzevDnOkJZx09PTul5kJaAS3d+Ujh49aqZX
c3Oz3Cs7O9vqdcKM0tJS+X7v2u/Nqakpg/baDly323/y5EnEVgudoIodMjeW
BVu3krkxq7q6WnfzWM2lS5f8NiYrY1lQoZwjK2NPfn7+mTNntLhoobx69eqB
AwfifOzcuXNyclLuRVYCKnnx4oWcmyb/pqR7qBln/scUp9PZ39/f0tLicDiM
W2rNdH98LigoiMwi4SuoYofMjWUh3JdpjsyNPTdu3PD9Ynzx4sVA7cnKmBVs
KAWyMpZp1eWWLVt0YdVKWrkNWQmoRHfFekZGhpletbW1cq/c3Fyr1wmLaL+4
5VCavPQDVljMfZnI3JgSWt0aFDLXUrOzs9o31TgfxpUOWRmDQgtlaMjKyLPb
7brSddWqVfITyshKQCUDAwNybqanp5vpVVVVJfe6fv261euERXQ3e9+2bVu0
V7R8BVXskLmxLAJ1K5lrncnJSb93gCksLDTuSFbGmpBDGRqyMipaWlp08b19
+7Z4l6wEVDI2NibnZnJyspleWgrLvUpKSqxeJyyi+1NkfHy80+mM9qKWqaCK
HTI3lkWgbiVzLTI4OPjzn/9c9zU4ISGhpqZmwb5kZUxZTChDQ1ZGS0ZGhvzJ
y49bJSsBxci3cNd2s2ael60768a63wKw2ujoqO7X+szMTLQXtUwFW+yQuTEr
AnUrmWuFjo6OjRs36j7Y1atXNzc3mxyBrIwRiw9lCMjKaMnPz5c/dt1DWslK
QCXp6elyeg4ODi7YRXfiTU9PTwTWCSvobhFv8k+RsEKwxQ6ZG7MiULeSuWHX
2Ni4atUqXd2hfbBdXV3mByErY0FYQhkCsjKMtJJfywUzGTT39c2i5U8+NTVV
fpesBFRy+vRpOT0X/LPS7OzsypUrRfvVq1fzkLJYYLPZjhw5ou1sU1JS1q9f
r/2vmV5auOXo79+/3+p1IpBgix0yN2YFFUoyNxa0tLQkJia+X+j84pkao6Oj
QY1DVkZdWEJJVkbLyMiIVmaKY+WffvqpmV66+0VrgZPfJSsBldy5c0fO6FOn
Thm3191U3ORDnGG1np4e3W/qgYGBBXvp7n94/vz5CCwVfgVbt5K5MSuoUJK5
Udfe3u57eO7QoUMhnORJVkZXuEJJVkbL0NCQ/BnGx8fbbLYFex07dkzupf1f
+V2yElCJtk+QH8a9Zs0a44draykvZ3R+fn7Elgpj8kPSNaWlpcbttV8Qur9L
a7v3yCwVvoKtW8ncmBVsKMncKNLyaMOGDXHvy8nJCe0IC1kZReENJVkZLdu3
bw/qYxwbG1u3bp3cpbi4WG5AVgKK2bt3r5ykuqc2y/r7+1esWCFaarsCM3+E
RGScPHlSjuPGjRu1/blB+8OHD+vaT09PR2y10AnhokgyNzYFG0oyN1q0imb/
/v1x7zt//rzH4wl5TLIyKsIeSrIyWs6dOyd/kklJSRMTEwbts7OzdXHXMkvX
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
juiyZ8+eYFcol72a1NRUg8a6c4ybm5uDnQ4AAAAAsEi+F6WOjY2FPNrx48fl
oYzvS3z58mW58e3bt81M8fnnn4suRUVFwa6woaFBnvTUqVMGjZOSkkTL+Pj4
6enpYKcDAAAAACxSdXW1XMclJCQsZrQrV67Io+3evdug8d69e+XGHR0dC47v
crlWr14tunR2dga7Qt3thUtLSwO1HB4eNn9kFgAAAABgkcbGRt3xVq02DHm0
ixcvykNlZ2cHaul2u+UKVKuXnU7nguPLV+Nu3LjR4/EEu8KjR4/KK2xrawvU
sq6uTm559uzZYOcCAAAAACxeT0+Prm4dGhoKeTTdBaFaGRuoZW9vr9zS+Ixi
4erVq6KLyethdT788EN53snJSTNzaaqqqkKYDgAAAACwSFrhpqtb29vbQx5t
165d8lDFxcWBWt67dy+Eo5mpqamiSwj3PZ6YmJAn3bp1q0Hj/fv3y427urqC
nQ4AAAAAEBZr166VC7SHDx+GPJR8I6M4w4ernjt3Tm5ZXV294OA2m03uMj4+
Huzympqa5BH8PqbH78+yYsWKxZw+DQAAAABYjJycHLmaC+38W013d7c8zurV
qx0OR6DGuiOzvb29C45fU1Mj2ps8r1insLBQnrSioiJQS7vdLrfctm1bCNMB
AAAAAMKipaVFrtFWrlypVW0hjKO7KZPBI2acTmdCQoJc4brd7gXHlx+yk5+f
H8IKDxw4IK/Q4NTf169fyy0zMzNDmA4AAAAAEBZazbhp0ya5TLtz506wg2il
6Lp16+RBtHI4UOOOjg655Z49e8wscsOGDaLLixcvgl3h5OSk+WL5yZMn8grP
nz8f7HQAAAAAgDDKz8+Xy7SdO3cG+4iZhw8fyiOkpKQYVIXl5eVy48uXLy84
vnwAdO3atSFcbXr//n150v379xs0ls9J1ly/fj3Y6QAAAAAAYeRwOLZt2yZX
aoWFhea7j4yMbNy4UfSNj49/+fKlQfuTJ0/Kc9XW1i44hXxpqsFjYQ3ontFj
cHGr5vbt23Lj0tLSEGYEAAAAAIRRW1ubXKlptWdjY6OZjk6n85NPPpH7Xrhw
wbhLSkqK3P7du3cLzvLpp5+K9pWVlaZ+JIndbl+5cqUYISEhweDJrZqioiJ5
hSGcOA0AAAAACLvTp0/Lxdq6desGBwcX7KW7HfHWrVtnZmYM2k9PT2tFsWi/
YcOGBaeYmpqSuwwPDwfxU33t2rVr8iIPHz5s3F53vNXMmcwAAAAAAKs5nc6D
Bw/K9VpSUpLBUdeJiYljx47p2vf39xvP0t7eLnc5cODAggurq6sT7VNSUoL9
uUZHR1etWiVP+uTJE+MuuvsymVkkAAAAACACZmdns7Ky4t53+vTp6elpXUut
lpSvadVs2rRpwaJVU1FRIfda8KTiufcPBOfm5gb7Q+mOI69fv37B2zp1dXXJ
XcwcFAYAAAAAWKGgoCD7fYcOHYrzsXXrVpvNJnqdO3fOt01KSkq2j7GxMd2M
eXl5cq/09HSn0+l9K9AtiDdv3izaNzU1BfUDdnd3y+cYa7QfecFeU1NTup/O
zEW4AAAAAICwS01N9a1A/erq6lpkL6+zZ8/q2qxcufLDDz/U/vfEiRO+K+zt
7ZVbOhwO8z+dVn5u375dnmvHjh2iTDamu3nU6dOnzc8LAAAAAAiXyNetZWVl
gRrn5OT4rrCkpEQ0yMjIMP+juVwurb08fnx8/KtXr0x2153PrHn9+rX52QEA
AAAAYRH5unVsbGzTpk1+G/t93Ixce5p/jqrH4zl+/Lhu/KCujZ2enl6zZo3c
fdeuXdqw5kcAAAAAACxeenq6yQp0YGBgkb2E/v5+37s/aTo6OnQtHQ5HYmKi
aNDX12fy55JvQey1bdu2oM4x1ly8eFE3SGdnZ1AjAAAAAACWrqGhoaampsrK
ypqamhcvXoyOjvoezXz9+rWoGbds2RKVdQIAAAAAEIhWyQ780sjISLSXAwAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAQvf/ARV0yek=
    "], {{0, 384.}, {628., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{628., 384.},
  PlotRange->{{0, 628.}, {0, 384.}}]], "Output",
 CellTags->"RasterizedOutput",
 CellLabel->"Out[5]=",
 CellID->286759230,ExpressionUUID->"b321bc18-e8cb-4163-a597-3974a0da94c9"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{14., {0.45000000000000107`, 13.549999999999999`}}]],
  ExpressionUUID->"5dd9f241-8a21-488f-83e8-c8ad632e8583"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"f3a8efe6-fd34-4868-b9c4-5b60749e6b3f"],
 "Single qubit (using Pauli)",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "fd3f9858-46eb-49be-b6f9-675c5a1346f1"]
}], "ExampleSubsection", "ExampleSubsection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->1763377983,ExpressionUUID->"b315cb36-5373-47cd-97de-17bab6564873"],

Cell[TextData[{
 "Let us consider a single qubit and solve a master equation specified in the \
Pauli operators (for ",
 StyleBox["unlabelled",
  FontSlant->"Italic"],
 " systems)."
}], "ExampleText",
 CellID->1231127355,ExpressionUUID->"84a8bb94-3738-4fdd-998a-a676c410b0b6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Pauli", "[", "0", "]"}], "+", 
      RowBox[{"Pauli", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[1]:=",
 CellID->427878852,ExpressionUUID->"c815928d-30dd-4306-9226-763c59a5b978"],

Cell[BoxData[
 TagBox[
  FractionBox[
   RowBox[{
    InterpretationBox["\<\"I\"\>",
     Q3`Pauli[0]], "+", 
    InterpretationBox["\<\"X\"\>",
     Q3`Pauli[1]]}], "2"],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[1]//MatrixForm=",
 CellID->1834244432,ExpressionUUID->"4cf694ba-98ca-4244-8a4f-8c0e4fba1d08"]
}, Open  ]],

Cell["Take the effective Hamiltonian.", "ExampleText",
 CellID->179139186,ExpressionUUID->"c888aaaf-3eb1-47ec-86c8-b2339cfab540"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"Pauli", "[", "3", "]"}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[2]:=",
 CellID->1686455809,ExpressionUUID->"36708342-88a8-45d9-ba11-abaf2e30af68"],

Cell["Take the quantum jump operators.", "ExampleText",
 CellID->311882181,ExpressionUUID->"ef1a7553-c534-4afc-81d8-b9ffa2c33d55"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"Pauli", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[3]:=",
 CellID->1773608757,ExpressionUUID->"7ff2ca08-e5c0-4c88-8805-fedfe21494b0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"+\""},
      "Superscript"],
     Q3`Pauli[4]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"+\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["+"]]]}], ",", 
   RowBox[{
    InterpretationBox[
     TemplateBox[{"\"X\"", "\"-\""},
      "Superscript"],
     Q3`Pauli[5]], " ", 
    SqrtBox[
     InterpretationBox[
      SubscriptBox["\[CapitalGamma]", 
       TemplateBox[{",", "\",\"", "\"-\""},
        "RowWithSeparators"]],
      $CellContext`\[CapitalGamma]["-"]]]}]}], "}"}]], "Output",
 CellLabel->"Out[3]=",
 CellID->1507400988,ExpressionUUID->"a08d7e1a-7825-4aa5-bb6e-c594a79aa93a"]
}, Open  ]],

Cell["Solve the quantum master equation.", "ExampleText",
 CellID->1806524081,ExpressionUUID->"5ace15ec-b14e-4723-8ec9-0b0b44c3d119"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "rho", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"rho", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[CapitalGamma]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "@", 
        RowBox[{"Matrix", "@", 
         RowBox[{"Normal", "@", "opH"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"MatrixForm", "/@", 
        RowBox[{"Matrix", "[", "opL", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NLindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[4]:=",
 CellID->813112276,ExpressionUUID->"d7546a56-0010-41b9-99ea-dc75f1899826"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {2, 2}, 0, {1, {{0, 1, 2}, {{1}, {2}}}, {1, -1}}]]]]], "Print",\

 CellLabel->"During evaluation of In[14]:=",
 CellID->352814491,ExpressionUUID->"de097a6a-8f20-4720-8341-8a39875e3d12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.5477225575051661`"},
       {"0.`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 1, 1}, {{2}}}, {0.5477225575051661}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.`", "0.`"},
       {"0.8366600265340756`", "0.`"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0., {
       1, {{0, 0, 1}, {{1}}}, {0.8366600265340756}}]]]]}], "}"}]], "Print",
 CellLabel->"During evaluation of In[14]:=",
 CellID->550800870,ExpressionUUID->"4b418d80-1277-4bc5-bcab-dfa24da68670"]
}, Open  ]]
}, Open  ]],

Cell["Examine the expectation values of the Pauli operators.", "ExampleText",
 CellID->1655703520,ExpressionUUID->"9e2675bc-cddb-4e54-9a6a-bf65907a7dee"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"avgX", "[", "t_", "]"}], ",", 
     RowBox[{"avgY", "[", "t_", "]"}], ",", 
     RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{"Elaborate", "@", 
        RowBox[{"\[Rho]", "[", "t", "]"}]}], ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"Pauli", "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}], ";"}]], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[5]:=",
 CellID->1408697964,ExpressionUUID->"942a0c5e-92d4-4678-9f8b-c07198769f23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega]\[VeryThinSpace]\!\(\*StyleBox[\"t\",FontSlant->\"\
Italic\"]\)\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*StyleBox[\"X\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket], \
\[LeftAngleBracket]\!\(\*StyleBox[\"Y\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket], \
\[LeftAngleBracket]\!\(\*StyleBox[\"Z\",FontSlant->\"Italic\"]\)\
\[RightAngleBracket]\>\""}], "}"}]}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellProlog:>Needs["Q3`"],
 CellLabel->"In[6]:=",
 CellID->743762978,ExpressionUUID->"b6b8f868-4683-4b1b-9c7e-17ccfd969eed"],

Cell[BoxData[
 GraphicsBox[{{}, 
   InterpretationBox[{
     TagBox[{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJw11AlM01ccwHEOuWFAwYKcPTgElJCBcbLh+yGiEKRELVMxnBuiwChULhmO
q+gABYGVKLK4AuESpDJAjklloKhpS4AxMkbRhcnhKIMNGExwW9efv+Sfpul7
n5d83z+lR3FORKupqKhE//coPt/N238U84JU3lJMN7m9cvA35rgMvz8jvGqG
77G7k8TDXTFjpPnFyGZ474/4+08k39E5cQJGiVJ7SRxL18bclp7j+hliFH9z
zs61n8ScU8wscasYJ9mN93D/AnE7mN31sy5PJBErZpEEHm6XWRS1iZTeMqnv
d3e+4PhIpFy/QrgtXsl/9DwWKf0/ybCBvCZx9hnuXyWeYfNzDIFYpDxvnbR1
zcn+WpGgt0Gm7ni2SuQS9DaJMy0hh3SI0XtD+jua6w5xn6O3RfQvnk7ODx5C
7y0JWk7JnSofQE8FzDgW0tShPlyvAgx+i0f7Wgf6qmC7tuGS5daE+9VgP/Wk
+I5rGZ6nDkePtzTztwqx3w6IK5vbYEhridLbARcjW6u2TwmxlwZI3p85WWzY
gT01YSjVL+v3jC7srQXCFr1SbkUPetpwxcM1ICi+Fz1tOK3PjviV0oueDnh1
y2sbmrrR04X4My7ps2cfoKcHVZOXnEPZ7ejpw9c+pp0zg0L09OGXpwJqQF8j
egZwwUyabVUvQO898Fnae1PiVY6eIbSld0Y/TOKgZwRh88KVCSce9jEC2etC
fmtIBfY0gn3aH/bGHf1G9P92d2Ooljxe9/aqxb7GQHlibyVVrcf7oMByGj2m
hN+AHgWqXR+Eems0okcB3oH991zPN2B/E7huoplMpuvQM4H8PaMfTF+vRc8U
WKPdWhKBAD1TKMzPN9AorkLPFGCjssUvmI/eTjgzYh808LIIvZ3whGa95SHK
QI8KPYdLUuKLGNiHCosJLns8/S5hTyqEx5Yf62VdxV5m0FJCkeWp3cC+ZqC3
GskOY5VjP3NYTLV0+i6Xj545+J9il6fVVKBnDoJhp/u7RRXo7YIb7CgokPPR
2wWJ0yGRgsCv0LOAeV0hZ1y9DD0LyHDXWprgFKNnAbXyZqm3w5foWUJ4h+zI
/cwc9CwhR8tSqpObgp4VdI5+sbd9IQI9K4hzGi/dvhaI/ayAyvLz/9vkM+xn
DQ5en07aD6ZhP2vYN2Wuc2J3FvazgRDfsdHMgFy8DxugP23KeKX+7v/DBnj1
RimvBnjo2YJqwfbnn9zmoWcLl4fzvqVX56FHg+4jI0yd9Rx8v2jwg3i5sI+b
hT4N7nrkhq/SM3A/DcYnnO30fZPxPBq4U7g1woB49OgQNRg9LzCJQI8OrvzM
rauXvdGjg/H5WHF0uT/2ooOqg0dsXX849qXDkI7x2aWRGOzHgALGQptUL4Eo
PQbQzXxc1D5Kwp4MaNDUvpZQyEWPAaKc79P7NrnoMUAvlNwSVnLRY0IgO1jw
kJeE98eEihWZoVojBz0mZB9omnFix6HHhOY3qo9mWOfQY4LKmP3rflkEenZA
O86SR1z5mPwLCS+7WQ==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0n001XccwPE7z4U8X5er6z6krS11Da1cfD+YobWQmTaZaPLQOR5Ctnkq
CodoY5JLniZMrjxsQ2e5cesaJWR0ylwNuXPcbWriIrbZ/fRPn3N+557f+X2/
r+/vvH+XFRx1KESJQqGE/Hdt/L46/OKN6SCV6c4zqdx2orjvJcolZhN6uWJi
Y70xw+S5+4ooxXQAnz8kp36NX/W9c58olMfkWq81M1P+C66fInzKi51+tFES
enxjZsheby/5vb2juH+WxIqsOHPRI6T/7sbISE/vR/MPJMPozZOkjJ5wtZoh
XP+UlOq4a6Q/6kf/byLwk/ALO3pw/wLJl1YacPd14XmLZHZTbZh8/w/oycn4
d6r9dbqV6C0TFpcnFYxlCxXeKhlJkaYsPL8qVHgvyG51w4QE9TahwlsnbdBf
P+3RKcRsQKnn8lOHunA9BegMz0CDcyKhwn8NKj09/+x3vYX7laA28uAfmzm3
8Dxl+J0KklFrEXoq0KClPOlW+NJTgYA98flZQ53oqcKMzf2Az6s70FMDwZnG
+meyVvTU4Wya0zeOM1fR0wBu2YRoeK4cPQ2Y8BIf1dZJQ28TnPzHajyZloW9
NkPFGKWRV1WGfTXhQNHlvCZ6LfbTgh5e+luadgLsrQUm9Hw9aV8T9tQGG12n
oBhqC3pbwEXKZAxntqCnA0uX1gLsd7egpwvPBFqRCZxmXK8LFrR1pXbKNfR1
4a+JxuvhffXk/+3WevA1LW7ee+YKnqcHvtxll+iiCvT0ocZNteOYw0X09OFG
PCmlTWagpw+9qXf8C/x98H0MwOb4pw5XrE5jDwNonLpw1tTqK+xnCGbV5lTW
+EXsbQhe+k9511dKsKch9I++v6SRWI79jeBnu/Y3K5sq0DOCmkUng4jHFehR
Qf2hSkNWQAV6VOijv1efmVSGHhXCT/BOsu1K0DOGNYn6iP2uIvSMIW1E6Cwq
zEePBj/lStoo/jno0WAlZfH2x4Fn0KPB8mqNhyAvEj0TyGY0sY6VuGE/E2it
o9h/6xOL/UxBxp5o7Wo8jf1MYU5tsKbgyMt+pkCKZR5+xdnYjw6vzzc/iT2S
ix4d1uSBUZ8I8tAzAyvurGZLZR56ZmBZ/kYcwz8XPTOIOb/0202VHPS2QvfC
oycFg5nobYVS122ymwvp6DHAOGCQZnwoFT0GbJ8OCxp1P4UeA8QN1q2XT0Sg
Zw5O7TvU9ki80TOHlnfu2fiuH8B+TNCbFtm4FIcIFf8vJsi6lUKdxqKxJxPM
ZEqdYXXx2J8JB/UvDViwvsC+TNj5Y3ColnMieiyoqkqmTxgloccC/oetPeLW
RPRYsMY7d97W4Uv0WCA35+8oGEtAjwW24mXpwI049Njw7gc5mctGMeixIdy+
eWrEMgI9NiSPUbYcng5Cjw3+sd21+w/7oMeG+dRd26MyLNHjgNv32iliR1fs
w4G+B7nVHhZ+2JMDw8HMxdrbR7EXB2Zn9znK736GfTmgJrzALCgJxe+xDYY8
J5ts3w4n/wKZDrn6
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], Thickness[Large], 
         LineBox[CompressedData["
1:eJxd0ntMU2cYBvAid2TIpUChBXrZNE5GYDDJIvq9GFFUMCDjMg0L4y4ICMZV
5hgyIXIRhUJpy1CDSmQMZBJYaYKWe1stIKJDM+ZEBsSFDdkG0oB1Mr+3f+xJ
Tk6+nPf5vScnhxefdTBpHYPBSHpzrd3/n1rZWhQkRDkdszOvSvn2rCEh86bb
f7lwRennu5YxEuPbmba/tIk+f0xi2BbRXpM/KN8qT8lYurtV8HvtdH6K7Lrf
Mn/PRa5MSV7LDLFqPp50eFBB+89J8+7ZlB6fLuWQdi1zJFisGPko/jb1XpDA
7n0RTV7ddH6BHHkwJ2Uxe6j/N7Eevy+6OdVD+/+QSu8WbsnlXrpviax6viw/
vbePesvEeLjxwP6pPurpSBq74+TxzH7qrRDjq4LC2Ll+6q2Su+GzzJDPBqin
J198comTMDBAPQaIVN43mviDdJ4Bxb9GDdkJB6lvBE+YJr3H+gZpfx2wChe9
yixUdJ8xDEfa8Oz3qKhnAt2ZurGGfBX1TGDCzvHj8TYV9Uyh3uNx7uZJFfXM
YINHaqDDejX1zOFoOGvptbeaehaw29y5LyxCTT0LeL0lrjo2R009S7DKMlo+
cV5NPSsISx55PnkdvfVwOKq37Nlt9KzBVskdahtDzxq65guMimfQewc6T105
InqJng2UsI1vvDLTUG8DlMyeDVtgaqhnC1sT/GwreRo6bwuS9q1Brzw11LeF
6YRB3wh/jfK/uq8dXM3iRreAhu6zgx1VcQ2CvejZQzVvSns3DD172Bz1c7oi
Gj17uBhYslMfi+/jACsNt+KaEtBzgENt+gPaVPSYcOp0v292BnpMyMt6f/Fa
NnpMGG9Nj845gZ4j/LEplzV1Ej1HmObMWzC+Qs8JdBu/549+jZ4TsK9tuxhb
gJ4T1GbGMprPoOcMKc5yv94i9JwhqHBV1HAWPRZsPFa/cKgEPRb41O64OVOK
HgsmojSqkHPouUBRhuJORTl6LpDb5b/ccR49V6jwzCDKC+i5Qt128+DWCvRc
ITXTNLe4Ej02HPzzqT5EhB4bfvrUfVQvQo8D46PR8stV6HEgMUgb6lONHgf8
mvMtO6rRc4PrXUvbPMXouUFoq8RJKkbPHarknS06MXruoDNLXAmvQc8d5Ecf
TdbXoOcBkaZDH/xeg54HPFTkSbdI0OOC9FGRJlmC/xcXGs+Ux9RJ0OdCWuDw
sFaCfS5AVU7jsgT3cWHR6UEkV4oeD/76/NuAXVL0ePCbsL8zUYoeD/TCUrdv
pOjx4N5EwI91UvR4YJnNULUbPD7kzOaV3zF4fDj3MD/wicHjQ29DgeMLg8eH
+Flvf4YMPT7s+e7ZiI0MPQEoL62acGT4fQRQJIxc3iRDTwBEXKb+UIaeAMTC
iMoAgyeAFP9b6UEG713IEH6ZGfrm/C9ojOhO
          "]]},
        Annotation[#, "Charting`Private`Tag#3"]& ]},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
          Annotation[{
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJw11AlM01ccwHEOuWFAwYKcPTgElJCBcbLh+yGiEKRELVMxnBuiwChULhmO
q+gABYGVKLK4AuESpDJAjklloKhpS4AxMkbRhcnhKIMNGExwW9efv+Sfpul7
n5d83z+lR3FORKupqKhE//coPt/N238U84JU3lJMN7m9cvA35rgMvz8jvGqG
77G7k8TDXTFjpPnFyGZ474/4+08k39E5cQJGiVJ7SRxL18bclp7j+hliFH9z
zs61n8ScU8wscasYJ9mN93D/AnE7mN31sy5PJBErZpEEHm6XWRS1iZTeMqnv
d3e+4PhIpFy/QrgtXsl/9DwWKf0/ybCBvCZx9hnuXyWeYfNzDIFYpDxvnbR1
zcn+WpGgt0Gm7ni2SuQS9DaJMy0hh3SI0XtD+jua6w5xn6O3RfQvnk7ODx5C
7y0JWk7JnSofQE8FzDgW0tShPlyvAgx+i0f7Wgf6qmC7tuGS5daE+9VgP/Wk
+I5rGZ6nDkePtzTztwqx3w6IK5vbYEhridLbARcjW6u2TwmxlwZI3p85WWzY
gT01YSjVL+v3jC7srQXCFr1SbkUPetpwxcM1ICi+Fz1tOK3PjviV0oueDnh1
y2sbmrrR04X4My7ps2cfoKcHVZOXnEPZ7ejpw9c+pp0zg0L09OGXpwJqQF8j
egZwwUyabVUvQO898Fnae1PiVY6eIbSld0Y/TOKgZwRh88KVCSce9jEC2etC
fmtIBfY0gn3aH/bGHf1G9P92d2Ooljxe9/aqxb7GQHlibyVVrcf7oMByGj2m
hN+AHgWqXR+Eems0okcB3oH991zPN2B/E7huoplMpuvQM4H8PaMfTF+vRc8U
WKPdWhKBAD1TKMzPN9AorkLPFGCjssUvmI/eTjgzYh808LIIvZ3whGa95SHK
QI8KPYdLUuKLGNiHCosJLns8/S5hTyqEx5Yf62VdxV5m0FJCkeWp3cC+ZqC3
GskOY5VjP3NYTLV0+i6Xj545+J9il6fVVKBnDoJhp/u7RRXo7YIb7CgokPPR
2wWJ0yGRgsCv0LOAeV0hZ1y9DD0LyHDXWprgFKNnAbXyZqm3w5foWUJ4h+zI
/cwc9CwhR8tSqpObgp4VdI5+sbd9IQI9K4hzGi/dvhaI/ayAyvLz/9vkM+xn
DQ5en07aD6ZhP2vYN2Wuc2J3FvazgRDfsdHMgFy8DxugP23KeKX+7v/DBnj1
RimvBnjo2YJqwfbnn9zmoWcLl4fzvqVX56FHg+4jI0yd9Rx8v2jwg3i5sI+b
hT4N7nrkhq/SM3A/DcYnnO30fZPxPBq4U7g1woB49OgQNRg9LzCJQI8OrvzM
rauXvdGjg/H5WHF0uT/2ooOqg0dsXX849qXDkI7x2aWRGOzHgALGQptUL4Eo
PQbQzXxc1D5Kwp4MaNDUvpZQyEWPAaKc79P7NrnoMUAvlNwSVnLRY0IgO1jw
kJeE98eEihWZoVojBz0mZB9omnFix6HHhOY3qo9mWOfQY4LKmP3rflkEenZA
O86SR1z5mPwLCS+7WQ==
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Hue[0.9060679774997897, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0n001XccwPE7z4U8X5er6z6krS11Da1cfD+YobWQmTaZaPLQOR5Ctnkq
CodoY5JLniZMrjxsQ2e5cesaJWR0ylwNuXPcbWriIrbZ/fRPn3N+557f+X2/
r+/vvH+XFRx1KESJQqGE/Hdt/L46/OKN6SCV6c4zqdx2orjvJcolZhN6uWJi
Y70xw+S5+4ooxXQAnz8kp36NX/W9c58olMfkWq81M1P+C66fInzKi51+tFES
enxjZsheby/5vb2juH+WxIqsOHPRI6T/7sbISE/vR/MPJMPozZOkjJ5wtZoh
XP+UlOq4a6Q/6kf/byLwk/ALO3pw/wLJl1YacPd14XmLZHZTbZh8/w/oycn4
d6r9dbqV6C0TFpcnFYxlCxXeKhlJkaYsPL8qVHgvyG51w4QE9TahwlsnbdBf
P+3RKcRsQKnn8lOHunA9BegMz0CDcyKhwn8NKj09/+x3vYX7laA28uAfmzm3
8Dxl+J0KklFrEXoq0KClPOlW+NJTgYA98flZQ53oqcKMzf2Az6s70FMDwZnG
+meyVvTU4Wya0zeOM1fR0wBu2YRoeK4cPQ2Y8BIf1dZJQ28TnPzHajyZloW9
NkPFGKWRV1WGfTXhQNHlvCZ6LfbTgh5e+luadgLsrQUm9Hw9aV8T9tQGG12n
oBhqC3pbwEXKZAxntqCnA0uX1gLsd7egpwvPBFqRCZxmXK8LFrR1pXbKNfR1
4a+JxuvhffXk/+3WevA1LW7ee+YKnqcHvtxll+iiCvT0ocZNteOYw0X09OFG
PCmlTWagpw+9qXf8C/x98H0MwOb4pw5XrE5jDwNonLpw1tTqK+xnCGbV5lTW
+EXsbQhe+k9511dKsKch9I++v6SRWI79jeBnu/Y3K5sq0DOCmkUng4jHFehR
Qf2hSkNWQAV6VOijv1efmVSGHhXCT/BOsu1K0DOGNYn6iP2uIvSMIW1E6Cwq
zEePBj/lStoo/jno0WAlZfH2x4Fn0KPB8mqNhyAvEj0TyGY0sY6VuGE/E2it
o9h/6xOL/UxBxp5o7Wo8jf1MYU5tsKbgyMt+pkCKZR5+xdnYjw6vzzc/iT2S
ix4d1uSBUZ8I8tAzAyvurGZLZR56ZmBZ/kYcwz8XPTOIOb/0202VHPS2QvfC
oycFg5nobYVS122ymwvp6DHAOGCQZnwoFT0GbJ8OCxp1P4UeA8QN1q2XT0Sg
Zw5O7TvU9ki80TOHlnfu2fiuH8B+TNCbFtm4FIcIFf8vJsi6lUKdxqKxJxPM
ZEqdYXXx2J8JB/UvDViwvsC+TNj5Y3ColnMieiyoqkqmTxgloccC/oetPeLW
RPRYsMY7d97W4Uv0WCA35+8oGEtAjwW24mXpwI049Njw7gc5mctGMeixIdy+
eWrEMgI9NiSPUbYcng5Cjw3+sd21+w/7oMeG+dRd26MyLNHjgNv32iliR1fs
w4G+B7nVHhZ+2JMDw8HMxdrbR7EXB2Zn9znK736GfTmgJrzALCgJxe+xDYY8
J5ts3w4n/wKZDrn6
             "]]}, "Charting`Private`Tag#2"], 
          Annotation[{
            Hue[0.1421359549995791, 0.6, 0.6], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Line[CompressedData["
1:eJxd0ntMU2cYBvAid2TIpUChBXrZNE5GYDDJIvq9GFFUMCDjMg0L4y4ICMZV
5hgyIXIRhUJpy1CDSmQMZBJYaYKWe1stIKJDM+ZEBsSFDdkG0oB1Mr+3f+xJ
Tk6+nPf5vScnhxefdTBpHYPBSHpzrd3/n1rZWhQkRDkdszOvSvn2rCEh86bb
f7lwRennu5YxEuPbmba/tIk+f0xi2BbRXpM/KN8qT8lYurtV8HvtdH6K7Lrf
Mn/PRa5MSV7LDLFqPp50eFBB+89J8+7ZlB6fLuWQdi1zJFisGPko/jb1XpDA
7n0RTV7ddH6BHHkwJ2Uxe6j/N7Eevy+6OdVD+/+QSu8WbsnlXrpviax6viw/
vbePesvEeLjxwP6pPurpSBq74+TxzH7qrRDjq4LC2Ll+6q2Su+GzzJDPBqin
J198comTMDBAPQaIVN43mviDdJ4Bxb9GDdkJB6lvBE+YJr3H+gZpfx2wChe9
yixUdJ8xDEfa8Oz3qKhnAt2ZurGGfBX1TGDCzvHj8TYV9Uyh3uNx7uZJFfXM
YINHaqDDejX1zOFoOGvptbeaehaw29y5LyxCTT0LeL0lrjo2R009S7DKMlo+
cV5NPSsISx55PnkdvfVwOKq37Nlt9KzBVskdahtDzxq65guMimfQewc6T105
InqJng2UsI1vvDLTUG8DlMyeDVtgaqhnC1sT/GwreRo6bwuS9q1Brzw11LeF
6YRB3wh/jfK/uq8dXM3iRreAhu6zgx1VcQ2CvejZQzVvSns3DD172Bz1c7oi
Gj17uBhYslMfi+/jACsNt+KaEtBzgENt+gPaVPSYcOp0v292BnpMyMt6f/Fa
NnpMGG9Nj845gZ4j/LEplzV1Ej1HmObMWzC+Qs8JdBu/549+jZ4TsK9tuxhb
gJ4T1GbGMprPoOcMKc5yv94i9JwhqHBV1HAWPRZsPFa/cKgEPRb41O64OVOK
HgsmojSqkHPouUBRhuJORTl6LpDb5b/ccR49V6jwzCDKC+i5Qt128+DWCvRc
ITXTNLe4Ej02HPzzqT5EhB4bfvrUfVQvQo8D46PR8stV6HEgMUgb6lONHgf8
mvMtO6rRc4PrXUvbPMXouUFoq8RJKkbPHarknS06MXruoDNLXAmvQc8d5Ecf
TdbXoOcBkaZDH/xeg54HPFTkSbdI0OOC9FGRJlmC/xcXGs+Ux9RJ0OdCWuDw
sFaCfS5AVU7jsgT3cWHR6UEkV4oeD/76/NuAXVL0ePCbsL8zUYoeD/TCUrdv
pOjx4N5EwI91UvR4YJnNULUbPD7kzOaV3zF4fDj3MD/wicHjQ29DgeMLg8eH
+Flvf4YMPT7s+e7ZiI0MPQEoL62acGT4fQRQJIxc3iRDTwBEXKb+UIaeAMTC
iMoAgyeAFP9b6UEG713IEH6ZGfrm/C9ojOhO
             "]]}, "Charting`Private`Tag#3"]}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 10.}, {-0.23394678435528743`, 
             0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
           "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
           "DefaultStyle" -> {
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2], 
              Thickness[Large]], 
             Directive[
              PointSize[
               Rational[1, 90]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2], 
              Thickness[Large]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ListLinePlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, 10.}, {-0.23394678435528743`, 
            0.4999999999999999}}, "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "AspectRatio" -> GoldenRatio^(-1), 
          "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.560181, 0.691569, 0.194885], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Thickness[Large]], 
            Directive[
             PointSize[
              Rational[1, 90]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2], 
             Thickness[Large]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ListLinePlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{}, {}, 
       Annotation[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJw11AlM01ccwHEOuWFAwYKcPTgElJCBcbLh+yGiEKRELVMxnBuiwChULhmO
q+gABYGVKLK4AuESpDJAjklloKhpS4AxMkbRhcnhKIMNGExwW9efv+Sfpul7
n5d83z+lR3FORKupqKhE//coPt/N238U84JU3lJMN7m9cvA35rgMvz8jvGqG
77G7k8TDXTFjpPnFyGZ474/4+08k39E5cQJGiVJ7SRxL18bclp7j+hliFH9z
zs61n8ScU8wscasYJ9mN93D/AnE7mN31sy5PJBErZpEEHm6XWRS1iZTeMqnv
d3e+4PhIpFy/QrgtXsl/9DwWKf0/ybCBvCZx9hnuXyWeYfNzDIFYpDxvnbR1
zcn+WpGgt0Gm7ni2SuQS9DaJMy0hh3SI0XtD+jua6w5xn6O3RfQvnk7ODx5C
7y0JWk7JnSofQE8FzDgW0tShPlyvAgx+i0f7Wgf6qmC7tuGS5daE+9VgP/Wk
+I5rGZ6nDkePtzTztwqx3w6IK5vbYEhridLbARcjW6u2TwmxlwZI3p85WWzY
gT01YSjVL+v3jC7srQXCFr1SbkUPetpwxcM1ICi+Fz1tOK3PjviV0oueDnh1
y2sbmrrR04X4My7ps2cfoKcHVZOXnEPZ7ejpw9c+pp0zg0L09OGXpwJqQF8j
egZwwUyabVUvQO898Fnae1PiVY6eIbSld0Y/TOKgZwRh88KVCSce9jEC2etC
fmtIBfY0gn3aH/bGHf1G9P92d2Ooljxe9/aqxb7GQHlibyVVrcf7oMByGj2m
hN+AHgWqXR+Eems0okcB3oH991zPN2B/E7huoplMpuvQM4H8PaMfTF+vRc8U
WKPdWhKBAD1TKMzPN9AorkLPFGCjssUvmI/eTjgzYh808LIIvZ3whGa95SHK
QI8KPYdLUuKLGNiHCosJLns8/S5hTyqEx5Yf62VdxV5m0FJCkeWp3cC+ZqC3
GskOY5VjP3NYTLV0+i6Xj545+J9il6fVVKBnDoJhp/u7RRXo7YIb7CgokPPR
2wWJ0yGRgsCv0LOAeV0hZ1y9DD0LyHDXWprgFKNnAbXyZqm3w5foWUJ4h+zI
/cwc9CwhR8tSqpObgp4VdI5+sbd9IQI9K4hzGi/dvhaI/ayAyvLz/9vkM+xn
DQ5en07aD6ZhP2vYN2Wuc2J3FvazgRDfsdHMgFy8DxugP23KeKX+7v/DBnj1
RimvBnjo2YJqwfbnn9zmoWcLl4fzvqVX56FHg+4jI0yd9Rx8v2jwg3i5sI+b
hT4N7nrkhq/SM3A/DcYnnO30fZPxPBq4U7g1woB49OgQNRg9LzCJQI8OrvzM
rauXvdGjg/H5WHF0uT/2ooOqg0dsXX849qXDkI7x2aWRGOzHgALGQptUL4Eo
PQbQzXxc1D5Kwp4MaNDUvpZQyEWPAaKc79P7NrnoMUAvlNwSVnLRY0IgO1jw
kJeE98eEihWZoVojBz0mZB9omnFix6HHhOY3qo9mWOfQY4LKmP3rflkEenZA
O86SR1z5mPwLCS+7WQ==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0n001XccwPE7z4U8X5er6z6krS11Da1cfD+YobWQmTaZaPLQOR5Ctnkq
CodoY5JLniZMrjxsQ2e5cesaJWR0ylwNuXPcbWriIrbZ/fRPn3N+557f+X2/
r+/vvH+XFRx1KESJQqGE/Hdt/L46/OKN6SCV6c4zqdx2orjvJcolZhN6uWJi
Y70xw+S5+4ooxXQAnz8kp36NX/W9c58olMfkWq81M1P+C66fInzKi51+tFES
enxjZsheby/5vb2juH+WxIqsOHPRI6T/7sbISE/vR/MPJMPozZOkjJ5wtZoh
XP+UlOq4a6Q/6kf/byLwk/ALO3pw/wLJl1YacPd14XmLZHZTbZh8/w/oycn4
d6r9dbqV6C0TFpcnFYxlCxXeKhlJkaYsPL8qVHgvyG51w4QE9TahwlsnbdBf
P+3RKcRsQKnn8lOHunA9BegMz0CDcyKhwn8NKj09/+x3vYX7laA28uAfmzm3
8Dxl+J0KklFrEXoq0KClPOlW+NJTgYA98flZQ53oqcKMzf2Az6s70FMDwZnG
+meyVvTU4Wya0zeOM1fR0wBu2YRoeK4cPQ2Y8BIf1dZJQ28TnPzHajyZloW9
NkPFGKWRV1WGfTXhQNHlvCZ6LfbTgh5e+luadgLsrQUm9Hw9aV8T9tQGG12n
oBhqC3pbwEXKZAxntqCnA0uX1gLsd7egpwvPBFqRCZxmXK8LFrR1pXbKNfR1
4a+JxuvhffXk/+3WevA1LW7ee+YKnqcHvtxll+iiCvT0ocZNteOYw0X09OFG
PCmlTWagpw+9qXf8C/x98H0MwOb4pw5XrE5jDwNonLpw1tTqK+xnCGbV5lTW
+EXsbQhe+k9511dKsKch9I++v6SRWI79jeBnu/Y3K5sq0DOCmkUng4jHFehR
Qf2hSkNWQAV6VOijv1efmVSGHhXCT/BOsu1K0DOGNYn6iP2uIvSMIW1E6Cwq
zEePBj/lStoo/jno0WAlZfH2x4Fn0KPB8mqNhyAvEj0TyGY0sY6VuGE/E2it
o9h/6xOL/UxBxp5o7Wo8jf1MYU5tsKbgyMt+pkCKZR5+xdnYjw6vzzc/iT2S
ix4d1uSBUZ8I8tAzAyvurGZLZR56ZmBZ/kYcwz8XPTOIOb/0202VHPS2QvfC
oycFg5nobYVS122ymwvp6DHAOGCQZnwoFT0GbJ8OCxp1P4UeA8QN1q2XT0Sg
Zw5O7TvU9ki80TOHlnfu2fiuH8B+TNCbFtm4FIcIFf8vJsi6lUKdxqKxJxPM
ZEqdYXXx2J8JB/UvDViwvsC+TNj5Y3ColnMieiyoqkqmTxgloccC/oetPeLW
RPRYsMY7d97W4Uv0WCA35+8oGEtAjwW24mXpwI049Njw7gc5mctGMeixIdy+
eWrEMgI9NiSPUbYcng5Cjw3+sd21+w/7oMeG+dRd26MyLNHjgNv32iliR1fs
w4G+B7nVHhZ+2JMDw8HMxdrbR7EXB2Zn9znK736GfTmgJrzALCgJxe+xDYY8
J5ts3w4n/wKZDrn6
          "]]}, "Charting`Private`Tag#2"], 
       Annotation[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           Rational[1, 90]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[2], 
          Thickness[Large]], 
         Line[CompressedData["
1:eJxd0ntMU2cYBvAid2TIpUChBXrZNE5GYDDJIvq9GFFUMCDjMg0L4y4ICMZV
5hgyIXIRhUJpy1CDSmQMZBJYaYKWe1stIKJDM+ZEBsSFDdkG0oB1Mr+3f+xJ
Tk6+nPf5vScnhxefdTBpHYPBSHpzrd3/n1rZWhQkRDkdszOvSvn2rCEh86bb
f7lwRennu5YxEuPbmba/tIk+f0xi2BbRXpM/KN8qT8lYurtV8HvtdH6K7Lrf
Mn/PRa5MSV7LDLFqPp50eFBB+89J8+7ZlB6fLuWQdi1zJFisGPko/jb1XpDA
7n0RTV7ddH6BHHkwJ2Uxe6j/N7Eevy+6OdVD+/+QSu8WbsnlXrpviax6viw/
vbePesvEeLjxwP6pPurpSBq74+TxzH7qrRDjq4LC2Ll+6q2Su+GzzJDPBqin
J198comTMDBAPQaIVN43mviDdJ4Bxb9GDdkJB6lvBE+YJr3H+gZpfx2wChe9
yixUdJ8xDEfa8Oz3qKhnAt2ZurGGfBX1TGDCzvHj8TYV9Uyh3uNx7uZJFfXM
YINHaqDDejX1zOFoOGvptbeaehaw29y5LyxCTT0LeL0lrjo2R009S7DKMlo+
cV5NPSsISx55PnkdvfVwOKq37Nlt9KzBVskdahtDzxq65guMimfQewc6T105
InqJng2UsI1vvDLTUG8DlMyeDVtgaqhnC1sT/GwreRo6bwuS9q1Brzw11LeF
6YRB3wh/jfK/uq8dXM3iRreAhu6zgx1VcQ2CvejZQzVvSns3DD172Bz1c7oi
Gj17uBhYslMfi+/jACsNt+KaEtBzgENt+gPaVPSYcOp0v292BnpMyMt6f/Fa
NnpMGG9Nj845gZ4j/LEplzV1Ej1HmObMWzC+Qs8JdBu/549+jZ4TsK9tuxhb
gJ4T1GbGMprPoOcMKc5yv94i9JwhqHBV1HAWPRZsPFa/cKgEPRb41O64OVOK
HgsmojSqkHPouUBRhuJORTl6LpDb5b/ccR49V6jwzCDKC+i5Qt128+DWCvRc
ITXTNLe4Ej02HPzzqT5EhB4bfvrUfVQvQo8D46PR8stV6HEgMUgb6lONHgf8
mvMtO6rRc4PrXUvbPMXouUFoq8RJKkbPHarknS06MXruoDNLXAmvQc8d5Ecf
TdbXoOcBkaZDH/xeg54HPFTkSbdI0OOC9FGRJlmC/xcXGs+Ux9RJ0OdCWuDw
sFaCfS5AVU7jsgT3cWHR6UEkV4oeD/76/NuAXVL0ePCbsL8zUYoeD/TCUrdv
pOjx4N5EwI91UvR4YJnNULUbPD7kzOaV3zF4fDj3MD/wicHjQ29DgeMLg8eH
+Flvf4YMPT7s+e7ZiI0MPQEoL62acGT4fQRQJIxc3iRDTwBEXKb+UIaeAMTC
iMoAgyeAFP9b6UEG713IEH6ZGfrm/C9ojOhO
          "]]}, "Charting`Private`Tag#3"]}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{0, 10.}, {-0.23394678435528743`, 0.4999999999999999}},
         "Frame" -> {{True, True}, {True, True}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
        "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Thickness[Large]], 
          Directive[
           PointSize[
            Rational[1, 90]], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Thickness[Large]]}, 
        "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ListLinePlot, "GroupHighlight" -> False|>|>, 
     "DynamicHighlight"]], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Large,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", HoldForm], 
      TraditionalForm], None}, {
     FormBox[
      TagBox[
      "\"\[CapitalOmega]\[VeryThinSpace]\\!\\(\\*StyleBox[\\\"t\\\",FontSlant-\
>\\\"Italic\\\"]\\)\"", HoldForm], TraditionalForm], None}},
  FrameStyle->Large,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[2]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[2]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05], "OptimizePlotMarkers" -> True, 
    "IncludeHighlighting" -> "CurrentSet", "HighlightStyle" -> Automatic, 
    "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394678435528743`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellLabel->"Out[6]=",
 CellID->1748319206,ExpressionUUID->"aff35b08-67da-4098-8376-40f0e63402b9"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladSolve"]], "paclet:Q3/ref/LindbladSolve", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "08a23bec-b1a8-4c34-8193-afbf38d52c63"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladConvert"]], "paclet:Q3/ref/LindbladConvert", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "5e26c46c-40aa-44fd-8f02-cda958f52d72"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LieBasis"]], "paclet:Q3/ref/LieBasis", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "6ca82ae8-d6b4-4b48-888e-e4b05877006a"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["LindbladSupermap"]], "paclet:Q3/ref/LindbladSupermap", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "474eeca3-6cc7-45d5-a6d9-24b879f7418a"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Supermap"]], "paclet:Q3/ref/Supermap", 
           "Q3 Package Symbol"},
          "PackageLink",
          BaseStyle->"InlineFormula"]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "77e4a402-b474-41c8-8d6f-fe4de735ffb1"]
       }], "SeeAlso",ExpressionUUID->"035a08b6-5d76-4f3b-a497-0c9ba409dba7"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"c3bf78ac-730f-4978-ad85-\
a12afde7ff11"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedTechNote.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Tech", " ", "Notes"}], "TechNotesSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Noise and Decoherence"]], 
           "paclet:Q3/tutorial/QuantumNoiseAndDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "a7655877-c961-481b-b26d-1edda8d98168"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems with Q3"]], 
           "paclet:Q3/tutorial/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"Tutorials"}]], "Tutorials",ExpressionUUID->
         "345eb5d4-baba-411a-9a04-349084921aae"]}]}
     }]}
  }]], "TechNotesSection",ExpressionUUID->"73014abc-d61c-41eb-9e3e-\
efeba7326f14"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Dynamical Process of Decoherence"]], 
           "paclet:Q3/guide/DynamicalProcessOfDecoherence"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "8373d2f0-9823-4e5c-8e43-a3c849f1683f"]}]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Quantum Information Systems"]], 
           "paclet:Q3/guide/QuantumInformationSystems"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "ce4cf0c8-398b-43e9-8248-200e5a6682ac"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"cb259617-2f93-4b89-8bfa-\
73c2f57c9079"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "H.-P. Breuer and F. Petruccione (2002)"}]]]], 
             "https://doi.org/10.1093/acprof:oso/9780199213900.001.0001"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "f5cb3052-a49e-4292-a8eb-0fccb5620232"]}]],ExpressionUUID->
         "5524a264-1822-4454-aff0-3f951010d8d3"],
        ", The Theory of Open Quantum Systems (Oxford University Press, 2002)."
       }], "RelatedLinks",ExpressionUUID->
        "a796142a-1259-4917-b652-427e448c92b2"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "C. W. Gardiner and P. Zoller (2000)"}]]]], 
             "https://www.springer.com/gp/book/9783540223016"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "dcb8ca65-d2d6-49cc-844f-f79edbe65392"]}]],ExpressionUUID->
         "7c9c264f-bc4b-418b-abdc-99512ec18d27"],
        ", Quantum Noise (Springer, 2000)."
       }], "RelatedLinks",ExpressionUUID->
        "c1ea13bb-5b69-4291-bcb7-e1766be5971e"]},
      {Cell[TextData[{
        Cell[BoxData[
         RowBox[{
          TemplateBox[{16},
           "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
           TemplateBox[{
             Cell[
              TextData[
               Cell[
                TextData[{
                  Cell[
                   BoxData[
                    TemplateBox[{2}, "Spacer1"]]], 
                  "Mahn-Soo Choi (2022)"}]]]], 
             "https://doi.org/10.1007/978-3-030-91214-7"},
            "WebLink",
            BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
           "68c54e96-8a00-4727-9390-de84745a016c"]}]],ExpressionUUID->
         "ff7a6910-5420-4bc5-88e0-defbfa8a84cf"],
        ", A Quantum Computation Workbook (Springer, 2022)."
       }], "RelatedLinks",ExpressionUUID->
        "b4bee28b-1da3-4c95-af72-752e1dddb246"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"b4f6fd61-e1ba-4e1b-8866-\
eca91669119a"],

Cell[" ", "FooterCell",ExpressionUUID->"159af09a-68d2-4ec7-b402-f0b0e21075a4"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 830},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
WindowTitle->"NLindbladSolve",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "1" -> Open}, "NotesSection" -> Closed, 
    "ExampleSubsection" -> {
     "0" -> Closed, "1" -> Closed, "2" -> Open, "3" -> Closed}}, "NewStyles" -> 
  True, "CitationPopupData" -> $Failed, "ShowCitation" -> False, 
  "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 8, 11, 21, 47, 44.811973}", 
    "history" -> {"13", "13.1", "", ""}, "context" -> "Q3`", 
    "keywords" -> {"quantum decoherence", "quantum master equation"}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Q3 Symbol", "language" -> "en", "paclet" -> "Q3", "status" -> 
    "None", "summary" -> 
    "NLindbladSolve[{a, b1, b2, ...}, init, {t, tmin, tmax}] finds a \
numerical solution to the Lindblad equation characterized by Hamiltonian a \
and Lindblad operators b1, b2, .... NLindbladSolve[tsr, init, {t, tmin, \
tmax}] assumes that the Lindblad generator is specified by Choi matrix tsr.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "NLindbladSolve", 
    "titlemodifier" -> "", "metadescription" -> "", "windowtitle" -> 
    "NLindbladSolve", "type" -> "Symbol", "uri" -> "Q3/ref/NLindbladSolve"}},
CellContext->"Global`",
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Mac OS X ARM (64-bit) (June 3, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"b819b0d0-1acd-4592-8f1e-b65de10f9ec0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[15050, 408, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"1faa2074-57d5-4600-99ca-6d6b9bae4885",
   CellTags->"PrimaryExamplesSection",
   CellID->1210200600]},
 "RasterizedOutput"->{
  Cell[185054, 4683, 196653, 3230, 405, "Output",ExpressionUUID->"b321bc18-e8cb-4163-a597-3974a0da94c9",
   CellTags->"RasterizedOutput",
   CellID->286759230]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 427975, 9048},
 {"RasterizedOutput", 428176, 9052}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[586, 21, 7425, 182, 57, "AnchorBarGrid",ExpressionUUID->"036c5b25-5798-4eaa-af4f-ebf899dbe590",
 CellID->1],
Cell[8014, 205, 85, 0, 23, "ContextNameCell",ExpressionUUID->"ede81de9-05c3-4ddb-bea1-bf3c4f4f0905"],
Cell[CellGroupData[{
Cell[8124, 209, 1177, 31, 60, "ObjectNameGrid",ExpressionUUID->"0f7d33ad-155d-42b9-ae02-27abe4fa5222"],
Cell[9304, 242, 2990, 85, 192, "Usage",ExpressionUUID->"955c3fa6-35e0-45d2-9247-fbb75733dd81",
 CellID->325754926]
}, Open  ]],
Cell[CellGroupData[{
Cell[12331, 332, 1898, 47, 37, "NotesSection",ExpressionUUID->"fea85c3a-3a19-4dc1-aa96-d712f8ba4b6d",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->786260313],
Cell[14232, 381, 691, 21, 70, "Notes",ExpressionUUID->"e109e126-545a-4427-a75c-4611572bb771",
 CellID->1027225079]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[15050, 408, 1390, 37, 36, "PrimaryExamplesSection",ExpressionUUID->"1faa2074-57d5-4600-99ca-6d6b9bae4885",
 CellTags->"PrimaryExamplesSection",
 CellID->1210200600],
Cell[16443, 447, 192, 3, 31, "Input",ExpressionUUID->"3caf7e7c-5428-42e8-b414-2f98997e8a9f",
 CellID->1927565408],
Cell[CellGroupData[{
Cell[16660, 454, 1368, 36, 31, "ExampleSection",ExpressionUUID->"9400927b-1584-48c6-ac21-0f978cf6d2c0",
 CellID->1023863463],
Cell[18031, 492, 230, 4, 38, "ExampleText",ExpressionUUID->"79066edb-c309-48fc-bbca-93c51a3810bb",
 CellID->356455765],
Cell[18264, 498, 686, 15, 58, "ExampleText",ExpressionUUID->"cffeba89-4220-446a-8753-8b069811acb7",
 CellID->1494233086],
Cell[CellGroupData[{
Cell[18975, 517, 324, 9, 48, "Input",ExpressionUUID->"8e5655a8-d8d5-4a5e-8042-bbe324179a03",
 CellID->575047188],
Cell[19302, 528, 775, 24, 82, "Output",ExpressionUUID->"7a096921-ad36-4429-8b7c-11cd9a83b771",
 CellID->414053057]
}, Open  ]],
Cell[20092, 555, 382, 8, 39, "ExampleText",ExpressionUUID->"979b4492-1236-4452-a7c1-f91af1dfdcfd",
 CellID->91943295],
Cell[CellGroupData[{
Cell[20499, 567, 715, 19, 66, "Input",ExpressionUUID->"bf53bafd-fd0e-461a-b287-eb2aee7f9a10",
 CellID->1820491489],
Cell[21217, 588, 1830, 54, 57, "Output",ExpressionUUID->"bc79ce5f-18e7-46d2-9a88-44e8f1526763",
 CellID->1758548617]
}, Open  ]],
Cell[23062, 645, 121, 1, 38, "ExampleText",ExpressionUUID->"7913fa14-81ba-48b5-bdd7-c7238f04e012",
 CellID->1167074253],
Cell[CellGroupData[{
Cell[23208, 650, 688, 20, 70, "Input",ExpressionUUID->"423b2ddd-19d7-4177-b6f3-5f1bf05ebe30",
 CellID->1096154981],
Cell[23899, 672, 1753, 55, 82, "Output",ExpressionUUID->"09d7f001-39ce-4c54-b65e-372a59c898b9",
 CellID->36604006]
}, Open  ]],
Cell[25667, 730, 131, 1, 70, "ExampleText",ExpressionUUID->"cf005c3c-50a6-452c-9457-5ad7817ebec1",
 CellID->90190346],
Cell[25801, 733, 1289, 35, 70, "Input",ExpressionUUID->"b97850ee-f27c-4659-bfd0-e867eee7b80d",
 CellID->309037009],
Cell[27093, 770, 139, 1, 70, "ExampleText",ExpressionUUID->"f4c19bb9-7e9c-49ff-83b8-da837c2bba5c",
 CellID->636146379],
Cell[CellGroupData[{
Cell[27257, 775, 215, 5, 70, "Input",ExpressionUUID->"bbbc8e91-1157-4072-9d29-7922b66ad3e2",
 CellID->222257030],
Cell[27475, 782, 885, 22, 66, "Output",ExpressionUUID->"6c82e9b3-72ca-4ce2-934c-79c343171d23",
 CellID->588485986]
}, Open  ]],
Cell[28375, 807, 201, 4, 70, "ExampleText",ExpressionUUID->"0587d224-e401-46a6-9b9a-7e3eec5e0c5d",
 CellID->806986877],
Cell[28579, 813, 813, 26, 70, "Input",ExpressionUUID->"49a28250-ae31-4264-a0ff-791899a8b1e9",
 CellID->374788519],
Cell[29395, 841, 148, 1, 70, "ExampleText",ExpressionUUID->"3287064d-8849-4dcd-be6e-086ee49a1102",
 CellID->1485662799],
Cell[CellGroupData[{
Cell[29568, 846, 1445, 38, 70, "Input",ExpressionUUID->"07c7a5b8-08cf-4b92-9fd0-84c73936bcea",
 CellID->667061092],
Cell[31016, 886, 25348, 533, 70, "Output",ExpressionUUID->"308aabb4-e296-438e-8e3e-a785f21c5a4e",
 CellID->91518771]
}, Open  ]],
Cell[CellGroupData[{
Cell[56401, 1424, 242, 5, 70, "ExampleDelimiter",ExpressionUUID->"6c6086ea-f898-4f31-a961-60cb0a91dddd",
 CellID->818700002],
Cell[56646, 1431, 175, 3, 70, "ExampleText",ExpressionUUID->"13ba2c7c-eb30-497d-a664-288462e86380",
 CellID->1536645940],
Cell[56824, 1436, 209, 5, 70, "Input",ExpressionUUID->"4ca10a4f-b2ee-4c7c-a385-d972758e4d74",
 CellID->1470681252],
Cell[57036, 1443, 551, 13, 70, "ExampleText",ExpressionUUID->"320c91e9-0c10-47a9-a527-2a23ea58cf72",
 CellID->1467300503],
Cell[57590, 1458, 249, 7, 70, "Input",ExpressionUUID->"72746c94-eb8f-45f8-94a2-3c469ac8962c",
 CellID->1701417680],
Cell[57842, 1467, 205, 4, 70, "ExampleText",ExpressionUUID->"83744f30-8e56-4e97-9c8e-92f4b68bb446",
 CellID->853328879],
Cell[CellGroupData[{
Cell[58072, 1475, 605, 16, 70, "Input",ExpressionUUID->"7f2f8310-1d19-4fd1-abde-fb6d3f77b38e",
 CellID->682224499],
Cell[58680, 1493, 975, 30, 40, "Output",ExpressionUUID->"8b1a536d-d912-4654-bb30-bff58da05bca",
 CellID->343295758]
}, Open  ]],
Cell[59670, 1526, 356, 8, 70, "ExampleText",ExpressionUUID->"d48beeb3-ad16-4b08-b033-d0843af98bb4",
 CellID->250174039],
Cell[CellGroupData[{
Cell[60051, 1538, 253, 6, 70, "Input",ExpressionUUID->"de1d4c9a-2691-4cc0-b677-3baed30d0722",
 CellID->2049576294],
Cell[60307, 1546, 8336, 183, 70, "Output",ExpressionUUID->"1d063328-e5bb-447a-9295-94bb15edd700",
 CellID->1293792627]
}, Open  ]],
Cell[68658, 1732, 194, 4, 70, "ExampleText",ExpressionUUID->"e0f5409d-2866-426c-b16f-30c2b7620047",
 CellID->737505602],
Cell[CellGroupData[{
Cell[68877, 1740, 389, 12, 70, "Input",ExpressionUUID->"bebaed2b-22dd-4915-93a0-cb7845a97c35",
 CellID->2128525977],
Cell[69269, 1754, 1690, 52, 55, "Output",ExpressionUUID->"79ccb434-99da-40c1-a22d-ba019bebe34d",
 CellID->1126587871]
}, Open  ]],
Cell[70974, 1809, 119, 1, 70, "ExampleText",ExpressionUUID->"ba67a6a7-ed2e-4b6b-b879-9c228c6ef111",
 CellID->967918059],
Cell[CellGroupData[{
Cell[71118, 1814, 366, 11, 70, "Input",ExpressionUUID->"739a2fe6-9326-442b-94ff-66da68834ea1",
 CellID->963207285],
Cell[71487, 1827, 488, 15, 65, "Output",ExpressionUUID->"a8d9bc5d-9cf2-41f7-a782-0df4810b2893",
 CellID->325360972]
}, Open  ]],
Cell[71990, 1845, 132, 1, 70, "ExampleText",ExpressionUUID->"754c90be-0d18-499d-a73c-601db1e986c1",
 CellID->896810696],
Cell[72125, 1848, 915, 23, 70, "Input",ExpressionUUID->"2b945f9f-46b5-4a50-a135-88017bc822d7",
 CellID->719143774],
Cell[73043, 1873, 214, 4, 70, "ExampleText",ExpressionUUID->"a1f4544f-663b-4de6-a25d-ff4af3bc188c",
 CellID->118915418],
Cell[73260, 1879, 630, 19, 70, "Input",ExpressionUUID->"c31fd6fe-1698-40ff-8b20-2a118e097b9c",
 CellID->1210483635],
Cell[CellGroupData[{
Cell[73915, 1902, 1274, 33, 70, "Input",ExpressionUUID->"107570e0-ad6c-4a96-9b77-4fdb3ba9d23f",
 CellID->1754552550],
Cell[75192, 1937, 25165, 531, 70, "Output",ExpressionUUID->"8aa000d7-57cb-4104-a924-3dd1bcf1ed0e",
 CellID->772655300]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[100406, 2474, 241, 5, 70, "ExampleDelimiter",ExpressionUUID->"fa4a4346-a737-4192-a213-51ec662afac6",
 CellID->41024298],
Cell[100650, 2481, 146, 1, 70, "ExampleText",ExpressionUUID->"58d45311-6956-4681-b9e3-49c363ae81a9",
 CellID->2030943859]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[100945, 2490, 1358, 36, 70, "ExampleSection",ExpressionUUID->"8b9d9e15-520e-49a2-80b4-b1a419285c41",
 CellID->658283247],
Cell[CellGroupData[{
Cell[102328, 2530, 1430, 36, 70, "ExampleSubsection",ExpressionUUID->"a1818b99-b83c-4554-93c1-4cfda3d16983",
 CellID->2027114915],
Cell[103761, 2568, 209, 5, 70, "Input",ExpressionUUID->"926ff3b3-054b-4fc7-8ca2-844db153354d",
 CellID->2123643361],
Cell[103973, 2575, 198, 4, 70, "ExampleText",ExpressionUUID->"facbae36-f431-42e6-aff3-c29979a38cfe",
 CellID->1488964689],
Cell[CellGroupData[{
Cell[104196, 2583, 248, 5, 70, "Input",ExpressionUUID->"dcf6e3c7-c0e8-409f-bba2-eaa4e7e3c1aa",
 CellID->895755187],
Cell[104447, 2590, 126, 2, 37, "Output",ExpressionUUID->"ce4d1ad3-95af-4967-87e9-ed7e1652bd03",
 CellID->389833257],
Cell[104576, 2594, 2066, 64, 41, "Output",ExpressionUUID->"87f41dd9-150d-4187-ad5a-8c59a7ee5775",
 CellID->2102427049]
}, Open  ]],
Cell[106657, 2661, 625, 14, 70, "ExampleText",ExpressionUUID->"86697d90-b91d-4093-8fe3-e8a3fdf13667",
 CellID->1435577874],
Cell[CellGroupData[{
Cell[107307, 2679, 231, 6, 70, "Input",ExpressionUUID->"e294904c-131b-4ee0-9995-19b83caf3603",
 CellID->33819131],
Cell[107541, 2687, 573, 13, 37, "Output",ExpressionUUID->"6f38d052-8588-4f4c-b631-4094f9f7ad91",
 CellID->779975624]
}, Open  ]],
Cell[108129, 2703, 200, 4, 70, "ExampleText",ExpressionUUID->"7fd26954-5213-4857-805d-4ba9c4536c67",
 CellID->1146070088],
Cell[CellGroupData[{
Cell[108354, 2711, 259, 7, 70, "Input",ExpressionUUID->"dc73a1e6-8905-4d1a-a8eb-8c1a1682dce4",
 CellID->1478894648],
Cell[108616, 2720, 191, 5, 40, "Output",ExpressionUUID->"bba261bb-069e-4bbe-b775-d079ad86d138",
 CellID->946768929]
}, Open  ]],
Cell[108822, 2728, 253, 7, 70, "ExampleText",ExpressionUUID->"d6705b89-3de8-40d5-994e-6e6e2efb01ab",
 CellID->1263746977],
Cell[CellGroupData[{
Cell[109100, 2739, 246, 6, 70, "Input",ExpressionUUID->"02cfb947-16c6-4de9-a59a-a25c71c8bc17",
 CellID->1921324442],
Cell[109349, 2747, 7146, 154, 70, "Output",ExpressionUUID->"c7ad452c-2d2e-4fee-9912-71f4138a0b7a",
 CellID->1357973238]
}, Open  ]],
Cell[116510, 2904, 142, 1, 70, "ExampleText",ExpressionUUID->"90547ede-f138-4106-8a42-8440c251487c",
 CellID->1758493117],
Cell[CellGroupData[{
Cell[116677, 2909, 265, 7, 70, "Input",ExpressionUUID->"657a472e-bacb-4094-ba81-a4a6bc556a21",
 CellID->872056809],
Cell[116945, 2918, 623, 17, 41, "Output",ExpressionUUID->"66265e82-d84a-41b1-b57a-0673b6e6ac43",
 CellID->1355104732]
}, Open  ]],
Cell[117583, 2938, 848, 23, 70, "ExampleText",ExpressionUUID->"d9d9ed12-99d6-4b25-986c-360643d059a7",
 CellID->1549353694],
Cell[CellGroupData[{
Cell[118456, 2965, 301, 8, 70, "Input",ExpressionUUID->"59bf8e52-7be3-4027-99dc-aac3dd1d9691",
 CellID->1698761760],
Cell[118760, 2975, 2783, 87, 67, "Output",ExpressionUUID->"affb71f0-100e-4b08-b32f-72b0ed69bd0a",
 CellID->1259049814]
}, Open  ]],
Cell[121558, 3065, 331, 7, 70, "ExampleText",ExpressionUUID->"1432b424-98bf-46f8-9263-393c56f883b0",
 CellID->2074410624],
Cell[121892, 3074, 203, 5, 70, "Input",ExpressionUUID->"8ac20578-2d5a-4929-922a-254f8ea74e5b",
 CellID->1057833732],
Cell[122098, 3081, 136, 1, 70, "ExampleText",ExpressionUUID->"7a5cc424-0dfd-47d9-92a3-824d2058d18a",
 CellID->562547614],
Cell[122237, 3084, 584, 16, 70, "Input",ExpressionUUID->"f03d5771-b3cb-43ad-a952-4cd00dc66b66",
 CellID->2141903858],
Cell[122824, 3102, 140, 1, 70, "ExampleText",ExpressionUUID->"da3634d1-d504-4558-baa1-d9a17054e846",
 CellID->1979396892],
Cell[CellGroupData[{
Cell[122989, 3107, 249, 7, 70, "Input",ExpressionUUID->"33a24e99-436c-4ce0-bc51-9fdb216493a5",
 CellID->709766745],
Cell[123241, 3116, 7560, 146, 134, "Output",ExpressionUUID->"7b2408e3-a561-4873-a3e7-1892b19fb249",
 CellID->430755806]
}, Open  ]],
Cell[130816, 3265, 180, 3, 70, "ExampleText",ExpressionUUID->"764ea818-4d34-4b5e-b346-76893d2c6c24",
 CellID->1489671399],
Cell[130999, 3270, 403, 11, 70, "Input",ExpressionUUID->"6285dfb7-07ef-423f-bddd-932256c21aa9",
 CellID->1578131396],
Cell[131405, 3283, 150, 1, 70, "ExampleText",ExpressionUUID->"b8ac4abf-3fe2-488d-a507-8145f841e4e1",
 CellID->985059299],
Cell[CellGroupData[{
Cell[131580, 3288, 971, 28, 70, "Input",ExpressionUUID->"bfa68467-0cf2-4ae5-b0b6-fcd03d6bf26c",
 CellID->83848475],
Cell[132554, 3318, 114, 1, 70, "EchoTiming",ExpressionUUID->"23ca1bb6-bbdd-4754-ba2d-31d279065725",
 CellID->58119711],
Cell[132671, 3321, 10380, 245, 70, "Output",ExpressionUUID->"84d703ce-0786-4177-9f54-ce6c7e98561e",
 CellID->1860407039]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[143203, 3574, 1435, 36, 70, "ExampleSubsection",ExpressionUUID->"8a44ae67-d262-47a5-8f34-00799d5ca643",
 CellID->500994773],
Cell[144641, 3612, 133, 1, 70, "ExampleText",ExpressionUUID->"b9487c0a-3c12-4f9b-9871-3d07bea94add",
 CellID->692904445],
Cell[CellGroupData[{
Cell[144799, 3617, 372, 10, 70, "Input",ExpressionUUID->"2135986b-33b6-4ca2-bcad-1ea6b401b2d7",
 CellID->1425866839],
Cell[145174, 3629, 667, 19, 100, "Output",ExpressionUUID->"70878398-2c62-4a70-8850-8d4ffc80f038",
 CellID->2119225150]
}, Open  ]],
Cell[CellGroupData[{
Cell[145878, 3653, 625, 17, 70, "Input",ExpressionUUID->"8310bfd1-7d9c-434c-8da5-7b062c872233",
 CellID->1104129648],
Cell[146506, 3672, 2333, 81, 100, "Output",ExpressionUUID->"b50e7e93-88d9-49d1-9d3a-18df0b1b56b0",
 CellID->1297369626]
}, Open  ]],
Cell[CellGroupData[{
Cell[148876, 3758, 1090, 29, 70, "Input",ExpressionUUID->"4fbf3ddd-d517-496e-bcc5-8a81c0fb3dab",
 CellID->252233040],
Cell[149969, 3789, 1975, 60, 87, "Output",ExpressionUUID->"eb97ab67-84e1-414a-84e8-e64a193444a5",
 CellID->308166912]
}, Open  ]],
Cell[CellGroupData[{
Cell[151981, 3854, 1095, 29, 70, "Input",ExpressionUUID->"eaf2653f-2406-40c6-b52d-98548403c1c9",
 CellID->1792714312],
Cell[153079, 3885, 182, 4, 37, "Output",ExpressionUUID->"cd243c68-c4c2-4c37-ab41-f46705a5311f",
 CellID->654467592]
}, Open  ]],
Cell[153276, 3892, 370, 11, 70, "Input",ExpressionUUID->"a813b530-f337-4c42-b1ea-dc1797cbaf97",
 CellID->1112511420],
Cell[CellGroupData[{
Cell[153671, 3907, 640, 16, 70, "Input",ExpressionUUID->"cbcb4296-78b5-49f8-8035-ebcac8d0ce4f",
 CellID->1239593903],
Cell[154314, 3925, 15771, 309, 403, "Output",ExpressionUUID->"dcea9ef1-d0d3-4a7d-bf89-850eb19f4e26",
 CellID->842623757]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "1"}, Closed]]]],
Cell[CellGroupData[{
Cell[170237, 4242, 1398, 36, 70, "ExampleSubsection",ExpressionUUID->"0a982c17-3567-493a-b866-dcc88b1938d5",
 CellID->919177322],
Cell[171638, 4280, 208, 5, 70, "Input",ExpressionUUID->"13506f15-fa70-4351-9b7c-a2fe5ae160d1",
 CellID->290448684],
Cell[171849, 4287, 299, 5, 70, "ExampleText",ExpressionUUID->"d7a3efa8-58dc-4273-b9b5-9e187d427d3b",
 CellID->340702357],
Cell[CellGroupData[{
Cell[172173, 4296, 954, 28, 70, "Input",ExpressionUUID->"7199ca15-0cb0-4cb4-a5ac-10210d160cf6",
 CellID->993111197],
Cell[173130, 4326, 820, 24, 98, "Output",ExpressionUUID->"d1265b81-da55-4237-8d37-dbe7cc7cfa42",
 CellID->186140174]
}, Open  ]],
Cell[173965, 4353, 223, 4, 70, "ExampleText",ExpressionUUID->"4d9b71a9-fd3d-49c9-8cbc-a8637a9e071b",
 CellID->1749085405],
Cell[CellGroupData[{
Cell[174213, 4361, 1428, 37, 70, "Input",ExpressionUUID->"a0f670ae-fc36-4294-8fe9-5820e486e4c7",
 CellID->501635503],
Cell[175644, 4400, 2987, 96, 41, "Output",ExpressionUUID->"bb6a5591-7db2-48c5-b4b6-a08ff5375bd9",
 CellID->260142160],
Cell[178634, 4498, 3700, 108, 75, "Output",ExpressionUUID->"cef04260-ec35-44b3-9113-254423ab1dff",
 CellID->2080061475]
}, Open  ]],
Cell[182349, 4609, 132, 1, 70, "ExampleText",ExpressionUUID->"aea6a6c4-8772-47d3-82fd-5848f33d6ffb",
 CellID->319696590],
Cell[CellGroupData[{
Cell[182506, 4614, 1568, 40, 70, "Input",ExpressionUUID->"8f5a9fff-381e-487b-8da0-6f421bbd0c4e",
 CellID->260219023],
Cell[184077, 4656, 115, 1, 70, "EchoTiming",ExpressionUUID->"aafd0870-76f9-4bdf-8cc3-acd1e38970a0",
 CellID->643332421]
}, Open  ]],
Cell[CellGroupData[{
Cell[184229, 4662, 822, 19, 70, "Input",ExpressionUUID->"9411986a-bedd-45d8-af1c-a06b5c5996a7",
 CellID->1542313529],
Cell[185054, 4683, 196653, 3230, 405, "Output",ExpressionUUID->"b321bc18-e8cb-4163-a597-3974a0da94c9",
 CellTags->"RasterizedOutput",
 CellID->286759230]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "2"}, Closed]]]],
Cell[CellGroupData[{
Cell[381859, 7921, 1424, 36, 70, "ExampleSubsection",ExpressionUUID->"b315cb36-5373-47cd-97de-17bab6564873",
 CellID->1763377983],
Cell[383286, 7959, 276, 7, 70, "ExampleText",ExpressionUUID->"84a8bb94-3738-4fdd-998a-a676c410b0b6",
 CellID->1231127355],
Cell[CellGroupData[{
Cell[383587, 7970, 410, 12, 70, "Input",ExpressionUUID->"c815928d-30dd-4306-9226-763c59a5b978",
 CellID->427878852],
Cell[384000, 7984, 346, 11, 65, "Output",ExpressionUUID->"4cf694ba-98ca-4244-8a4f-8c0e4fba1d08",
 CellID->1834244432]
}, Open  ]],
Cell[384361, 7998, 129, 1, 70, "ExampleText",ExpressionUUID->"c888aaaf-3eb1-47ec-86c8-b2339cfab540",
 CellID->179139186],
Cell[384493, 8001, 228, 6, 70, "Input",ExpressionUUID->"36708342-88a8-45d9-ba11-abaf2e30af68",
 CellID->1686455809],
Cell[384724, 8009, 130, 1, 70, "ExampleText",ExpressionUUID->"ef1a7553-c534-4afc-81d8-b9ffa2c33d55",
 CellID->311882181],
Cell[CellGroupData[{
Cell[384879, 8014, 609, 16, 70, "Input",ExpressionUUID->"7ff2ca08-e5c0-4c88-8805-fedfe21494b0",
 CellID->1773608757],
Cell[385491, 8032, 794, 26, 40, "Output",ExpressionUUID->"a08d7e1a-7825-4aa5-bb6e-c594a79aa93a",
 CellID->1507400988]
}, Open  ]],
Cell[386300, 8061, 133, 1, 70, "ExampleText",ExpressionUUID->"5ace15ec-b14e-4723-8ec9-0b0b44c3d119",
 CellID->1806524081],
Cell[CellGroupData[{
Cell[386458, 8066, 1268, 32, 70, "Input",ExpressionUUID->"d7546a56-0010-41b9-99ea-dc75f1899826",
 CellID->813112276],
Cell[CellGroupData[{
Cell[387751, 8102, 696, 21, 70, "Print",ExpressionUUID->"de097a6a-8f20-4720-8341-8a39875e3d12",
 CellID->352814491],
Cell[388450, 8125, 1392, 40, 70, "Print",ExpressionUUID->"4b418d80-1277-4bc5-bcab-dfa24da68670",
 CellID->550800870]
}, Open  ]]
}, Open  ]],
Cell[389869, 8169, 153, 1, 70, "ExampleText",ExpressionUUID->"9e2675bc-cddb-4e54-9a6a-bf65907a7dee",
 CellID->1655703520],
Cell[390025, 8172, 638, 19, 70, "Input",ExpressionUUID->"942a0c5e-92d4-4678-9f8b-c07198769f23",
 CellID->1408697964],
Cell[CellGroupData[{
Cell[390688, 8195, 1410, 37, 70, "Input",ExpressionUUID->"b6b8f868-4683-4b1b-9c7e-17ccfd969eed",
 CellID->743762978],
Cell[392101, 8234, 25214, 531, 70, "Output",ExpressionUUID->"aff35b08-67da-4098-8376-40f0e63402b9",
 CellID->1748319206]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "3"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[417672, 8777, 2870, 78, 70, "SeeAlsoSection",ExpressionUUID->"c3bf78ac-730f-4978-ad85-a12afde7ff11"],
Cell[420545, 8857, 1129, 29, 70, "TechNotesSection",ExpressionUUID->"73014abc-d61c-41eb-9e3e-efeba7326f14"],
Cell[421677, 8888, 1114, 28, 70, "MoreAboutSection",ExpressionUUID->"cb259617-2f93-4b89-8bfa-73c2f57c9079"],
Cell[422794, 8918, 2908, 78, 70, "RelatedLinksSection",ExpressionUUID->"b4f6fd61-e1ba-4e1b-8866-eca91669119a"],
Cell[425705, 8998, 78, 0, 70, "FooterCell",ExpressionUUID->"159af09a-68d2-4ec7-b402-f0b0e21075a4"]
}
]
*)

(* End of internal cache information *)

